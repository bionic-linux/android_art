{
  "comments": [
    {
      "key": {
        "uuid": "396bacde_d780bceb",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 1171,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-10T21:05:35Z",
      "side": 1,
      "message": "Shouldn\u0027t the code here match the code above (lines 1159 to 1165) ?",
      "range": {
        "startLine": 1167,
        "startChar": 0,
        "endLine": 1171,
        "endChar": 43
      },
      "revId": "c588ae1f92954932b3942f3a655abddcf2def0c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f97cb4a5_b5bd00a0",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 1171,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-07-10T21:30:36Z",
      "side": 1,
      "message": "I think that the idea was that a promoted register on a 64 bit machine should handle both 32 and 64 bit values, so it is good to combine them.\n\nIn fact, should the code above be changed to handle machines with merged single/double registers in the same manner as 64 bit registers here? \n\nI have to admit that I don\u0027t understand this code too well.",
      "parentUuid": "396bacde_d780bceb",
      "range": {
        "startLine": 1167,
        "startChar": 0,
        "endLine": 1171,
        "endChar": 43
      },
      "revId": "c588ae1f92954932b3942f3a655abddcf2def0c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_36dfb8a0",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 1171,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-10T21:36:37Z",
      "side": 1,
      "message": "Yes, that\u0027s basically what Ian means. The floating point counting above should look like the counting for the integral types.",
      "parentUuid": "f97cb4a5_b5bd00a0",
      "range": {
        "startLine": 1167,
        "startChar": 0,
        "endLine": 1171,
        "endChar": 43
      },
      "revId": "c588ae1f92954932b3942f3a655abddcf2def0c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7971a4c6_794d2785",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 2
      },
      "lineNbr": 1171,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-07-11T02:28:45Z",
      "side": 1,
      "message": "I just updated this patch with floating point counting equal to interger counting. Please review this again ASAP.",
      "parentUuid": "1980a8c3_36dfb8a0",
      "revId": "c588ae1f92954932b3942f3a655abddcf2def0c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}