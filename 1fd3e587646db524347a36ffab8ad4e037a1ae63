{
  "comments": [
    {
      "key": {
        "uuid": "e51109af_21ff5413",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1178,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-12-19T10:19:36Z",
      "side": 1,
      "message": "What about:\n\n    __ CompareAndBranchIfNonZero(tmp, \u0026loop_head, /* far_target */ false);\n    __ B(\u0026exit_loop);\n\nwhich favors the case where the STREX instruction succeeded (which I think is what is expected most of the time)? Also, this would make this code similar to the ARM64 implementation.",
      "range": {
        "startLine": 1177,
        "startChar": 0,
        "endLine": 1178,
        "endChar": 21
      },
      "revId": "1fd3e587646db524347a36ffab8ad4e037a1ae63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24ff2e68_d65db2b7",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1178,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-12-19T10:22:59Z",
      "side": 1,
      "message": "I am not sure I understand you - if the exclusive store succeeds, then you execute two instructions instead of one. How is that favorable?",
      "parentUuid": "e51109af_21ff5413",
      "range": {
        "startLine": 1177,
        "startChar": 0,
        "endLine": 1178,
        "endChar": 21
      },
      "revId": "1fd3e587646db524347a36ffab8ad4e037a1ae63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b645fec_0ec49539",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1178,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-12-19T10:34:12Z",
      "side": 1,
      "message": "But the first one is a conditional jump. My intuition was that it was better for branch prediction to favor the fall-through case for a conditional branch instruction. What\u0027s the best practice here?",
      "parentUuid": "24ff2e68_d65db2b7",
      "range": {
        "startLine": 1177,
        "startChar": 0,
        "endLine": 1178,
        "endChar": 21
      },
      "revId": "1fd3e587646db524347a36ffab8ad4e037a1ae63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83f6e585_990d041f",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1178,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-12-19T10:40:47Z",
      "side": 1,
      "message": "I don\u0027t have any hard data right now, but I am not sure that favoring the fall-through case applies if it is in fact another branch. There is also another issue - CBNZ is only a forward branch, and CompareAndBranchIfNonZero() generates CMP + B.NE, so in fact three instructions.",
      "parentUuid": "8b645fec_0ec49539",
      "range": {
        "startLine": 1177,
        "startChar": 0,
        "endLine": 1178,
        "endChar": 21
      },
      "revId": "1fd3e587646db524347a36ffab8ad4e037a1ae63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d1b345a_9a22b09d",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 1178,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-12-19T14:48:28Z",
      "side": 1,
      "message": "I see; your implementation is probably best in that case.\n\nDo you think we should change the ARM64 implementation (https://android.googlesource.com/platform/art/+/master/compiler/optimizing/code_generator_arm64.cc#1067) to use CBZ instead of CBNZ?",
      "parentUuid": "83f6e585_990d041f",
      "range": {
        "startLine": 1177,
        "startChar": 0,
        "endLine": 1178,
        "endChar": 21
      },
      "revId": "1fd3e587646db524347a36ffab8ad4e037a1ae63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}