{
  "comments": [
    {
      "key": {
        "uuid": "2cf66764_0bf88ed5",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2351,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-02T17:51:50Z",
      "side": 1,
      "message": "Why not making the size dynamic? Start with 256. If while walking 256 is not enough, allocate 512 and do a copy, etc.",
      "range": {
        "startLine": 2350,
        "startChar": 0,
        "endLine": 2351,
        "endChar": 94
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6352df48_1161132b",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2351,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-02T17:55:14Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s worth the complexity, honestly. 256 is a very deep stack...\n\n(And it would allow optimizing the visitor to do a comparison with literal)",
      "range": {
        "startLine": 2350,
        "startChar": 0,
        "endLine": 2351,
        "endChar": 94
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d203cc81_869695d9",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2351,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-02T18:00:00Z",
      "side": 1,
      "message": "What complexity? I did not get your other sentence though.",
      "range": {
        "startLine": 2350,
        "startChar": 0,
        "endLine": 2351,
        "endChar": 94
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fc0ef11_ede8bea2",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2351,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-02T18:02:18Z",
      "side": 1,
      "message": "Having a loop, vs a single optimized-for-99.999%-of-cases single statement.\n\n(The second sentence states that the FetchStackTraceVisitor could be templatized to kMaxSavedFrames, which would guarantee that the compiler sees a literal for depth \u003c max_...)",
      "range": {
        "startLine": 2350,
        "startChar": 0,
        "endLine": 2351,
        "endChar": 94
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b7dc5ae_1383785a",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2368,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-02T04:10:59Z",
      "side": 1,
      "message": "\u003c\u003d ? (Not that it would matter in practice)",
      "range": {
        "startLine": 2368,
        "startChar": 12,
        "endLine": 2368,
        "endChar": 13
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ec64688_535904f4",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 2368,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-02T17:46:42Z",
      "side": 1,
      "message": "Will fix later.",
      "range": {
        "startLine": 2368,
        "startChar": 12,
        "endLine": 2368,
        "endChar": 13
      },
      "revId": "65b8bb2f5948d2a80a347472293f6ef3c7f7f766",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}