{
  "comments": [
    {
      "key": {
        "uuid": "2c107a3e_75214e1d",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-12T09:16:19Z",
      "side": 1,
      "message": "I don\u0027t think we should make this a DCHECK - a build time warning for sure, but not a DCHECK. A DCHECK prevents our ability to test (aren\u0027t you breaking the interp-ar config?), and experiments updating parts of libcore.",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4111fa5d_e346dddc",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-12T17:51:40Z",
      "side": 1,
      "message": "I find this check to be integral for performance, and we already have DCHECKs enforcing this in dex2oat.\n\nYou are right about interp-ac, and I will add this as a cutout (I thought we use the quicken image, so everything is pre-verified, but we may want to be more general).\n\nLibcore experiments are irrelevant. The code should still verify. We should never ship broken code.",
      "parentUuid": "2c107a3e_75214e1d",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9173ed81_400c34cd",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-15T11:10:18Z",
      "side": 1,
      "message": "No, we can discuss this offline for details, but I still think the DCHECK here is too much. +vmarko",
      "parentUuid": "4111fa5d_e346dddc",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52371389_2dd654a6",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-11T11:23:54Z",
      "side": 1,
      "message": "Does the transactional interpreter go through this path? If so, we may (or may not) come across some cases where compiling a partial boot image may hit this DCHECK().",
      "parentUuid": "9173ed81_400c34cd",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ae0adda_08549cee",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-12-11T16:31:38Z",
      "side": 1,
      "message": "It does, which is why the latest version disables the check during AoT.",
      "parentUuid": "52371389_2dd654a6",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2409001_799a1b69",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-11T16:56:49Z",
      "side": 1,
      "message": "LGTM but I\u0027m a bit worried that we may keep adding more carve-outs. What about debuggable+jvmti/redefine?",
      "parentUuid": "0ae0adda_08549cee",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54405917_3278d5f5",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-12-11T17:02:17Z",
      "side": 1,
      "message": "At runtime, classes go through the verifier. Debuggable and JVMTI don\u0027t influence that part.\n\nI agree that more carve-outs would be bad, but as mentioned this check has been very helpful in finding the places where we have special behavior, and I don\u0027t think there are more to add in the future.",
      "parentUuid": "d2409001_799a1b69",
      "range": {
        "startLine": 352,
        "startChar": 0,
        "endLine": 353,
        "endChar": 69
      },
      "revId": "2b07b3e0b0a146f450c53cd601a0d11f502894f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}