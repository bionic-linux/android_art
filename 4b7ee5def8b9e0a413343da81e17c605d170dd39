{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "390e5a81_a1b3f388",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2794,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "Pass `Register()` and in `GenSystemArrayCopyAddresses()` check if `src_end.IsValid()` to avoid generating a dead instruction.",
      "range": {
        "startLine": 2794,
        "startChar": 30,
        "endLine": 2794,
        "endChar": 43
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21da00ab_2e99eb8d",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2807,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "We could use `chars_per_block` instead and adjust the condition codes.",
      "range": {
        "startLine": 2807,
        "startChar": 12,
        "endLine": 2807,
        "endChar": 22
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c73d26d9_2953a6fa",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2817,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "If `constant \u003c 2 * chars_per_block`, do not emit this MOV and the SUBS/B.cond in the loop 1.\n\nAlternatively, just emit fully unrolled loop up to a certain threshold (maybe even use LDP/STP).",
      "range": {
        "startLine": 2817,
        "startChar": 4,
        "endLine": 2817,
        "endChar": 46
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ee30bd8_e2e3d0a7",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2822,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "If we use `chars_per_block` instead of `len_offset`, this shall be `lt` (or `lo` if we want to treat the comparison as unsigned).",
      "range": {
        "startLine": 2822,
        "startChar": 21,
        "endLine": 2822,
        "endChar": 23
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9615143_91ee3cbc",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2832,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "If we use `chars_per_block` instead of `len_offset`, this shall be `ge` (or `hs` if we want to treat the comparison as unsigned).",
      "range": {
        "startLine": 2832,
        "startChar": 17,
        "endLine": 2832,
        "endChar": 19
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b4a51c1_8306c711",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2844,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-09T14:08:29Z",
      "side": 1,
      "message": "If `length.IsConstant()`, we know exactly how many remaining characters we need to copy, so we could replace the loop 2 with a 32-bit and/or 16-bit copy. (If `(length \u0026 2) !\u003d 0`, copy 32 bits; if `(length \u0026 1) !\u003d 0`, copy 16 bits.)",
      "range": {
        "startLine": 2839,
        "startChar": 2,
        "endLine": 2844,
        "endChar": 19
      },
      "revId": "4b7ee5def8b9e0a413343da81e17c605d170dd39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}