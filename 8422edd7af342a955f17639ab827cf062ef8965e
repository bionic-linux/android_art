{
  "comments": [
    {
      "key": {
        "uuid": "e798c691_6224f689",
        "filename": "runtime/interpreter/mterp/arm/op_iget_object_quick.S",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2016-01-14T15:04:41Z",
      "side": 0,
      "message": "It is strange but when I did similar in x86 patch, I\u0027ve got NPE unit test failure in host mode. Will re-check it tomorrow...",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 36
      },
      "revId": "8422edd7af342a955f17639ab827cf062ef8965e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e759a674_e87c11c5",
        "filename": "runtime/interpreter/mterp/arm/op_iget_object_quick.S",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-14T19:17:47Z",
      "side": 0,
      "message": "The artIGetObjectFromMterp code has checks and throws the exception, and the code in lines 9,12f does the propagation. So a failure on your side would be a bit strange and interesting.",
      "parentUuid": "e798c691_6224f689",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 36
      },
      "revId": "8422edd7af342a955f17639ab827cf062ef8965e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676db610_e2870b3a",
        "filename": "runtime/interpreter/mterp/arm/op_iget_object_quick.S",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2016-01-14T21:28:33Z",
      "side": 0,
      "message": "It is strange and interesting.  Removing the check causes 122-npe to fail.  Looking into why now.",
      "parentUuid": "e759a674_e87c11c5",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 36
      },
      "revId": "8422edd7af342a955f17639ab827cf062ef8965e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676db610_e4327897",
        "filename": "runtime/interpreter/mterp/arm/op_iget_object_quick.S",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2016-01-14T23:17:20Z",
      "side": 0,
      "message": "Oh, this is a good one - something anyone working on mterp should keep in mind.  To save cycles, mterp keeps Dalvik PC in a register.  However, any runtime support routine which might throw needs to know the current Dalvik PC.  So, prior to calling out to the runtime it is a requirement that the EXPORT_PC macro be used.  If not, the runtime will attempt to pin the exception at whatever Dalvik PC was last stashed.\n\nWhen I changed this routine to use runtime support, I failed to use EXPORT_PC.\n\nFix coming.",
      "parentUuid": "676db610_e2870b3a",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 36
      },
      "revId": "8422edd7af342a955f17639ab827cf062ef8965e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}