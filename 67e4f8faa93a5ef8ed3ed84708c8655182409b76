{
  "comments": [
    {
      "key": {
        "uuid": "7ed7392d_5a1c8422",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T08:32:23Z",
      "side": 1,
      "message": "I assume that\u0027s an unsafe operation that the dev using r8 needs to opt-in (ala proguard?).",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f702e966_9ececcd8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T08:33:19Z",
      "side": 1,
      "message": "... thinking more, if that\u0027s the case, I don\u0027t think we want those unsafe operations by default in our tests.",
      "parentUuid": "7ed7392d_5a1c8422",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd1390d8_c5aa5131",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1121678
      },
      "writtenOn": "2018-09-19T10:01:52Z",
      "side": 1,
      "message": "Right now this optimization is done unconditionally in both d8 and r8. Maybe we should consider turning it off in debug mode, as stepping into String.length() should work there.",
      "parentUuid": "f702e966_9ececcd8",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c34ec7a4_4545b129",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T12:36:27Z",
      "side": 1,
      "message": "Given final fields can be updated (and they are in production), is it ok to have r8 assume they won\u0027t?",
      "parentUuid": "bd1390d8_c5aa5131",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0517ef_52e21a48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1075064
      },
      "writtenOn": "2018-09-19T16:34:42Z",
      "side": 1,
      "message": "We compute String#length if and only if the flown string is constant, like \"ABC\".length()\n\nfinal int x;\n...\n...() {\n  x \u003d \"ABC\".length(); // -\u003e x \u003d 3;\n}\n\nI\u0027m not sure what could go wrong here, or what you meant `final fields can be updated`.",
      "parentUuid": "c34ec7a4_4545b129",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e5a56dc_5004acad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T16:40:22Z",
      "side": 1,
      "message": "In the test, It\u0027s ABC, not \"ABC\", but I guess what you\u0027re saying is that javac already inlines the string in the bytecode?",
      "parentUuid": "9d0517ef_52e21a48",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c8489de_824b7867",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1075064
      },
      "writtenOn": "2018-09-19T16:41:51Z",
      "side": 1,
      "message": "Ah, right, all uses of var ABC are replaced with constant \"ABC\" after javac.",
      "parentUuid": "0e5a56dc_5004acad",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df82abba_e6b44fde",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T16:44:32Z",
      "side": 1,
      "message": "Do you remove the load string from the byteode when you do the length optimization? I think that\u0027s the only last bit where I think it would be unsafe.",
      "parentUuid": "6c8489de_824b7867",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee47e25b_72492a93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1075064
      },
      "writtenOn": "2018-09-19T16:51:12Z",
      "side": 1,
      "message": "I didn\u0027t: I only replace length() with the const number load. But, that load string could be removed by the following other optimizations, e.g., live range analysis and dead code elimination.",
      "parentUuid": "df82abba_e6b44fde",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b9d1ac2_1e055aa8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-09-19T16:54:03Z",
      "side": 1,
      "message": "Ack, AFAICS sounds good then!",
      "parentUuid": "ee47e25b_72492a93",
      "range": {
        "startLine": 10,
        "startChar": 13,
        "endLine": 10,
        "endChar": 62
      },
      "revId": "67e4f8faa93a5ef8ed3ed84708c8655182409b76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}