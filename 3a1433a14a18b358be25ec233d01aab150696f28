{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6bf427eb_04732c48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-28T17:52:46Z",
      "side": 1,
      "message": "Have any thoughts on how we\u0027d test this? I\u0027m thinking of something along the lines of incorporating a special test mode where the job cancels itself every so often, which we can use in the OTA tests by putting a magic file somewhere (it\u0027d be on rooted devices anyway). But there\u0027s also the question to verify that it works - testing that it doesn\u0027t miss anything should be simple, but that it doesn\u0027t start over is less obvious.\n\nJust to get the discussion started - I don\u0027t think it should be done in this CL.",
      "range": {
        "startLine": 11,
        "startChar": 6,
        "endLine": 11,
        "endChar": 42
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "587ecdf8_a239a595",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-28T18:24:53Z",
      "side": 1,
      "message": "Right now, we have unit tests. In an e2e test, I think the test can cancel and resume the job directly through `adb shell cmd jobscheduler timeout` / `adb shell cmd jobscheduler run`.\n\nTesting that it doesn\u0027t start over is indeed tricky. One approach is to make the job write the number of dex2oat invocations into the stats proto file, and we check the file in the test. Not sure it\u0027s a good idea though.",
      "parentUuid": "6bf427eb_04732c48",
      "range": {
        "startLine": 11,
        "startChar": 6,
        "endLine": 11,
        "endChar": 42
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ab15c08_db46a381",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 14
      },
      "lineNbr": 181,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-28T17:52:46Z",
      "side": 1,
      "message": "Is this streams approach really a win over an old-fashioned loop? In particular it ought to be possible to solve this -1 fiddling in a more readable way with a break condition.",
      "range": {
        "startLine": 181,
        "startChar": 55,
        "endLine": 181,
        "endChar": 57
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6abb8209_a06a35ec",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 14
      },
      "lineNbr": 181,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-28T18:24:53Z",
      "side": 1,
      "message": "Replaced this with a loop.",
      "parentUuid": "3ab15c08_db46a381",
      "range": {
        "startLine": 181,
        "startChar": 55,
        "endLine": 181,
        "endChar": 57
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "537e07e6_9dc08c99",
        "filename": "libartservice/service/javatests/com/android/server/art/PrimaryDexopterTest.java",
        "patchSetId": 14
      },
      "lineNbr": 895,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-28T17:52:46Z",
      "side": 1,
      "message": "Please also test that the existence of a staged file doesn\u0027t affect dexopt when it\u0027s not a pre-reboot job.",
      "range": {
        "startLine": 895,
        "startChar": 8,
        "endLine": 895,
        "endChar": 55
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1347301_c9ba1fc2",
        "filename": "libartservice/service/javatests/com/android/server/art/PrimaryDexopterTest.java",
        "patchSetId": 14
      },
      "lineNbr": 895,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-28T18:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "537e07e6_9dc08c99",
      "range": {
        "startLine": 895,
        "startChar": 8,
        "endLine": 895,
        "endChar": 55
      },
      "revId": "3a1433a14a18b358be25ec233d01aab150696f28",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}