{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "18de8169_9aee8045",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-17T16:04:16Z",
      "side": 1,
      "message": "I would re-word the comment slightly as follows:\n```\nDo one GC while the temporary objects cannot be collected to ensure that the GC at line 127 does scan some objects.\n```\n\nBTW, why do you think that the previous case of doing only one GC (like before) may not scan objects?",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b441158_01de992f",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-07-17T16:32:58Z",
      "side": 1,
      "message": "I have the same question.",
      "parentUuid": "18de8169_9aee8045",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39600b3d_e19fa834",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-07-17T17:21:55Z",
      "side": 1,
      "message": "\u003e BTW, why do you think that the previous case of doing only one GC (like before) may not scan objects?\n\nBecause it didn\u0027t :) It looks like if the objects are trivially dead here we won\u0027t need any scanning? And so the test relied on some other (unknown) object being scanned.",
      "parentUuid": "9b441158_01de992f",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e59451a_48c8914d",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-18T04:52:58Z",
      "side": 1,
      "message": "But even now it\u0027s only the inner GC that would actually scan something. The outer GC may still not be able to find anything to scan, right? Is that ok? If it is, then why not remove the outer GC?\n\nI guess what is unclear is that how does the inner GC helps the outer GC in scanning some objects, as the comment suggests?",
      "parentUuid": "39600b3d_e19fa834",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b169189_95b9d43a",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-07-18T10:06:09Z",
      "side": 1,
      "message": "Maybe the inner GC contributes to \"scanned bytes\", and the outer GC contributes to \"freed bytes\"? I\u0027m just guessing. It looks like the metrics are added up. https://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/refs/heads/main:art/runtime/gc/collector/garbage_collector.cc;l\u003d217-239;drc\u003d9ae32f76a36382a3ded88b91d1695ab8af99bc47",
      "parentUuid": "3e59451a_48c8914d",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8545cd74_01e2a55f",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-07-18T12:33:46Z",
      "side": 1,
      "message": "AFAIU, doing the first GC will promote the current objects in the HandleScope to old gen, and then the second GC will scan those objects.",
      "parentUuid": "2b169189_95b9d43a",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3a443fb_eb41df39",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-07-18T13:20:17Z",
      "side": 1,
      "message": "Interesting! I\u0027ll leave this to Lokesh to judge if it explains it. If it does, it will be nice to put the explanation in the comment. LGTM on my side.",
      "parentUuid": "8545cd74_01e2a55f",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e23751b0_61e23ef2",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-18T14:34:42Z",
      "side": 1,
      "message": "If the first GC promotes the objects to old gen, and the subsequent GC is a young collection, then it won\u0027t scan those objects again.\n\nI think Jiakai\u0027s comment makes sense. Below there are `freed_bytes` as well as `scanned_bytes` metrics\u0027. The first GC will make sure we have something to scan but may not have freed anything. The second one will ensure we freed something. Together, they will succeed.",
      "parentUuid": "e3a443fb_eb41df39",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b33388ed_e44ad5b9",
        "filename": "runtime/gc/heap_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-07-18T14:36:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e23751b0_61e23ef2",
      "range": {
        "startLine": 123,
        "startChar": 7,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9814beb_33baaa22",
        "filename": "runtime/gc/verification.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-17T16:04:16Z",
      "side": 1,
      "message": "Why is this required? This function is invoked to print any RAM content, not necessarily heap-space only.",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 28
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9046c30d_da959a57",
        "filename": "runtime/gc/verification.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-07-17T17:21:55Z",
      "side": 1,
      "message": "The read will crash if the memory isn\u0027t accessible.",
      "parentUuid": "e9814beb_33baaa22",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 28
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5ad047_9fcca426",
        "filename": "runtime/gc/verification.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-18T04:52:58Z",
      "side": 1,
      "message": "I got that. In fact I have faced it myself ðŸ˜Š But the thing is that this function is to dump any RAM content, not just heap spaces. For instance, I use it to dump RAM content in the from-space in uffd GC, which is not in the heap-space. With this change, this function will stop dumping from-space content even though it\u0027s accessible.\n\nUnfortunately, AFAIK, there is no easy way to check if a given address is mapped and accessible.",
      "parentUuid": "9046c30d_da959a57",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 28
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b545693_9a87e0ec",
        "filename": "runtime/gc/verification.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-07-18T12:33:46Z",
      "side": 1,
      "message": "Ack, I\u0027ve changed it to use `write` instead with the memory, which should return -1 if the data is inaccessible.",
      "parentUuid": "5f5ad047_9fcca426",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 28
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11d5acda_e394f60e",
        "filename": "runtime/gc/verification.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-07-18T13:20:17Z",
      "side": 1,
      "message": "Interesting :)",
      "parentUuid": "4b545693_9a87e0ec",
      "range": {
        "startLine": 37,
        "startChar": 8,
        "endLine": 37,
        "endChar": 28
      },
      "revId": "2716a2624145227f712aa5a8ae99191e7151b343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}