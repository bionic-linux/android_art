{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd8003c1_59b574b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-09-14T08:11:22Z",
      "side": 1,
      "message": "We had a chat with David, and I\u0027d much prefer keeping the update of the cache conditional to GC running, instead of clearing the cache unconditionally. The current logic worked for CMS / CC, can we still keep it with some adjustments?",
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97bfec7b_b3eefca2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-14T11:10:50Z",
      "side": 1,
      "message": "Given that this CL establishes the invariant that the thread-local cache is only accessed by it\u0027s owning thread, I am happy either way.\n\nPersonally, I lean towards clearing for simplicity and as defensive programming, but I don\u0027t feel strongly about it.  We can keep try to keep the cache.\n\nNicolas: Clarification: are you asking to update/mutate the cache in the thread-flip?  Or to try to avoid the clear in cases where nothing moves?  (i.e. can we still remove the big switch statement?)",
      "parentUuid": "cd8003c1_59b574b5",
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5c354eb_4b5e318d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-09-14T11:19:43Z",
      "side": 1,
      "message": "I wouldn\u0027t want to do any clear - just do the updates as we do today (modulo adjusted for userfaultfd)",
      "parentUuid": "97bfec7b_b3eefca2",
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9affc31_e3df7bbf",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 2499,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-14T07:43:42Z",
      "side": 1,
      "message": "Add \u0027\u003d\u0027.",
      "range": {
        "startLine": 2499,
        "startChar": 68,
        "endLine": 2499,
        "endChar": 70
      },
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9da5193_f7fcd92a",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 1
      },
      "lineNbr": 722,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-14T07:43:42Z",
      "side": 1,
      "message": "\u003d",
      "range": {
        "startLine": 722,
        "startChar": 57,
        "endLine": 722,
        "endChar": 58
      },
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cb538d4_539ac883",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 1102,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-14T07:43:42Z",
      "side": 1,
      "message": "\u003d",
      "range": {
        "startLine": 1102,
        "startChar": 68,
        "endLine": 1102,
        "endChar": 69
      },
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0aaad24_6cd5af34",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 1168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-14T07:43:42Z",
      "side": 1,
      "message": "Do we need to invalidate the interpreter cache here?",
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "173f654d_e26ab57e",
        "filename": "runtime/runtime.h",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-14T07:43:42Z",
      "side": 1,
      "message": "I think `invalidate_interpreter_caches` would be a better name.",
      "range": {
        "startLine": 475,
        "startChar": 55,
        "endLine": 475,
        "endChar": 76
      },
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be6054d4_ea89f011",
        "filename": "runtime/runtime.h",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-14T11:10:50Z",
      "side": 1,
      "message": "Would `false` be a better default?  Is it ever used with `true`?  I can\u0027t find it.",
      "parentUuid": "173f654d_e26ab57e",
      "range": {
        "startLine": 475,
        "startChar": 55,
        "endLine": 475,
        "endChar": 76
      },
      "revId": "b06284de2bd4b706ad9912507a507cde6b0f15a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}