{
  "comments": [
    {
      "key": {
        "uuid": "ee00a8f1_5e3a71c4",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-04-01T16:06:56Z",
      "side": 1,
      "message": "You could fit this on one or two lines, couldn\u0027t you?\n\n  DCHECK_EQ(Primitive::PrimitiveKind(instr-\u003eInputAt(0)-\u003eGetType()), is_long ? Primitive::kPrimLong : Primitive::kPrimInt);",
      "range": {
        "startLine": 373,
        "startChar": 2,
        "endLine": 373,
        "endChar": 22
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee00a8f1_fe281d77",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-01T16:45:33Z",
      "side": 1,
      "message": "I changed the implementation in PS2; `is_long` is gone, and the assertion is much simpler.",
      "parentUuid": "ee00a8f1_5e3a71c4",
      "range": {
        "startLine": 373,
        "startChar": 2,
        "endLine": 373,
        "endChar": 22
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee198873_f69b9e3e",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-04-01T16:06:56Z",
      "side": 1,
      "message": "You could make these $noinline$ to guarantee the CHECKed code will be the one we run.",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae14f033_3cb7bd4d",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-01T16:45:33Z",
      "side": 1,
      "message": "Right; done in PS2.",
      "parentUuid": "ee198873_f69b9e3e",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebeb08e_a9503d52",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-01T17:20:38Z",
      "side": 1,
      "message": "David, just for my own understanding, can you briefly explain what this $$ naming contention does. Enforce, test?",
      "parentUuid": "ee198873_f69b9e3e",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee00a8f1_def20148",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-01T17:28:30Z",
      "side": 1,
      "message": "The Optimizing compiler recognizes some \"tags\" (substrings) in method names in debug mode:\n- $opt$: The Optimizing compiler checks that it can compile the method (rarely used now, as it dates from a time where a significant portion of code was compiled with Quick).\n- $inline$: The Optimizing compiler checks the method is inlined.\n- $noinline$: The converse.\nThese tags do not alter the decision of the compiler to compile and/or inline a method; they merely act as assertions.",
      "parentUuid": "aebeb08e_a9503d52",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebeb08e_698b25a2",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-01T17:44:22Z",
      "side": 1,
      "message": "Thanks for the explanation.\n\nSo the test can break if the compiler changes its decisions later?",
      "parentUuid": "ee00a8f1_def20148",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce112444_9d96c775",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-01T17:53:14Z",
      "side": 1,
      "message": "Yes, but this is on purpose: when we use $inline$ or $noinline$, we want to be sure to catch changes in the compiler\u0027s behavior regarding inlining.  In as sense, this is similar to Checker assertions.\n\nIf a change in the compiler\u0027s behavior (regarding inlining) was intended, then the tests will need to be updated as well.",
      "parentUuid": "aebeb08e_698b25a2",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aebeb08e_69fd65ca",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-01T17:57:08Z",
      "side": 1,
      "message": "Ok, thanks again.",
      "parentUuid": "ce112444_9d96c775",
      "range": {
        "startLine": 27,
        "startChar": 21,
        "endLine": 27,
        "endChar": 36
      },
      "revId": "61dca02bc23312b9147b7dd809f9f61b7329a187",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}