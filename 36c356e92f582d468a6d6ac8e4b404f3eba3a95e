{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34e065b1_ebbf5d0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T10:53:45Z",
      "side": 1,
      "message": "Friendly TH reminder.",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a1eaf48_cc441a79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-08T13:24:00Z",
      "side": 1,
      "message": "Mathew, Vladimir, friendly ping.",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e834b445_2cd3a100",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1010681
      },
      "writtenOn": "2021-04-08T13:46:57Z",
      "side": 1,
      "message": "Not looked at the test code, but the logic in libartbase/base/hiddenapi_flags.h LGTM",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ca9e71f_23b076bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-04-09T12:30:34Z",
      "side": 1,
      "message": "This doesn\u0027t really fix Q/R issues, right? I imagine if we want to ship a module to Q/R device  we want to have a different encoding?",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b23dc024_79631492",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-09T13:08:46Z",
      "side": 1,
      "message": "As this is an ART change in S, that\u0027s not going to fix Q and R. For those builds, we should not ship hiddenapi bits \u003e\u003d S.",
      "parentUuid": "4ca9e71f_23b076bd",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d52d11d_c424e752",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-04-09T13:25:38Z",
      "side": 1,
      "message": "You are proposing compiling different dex files based on sdk level?\n\nIs it not possible to \"hack\" something here, with keeping the first 3 bits to be reserved for Q/R format, and add extra bits for S+ encoding + some bumper? (haven\u0027t thought it through, but thought it would be possible, albeit increase dex sizes)",
      "parentUuid": "b23dc024_79631492",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "037c6062_6b60df16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-09T13:30:51Z",
      "side": 1,
      "message": "We had a discussion in one of the modularization meetings. There were a couple of options that Mathew I believe is looking at for Q/R.",
      "parentUuid": "8d52d11d_c424e752",
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e82376d_8baeae76",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-04-09T12:30:34Z",
      "side": 1,
      "message": "nit: maybe add a DCHECK that kMax + 1 !\u003d kInvalid",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cea8803_cabca11d",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-09T13:08:46Z",
      "side": 1,
      "message": "This is already present line 131.",
      "parentUuid": "1e82376d_8baeae76",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "895482c0_97d811d2",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-04-09T13:25:38Z",
      "side": 1,
      "message": "kMax could be kInvalid-1 (years from now), which would make this return ApiList(kInvalid).",
      "parentUuid": "0cea8803_cabca11d",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c07f9e_99fa9e50",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-09T13:30:51Z",
      "side": 1,
      "message": "Yes, but the static assert line 131 will make this a compile error.",
      "parentUuid": "895482c0_97d811d2",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3fa5805_e15ac8fd",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1061164
      },
      "writtenOn": "2021-04-09T13:48:30Z",
      "side": 1,
      "message": "kInvalid is 7 at base, and 15 with your change. So, the static assert line wouldn\u0027t prevent a case today, where kMax is 6 already. If you haven\u0027t increased the kValueBitSize to 4, this would have returned ApiList(7) -- ApiList(kInvalid)",
      "parentUuid": "93c07f9e_99fa9e50",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a9e14fb_ff1c8311",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-09T14:45:32Z",
      "side": 1,
      "message": "Ah yes, off by one error :) Added the assert.",
      "parentUuid": "e3fa5805_e15ac8fd",
      "range": {
        "startLine": 226,
        "startChar": 6,
        "endLine": 226,
        "endChar": 54
      },
      "revId": "36c356e92f582d468a6d6ac8e4b404f3eba3a95e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}