{
  "comments": [
    {
      "key": {
        "uuid": "056cf246_c30cb6c4",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 981,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "Check the return value.",
      "range": {
        "startLine": 981,
        "startChar": 6,
        "endLine": 981,
        "endChar": 90
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5599e74_1df397cb",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 1047,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-12-15T12:54:30Z",
      "side": 1,
      "message": "Your comparison function doesn\u0027t met the requirements stated by the standard (see http://en.cppreference.com/w/cpp/algorithm/upper_bound). It will work with some stl implementation but not with all of them.",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 15
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "056cf246_03a96ebb",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 1047,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "If you refer to the conversion stuff in requirements for `comp` at that page, I don\u0027t know where it comes from. http://www.cplusplus.com/reference/algorithm/upper_bound/ doesn\u0027t list any such requirements and neither does the last publicly available C++11 draft, http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3242.pdf , section 25.4.3.",
      "parentUuid": "e5599e74_1df397cb",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 15
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4568aa02_18028924",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 1047,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-12-15T14:30:54Z",
      "side": 1,
      "message": "Note 9. after section 25.1 says that the binary predicate passed to any function in \u003calgorithm\u003e should work correctly in case of \"binary_pred(*first1, *first2)\" and in case of \"binary_pred(*first1, value)\"\n\nIt is a little bit weaker requirement then the one described at http://www.cplusplus.com/reference/algorithm/upper_bound/ but we still don\u0027t met it.\n\nI am fine with using a binary predicate with it as long as it compiles on all of our supported targets (libc++, libstdc++).",
      "parentUuid": "056cf246_03a96ebb",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 15
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25673634_d7ee1ead",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 1047,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:50:04Z",
      "side": 1,
      "message": "Though it\u0027s tempting to conflate the \"Compare\" used to define upper_bound() with \"BinaryPredicate,\" I don\u0027t think they are intended to be the same.",
      "parentUuid": "4568aa02_18028924",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 15
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85a702bf_f25d0654",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 5
      },
      "lineNbr": 1047,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-12-15T15:05:06Z",
      "side": 1,
      "message": "You are right. Compare and BinaryPredicate isn\u0027t the same and based on 25.4.3.2 this is a perfectly valid predicate for std::upper_bound.\n\nSorry for the confusion.",
      "parentUuid": "25673634_d7ee1ead",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1047,
        "endChar": 15
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5599e74_7d11f39b",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 5
      },
      "lineNbr": 887,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "This should be \u003e\u003d, right? Can you fix this and the error message and all the occurrences below?",
      "range": {
        "startLine": 887,
        "startChar": 16,
        "endLine": 887,
        "endChar": 17
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b2a2f4_9ac22908",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 5
      },
      "lineNbr": 921,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "Can an invalid stream trigger this? Should it LOG(ERROR) and return false instead?",
      "range": {
        "startLine": 921,
        "startChar": 8,
        "endLine": 921,
        "endChar": 43
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85a702bf_2f80091b",
        "filename": "runtime/dex_file.h",
        "patchSetId": 5
      },
      "lineNbr": 856,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "uint32_t",
      "range": {
        "startLine": 856,
        "startChar": 4,
        "endLine": 856,
        "endChar": 12
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b2a2f4_ba960d09",
        "filename": "runtime/dex_file.h",
        "patchSetId": 5
      },
      "lineNbr": 857,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-15T14:03:40Z",
      "side": 1,
      "message": "uint32_t",
      "range": {
        "startLine": 857,
        "startChar": 4,
        "endLine": 857,
        "endChar": 12
      },
      "revId": "e98f5e3093f416153d3dda13ca49f658834da435",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}