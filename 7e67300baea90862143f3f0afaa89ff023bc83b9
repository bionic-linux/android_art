{
  "comments": [
    {
      "key": {
        "uuid": "2b3078fb_87604067",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 450,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-01-30T23:15:13Z",
      "side": 1,
      "message": "Why not just put that inside of ThreadList::FlipThreadRoots to match actual pause?",
      "range": {
        "startLine": 450,
        "startChar": 22,
        "endLine": 450,
        "endChar": 32
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4dee493_16eb8a38",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 450,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-01-30T23:25:02Z",
      "side": 1,
      "message": "It seemed more intuitive to have this here, as it\u0027s a GC matter, not a ThreadList matter, really.\n\n(I think the current design is definitely not pretty - mixing concerns in ThreadList is...\n\nPlus: why does the Runtime::FlipThreadRoots forward exist, at  all?)",
      "range": {
        "startLine": 450,
        "startChar": 22,
        "endLine": 450,
        "endChar": 32
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bb26248_303571a9",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 450,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-31T00:37:08Z",
      "side": 1,
      "message": "As Mathieu says, we could make it more precise, but it seems good enough for now?",
      "range": {
        "startLine": 450,
        "startChar": 22,
        "endLine": 450,
        "endChar": 32
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b8bee63_893af15e",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-01-30T23:15:13Z",
      "side": 1,
      "message": "And this.",
      "range": {
        "startLine": 460,
        "startChar": 22,
        "endLine": 460,
        "endChar": 30
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88ba5a22_4e4598ff",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-31T00:37:08Z",
      "side": 1,
      "message": "This code is meant to be removed?",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 168,
        "endChar": 3
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af97207c_da5188aa",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-31T00:37:08Z",
      "side": 1,
      "message": "Same.",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 177,
        "endChar": 3
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbaee429_57a993a1",
        "filename": "runtime/gc/collector/garbage_collector.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-31T00:37:08Z",
      "side": 1,
      "message": "We could also pass \"bool with_reporting\" to the constructor rather than having two classes? If you prefer two different classes, that\u0027s fine, too.",
      "range": {
        "startLine": 129,
        "startChar": 13,
        "endLine": 129,
        "endChar": 40
      },
      "revId": "7e67300baea90862143f3f0afaa89ff023bc83b9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}