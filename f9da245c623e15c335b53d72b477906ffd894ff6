{
  "comments": [
    {
      "key": {
        "uuid": "d49b728b_0112caa6",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 712,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Can you rename this? Sounds like it just returns a bool with no side-effect...",
      "range": {
        "startLine": 712,
        "startChar": 16,
        "endLine": 712,
        "endChar": 50
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4c1566d_bab911e7",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 735,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Out of the loop?",
      "range": {
        "startLine": 735,
        "startChar": 4,
        "endLine": 735,
        "endChar": 73
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4b8d2d6_8219e009",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 735,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "The other phases also record this per dex file...",
      "parentUuid": "f4c1566d_bab911e7",
      "range": {
        "startLine": 735,
        "startChar": 4,
        "endLine": 735,
        "endChar": 73
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a27ebd_a0f9daa5",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 806,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Why would you get a thread_pool argument if you\u0027re going to create another one? Please move this logic before entering this method.",
      "range": {
        "startLine": 805,
        "startChar": 0,
        "endLine": 806,
        "endChar": 77
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94b2daf4_4b15251c",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 806,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "Because I wanted the phases that can be parallel to remain so. E.g., verification and compilation can still run with whatever -j (or default) dex2oat got, while resolution and initialization need this single-threaded threadpool for determinism.",
      "parentUuid": "b4a27ebd_a0f9daa5",
      "range": {
        "startLine": 805,
        "startChar": 0,
        "endLine": 806,
        "endChar": 77
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94a57ac9_3f004749",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 1887,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Why the need for this now?",
      "range": {
        "startLine": 1885,
        "startChar": 0,
        "endLine": 1887,
        "endChar": 36
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54c4e260_3ef82de1",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 1887,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "For completeness. We shouldn\u0027t be starting things over and over, without stopping.\n\n(I needed this behavior before, but it\u0027s not mandatory for determinism anymore. So I can remove it if you want...)",
      "parentUuid": "94a57ac9_3f004749",
      "range": {
        "startLine": 1885,
        "startChar": 0,
        "endLine": 1887,
        "endChar": 36
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34b68e05_dcef2ddb",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 1
      },
      "lineNbr": 673,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Having this field and also a parameter is extremely confusing. Please refactor the code so that we only need one.",
      "range": {
        "startLine": 673,
        "startChar": 9,
        "endLine": 673,
        "endChar": 22
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a43ebb_c434be1b",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 1
      },
      "lineNbr": 673,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "Impossible. The goal is to keep phases that can be parallel parallel.\n\nI will rename this to parallel_thread_count_, if that\u0027s OK.",
      "parentUuid": "34b68e05_dcef2ddb",
      "range": {
        "startLine": 673,
        "startChar": 9,
        "endLine": 673,
        "endChar": 22
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a27ebd_60dcf235",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1768,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Huh? Did we use to write the id in the image?",
      "range": {
        "startLine": 1767,
        "startChar": 32,
        "endLine": 1768,
        "endChar": 49
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4b5d6da_837d64fa",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1768,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "Because we copy the object by memcpy...",
      "parentUuid": "b4a27ebd_60dcf235",
      "range": {
        "startLine": 1767,
        "startChar": 32,
        "endLine": 1768,
        "endChar": 49
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a27ebd_40e9eed1",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1897,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Why? Were we putting arbitrary pointers in the oat file?",
      "range": {
        "startLine": 1897,
        "startChar": 52,
        "endLine": 1897,
        "endChar": 70
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4b8d2d6_e2b9bc01",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1897,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "Yep, whatever the DexFile address was the compiler was using. The class-linker is fixing them up, so it wasn\u0027t relevant before.",
      "parentUuid": "b4a27ebd_40e9eed1",
      "range": {
        "startLine": 1897,
        "startChar": 52,
        "endLine": 1897,
        "endChar": 70
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54a782d1_bdb9ffe6",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T09:12:08Z",
      "side": 1,
      "message": "Explain why you need it.",
      "range": {
        "startLine": 355,
        "startChar": 3,
        "endLine": 355,
        "endChar": 46
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4b5d6da_e36b8031",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:31:43Z",
      "side": 1,
      "message": "I was hoping the GC guys could tell me another way... :-)\n\nShort answer is that the compiler uses pointers as keys for hash sets/maps, so the addresses are relevant, not just their order.",
      "parentUuid": "54a782d1_bdb9ffe6",
      "range": {
        "startLine": 355,
        "startChar": 3,
        "endLine": 355,
        "endChar": 46
      },
      "revId": "f9da245c623e15c335b53d72b477906ffd894ff6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}