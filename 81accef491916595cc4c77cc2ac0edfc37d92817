{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aa9d7b9c_19e74152",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-06-25T11:35:15Z",
      "side": 1,
      "message": "Hans, could you PTAL. Thanks!",
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cf1b5d1_39a707ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-06-26T11:13:47Z",
      "side": 1,
      "message": "Nicolas, could you take a look at comment in class_linker-inl.h. Thanks!",
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8cf79f0_23ace5d8",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2024-06-25T18:31:02Z",
      "side": 1,
      "message": "I\u0027m a bit suspicious of \"relaxed\" here and especially below. But I\u0027m not sure. Do we know that the class is visibly initialized before we put it in the cache? Is it guaranteed that it is visible to a FindArrayClass caller?",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58778d86_33eb5ea1",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-06-26T11:13:47Z",
      "side": 1,
      "message": "I am not 100% sure on this one but as far as I understand we only ensure that the class is resolved before putting it into the class_table_. In the line 61, where we store, we only do a FindClass which ensures that the class is resolved. We don\u0027t do anything beyond ensuring that it is resolved. So, I don\u0027t think we guarantee that the class is visibly initialized.\n\n+Nicolas to confirm this.\n\nDoes having non-visibly initialized classes in the cache a problem? I can change it to more stricter semantics. I don\u0027t understand the issue fully though. My understanding was that as long as we ensure each entry is updated atomically, it is okay if other threads see them in a different order.",
      "parentUuid": "f8cf79f0_23ace5d8",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0885c734_170b86a5",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2024-07-01T22:25:50Z",
      "side": 1,
      "message": "Adding Vladimir, since I think he is familiar with how the class status is set. I don\u0027t understand how this works, especially for array classes.\nHow hot is this code? If it\u0027s not terribly hot, just using acquire/release seems unlikely to slow this down measurably on modern hardware, at least on ARM and x86. And it would at least avoid a possibly complicated explanation.",
      "parentUuid": "58778d86_33eb5ea1",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680f69f7_6028936f",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-07-02T11:50:20Z",
      "side": 1,
      "message": "Thanks Hans! I updated it to use acquire-release. I don\u0027t know think this code is very hot but I am not familiar with this code. \n\nVladimir is OOO for at least two weeks I think. Should we land this with acquire-release and update it later with Vladimir\u0027s inputs?",
      "parentUuid": "0885c734_170b86a5",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64b5afdf_b7b59e2a",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2024-07-02T20:29:28Z",
      "side": 1,
      "message": "SGTM. We\u0027ll also see if thee are any complaints about performance regressions. I would expect not.\n\nIf we do go back to relaxed here, we should add a comment to explain why that\u0027s OK.",
      "parentUuid": "680f69f7_6028936f",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "843ca1d0_97f24b19",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-07-09T17:41:53Z",
      "side": 1,
      "message": "We had an offline discussion and the summary is:\n1. The array caches were mostly added to avoid string allocations (https://android-review.git.corp.google.com/c/platform/art/+/83329), so maybe it isn\u0027t a big problem to use acquire-release here.\n2. Acquire-release is safer and usually has very little overhead on modern hardware\n3. It is not entirely sure if we guarantee that the classes are visibly initialized at the point of putting them into the cache. For primitive arrays it is true but for others it seems like we don\u0027t.\n4. Even if they are visibly initialized ideally we would ideally need a acquire load but in most practical cases it might not be a problem.\n\nSince it is safer to use acquire release and may not be expensive here we are going with acquire release for now. Thanks for the discussion Hans!",
      "parentUuid": "64b5afdf_b7b59e2a",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 65
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ada16df_0ff74bcf",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-06-25T11:35:15Z",
      "side": 1,
      "message": "Hans, memory_order_relaxed would be sufficient here right? It doesn\u0027t matter the order of stores and loads as long as each entry is updated atomically right?",
      "range": {
        "startLine": 647,
        "startChar": 69,
        "endLine": 647,
        "endChar": 94
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "add9c8cc_5688c153",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2024-06-25T18:31:02Z",
      "side": 1,
      "message": "In initialization code for a reasonably used class, relaxed should always be OK. For clearing entries here, I think it\u0027s also fine.",
      "parentUuid": "4ada16df_0ff74bcf",
      "range": {
        "startLine": 647,
        "startChar": 69,
        "endLine": 647,
        "endChar": 94
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a78ba63_ef712275",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-07-02T11:50:20Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "add9c8cc_5688c153",
      "range": {
        "startLine": 647,
        "startChar": 69,
        "endLine": 647,
        "endChar": 94
      },
      "revId": "81accef491916595cc4c77cc2ac0edfc37d92817",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}