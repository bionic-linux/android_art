{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ef575e51_c88da49a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T03:38:34Z",
      "side": 1,
      "message": "I know you plan to use this in recording the metrics, but I don\u0027t have the full picture. Could you let me know how that will work?",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662bd611_9fc7c40e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-11-25T18:52:44Z",
      "side": 1,
      "message": "For the most part, the metrics background thread will be doing:\n\n    while(running) {\n      sleep(5min /*or whatever time we want*/);\n      ReportMetrics();\n    }\n\nBut we\u0027ll have other reasons we need to wake up the thread. For example, when the runtime starts shutting down, we\u0027d want to set running to false and wake up the thread. We also want to be able to request a metrics report on certain events, like right after startup is completed.\n\nThe MessageQueue simplifies the logic around figuring out why the thread was woken up. The loop turns into something like:\n\n    while(running) {\n      message \u003d queue.ReceiveMessage();\n      if (message is TimeoutExpiredMessage) {\n        ReportMetrics();\n        queue.SetTimeout(5min);\n      }\n      if (message is ShutdownRequestedMessage) {\n        running \u003d false;\n      }\n      if (message is ReportMetricsRequestMessage) {\n        ReportMetrics();\n      }\n    }\n\nThe logic could just be built into the MetricsReporter directly, but this way seems cleaner, and it makes it easier to reuse the logic if we have additional threads in the future (or want to rewrite existing threads).",
      "parentUuid": "ef575e51_c88da49a",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f4e9d1d_33e648ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T20:23:48Z",
      "side": 1,
      "message": "Who will be using SendMessage()? And how do they acquire the queue?, will we have a global one?",
      "parentUuid": "662bd611_9fc7c40e",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce9603f_658ee9de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-11-25T20:28:03Z",
      "side": 1,
      "message": "See https://android-review.googlesource.com/c/platform/art/+/1508836/3/runtime/metrics/metrics.cc#145 for the how it\u0027s going to be used (that CL is still WIP though).\n\nThe queue is encapsulated inside MetricsReporter, which hangs off the Runtime object. The runtime won\u0027t call SendMessage directly, but it will call StopBackgroundThreadIfRunning which will send the message.",
      "parentUuid": "6f4e9d1d_33e648ca",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b4f7602_4f6bb393",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T20:32:57Z",
      "side": 1,
      "message": "oki, so the message queue will only be used to control the state of the reporting thread. The usual metric reporting won\u0027t go through it. Is this correct?",
      "parentUuid": "dce9603f_658ee9de",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78b11139_43f4b486",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-11-25T21:12:48Z",
      "side": 1,
      "message": "Correct. The reporting thread will have a pointer directly to the metrics (well, probably the Runtime, but getting the metrics from there is trivial), so it can pull the metrics directly. We won\u0027t be sending metrics values over this message queue.",
      "parentUuid": "2b4f7602_4f6bb393",
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6801c134_13ff047a",
        "filename": "runtime/base/message_queue.h",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T03:38:34Z",
      "side": 1,
      "message": "Could you move implementation to .cc files?",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 18
      },
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac27b3b1_e75cd100",
        "filename": "runtime/base/message_queue.h",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T03:38:34Z",
      "side": 1,
      "message": "This assumes that the messages are very small structures.\n\nI think you should explicitly mention this, otherwise the arg and return copying will be very expensive.",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 5
      },
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bd697bf_fff4e076",
        "filename": "runtime/base/message_queue.h",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-11-25T18:52:44Z",
      "side": 1,
      "message": "Since this is a class template, the implementation needs to stay here. I could move it to a -impl.h file if you wanted though.",
      "parentUuid": "6801c134_13ff047a",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 18
      },
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73080131_ba094ff1",
        "filename": "runtime/base/message_queue.h",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-11-25T18:52:44Z",
      "side": 1,
      "message": "I added a comment saying small messages should be preferred since they are passed by value.",
      "parentUuid": "ac27b3b1_e75cd100",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 5
      },
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8fb1c9b_4220af70",
        "filename": "runtime/base/message_queue.h",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-11-25T20:23:48Z",
      "side": 1,
      "message": "right :)",
      "parentUuid": "1bd697bf_fff4e076",
      "range": {
        "startLine": 89,
        "startChar": 6,
        "endLine": 89,
        "endChar": 18
      },
      "revId": "6660498d5e80d76c3792fa42ec28730df9c281fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}