{
  "comments": [
    {
      "key": {
        "uuid": "396bacde_bad40dce",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-07-10T22:20:29Z",
      "side": 1,
      "message": "Maybe in addition to the race condition described here, is it possible that a coalesced free page run whose first part is released and the second part is empty could cause this DCHECK failure, without being racy with other threads?\n\nCan you describe the race condition situation referred to in this comment in more detail? I\u0027m not sure I follow.",
      "range": {
        "startLine": 2125,
        "startChar": 24,
        "endLine": 2125,
        "endChar": 38
      },
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d1f8e4_754d4285",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2125,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-07-11T00:15:17Z",
      "side": 1,
      "message": "I added handling for that case, we now still do a release if that happens.",
      "parentUuid": "396bacde_bad40dce",
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3992cc12_9feed390",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2126,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-07-10T19:12:52Z",
      "side": 1,
      "message": "I don\u0027t understand the logic here, probably because I\u0027m not seeing the big picture.  If this happened, wouldn\u0027t page_map_[i] have changed as part of the coalescing?  So how could we still get here?\n\nPointers to the conflicting code might help me understand.",
      "range": {
        "startLine": 2125,
        "startChar": 13,
        "endLine": 2126,
        "endChar": 50
      },
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_f957f389",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2126,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-07-10T22:28:34Z",
      "side": 1,
      "message": "The coalescing code is in FreePages(). It does not necessarily update page_map_ in such a way that kPageMapEmpty necessarily means there\u0027s a free page run that starts at the position.",
      "parentUuid": "3992cc12_9feed390",
      "range": {
        "startLine": 2125,
        "startChar": 13,
        "endLine": 2126,
        "endChar": 50
      },
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d1f8e4_1581563f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2126,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-07-11T00:15:17Z",
      "side": 1,
      "message": "Yes the problem arises when FreePages takes the lock and coalesces two page runs when we only processed the first one in the loop. This removes the free_page_run which starts at fpr and can result in not finding the page in the map.",
      "parentUuid": "1980a8c3_f957f389",
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d1f8e4_92b31cea",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2139,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-07-10T22:20:29Z",
      "side": 1,
      "message": "Don\u0027t we need to increment \u0027i\u0027 in the else case here to avoid an infinite loop?",
      "range": {
        "startLine": 2139,
        "startChar": 10,
        "endLine": 2139,
        "endChar": 11
      },
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d1f8e4_152b969e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 2139,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-07-11T00:15:17Z",
      "side": 1,
      "message": "Fall through increments the i.",
      "parentUuid": "99d1f8e4_92b31cea",
      "revId": "23966220770ea36235751b4893d22d99ee8186cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}