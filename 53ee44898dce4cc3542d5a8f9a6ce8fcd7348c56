{
  "comments": [
    {
      "key": {
        "uuid": "abfca2ae_d87fe81b",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:05:35Z",
      "side": 1,
      "message": "Change doCheck to volatile to prevent the compiler from turning this into an\n\n  if (doCheck) while(true) { ... }",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a1af637_461c28f0",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-08T11:09:41Z",
      "side": 1,
      "message": "Why would that be a problem?",
      "parentUuid": "abfca2ae_d87fe81b",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "227575bd_46a30f65",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:20:52Z",
      "side": 1,
      "message": "It would allow LICM to take the NullCheck out of the loop and we would no longer test the scheduling anymore.\n\nThis is essentially the same concern as below.",
      "parentUuid": "8a1af637_461c28f0",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a39550b_97c8328c",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-08T11:27:13Z",
      "side": 1,
      "message": "Ah right, great point. Done.",
      "parentUuid": "227575bd_46a30f65",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 18
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "910174c4_be054f79",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:05:35Z",
      "side": 1,
      "message": "Peeling the first iteration would interfere with this test as it would take the NullCheck out of the loop and we schedule only instructions that are actually inside a loop.",
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3f35a47_8bc81e92",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-08T11:09:41Z",
      "side": 1,
      "message": "Right, though I don\u0027t see how we can prevent this, except a marker $nopeeling$ ?",
      "parentUuid": "910174c4_be054f79",
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "387acbcc_9de55478",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:20:52Z",
      "side": 1,
      "message": "I can now think of other optimizations that would invalidate this test. I guess we would have to explicitly specify the optimization passes if we wanted to make sure future optimizations do not invalidate this regression test.\n\nIn the end I think it\u0027s OK to submit as is.",
      "parentUuid": "f3f35a47_8bc81e92",
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95414606_22f525d6",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:05:35Z",
      "side": 1,
      "message": "tws",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 8
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81a496b2_e64a7035",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-08T11:09:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95414606_22f525d6",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 8
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cec7722_a0c11219",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-08T11:05:35Z",
      "side": 1,
      "message": "tws; remove the entire line.",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 2
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31bee75b_9e2fbfdb",
        "filename": "test/671-field-schedule/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-08T11:09:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cec7722_a0c11219",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 2
      },
      "revId": "53ee44898dce4cc3542d5a8f9a6ce8fcd7348c56",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}