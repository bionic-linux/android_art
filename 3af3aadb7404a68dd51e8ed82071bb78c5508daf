{
  "comments": [
    {
      "key": {
        "uuid": "37fcd52a_c1fb448c",
        "filename": "runtime/gc/allocator_type.h",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "Maybe add that kAllocatorTypeNull can be used to check the OOME condition to this comment?",
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_efccf185",
        "filename": "runtime/gc/allocator_type.h",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "I renamed it kAllocatorTypeRegisterNative and added a comment about OOME.",
      "parentUuid": "37fcd52a_c1fb448c",
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f705ddfe_dff55f32",
        "filename": "runtime/gc/heap-inl.h",
        "patchSetId": 7
      },
      "lineNbr": 259,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "Is the indentation right here?",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 46
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_8fc9bd74",
        "filename": "runtime/gc/heap-inl.h",
        "patchSetId": 7
      },
      "lineNbr": 259,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f705ddfe_dff55f32",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 46
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97ebc162_a41ccc58",
        "filename": "runtime/gc/heap-inl.h",
        "patchSetId": 7
      },
      "lineNbr": 409,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "If all the cases of the switch should return, this is unreachable code? If so, UNREACHABLE()?",
      "range": {
        "startLine": 409,
        "startChar": 2,
        "endLine": 409,
        "endChar": 15
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_4fe74501",
        "filename": "runtime/gc/heap-inl.h",
        "patchSetId": 7
      },
      "lineNbr": 409,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97ebc162_a41ccc58",
      "range": {
        "startLine": 409,
        "startChar": 2,
        "endLine": 409,
        "endChar": 15
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7d148_3d620fa7",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1768,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "Returning here would miss the VLOG(heap) below. Return after the VLOG?",
      "range": {
        "startLine": 1768,
        "startChar": 14,
        "endLine": 1768,
        "endChar": 25
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_4f0e658b",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1768,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "I moved the VLOG up. One consequence is we won\u0027t get the update to count_delayed_oom_ in this case. Is that acceptable?",
      "parentUuid": "17f7d148_3d620fa7",
      "range": {
        "startLine": 1768,
        "startChar": 14,
        "endLine": 1768,
        "endChar": 25
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "378e9542_d1e486f8",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1768,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-08T20:39:51Z",
      "side": 1,
      "message": "Not a big deal, but the original code probably intended to print the consistent counter values. How about either adding a bool local variable that saves the return value of TryToAllocate and, if true, returns after the VLOG at the original location, or using an RAII to do the VLOG at the end of the scope ending at line 1793?",
      "parentUuid": "37af7563_4f0e658b",
      "range": {
        "startLine": 1768,
        "startChar": 14,
        "endLine": 1768,
        "endChar": 25
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc842acd_36b7b0ff",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1768,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-17T16:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "378e9542_d1e486f8",
      "range": {
        "startLine": 1768,
        "startChar": 14,
        "endLine": 1768,
        "endChar": 25
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7d148_fd94a7bb",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1827,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "DCHECK here that results.object_allocated is null?",
      "range": {
        "startLine": 1827,
        "startChar": 2,
        "endLine": 1827,
        "endChar": 3
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_8ffbfd8c",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 1827,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "In theory we shouldn\u0027t be looking at results.object_allocated unless TryToAllocate returned true, so I would rather not add the DCHECK here.",
      "parentUuid": "17f7d148_fd94a7bb",
      "range": {
        "startLine": 1827,
        "startChar": 2,
        "endLine": 1827,
        "endChar": 3
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77672d0f_b8a97957",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 2733,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-07T19:35:28Z",
      "side": 1,
      "message": "Also, how about we print num_native_bytes_registered_ along with this GC log to make it easier to see how much native bytes are registered?\n\nHere\u0027s an example of the current GC log:\n\n\"Background concurrent mark sweep GC freed 8229(16MB) AllocSpace objects, 0(0B) LOS objects, 15% free, 21MB/25MB, paused 8.393ms total 47.865ms\"\n\nMaybe if 6 MB out of the 21 MB is native bytes, change \"21MB/25MB\" to \"21MB(6MB)/25MB\" or \"21MB/25MB (native:6MB)\" or something along the line?\n\nThere may be an alternative way to export the native bytes.",
      "range": {
        "startLine": 2732,
        "startChar": 47,
        "endLine": 2733,
        "endChar": 41
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_6f36c13b",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 2733,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "\"21MB/25MB (6MB native)\" okay?",
      "parentUuid": "77672d0f_b8a97957",
      "range": {
        "startLine": 2732,
        "startChar": 47,
        "endLine": 2733,
        "endChar": 41
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "378e9542_91a83ea6",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 2733,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-08T20:39:51Z",
      "side": 1,
      "message": "LGTM.",
      "parentUuid": "37af7563_6f36c13b",
      "range": {
        "startLine": 2732,
        "startChar": 47,
        "endLine": 2733,
        "endChar": 41
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e21b5959_c6b8c4f0",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 3832,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "It\u0027s not universally followed around here, but how about \"/*instrumented*/ false\"?",
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_2f40c97f",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 3832,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e21b5959_c6b8c4f0",
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "770bad18_185ac520",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 3851,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "break -\u003e return? To prevent a malicious caller from affecting num_native_bytes_freed_ever_ and num_bytes_allocated_?",
      "range": {
        "startLine": 3851,
        "startChar": 6,
        "endLine": 3851,
        "endChar": 12
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_8f4e9db2",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 3851,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "Done. And I added a test case to catch this bug.",
      "parentUuid": "770bad18_185ac520",
      "range": {
        "startLine": 3851,
        "startChar": 6,
        "endLine": 3851,
        "endChar": 12
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97ebc162_c448f058",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 7
      },
      "lineNbr": 1202,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "I think this should be uint64_t so that we won\u0027t overflow this counter in 32 bit mode. size_t is 32 bit in 32 bit mode.",
      "range": {
        "startLine": 1202,
        "startChar": 9,
        "endLine": 1202,
        "endChar": 15
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57f5c93b_62ceb8aa",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 7
      },
      "lineNbr": 1202,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-05T01:44:14Z",
      "side": 1,
      "message": "If we call the above counter \"registered\", would like to call this \"unregistered\"? Up to you.",
      "range": {
        "startLine": 1202,
        "startChar": 17,
        "endLine": 1202,
        "endChar": 45
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_efd71104",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 7
      },
      "lineNbr": 1202,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "I changed \"registered\" above to \"allocated\". I think it makes more sense that way.",
      "parentUuid": "57f5c93b_62ceb8aa",
      "range": {
        "startLine": 1202,
        "startChar": 17,
        "endLine": 1202,
        "endChar": 45
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37af7563_8fe45df7",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 7
      },
      "lineNbr": 1202,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2016-03-08T00:36:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97ebc162_c448f058",
      "range": {
        "startLine": 1202,
        "startChar": 9,
        "endLine": 1202,
        "endChar": 15
      },
      "revId": "3af3aadb7404a68dd51e8ed82071bb78c5508daf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}