{
  "comments": [
    {
      "key": {
        "uuid": "83ae0d9b_c7155f5d",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 339,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-22T09:36:47Z",
      "side": 1,
      "message": "I don\u0027t think you need this now - \"Pausing\" should just be a matter of updating the jit_generation_ timestamp (so \"Pause\" may not be the right wording, maybe we can just say UpdateTimestamp).\n\nAnd then CommitCode needs one check that the thread local start_generation_ matches the jit_generation_.",
      "range": {
        "startLine": 335,
        "startChar": 1,
        "endLine": 339,
        "endChar": 70
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5529b18d_c21f37c2",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 339,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-08-22T15:49:36Z",
      "side": 1,
      "message": "Yes we do. We need to have some way to let threads know they are paused. This is especially true since we need the \"don\u0027t throw out results\" behavior for the removal of intrinsics when we add method-entry/exits into jit code. If we removed the whole paused thing and just had a discard results we wouldn\u0027t be able to do that.",
      "parentUuid": "83ae0d9b_c7155f5d",
      "range": {
        "startLine": 335,
        "startChar": 1,
        "endLine": 339,
        "endChar": 70
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "345fa54e_490ca027",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 339,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-23T13:59:40Z",
      "side": 1,
      "message": "What behavior is this? AFAIU, this CL is about having compiler threads not commit their compiled code to entry points. Is it not?",
      "parentUuid": "5529b18d_c21f37c2",
      "range": {
        "startLine": 335,
        "startChar": 1,
        "endLine": 339,
        "endChar": 70
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c306cc5_6854f406",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 339,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-08-23T16:02:09Z",
      "side": 1,
      "message": "The behavior of allowing the compilations to continue to completion after pausing them for a time. This CL is about allowing one to force in-progress compiles to wait for some other task to complete before modifying global state (or possibly to abort instead of modifying the global state.",
      "parentUuid": "345fa54e_490ca027",
      "range": {
        "startLine": 335,
        "startChar": 1,
        "endLine": 339,
        "endChar": 70
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86dfcfcd_f377b232",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 339,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-23T16:05:45Z",
      "side": 1,
      "message": "I\u0027m confused, how is that different than suspending the thread?",
      "parentUuid": "5c306cc5_6854f406",
      "range": {
        "startLine": 335,
        "startChar": 1,
        "endLine": 339,
        "endChar": 70
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ca7c99b_4c10fa39",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 340,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-22T09:36:47Z",
      "side": 1,
      "message": "Can this just be atomic?",
      "range": {
        "startLine": 340,
        "startChar": 2,
        "endLine": 340,
        "endChar": 44
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2105a5b1_8f42efe4",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 340,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-08-22T15:49:36Z",
      "side": 1,
      "message": "no it needs to be read/written atomically with paused_count_.",
      "parentUuid": "1ca7c99b_4c10fa39",
      "range": {
        "startLine": 340,
        "startChar": 2,
        "endLine": 340,
        "endChar": 44
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4749948d_b58b58c5",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 344,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-22T09:36:47Z",
      "side": 1,
      "message": "Given we inherit TLS from art::Thread, can you re-use a field there? Note that JIT threads never call into Java.",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 21
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9143425d_f1875b9e",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 344,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-08-22T15:49:36Z",
      "side": 1,
      "message": "We could but (1) I cannot think of any good field, (2) overloading a field like that is not good practice and this isn\u0027t perf critical, and (3) you asked me not to add things in art::Thread when we talked in person.",
      "parentUuid": "4749948d_b58b58c5",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 21
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5abec23c_20ff8cd2",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 344,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-23T13:59:40Z",
      "side": 1,
      "message": "I must have been unclear, or I don\u0027t remember why I thought that could be problematic.\n\nIs thread_local only applied to threads to use it? Or do all threads of the app inherit the local storage?",
      "parentUuid": "9143425d_f1875b9e",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 21
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e5ceb74_7161b097",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 344,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-08-23T16:02:09Z",
      "side": 1,
      "message": "I\u0027ll look into this some. My impression was that threads pay no real cost for having constructor-less and destructor-less thread_locals that they never touch.\n\nIf there is a cost I\u0027ll just use Thread::SetCustomTLS.",
      "parentUuid": "5abec23c_20ff8cd2",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 21
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba0f7bba_45cfc93c",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 15
      },
      "lineNbr": 344,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-08-23T16:05:45Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "7e5ceb74_7161b097",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 21
      },
      "revId": "c72444c0d07b1bc15cd6a483e2697817476e3b7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}