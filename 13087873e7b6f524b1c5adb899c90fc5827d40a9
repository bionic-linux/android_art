{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a2214410_17cf6816",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T11:48:18Z",
      "side": 1,
      "message": "You need something like aosp/3139415.",
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9725980a_70099e8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-06-28T13:39:16Z",
      "side": 1,
      "message": "Thanks! Done",
      "parentUuid": "a2214410_17cf6816",
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f527c3f_9ba0787c",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T13:44:51Z",
      "side": 1,
      "message": "Don\u0027t we need host support for this lib?",
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e82db568_de5b448c",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-06-28T14:03:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f527c3f_9ba0787c",
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3c1f13b_45ea89b0",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T13:44:51Z",
      "side": 1,
      "message": "Why does this change the dependencies?",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa72d2aa_c38dcd93",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T14:47:10Z",
      "side": 1,
      "message": "Still curious about this.\n\nThe way I interpret this line is: for core API\u0027s, override min_sdk_version and use \"current\" instead. However, this lib shouldn\u0027t depend on core API\u0027s, right? So what does it actually do here? It could be worth a comment.",
      "parentUuid": "b3c1f13b_45ea89b0",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a9c177c_40540666",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T14:51:48Z",
      "side": 1,
      "message": "My understanding is that \"core\" limits the API access to libcore APIs only, as opposed to the default, which has access to all Android framework APIs. I believe this lib depends on libcore.\n\nI\u0027ll let Victor to keep me honest.",
      "parentUuid": "aa72d2aa_c38dcd93",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a3a26fb_988ef5f6",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-01T10:07:39Z",
      "side": 1,
      "message": "Sorry for replying late. \n\nIf my information is up-to-date, core_current is roughly equals to public + @CorePlatformApi + @SystemApi(MODULE_LIBRARIES) provided by libcore / ART + Conscrypt + ICU. \n\nGenerally, platform\u0027s frameworks is built against \"core_current\" to avoid building against the libcore/ART implementation directly, and thus \"core_current\" avoids the dependency on frameworks.",
      "parentUuid": "7a9c177c_40540666",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16f6c882_251d32e6",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-07-01T11:00:04Z",
      "side": 1,
      "message": "Aha, so anything that\u0027s part of frameworks should preferably use \"core_current\" to avoid dependency cycles?\n\nStill, the \"current\" part seems at odds with min_sdk_version. Is it possible to leave out min_sdk_version below?",
      "parentUuid": "8a3a26fb_988ef5f6",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ecc59a_692b3ef3",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-01T12:26:42Z",
      "side": 1,
      "message": "Yes. we also offer \"core_platform\" sdk_version to provide slightly more APIs that I can\u0027t remember the details. \n\n\u003e Still, the \"current\" part seems at odds with min_sdk_version. Is it possible to leave out min_sdk_version below?\n\nWhy is odd? service-art-defaults is also using sdk_version: \"..._current\" and min_sdk_version: \"31\".",
      "parentUuid": "16f6c882_251d32e6",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf8ad53d_9b08c953",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-01T12:35:07Z",
      "side": 1,
      "message": "\u003e so anything that\u0027s part of frameworks should preferably use \"core_current\" to avoid dependency cycles?\n\nNot if the part needs @SystemApi(MODULE_LIBRARIES) provided by the framework (package manager, statsd, etc.).\n\n\u003e Still, the \"current\" part seems at odds with min_sdk_version. Is it possible to leave out min_sdk_version below?\n\nAFAIK, \"current\" works perfectly with min_sdk_version ([example](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/Android.bp;l\u003d78-79;drc\u003dd3100807cedb0c967ade34f277a345f5f52634c7)). It allows the library to use latest APIs with guards ([example](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/ArtShellCommand.java;l\u003d653-656;drc\u003d472401dc65ead4dbfc3b2b87e167026057d5cd23)), while keeping compatibility with lower SDK levels.",
      "parentUuid": "16f6c882_251d32e6",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1741b289_ec446562",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-07-01T12:54:51Z",
      "side": 1,
      "message": "Because if this library only depends on core APIs, and those are \"current\", then there wouldn\u0027t be any other APIs that would need to be pinned to \"31\", would there?\n\nThat may be different for service-art-defaults. I see it uses \"system_server_current\" and I don\u0027t if system_server is a superset of the core APIs.\n\nAnyway, the way I understand it there\u0027s inherently a contradiction between \"current\" and \"31\". I\u0027m sure there\u0027s a disambiguation rule, but it\u0027s more clear to not have to rely on it if we don\u0027t have to.\n\nSo does it work without min_sdk_version here? (I can very well imagine it doesn\u0027t due to the logic around this in Soong, but it\u0027s worth a try.)",
      "parentUuid": "a6ecc59a_692b3ef3",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "070615a1_a6832460",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-01T13:10:38Z",
      "side": 1,
      "message": "Here is the build error without `min_sdk_version`.\n\n```\nerror: art/build/flags/Android.bp:29:1: module \"art-aconfig-flags-lib\" variant \"android_x86_silvermont_static_apex31\": should support min_sdk_version(31) for \"com.android.art.debug\": neither min_sdk_version nor sdk_version specificed.\n\nDependency path: com.android.art.debug{os:android,arch:common,apex:com.android.art.debug}\n           via tag apex.dependencyTag{\"executable\"}\n    -\u003e dex2oatd{os:android,image:,arch:x86_silvermont,sdk:,apex:apex31}\n           via tag cc.libraryDependencyTag: { Kind:sharedLibraryDependency Order:normalLibraryDependency wholeStatic:false reexportFlags:false explicitlyVersioned:false dataLib:false ndk:false staticUnwinder:false makeSuffix: skipApexAllowedDependenciesCheck:false excludeInApex:false excludeInNonApex:false unexportedSymbols:false}\n    -\u003e libartbased{os:android,image:,arch:x86_silvermont,sdk:,link:shared,version:,apex:apex31}\n           via tag cc.libraryDependencyTag: { Kind:staticLibraryDependency Order:normalLibraryDependency wholeStatic:false reexportFlags:true explicitlyVersioned:false dataLib:false ndk:false staticUnwinder:false makeSuffix: skipApexAllowedDependenciesCheck:false excludeInApex:false excludeInNonApex:false unexportedSymbols:false}\n    -\u003e art-aconfig-flags-lib{os:android,image:,arch:x86_silvermont,sdk:,link:static,apex:apex31}\n\nConsider adding \u0027min_sdk_version: \"31\"\u0027 to \"art-aconfig-flags-lib\"\n```",
      "parentUuid": "1741b289_ec446562",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac3518ec_5507022e",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-07-01T13:16:46Z",
      "side": 1,
      "message": "\u003e Consider adding \u0027min_sdk_version: \"31\"\u0027 to \"art-aconfig-flags-lib\"\n\nThat\u0027s the native library above, I don\u0027t think it works without min_sdk_version there. What about this one?",
      "parentUuid": "070615a1_a6832460",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b633a49_b19e0f44",
        "filename": "build/flags/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-01T13:44:51Z",
      "side": 1,
      "message": "Ah, sorry. Actually, after removing min_sdk_version from `art-aconfig-flags-java-lib`, `m com.android.art` is built successfully on my local machine. The name of min_sdk_version is confusing. But what is contradiction here? I wonder why the contradiction only applies to this library, but not the others.\n\nIIUC, it\u0027s safer to have min_sdk_version: \"31\" here, because it tells that the build system that it\u0027s designed to run on Android 12 devices, e.g. the API guard that Jiakai mentioned.",
      "parentUuid": "ac3518ec_5507022e",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 32
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4dd22e6_6be7e4c6",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T13:44:51Z",
      "side": 1,
      "message": "Iiuc this is for stubs, which we presumably generate for `service-art`. Isn\u0027t it enough to have this there?\n\nAnd btw why and when do the stubs depend on the flags? If the flags are internal they shouldn\u0027t have to, right?",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df3dd0a2_d4564d9b",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-06-28T14:03:28Z",
      "side": 1,
      "message": "I am not 100% sure, but https://r.android.com/2903227 has more info. It\u0027s used in module sdk snapshots, and hidden API processing for @FlaggedApi IIUC. I can remove it if flags are used internally only.",
      "parentUuid": "f4dd22e6_6be7e4c6",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a2e1e58_7d7bde24",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T14:22:01Z",
      "side": 1,
      "message": "We need @FlaggedApi, and therefore we should probably keep this.",
      "parentUuid": "df3dd0a2_d4564d9b",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "051f7d65_da245c20",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T14:47:10Z",
      "side": 1,
      "message": "Why do you say that? It\u0027s possible we may need it, but for flags that don\u0027t affect the API we won\u0027t, right? I.e. non-exported flags will never need it (and they\u0027d hopefully be the most common ones).\n\nIn any case, shouldn\u0027t this be in `service-art` rather than here?",
      "parentUuid": "6a2e1e58_7d7bde24",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2046e11_e967546c",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T14:49:42Z",
      "side": 1,
      "message": "I believe we\u0027ll have both exported flags and non-exported flags in `art-aconfig-flags`, right?",
      "parentUuid": "051f7d65_da245c20",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7b94b5_5c74a28a",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-28T14:53:32Z",
      "side": 1,
      "message": "True, but we don\u0027t necessarily need to add this before we do. Anyway, I\u0027m fine with it, just wanted to understand why.\n\n\u003e In any case, shouldn\u0027t this be in service-art rather than here?\n\nMarking unresolved for this.",
      "parentUuid": "d2046e11_e967546c",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34a1c3c2_c0da215a",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T14:57:13Z",
      "side": 1,
      "message": "We need this sooner or later, unless we never add any new APIs. Adding it earlier is beneficial as it as be covered by continuous build, so that we don\u0027t get surprise when we starts to use @FlaggedApi.\n\n+1 for moving this to `service-art`.",
      "parentUuid": "ff7b94b5_5c74a28a",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3417e86e_6e1fb297",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-06-28T15:03:54Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "34a1c3c2_c0da215a",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 111,
        "endChar": 6
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfd904d9_91ee7170",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-06-28T10:53:17Z",
      "side": 1,
      "message": "I am not sure if we should change the package name of the flags, or permit \"com.android.art\" in the service-art. Any opinions?",
      "range": {
        "startLine": 136,
        "startChar": 8,
        "endLine": 136,
        "endChar": 26
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c24b1c69_6dab3b06",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-28T11:48:18Z",
      "side": 1,
      "message": "Permitting \"com.android.art\" looks reasonable to me.",
      "parentUuid": "bfd904d9_91ee7170",
      "range": {
        "startLine": 136,
        "startChar": 8,
        "endLine": 136,
        "endChar": 26
      },
      "revId": "13087873e7b6f524b1c5adb899c90fc5827d40a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}