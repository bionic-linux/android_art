{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1313263_acd7e513",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-10-15T16:36:49Z",
      "side": 1,
      "message": "One of the failures in the first presubmit, the one at\n\nhttps://android-build.googleplex.com/builds/pending/P42283705/art-test/latest/view/logs/build_error.log\n\nis actually a bit troubling. The complaint is:\n\n+dalvikvm64 F 10-14 22:39:39 550365 550520 monitor.cc:1527] Check failed: success Failed to find/read reference for monitor-enter at dex pc 0 in method boolean java.lang.Daemons$FinalizerWatchdogDaemon.sleepUntilNeeded()\n\nHave we seen something like this before?",
      "revId": "7e272b52740e47a8773227161c9c7e93e691052c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "275b29d0_9bd6e13a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-10-17T07:29:04Z",
      "side": 1,
      "message": "This could be a combination of\n1) We now inline methods with try/catch since Santiago\u0027s CLs\n2) Your CL is doing more CheckSuspend than before.\n\nHans can you confirm 2)?\nSantiago, could you look at the error? Also, there\u0027s a comment in the code that could actually be broken with inlining:\nhttps://source.corp.google.com/android/art/runtime/monitor.cc;l\u003d1521?q\u003dmonitor.cc\u0026sq\u003dpackage:%5Eandroid$\n\n```\n      // For optimized code we expect the DexRegisterMap to be present - monitor information\n      // not be optimized out.\n ```",
      "parentUuid": "f1313263_acd7e513",
      "revId": "7e272b52740e47a8773227161c9c7e93e691052c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16ff3ba8_2521a219",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-10-17T09:55:16Z",
      "side": 1,
      "message": "I don\u0027t think my changes would have gotten rid of an existing `DexRegisterMap`. Given that the error says `in method boolean java.lang.Daemons$FinalizerWatchdogDaemon.sleepUntilNeeded()`, we are looking for a vreg in that method (as opposed to using an outer method). Even if the method is inlined, we should be looking in the right frame (https://cs.android.com/android/platform/superproject/+/master:art/runtime/stack.cc;l\u003d310;drc\u003dab1d559aee05873f70494514922ad4b767c6a709)\n\nA couple of thoughts:\n1) The failure says `at dex pc 0 `. Is that an expected dex_pc? It could be because it is a synchronized method (https://cs.android.com/android/platform/superproject/+/master:libcore/libart/src/main/java/java/lang/Daemons.java;l\u003d382;drc\u003dfb706ffb9948d3df81dee63d12696744b6904510). Does that mean that the DEX code starts with a monitor enter operation?\n2) Is this a flaky failure? I don\u0027t see it now failing on presubmit.\n2)b) Is this happening tip of tree? Or only with this CL added on top?\n3) If we can repro consistently, we could set `kInlineTryCatches` to false to forbid try catch inlining (https://cs.android.com/android/platform/superproject/+/master:art/compiler/optimizing/inliner.cc;l\u003d76;drc\u003d629c065a416260a2a1e87c034ca0b42fbda0fe44). If it still reproes without try catch inlining, we can discard the theory.\n4) The path that I changed regarding DEX pcs was about finding the correct catch. In order to do so, we need to have the exact dex_pc list that we are looking for (to avoid duplicates). It shouldn\u0027t have affected other paths like this one.\n\n---\n\nSligthly related: Do we need to perform this write barrier too if `result` is false? http://cs/android/art/runtime/stack.cc;l\u003d268;rcl\u003df51cae898e81a8bad0ee4dab12fd00e0c9dc6e1f",
      "parentUuid": "275b29d0_9bd6e13a",
      "revId": "7e272b52740e47a8773227161c9c7e93e691052c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}