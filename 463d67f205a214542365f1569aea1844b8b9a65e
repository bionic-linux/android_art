{
  "comments": [
    {
      "key": {
        "uuid": "0aa334ed_538ee3b7",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 2
      },
      "lineNbr": 3632,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-17T22:38:56Z",
      "side": 1,
      "message": "This is called after another barrier, so we\u0027re sure that revoked_mark_stacks won\u0027t become nonempty after this?  Otherwise does it make sense to move it down?",
      "range": {
        "startLine": 3632,
        "startChar": 10,
        "endLine": 3632,
        "endChar": 39
      },
      "revId": "463d67f205a214542365f1569aea1844b8b9a65e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a1f6a6_304d16fe",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 2
      },
      "lineNbr": 3632,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2019-09-17T22:51:05Z",
      "side": 1,
      "message": "I didn\u0027t quite get your question.\nBut given the fact that thread-local mark stacks are not used after moving from \u0027thread-local mark-stack\u0027 mode to \u0027shared mark-stack\u0027 mode, it\u0027s guaranteed that revoked_mark_stacks is empty by the time we reach here.",
      "parentUuid": "0aa334ed_538ee3b7",
      "range": {
        "startLine": 3632,
        "startChar": 10,
        "endLine": 3632,
        "endChar": 39
      },
      "revId": "463d67f205a214542365f1569aea1844b8b9a65e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebca8334_a4991a85",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 2
      },
      "lineNbr": 3632,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-17T23:44:16Z",
      "side": 1,
      "message": "My concern is whether this catches as many instances of the bug as possible. Is there a risk that, due to the bug we\u0027re trying to catch, which presumably adds to revoked_mark_stacks_ mode in shared mode, the incorrect addition to revoked_mark_stacks_ could happen even later than this?",
      "parentUuid": "36a1f6a6_304d16fe",
      "range": {
        "startLine": 3632,
        "startChar": 10,
        "endLine": 3632,
        "endChar": 39
      },
      "revId": "463d67f205a214542365f1569aea1844b8b9a65e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07085032_f15012a3",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 2
      },
      "lineNbr": 3632,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2019-09-18T00:24:35Z",
      "side": 1,
      "message": "The only three places where something gets pushed to revoked_mark_stacks are:\n1) During checkpoint\n2) In PushOntoMarkStack(), if the thread-local mark stack is full\n3) During thread destruction, if marking is going on\n\nNone of these could happen once marking is finished. Therefore, I think it should catch work as intended.",
      "parentUuid": "ebca8334_a4991a85",
      "range": {
        "startLine": 3632,
        "startChar": 10,
        "endLine": 3632,
        "endChar": 39
      },
      "revId": "463d67f205a214542365f1569aea1844b8b9a65e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}