{
  "comments": [
    {
      "key": {
        "uuid": "194a9a42_277268cf",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": "Why? This seems to introduce unnecessary complexity.",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6661112_18aae5aa",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "Clarify?",
      "parentUuid": "194a9a42_277268cf",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b60d1d2e_9761043c",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-22T18:49:51Z",
      "side": 1,
      "message": "If you looked at diff PS8 PS13 and see this as changed, it\u0027s because PS9 was rebased across my CL that touched it. See diff against base.\n\n(This is the reason why I recommend rebasing only when necessary. It makes incremental reviews easier. I often rebase onto the parent of the previous PS before upload if there are no conflicts.)",
      "parentUuid": "d6661112_18aae5aa",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a1415d_bc67219e",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T20:05:58Z",
      "side": 1,
      "message": "Ah, yeah, rebase.. fun.",
      "parentUuid": "b60d1d2e_9761043c",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d953a2fb_4485aed1",
        "filename": "runtime/base/scoped_arena_allocator.h",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": "nit: enum class for new code\n\nit probably wouldn\u0027t hurt to specify the exact type size either.",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 35,
        "endChar": 17
      },
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f66f95e4_99bd9bee",
        "filename": "runtime/base/scoped_arena_allocator.h",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d953a2fb_4485aed1",
      "range": {
        "startLine": 35,
        "startChar": 5,
        "endLine": 35,
        "endChar": 17
      },
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3942fe30_7f67979d",
        "filename": "runtime/base/scoped_arena_containers.h",
        "patchSetId": 13
      },
      "lineNbr": 216,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": "Would you mind explaining how this will help? There\u0027s nothing here that checks for kMagicFill, are we just hoping this will corrupt the data leading to a crash?",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369ccd29_9b082b6b",
        "filename": "runtime/base/scoped_arena_containers.h",
        "patchSetId": 13
      },
      "lineNbr": 216,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "Yes, hopefully it would crash.",
      "parentUuid": "3942fe30_7f67979d",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369ccd29_5bc9438a",
        "filename": "runtime/base/scoped_arena_containers.h",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": ".\n\n  void operator()(T* ptr) const \u003d delete\n\nwould likely have a better error message",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a1415d_5c1b7dba",
        "filename": "runtime/base/scoped_arena_containers.h",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "Seems fien to me, not sure if vmarko will complain.",
      "parentUuid": "369ccd29_5bc9438a",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a1415d_9cd6e524",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": "Can you wrap this with ArenaUniquePtr ?",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f66f95e4_7920c7e3",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "You mean return ArenaUniquePtr? That doesnt help much since we don\u0027t have a StringPiece that holds ArenaUniquePtr.",
      "parentUuid": "56a1415d_9cd6e524",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a1415d_5cc61dd7",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T20:05:58Z",
      "side": 1,
      "message": "This is just very scary because the \"ptr\" on 167 is never freed explicitly so I\u0027m worried about dangling pointers to the arena\u0027s memory pool later.\n\n------\n\nWhat if we had an ArenaStringPiece that e.g. held an ArenaUniquePtr?\n\nFor example\n\n   struct ArenaStringPiece : public StringPiece {\n       ArenaStringPiece() {\n           StringPiece::ptr_ \u003d string_data_.get();\n           StringPiece::length_ \u003d strlen(StringPiece::ptr_);\n       }\n       // + move and assign-move operators\n     private:\n       ArenaUniquePtr\u003cconst char\u003e string_data_;\n   }",
      "parentUuid": "f66f95e4_7920c7e3",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6d4f5d4_110decbd",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T20:52:35Z",
      "side": 1,
      "message": "What do you mean dangling pointers? The arena is held live for the duration of verification. That would have to mean that someone made a string piece escape the verifier.",
      "parentUuid": "56a1415d_5cc61dd7",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369ccd29_9e91f9de",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T21:30:04Z",
      "side": 1,
      "message": "That\u0027s exactly what I mean, yes.",
      "parentUuid": "f6d4f5d4_110decbd",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6d4f5d4_94054a2d",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 166,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T21:45:51Z",
      "side": 1,
      "message": "Maybe I could make a RegTypeDescriptor : public StringPiece. So that if it escapes, it becomes clearer that it is an error.",
      "parentUuid": "369ccd29_9e91f9de",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d953a2fb_44e20e89",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 346,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-22T18:07:10Z",
      "side": 1,
      "message": "nit: magic number 8",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f935c6bb_2340a66b",
        "filename": "runtime/verifier/reg_type_cache.cc",
        "patchSetId": 13
      },
      "lineNbr": 346,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-22T18:41:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d953a2fb_44e20e89",
      "revId": "fcb6d2c149fc063ef964b559f22eef1de83de57d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}