{
  "comments": [
    {
      "key": {
        "uuid": "f5972c13_d2383eb3",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1207,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-05-11T14:38:46Z",
      "side": 1,
      "message": "Is this overhead_size still correct? Now that we include the instance fields as static fields, should their size be subtracted from overhead_size?",
      "range": {
        "startLine": 1207,
        "startChar": 15,
        "endLine": 1207,
        "endChar": 28
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93755e63_4a567ed0",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1207,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-05-11T15:11:02Z",
      "side": 1,
      "message": "I believe we never fix up things to be consistent. E.g., the runtime-internal-objects stuff isn\u0027t accounted for in the class dumps instance size.\n\nAlso since there\u0027s no size in a class-dump for this class, I believe this is still OK.\n\nOpinion on that reasoning?",
      "parentUuid": "f5972c13_d2383eb3",
      "range": {
        "startLine": 1207,
        "startChar": 15,
        "endLine": 1207,
        "endChar": 28
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf7ceb8_b1d8b566",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1207,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-05-11T16:21:28Z",
      "side": 1,
      "message": "I think most heap dump tools determine the size of a class object by taking the instance size associated with instances of java.lang.Class and adding the size of the static fields. This means they would end up double counting the class object instance fields? Let me think about that.",
      "parentUuid": "93755e63_4a567ed0",
      "range": {
        "startLine": 1207,
        "startChar": 15,
        "endLine": 1207,
        "endChar": 28
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efd91c4c_383907e9",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1249,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-05-11T14:38:46Z",
      "side": 1,
      "message": "Add a link to the bug in the comment to give more context for this somewhat subtle point?",
      "range": {
        "startLine": 1249,
        "startChar": 0,
        "endLine": 1249,
        "endChar": 54
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e35665ce_c43d302c",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-05-11T14:38:46Z",
      "side": 1,
      "message": "This is an anonymous function? Can you document what it does? Are there problems with making it a normal function instead?",
      "range": {
        "startLine": 1263,
        "startChar": 2,
        "endLine": 1263,
        "endChar": 63
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "963d13ec_6134d3d2",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-05-11T15:11:02Z",
      "side": 1,
      "message": "No real problems. I like lambdas for their scoping. Writing static fields is pretty much specific to class dumps, so would not be shared with any other function.",
      "parentUuid": "e35665ce_c43d302c",
      "range": {
        "startLine": 1263,
        "startChar": 2,
        "endLine": 1263,
        "endChar": 63
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fd78fdf_d9df7ec3",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-05-11T16:21:28Z",
      "side": 1,
      "message": "It took me a long time to figure out what this was doing, perhaps because I am not very familiar with lambdas in C++. It would have been easier for me to understand if it was a normal function.\n\nI would still like a comment at least describing what the static_field_writer function does and what name_fn is.",
      "parentUuid": "963d13ec_6134d3d2",
      "range": {
        "startLine": 1263,
        "startChar": 2,
        "endLine": 1263,
        "endChar": 63
      },
      "revId": "528a292386c83074fe7e1734aed055cf1e52b4a9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}