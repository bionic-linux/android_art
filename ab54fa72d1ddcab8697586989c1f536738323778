{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03c3ab05_9cb1f099",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 84,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "This does not happen anymore as `allowed_successors_` is a pre-allocated vector.",
      "range": {
        "startLine": 84,
        "startChar": 23,
        "endLine": 84,
        "endChar": 57
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27a7ca8a_10b00ac8",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 84,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03c3ab05_9cb1f099",
      "range": {
        "startLine": 84,
        "startChar": 23,
        "endLine": 84,
        "endChar": 57
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb61239e_be614a13",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 95,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "Isn\u0027t this irrelevant, given that the exit block does not have any successors?",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 93
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc7c769d_32b33f99",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 95,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb61239e_be614a13",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 93
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e065989_994edac2",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 97,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 97,
        "startChar": 24,
        "endLine": 97,
        "endChar": 26
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ca72260_215bb18f",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 97,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e065989_994edac2",
      "range": {
        "startLine": 97,
        "startChar": 24,
        "endLine": 97,
        "endChar": 26
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8129569_c7563d5a",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 214,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "Even if this is an infinite loop and never reaches the exit block?",
      "range": {
        "startLine": 211,
        "startChar": 8,
        "endLine": 214,
        "endChar": 25
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e49e249d_e13e0421",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 214,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Yes. Potentially diverging loops is pretty much identical to reaching the exit node.",
      "parentUuid": "c8129569_c7563d5a",
      "range": {
        "startLine": 211,
        "startChar": 8,
        "endLine": 214,
        "endChar": 25
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22d82f33_c6535629",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 292,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "Always false. (Would have crashed above.)",
      "range": {
        "startLine": 292,
        "startChar": 9,
        "endLine": 292,
        "endChar": 25
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "969a05ea_6d5cbf7b",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 65
      },
      "lineNbr": 292,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22d82f33_c6535629",
      "range": {
        "startLine": 292,
        "startChar": 9,
        "endLine": 292,
        "endChar": 25
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7af330d_0471ba07",
        "filename": "compiler/optimizing/execution_subgraph.h",
        "patchSetId": 65
      },
      "lineNbr": 104,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "Move below to avoid multiple public and private sections.",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 35
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab8ec83_be30b2da",
        "filename": "compiler/optimizing/execution_subgraph.h",
        "patchSetId": 65
      },
      "lineNbr": 104,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7af330d_0471ba07",
      "range": {
        "startLine": 104,
        "startChar": 21,
        "endLine": 104,
        "endChar": 35
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2986a09_f023e7d0",
        "filename": "compiler/optimizing/execution_subgraph_test.cc",
        "patchSetId": 65
      },
      "lineNbr": 789,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "This creates `kTestMaxSuccessors-1` successors. I think you should restore the `-1` in the definition of `kTestMaxSuccessors` and add en explicit `+1` here:\n\n  Range(cur + 1, std::min(cur + 1 + kTestMaxSuccessors, kNumBlocks))\n\nto have `cur + 1` on both ends of the range.",
      "range": {
        "startLine": 789,
        "startChar": 20,
        "endLine": 789,
        "endChar": 81
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2847311e_97ee26fd",
        "filename": "compiler/optimizing/execution_subgraph_test.cc",
        "patchSetId": 65
      },
      "lineNbr": 789,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2986a09_f023e7d0",
      "range": {
        "startLine": 789,
        "startChar": 20,
        "endLine": 789,
        "endChar": 81
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c819efb9_a09965de",
        "filename": "compiler/optimizing/load_store_analysis.cc",
        "patchSetId": 65
      },
      "lineNbr": 118,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "unfinished comment",
      "range": {
        "startLine": 118,
        "startChar": 73,
        "endLine": 118,
        "endChar": 75
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14e39f11_a99db55a",
        "filename": "compiler/optimizing/load_store_analysis.cc",
        "patchSetId": 65
      },
      "lineNbr": 118,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c819efb9_a09965de",
      "range": {
        "startLine": 118,
        "startChar": 73,
        "endLine": 118,
        "endChar": 75
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "481a8401_19d39a0c",
        "filename": "compiler/optimizing/load_store_analysis.h",
        "patchSetId": 65
      },
      "lineNbr": 117,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "This handles a single escape, so rename to `HandleEscape`.",
      "range": {
        "startLine": 117,
        "startChar": 7,
        "endLine": 117,
        "endChar": 20
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e22a014_339ab188",
        "filename": "compiler/optimizing/load_store_analysis.h",
        "patchSetId": 65
      },
      "lineNbr": 117,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "481a8401_19d39a0c",
      "range": {
        "startLine": 117,
        "startChar": 7,
        "endLine": 117,
        "endChar": 20
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f23d6127_37db3ce4",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 65
      },
      "lineNbr": 1148,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "MergedUnknown flowing into a loop yields PureUnknown. Is that intentional?\n\nDo we need to mark that MergedUnknown for keeping?",
      "range": {
        "startLine": 1146,
        "startChar": 2,
        "endLine": 1148,
        "endChar": 3
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32d3f4de_de7ffadb",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 65
      },
      "lineNbr": 1148,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "no. Fixed.",
      "parentUuid": "f23d6127_37db3ce4",
      "range": {
        "startLine": 1146,
        "startChar": 2,
        "endLine": 1148,
        "endChar": 3
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89ce2bdb_2b284fc5",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 65
      },
      "lineNbr": 1218,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-30T17:51:43Z",
      "side": 1,
      "message": "This can no longer be true on first iteration, so you can just have a simple \"break\" in the `pred_value.IsUnknown() || merged_value.IsUnknown()` block.",
      "range": {
        "startLine": 1216,
        "startChar": 4,
        "endLine": 1218,
        "endChar": 5
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e6fde66_470b063b",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 65
      },
      "lineNbr": 1218,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-10-30T22:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89ce2bdb_2b284fc5",
      "range": {
        "startLine": 1216,
        "startChar": 4,
        "endLine": 1218,
        "endChar": 5
      },
      "revId": "ab54fa72d1ddcab8697586989c1f536738323778",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}