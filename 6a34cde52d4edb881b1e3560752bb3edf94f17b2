{
  "comments": [
    {
      "key": {
        "uuid": "72cf1248_ccf90fd2",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-02T13:55:51Z",
      "side": 1,
      "message": "Not sure I understand this check. Is it for checking the last visited range is owned by this interval?",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 715,
        "endChar": 59
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72cf1248_cc27cfe1",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-03-02T14:35:17Z",
      "side": 1,
      "message": "I added this mostly for myself to make sure I wasn\u0027t iterating over a sibling\u0027s list when I assigned the cached range to the correct sibling during a split. Doing that gained nothing so I just cleared the cached value but the check stayed. You might be right that it\u0027s slightly too paranoid. Want me to get rid of it?",
      "parentUuid": "72cf1248_ccf90fd2",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 715,
        "endChar": 59
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c00617_0d74f188",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-02T14:38:54Z",
      "side": 1,
      "message": "It\u0027s OK to keep it, but it deserves a comment.",
      "parentUuid": "72cf1248_cc27cfe1",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 715,
        "endChar": 59
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c00617_4dec39c3",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 720,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-02T13:55:51Z",
      "side": 1,
      "message": "So we go back to first range if the position is below the last visited range. If we knew the places we restart the algorithm, we wouldn\u0027t need to check right?",
      "range": {
        "startLine": 720,
        "startChar": 0,
        "endLine": 720,
        "endChar": 88
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2c50a26_8e353bac",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 720,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-03-02T14:35:17Z",
      "side": 1,
      "message": "That\u0027s assuming Covers is always called on non-decreasing sequences. For example, FreeIfNotCover is called on current_pos+1 and ConnectSplitSiblings calls Covers completely out of sequence. \n\nSo yes, we could get rid of it but apart from \"resetting\" the cached value of each interval, we would also have to rewrite some bits to run in the correct order and I\u0027m worried I might miss something.",
      "parentUuid": "92c00617_4dec39c3",
      "range": {
        "startLine": 720,
        "startChar": 0,
        "endLine": 720,
        "endChar": 88
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c00617_cd8d8900",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 1
      },
      "lineNbr": 720,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-02T14:38:54Z",
      "side": 1,
      "message": "Please add a comment on this code then, explaining that \"even though it is linear, ....\".",
      "parentUuid": "b2c50a26_8e353bac",
      "range": {
        "startLine": 720,
        "startChar": 0,
        "endLine": 720,
        "endChar": 88
      },
      "revId": "6a34cde52d4edb881b1e3560752bb3edf94f17b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}