{
  "comments": [
    {
      "key": {
        "uuid": "36a39c69_8947f930",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Please upload this change too and put it into a topic so we can see it.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 70
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9997290f_263cee87",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-21T17:08:42Z",
      "side": 1,
      "message": "Needs ARM fixes.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b003cee_c3e009e9",
        "filename": "runtime/base/mutex.h",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "A global lock seems far too heavyweight for a single 64bit field.",
      "range": {
        "startLine": 103,
        "startChar": 2,
        "endLine": 103,
        "endChar": 16
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b057e0b0_e2fa26f2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "You shouldn\u0027t need to lock here.",
      "range": {
        "startLine": 451,
        "startChar": 0,
        "endLine": 451,
        "endChar": 61
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adad2213_c419c9c1",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 1774,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "\u0027||\u0027 should be just below the \u0027v\u0027.",
      "range": {
        "startLine": 1774,
        "startChar": 4,
        "endLine": 1774,
        "endChar": 7
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07e5fe66_dfbfe04f",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 2854,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "One line.",
      "range": {
        "startLine": 2853,
        "startChar": 0,
        "endLine": 2854,
        "endChar": 67
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "582f83f8_b58695a7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 2977,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "This seems to be the only use of this function.\n\nWhy do you have the set_zero parameter if it is never used.",
      "range": {
        "startLine": 2977,
        "startChar": 0,
        "endLine": 2977,
        "endChar": 56
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "829dd177_92804bed",
        "filename": "runtime/class_linker.h",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "One line.",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 210,
        "endChar": 54
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b2a35ee_7c8d470e",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Multiple lines please. 100 columns.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 145
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530c577d_1e734ede",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Why no IsActiveTrasaction here?\n\nIf it cannot happen put a DCHECK in.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 65
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a8d43b_5b0a6ded",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Remove this comment.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7520be8f_7a87bf74",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 541,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "You shouldn\u0027t seriously lock when doing a SubClass.",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 59
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba767fb2_201c0ff8",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 1148,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "revert.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d31f36_185fbbad",
        "filename": "runtime/mirror/class.cc",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "Given we\u0027re talking about a 64bit value, you should probably move to an atomic 64bit instead.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 61
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea61e2e6_1c7314ad",
        "filename": "runtime/mirror/class.cc",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-21T17:08:42Z",
      "side": 1,
      "message": "Please, move to GetStatus/SetStatus , this is leaking details into another function.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac948ab0_207c047e",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 1
      },
      "lineNbr": 685,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-21T17:08:42Z",
      "side": 1,
      "message": "Too much cruft added to class.h, can you move them to instanceof_bitstring.h? \n\n   struct InstanceOfBitString {\n     ...\n   }\n   static_assert(sizeof(InstanceOfBitString)) \u003d\u003d sizeof(uint64_t))",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30796c35_bbcbdf6f",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 1
      },
      "lineNbr": 1543,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Since you rely on the endianness of this value elsewhere you might want to at least mention it here.",
      "range": {
        "startLine": 1543,
        "startChar": 0,
        "endLine": 1543,
        "endChar": 19
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2991741_95435cf5",
        "filename": "runtime/mirror/class_bitstring_helper.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-21T17:08:42Z",
      "side": 1,
      "message": "It should go into runtime/base because runtime/mirror is only for things that have a java.lang.Object equivalent.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b914e8c8_60656539",
        "filename": "runtime/mirror/class_bitstring_helper.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Don\u0027t indent top level namespace contents.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b01132f_08de165b",
        "filename": "runtime/mirror/class_bitstring_helper.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "Here and below, art style is 2 space as indentation.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 32
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f1249f7_87c38416",
        "filename": "runtime/mirror/class_bitstring_helper.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "you shouldn\u0027t indent.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 64,
        "endChar": 5
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4fba48c_3cf3abe4",
        "filename": "test/988-TooDeepClassInstanceOf/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "2017",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35732511_44a8f58f",
        "filename": "test/988-TooDeepClassInstanceOf/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-21T17:08:42Z",
      "side": 1,
      "message": "Test should include checks for too-wide and too-deep overflow cases.\n\ni.e. WouldOverFlowForInstanceOf(A.class, B.class) \u003d\u003e \"a instanceof B\" uses the overflow method.\n\n\nWouldOverFlowForInstanceOf can reach into the runtime with JNI to assert that the bitstring is overflowing or not.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3e2815b_79e064d4",
        "filename": "test/988-TooDeepClassInstanceOf/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-21T13:23:32Z",
      "side": 1,
      "message": "Instead of System.out.println, please change to expectTrue/expectFalse.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 32
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5471c32_b5de43ac",
        "filename": "test/988-TooWideClassInstanceOf/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "This has the look of something generated. If possible just include the generating code and run it in the tests \u0027build\u0027 script.",
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9004e5a0_1a838339",
        "filename": "test/988-TooWideClassInstanceOf/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 1248,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-07-21T16:07:46Z",
      "side": 1,
      "message": "spaces not tabs.",
      "range": {
        "startLine": 1242,
        "startChar": 0,
        "endLine": 1248,
        "endChar": 4
      },
      "revId": "a1c4df4225ba28bf6927d06d695b3e38b481dc73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}