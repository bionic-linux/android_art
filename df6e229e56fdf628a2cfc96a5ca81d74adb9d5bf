{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0cd59279_6ed6ea67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2023-02-04T00:10:14Z",
      "side": 1,
      "message": "Feel free to reject this, as there\u0027s probably a better way of reverse mapping the apex jars on the host? In any case, this at least gets the script working for the 3 targets I tested (aosp + cf_x86_64, master + Pixel, master + Go). Maybe there\u0027s a more current version of doing the same thing (quick and dirty compilation on the host for simple code snippets).",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc3dba3_e1d2c01a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-02-06T12:04:42Z",
      "side": 1,
      "message": "Roland, do you know if these scripts are still being used by any chance? Are they used in any tests? I did a Code Search and only found that `compile-jar.py` is used by `compile-jar.sh`, which is used by `compile-classes.sh`, which is used by nobody. If this is dead code, I think the best way forward is to get rid of it instead of keeping it updated.",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef2efe8d_42e9052c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2023-02-06T18:48:45Z",
      "side": 1,
      "message": "I\u0027ve used these sripts in the past, but it\u0027s been a while, and only noticed they were broken when I tried to use the other day without success.\n\nHowever, if they\u0027re neither maintained nor used by anybody else, also OK moving them elsewhere or deleting. There is value in having a simple frontend for getting dex2oat output from a simple set of inputs, but if it\u0027s inconsistent with the actual compilation pipeline (and potentially leading to different output than you\u0027d see in production), maybe best to avoid any false confidence, or at least get it into a state where it can be tested and avoid bit rot.",
      "parentUuid": "bbc3dba3_e1d2c01a",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5bcbe95_986e5dfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-02-08T11:50:46Z",
      "side": 1,
      "message": "David, could you please check if these scripts are still in use?",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "743dd5e5_096b8b9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-02-08T13:22:32Z",
      "side": 1,
      "message": "r",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdcf5b09_105640c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-02-08T13:22:32Z",
      "side": 1,
      "message": "I wasn\u0027t aware of these scripts.  I guess my code search is as good as yours :-)\n\nThey are not used for run-tests for sure.",
      "parentUuid": "b5bcbe95_986e5dfb",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8003f266_51a51c35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-02-08T15:19:48Z",
      "side": 1,
      "message": "Script `tools/host_bcp.sh` was introduced as a helper for ART host tools, which started to require additional options to find the boot classpath on host after the introduction of the ART APEX at the end of 2018 (see b/128990084).\n\nAFAIU, this was purely for local uses. Bug b/137257397 contains an example of such an invocation:\n\n```\n$ dex2oatd \\\n    --runtime-arg -Xms64m --runtime-arg -Xmx512m \\\n    --boot-image\u003d${OUT}/system/framework/boot.art \\\n    `$ANDROID_BUILD_TOP/art/tools/host_bcp.sh $OUT/system/framework/arm64/boot.oat` \\\n    --dex-file\u003d${FILE} --dex-location\u003d/system/framework/${FILE} \\\n    --oat-file\u003d${FILE}.oat \\\n    --android-root\u003d${OUT}/system \\\n    --instruction-set\u003dXXX --instruction-set-features\u003dYYY\n```\n\nAs for `tools/compile-jar.py`, it\u0027s a rewriting/improvement of `tools/compile-jar.sh`, which is also a host tool for local uses (see b/137257397).\n\nMy understanding is that `tools/host_bcp.sh` still has value for local uses; not sure about `tools/compile-jar.py`. Adding Nicolas for additional comments.",
      "parentUuid": "ef2efe8d_42e9052c",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1c9856_4a86ca64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-02-08T18:47:56Z",
      "side": 1,
      "message": "One more comment: if we decide to keep these scripts, it would be nice to ensure they are regularly exercised through continuous testing.",
      "parentUuid": "8003f266_51a51c35",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c655d098_19773890",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2023-02-08T20:20:29Z",
      "side": 1,
      "message": "+1, this one-off scripts are always going to be somewhat brittle\n\nI had been wondering if we could hack up a script that uses Soong to run compilation, so we at least have some assurances on consistency, but that\u0027s generally going to be a *lot* slower and painful for iteration\n\nAlternatively, if we had end-to-end Godbolt integration... :)",
      "parentUuid": "de1c9856_4a86ca64",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eb48aee_988253ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-02-09T15:54:24Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "cdcf5b09_105640c2",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38da6de1_519b25ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-02-09T15:54:24Z",
      "side": 1,
      "message": "I see. Thanks for the inputs. Sorry for the delay on the review.",
      "parentUuid": "c655d098_19773890",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1896ca95_c350dcd4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2023-02-09T21:02:44Z",
      "side": 1,
      "message": "All good, thanks!",
      "parentUuid": "38da6de1_519b25ba",
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f717df75_d0e93383",
        "filename": "tools/host_bcp.sh",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-02-09T15:54:24Z",
      "side": 1,
      "message": "This is based on the assumption that the build system generates `apex-info-list.xml` puts the BCP jars in `$ANDROID_PRODUCT_OUT/\u003capex-package-name\u003e/\u003cmodule-jar\u003e`, so it still looks a bit fragile to me.\n\nAn alternative way I can see is to extract the BCP paths and locations from\n`${ANDROID_PRODUCT_OUT/target\\/product/soong}/dex_artjars/android/apex/art_boot_images/javalib/\u003carch\u003e/boot.invocation` or `${ANDROID_PRODUCT_OUT/target\\/product/soong}/dex_bootjars/android/system/framework/x86_64/boot.invocation`. This is also based on some assumptions (the path to the `.invocation` file, etc.), but I\u0027m more inclined to rely on these assumptions because they are more under the control of our team.\n\nAnyway, we have to live with some assumptions, and unfortunately we don\u0027t have continuous testing for this script to enforce whoever break the assumptions to update this script. This suggestion is completely optional. Feel free to keep the code as is.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 58
      },
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5eb49c0d_50e07ee3",
        "filename": "tools/host_bcp.sh",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1064003
      },
      "writtenOn": "2023-02-09T21:02:44Z",
      "side": 1,
      "message": "Thanks Jiakai, I\u0027ll probably just land this as-is to get something that\u0027s functional, and we can follow up with something more stable.",
      "parentUuid": "f717df75_d0e93383",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 58
      },
      "revId": "df6e229e56fdf628a2cfc96a5ca81d74adb9d5bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}