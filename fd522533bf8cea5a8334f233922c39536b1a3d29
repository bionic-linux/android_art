{
  "comments": [
    {
      "key": {
        "uuid": "4dd8b7e5_d2a10550",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 2301,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-24T12:37:07Z",
      "side": 1,
      "message": "Maybe add \"/* is_far_target */ final_label \u003d\u003d \u0026done_label\"?",
      "range": {
        "startLine": 2301,
        "startChar": 18,
        "endLine": 2301,
        "endChar": 19
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d19f3264_339c09cc",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 2301,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-24T13:05:15Z",
      "side": 1,
      "message": "This does not apply to unconditional branches (which are speculatively encoded in 16 bits if they are forward). Refer to:\n\n void ArmVIXLMacroAssembler::B(vixl32::Label* label)",
      "parentUuid": "4dd8b7e5_d2a10550",
      "range": {
        "startLine": 2301,
        "startChar": 18,
        "endLine": 2301,
        "endChar": 19
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9455f8e9_e1ebcaed",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 3168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-24T12:37:07Z",
      "side": 1,
      "message": "Are you sure you want to keep this set to \"false\" rather than \"final_label \u003d\u003d \u0026done\"?",
      "range": {
        "startLine": 3168,
        "startChar": 46,
        "endLine": 3168,
        "endChar": 68
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a46800b0_4030b5d8",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 3168,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-24T13:05:15Z",
      "side": 1,
      "message": "You mean \"final_label !\u003d \u0026done\", i.e. the target is far if the final label is not \"done\"? My assumption is that \"final_label \u003d\u003d \u0026done\" is the common case, and my preference has been to write simpler code (keep in mind that I have not observed any .text size increase). At some later point I may do some experiments with some apps and boot.oat - go through all calls to GetFinalLabel(), and try your suggestion.",
      "parentUuid": "9455f8e9_e1ebcaed",
      "range": {
        "startLine": 3168,
        "startChar": 46,
        "endLine": 3168,
        "endChar": 68
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b1f5451_af96e5f9",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 3168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-24T13:17:55Z",
      "side": 1,
      "message": "Yes, I meant \"final_label !\u003d \u0026done\". This is not purely about code size, it\u0027s about the number of veneer pools we\u0027re going to emit.",
      "parentUuid": "a46800b0_4030b5d8",
      "range": {
        "startLine": 3168,
        "startChar": 46,
        "endLine": 3168,
        "endChar": 68
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f325f2b0_c91f022a",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 3168,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-24T13:26:30Z",
      "side": 1,
      "message": "Sure, but a change in the veneer pool number will probably result in a change in the metrics I am tracking. Anyway, I may have a look later - I have a script that calculates the number of branches to branches (which covers veneer pools) from the oatdump output, so it should not be difficult.",
      "parentUuid": "6b1f5451_af96e5f9",
      "range": {
        "startLine": 3168,
        "startChar": 46,
        "endLine": 3168,
        "endChar": 68
      },
      "revId": "fd522533bf8cea5a8334f233922c39536b1a3d29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}