{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ed8c1ae_f4644462",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 289,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-15T16:07:50Z",
      "side": 1,
      "message": "I\u0027m not sure to completely understand (but I haven\u0027t closely followed the the logic / expectations around `DEX2OATBOOTCLASSPATH` lately): is the first non-null component of an updated bootclasspath special? Can there be more than one? If this is documented elsewhere, it might be useful to add a reference to this documentation here.",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 60
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a1276f7_e15b5acc",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 289,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-02-15T19:48:48Z",
      "side": 1,
      "message": "This is really a build system detail that I\u0027m adding here so there\u0027s just one place for it for both ART and odrefresh.\n\nAdded a comment here since I\u0027m not aware of any documentation on it. It was added here:\nhttps://r.android.com/910333, https://r.android.com/909893, https://r.android.com/909854",
      "parentUuid": "1ed8c1ae_f4644462",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 60
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d139c320_04ae9096",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 289,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-16T08:47:54Z",
      "side": 1,
      "message": "Thanks for documenting this! This is clearer for me now.",
      "parentUuid": "9a1276f7_e15b5acc",
      "range": {
        "startLine": 289,
        "startChar": 4,
        "endLine": 289,
        "endChar": 60
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "204211e0_880b5896",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-15T16:07:50Z",
      "side": 1,
      "message": "Note: Someday it would be nice to refactor the code here to use `std::filesystem::path`. :-)",
      "range": {
        "startLine": 345,
        "startChar": 19,
        "endLine": 345,
        "endChar": 42
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c098b65_bdf06f61",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 424,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-15T16:07:50Z",
      "side": 1,
      "message": "\"Args\" (to match line 434)?",
      "range": {
        "startLine": 424,
        "startChar": 7,
        "endLine": 424,
        "endChar": 12
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82730a64_c441a9a9",
        "filename": "libartbase/base/file_utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 424,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-02-15T19:48:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c098b65_bdf06f61",
      "range": {
        "startLine": 424,
        "startChar": 7,
        "endLine": 424,
        "endChar": 12
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51ac72b0_bf5f9958",
        "filename": "libartbase/base/file_utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-15T16:07:50Z",
      "side": 1,
      "message": "Style: Looking at the examples in https://google.github.io/styleguide/cppguide.html#Braced_Initializer_List_Format, it looks like there should be no space between the type and the braced initializer (here in below).",
      "range": {
        "startLine": 206,
        "startChar": 23,
        "endLine": 206,
        "endChar": 24
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fb3af6c_36cbfd07",
        "filename": "libartbase/base/file_utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-02-15T19:48:48Z",
      "side": 1,
      "message": "Yes, there\u0027s a bit of friction between Google C++ style (and it\u0027s implementation in`clang-format`) and `cpplint` on this which is why I\u0027ve added spaces here. It was written with no spaces.\n\nThe problem is that `cpplint` in our repohook prefers non-empty initializers to have a space between the type and the braces:\n\nstd::string {\"foo\"} rather than std::string{\"foo\"}\n[ libartbase/base/file_utils_test.cc:203:  Missing space before {  [whitespace/braces] [5] ]\n\nHence, I\u0027d gone all in on one style, but for the empty initializer list that is highlighted by your comment, cpplint is okay with no space. My clang-format isn\u0027t able to exactly repro ART C++ style, but is only a small delta from the Google C++ config there.\n\nSo now the empty brace initializers have no space, the non-empty ones have a space for cpplint.\n\n---\n\nOur CPPLINT.cfg should probably be revisited to be \u003e\u003d C++11 friendly since this is really a question of C++11 style. We could also enable long-line checking which would save RTTs in reviews too.\n\nOr we could even adopt clang-format and just use the standard Google formatting it provides (or something that can be expressed in config, unfortunately that\u0027s not ART style AFAICT). Wait, is that a rumbling convoy of paint trucks heading towards the ART bikeshed? It\u0027s not going to be pretty :-)",
      "parentUuid": "51ac72b0_bf5f9958",
      "range": {
        "startLine": 206,
        "startChar": 23,
        "endLine": 206,
        "endChar": 24
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52fd645a_3c25db84",
        "filename": "libartbase/base/file_utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-16T08:47:54Z",
      "side": 1,
      "message": "\u003e Yes, there\u0027s a bit of friction between Google C++ style (and it\u0027s implementation in`clang-format`) and `cpplint` on this which is why I\u0027ve added spaces here. It was written with no spaces.\n\u003e \n\u003e The problem is that `cpplint` in our repohook prefers non-empty initializers to have a space between the type and the braces:\n\u003e \n\u003e std::string {\"foo\"} rather than std::string{\"foo\"}\n\u003e [ libartbase/base/file_utils_test.cc:203:  Missing space before {  [whitespace/braces] [5] ]\n\u003e \n\u003e Hence, I\u0027d gone all in on one style, but for the empty initializer list that is highlighted by your comment, cpplint is okay with no space. My clang-format isn\u0027t able to exactly repro ART C++ style, but is only a small delta from the Google C++ config there.\n\u003e \n\u003e So now the empty brace initializers have no space, the non-empty ones have a space for cpplint.\n\nI did not know about that; thanks for educating me. :-)\n\n\u003e Our CPPLINT.cfg should probably be revisited to be \u003e\u003d C++11 friendly since this is really a question of C++11 style. We could also enable long-line checking which would save RTTs in reviews too.\n\u003e \n\u003e Or we could even adopt clang-format and just use the standard Google formatting it provides (or something that can be expressed in config, unfortunately that\u0027s not ART style AFAICT).\n\nAgreed! We should check what other Android projects do too.\n\n\u003e Wait, is that a rumbling convoy of paint trucks heading towards the ART bikeshed? It\u0027s not going to be pretty :-)\n\nðŸ˜‚",
      "parentUuid": "4fb3af6c_36cbfd07",
      "range": {
        "startLine": 206,
        "startChar": 23,
        "endLine": 206,
        "endChar": 24
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aabda536_897ae5f6",
        "filename": "libartbase/base/file_utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-02-15T16:07:50Z",
      "side": 1,
      "message": "Nit: Long line.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 101
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f258c86_ff2d6dd6",
        "filename": "libartbase/base/file_utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 227,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-02-15T19:48:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aabda536_897ae5f6",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 101
      },
      "revId": "92aab02b3b7b9483a3f5288ea42fbb4110b985a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}