{
  "comments": [
    {
      "key": {
        "uuid": "fc9de51c_f96b6c8a",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-03T21:50:07Z",
      "side": 1,
      "message": "ctx.Arch().ArchType !\u003d android.Mips \u0026\u0026 ctx.Arch().ArchType !\u003d android.Mips64",
      "revId": "9bedd416a2e300a5eef23dced9780704aa35ddd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a24a552_d9a5934c",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1067943
      },
      "writtenOn": "2017-02-06T12:41:33Z",
      "side": 1,
      "message": "ctx.Arch().ArchType returns nothing. I suppose that it is not defined in the android.BaseContext, but I don\u0027t know, I\u0027m not familiar with Go.",
      "parentUuid": "fc9de51c_f96b6c8a",
      "revId": "9bedd416a2e300a5eef23dced9780704aa35ddd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b7a1a96_2b9038cb",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-06T21:27:01Z",
      "side": 1,
      "message": "Ah, this is running before the module is split for multiple architectures. This would need to move these cflags to arch.arm.cflags, arch.arm64.cflags, etc. to exclude mips.  Alternatively, you could modify the art source to ignore ART_USE_READ_BARRIER when it is not supported?",
      "parentUuid": "9a24a552_d9a5934c",
      "revId": "9bedd416a2e300a5eef23dced9780704aa35ddd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89f233c9_cb403d6f",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1067943
      },
      "writtenOn": "2017-02-22T12:47:02Z",
      "side": 1,
      "message": "I think that there is no easy way to do this in a nice way. The thing is that USE_READ_BARRIER should be false on MIPS targets, but also on the host when doing code generation for MIPS. I\u0027ve tried to modify ART source, but without success.",
      "parentUuid": "0b7a1a96_2b9038cb",
      "revId": "9bedd416a2e300a5eef23dced9780704aa35ddd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1ffe23c_e05e77df",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-03-13T19:38:19Z",
      "side": 1,
      "message": "Doesn\u0027t that mean it has to be done in the ART source?  We enable mips codegen on all of our builds on the host, and we can\u0027t globally disable ART_USE_READ_BARRIER for host.",
      "parentUuid": "89f233c9_cb403d6f",
      "revId": "9bedd416a2e300a5eef23dced9780704aa35ddd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}