{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7d2a7f85_d1cbd9df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-24T09:33:12Z",
      "side": 1,
      "message": "Vladimir, David, TH ping.",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9148f97a_c511a6bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-03-07T16:21:58Z",
      "side": 1,
      "message": "Thanks! lgtm from my side.",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c7ff54b_64a82b51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-07T16:49:53Z",
      "side": 1,
      "message": "Thanks Mythri.",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dbe6280_69330496",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 3301,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-09T16:56:03Z",
      "side": 1,
      "message": "I guess there is no harm in setting this for abstract methods even if it\u0027s useless, right?",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86c2bb4_81a6e9b1",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 3301,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-14T08:32:26Z",
      "side": 1,
      "message": "That\u0027s right.",
      "parentUuid": "8dbe6280_69330496",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f16ec36_d56796c4",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-09T16:56:03Z",
      "side": 1,
      "message": "What about intrinsics? Should we return `true` for them?",
      "range": {
        "startLine": 254,
        "startChar": 31,
        "endLine": 254,
        "endChar": 53
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77adaa98_3d6b2be5",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-14T08:32:26Z",
      "side": 1,
      "message": "We could, but that won\u0027t prevent them from being dirty if they run with nterp: nterp will only check the bit.",
      "parentUuid": "6f16ec36_d56796c4",
      "range": {
        "startLine": 254,
        "startChar": 31,
        "endLine": 254,
        "endChar": 53
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d418a12a_a9903fbe",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-16T15:53:38Z",
      "side": 1,
      "message": "And I assume you don\u0027t want to slow down arm64? (We can check flags 0xc0000000 with the same number of instructions as 0x40000000 on all other platforms.)",
      "parentUuid": "77adaa98_3d6b2be5",
      "range": {
        "startLine": 254,
        "startChar": 31,
        "endLine": 254,
        "endChar": 53
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c95d86c3_185a5e19",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-17T09:22:25Z",
      "side": 1,
      "message": "Indeed :)",
      "parentUuid": "d418a12a_a9903fbe",
      "range": {
        "startLine": 254,
        "startChar": 31,
        "endLine": 254,
        "endChar": 53
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf909619_6b899b3d",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-17T10:05:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c95d86c3_185a5e19",
      "range": {
        "startLine": 254,
        "startChar": 31,
        "endLine": 254,
        "endChar": 53
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c11e75e_6bf95d8f",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-03-07T16:21:58Z",
      "side": 1,
      "message": "minor nit: Not from this CL but maybe we can rename SetHotCounter to ClearHotCounter? Also maybe rename ResetHotCounter to InitializeHotCounter because I think that sets the initial threshold if having both ClearHotCounter and ResetHotCounter are confusing.",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38aed665_6b6f238b",
        "filename": "runtime/art_method.h",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-07T16:49:53Z",
      "side": 1,
      "message": "SetHotCounter is to abstract away what \"hot\" means. Yes, the implementation is \"set it to zero\", which means we could rename it to ClearHotCounter, but before it used to be some non-zero value. With a non-zero value, calling it ClearHotCounter would be confusing.",
      "parentUuid": "7c11e75e_6bf95d8f",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5a7a675_26f333f2",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1569,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "Do we want to use ldr/str because the field is 32-bit? Or do we want to use ldrh/strh as we do for hotness in `ArtMethod`?",
      "range": {
        "startLine": 1569,
        "startChar": 4,
        "endLine": 1569,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9818ed5e_f2aa05b1",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1569,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "No preference here, what do you prefer? I take it there shouldn\u0027t be any performance differences? Maybe ldrh better shows the intent and is preferable?",
      "parentUuid": "d5a7a675_26f333f2",
      "range": {
        "startLine": 1569,
        "startChar": 4,
        "endLine": 1569,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a07f8a51_82fbd52a",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1569,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-16T15:53:38Z",
      "side": 1,
      "message": "Let\u0027s keep ldr/str as that\u0027s the actual size of the field.",
      "parentUuid": "9818ed5e_f2aa05b1",
      "range": {
        "startLine": 1569,
        "startChar": 4,
        "endLine": 1569,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7d78dd0_0216b541",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1577,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "Change to `wip`?",
      "range": {
        "startLine": 1577,
        "startChar": 8,
        "endLine": 1577,
        "endChar": 10
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f0cb692_a362b273",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1577,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7d78dd0_0216b541",
      "range": {
        "startLine": 1577,
        "startChar": 8,
        "endLine": 1577,
        "endChar": 10
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaefc3fa_4b1acf19",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1581,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "Change to `ip`?",
      "range": {
        "startLine": 1581,
        "startChar": 8,
        "endLine": 1581,
        "endChar": 10
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cca5204_ea9da6c9",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1581,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaefc3fa_4b1acf19",
      "range": {
        "startLine": 1581,
        "startChar": 8,
        "endLine": 1581,
        "endChar": 10
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8bc476_f9376c13",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1592,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "ldr/str or ldrh/strh?",
      "range": {
        "startLine": 1592,
        "startChar": 4,
        "endLine": 1592,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd64e8b6_250cc15f",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1592,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Same, no preference on my side.",
      "parentUuid": "ad8bc476_f9376c13",
      "range": {
        "startLine": 1592,
        "startChar": 4,
        "endLine": 1592,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d58cfa2e_5511f79a",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1592,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-16T15:53:38Z",
      "side": 1,
      "message": "Let\u0027s keep using the size of the field then.",
      "parentUuid": "bd64e8b6_250cc15f",
      "range": {
        "startLine": 1592,
        "startChar": 4,
        "endLine": 1592,
        "endChar": 7
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21179a9e_5cb600d5",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 841,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "arm/arm64go/x86 go to the suspend check.",
      "range": {
        "startLine": 841,
        "startChar": 63,
        "endLine": 841,
        "endChar": 65
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aea1151_311cbc8d",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 841,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-17T09:22:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21179a9e_5cb600d5",
      "range": {
        "startLine": 841,
        "startChar": 63,
        "endLine": 841,
        "endChar": 65
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b438e3_8d26c0fe",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1672,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "I prefer `jz` for flag check.",
      "range": {
        "startLine": 1672,
        "startChar": 4,
        "endLine": 1672,
        "endChar": 6
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b09d976f_5955b774",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1672,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9b438e3_8d26c0fe",
      "range": {
        "startLine": 1672,
        "startChar": 4,
        "endLine": 1672,
        "endChar": 6
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d50d05_9a7eeaf8",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1676,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "We can do everything in `si`, or do everything but the store in `esi`. The weird mix of both here is odd. (The same is present in the old code.)",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70ab9cf0_de6af746",
        "filename": "runtime/interpreter/mterp/x86_64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1676,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53d50d05_9a7eeaf8",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ab3ca32_82d8446f",
        "filename": "runtime/interpreter/mterp/x86ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1742,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "jz?",
      "range": {
        "startLine": 1742,
        "startChar": 4,
        "endLine": 1742,
        "endChar": 6
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3abf79c_ad61b627",
        "filename": "runtime/interpreter/mterp/x86ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1742,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ab3ca32_82d8446f",
      "range": {
        "startLine": 1742,
        "startChar": 4,
        "endLine": 1742,
        "endChar": 6
      },
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06376649_7a78a909",
        "filename": "runtime/interpreter/mterp/x86ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1746,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-15T10:47:48Z",
      "side": 1,
      "message": "Use `cx` or `ecx` consistently.",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44393615_44709de3",
        "filename": "runtime/interpreter/mterp/x86ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 1746,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-15T14:14:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06376649_7a78a909",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e393dc_0baeaaf3",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1778,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-09T16:56:03Z",
      "side": 1,
      "message": "This looks misplaced here in `Jit::EnqueueCompilation()`. Shouldn\u0027t we do this check somewhere in the caller?",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b035acf6_c8f72e51",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1778,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-14T08:32:26Z",
      "side": 1,
      "message": "This is to access shared_method_counters_ which is in the JIT class. If I rename the method to MaybeEnqueueCompilation, would that work better?",
      "parentUuid": "b8e393dc_0baeaaf3",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f0a2137_0449ff71",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1778,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-16T15:53:38Z",
      "side": 1,
      "message": "Looking at `Jit::AddSamples()` I see that we check `IgnoreSamplesForMethod()` there and then again here. But nterp calls `EnqueueCompilation()` directly. It\u0027s a bit confusing.",
      "parentUuid": "b035acf6_c8f72e51",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db3003f9_cabb50d5",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1778,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-17T09:22:25Z",
      "side": 1,
      "message": "Good point, cleaning this up by moving IgnoreSamplesForMethod and renaming to MaybeEnqueueCompilation.",
      "parentUuid": "6f0a2137_0449ff71",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45421536_9faecd90",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1778,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-17T10:05:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "db3003f9_cabb50d5",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0df44a4_932d919f",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 3
      },
      "lineNbr": 505,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-08T13:53:23Z",
      "side": 1,
      "message": "This could be a lot of memory. Did you measure the impact?",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "945f8134_c24820ec",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 3
      },
      "lineNbr": 505,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-08T16:01:36Z",
      "side": 1,
      "message": "I\u0027m getting between 50 to a 100 entries per process (likely around 50 come from zygote) on my test device. So we\u0027re looking at 500bytes to 1KB per process (compared to multiple 4KB when the counter was on the ArtMethod).",
      "parentUuid": "e0df44a4_932d919f",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ddd7c34_b6cd9215",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 3
      },
      "lineNbr": 505,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-09T16:56:03Z",
      "side": 1,
      "message": "That sounds OK until you consider that scudo could scatter those allocations in different pages anyway.",
      "parentUuid": "945f8134_c24820ec",
      "revId": "2e5b18b6d3683915b4c246b5127bcd4daf77da82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}