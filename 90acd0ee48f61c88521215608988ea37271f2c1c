{
  "comments": [
    {
      "key": {
        "uuid": "11f8bcd1_23016a4f",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-02-05T10:57:10Z",
      "side": 1,
      "message": "Nit: I think the style we use for long `?:` statements is this one:\n\n  HInstruction* src_left \u003d boolean_not ?\n      left-\u003eAsBooleanNot()-\u003eGetInput() :\n      left-\u003eAsNot()-\u003eGetInput();\n\nOr this one, if you prefer it:\n\n  HInstruction* src_left \u003d boolean_not\n      ? left-\u003eAsBooleanNot()-\u003eGetInput()\n      : left-\u003eAsNot()-\u003eGetInput();",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 192,
        "endChar": 69
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7176584c_2e304723",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-02-05T11:01:28Z",
      "side": 1,
      "message": "No need to branch. They\u0027re both single-input instructions.\n\n  src_left \u003d left-\u003eInputAt(0);\n\nYou can DCHECK that it matches the GetInput if you want.",
      "range": {
        "startLine": 191,
        "startChar": 29,
        "endLine": 192,
        "endChar": 68
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b109b0b1_a8977b2c",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-02-05T11:38:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7176584c_2e304723",
      "range": {
        "startLine": 191,
        "startChar": 29,
        "endLine": 192,
        "endChar": 68
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d185445a_11e80ccd",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-02-05T10:57:10Z",
      "side": 1,
      "message": "Maybe add `before` checks as well (here and below)?",
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7103b891_e676bede",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-02-05T11:38:54Z",
      "side": 1,
      "message": "I had not put them thinking it would be confusing because it involves `HSelect` and constants rather than `HBooleanNot`.\nI\u0027ll add it along with a comment.",
      "parentUuid": "d185445a_11e80ccd",
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "918f4c7c_aff8b99f",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-02-05T11:01:28Z",
      "side": 1,
      "message": "Just out of curiosity... You\u0027re using \u0026 instead of \u0026\u0026 to avoid short-circuiting?",
      "range": {
        "startLine": 84,
        "startChar": 14,
        "endLine": 84,
        "endChar": 15
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31e4e025_8cb047b1",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-02-05T11:38:54Z",
      "side": 1,
      "message": "To be honest I did not pay attention to this. But there is an issue with using `\u0026\u0026` and `||`. Somehow the `HSelect` optimization doesn\u0027t kick in and we end up with a series of `HIf` and constants. I haven\u0027t looked further. Maybe because there is no `HCondition` input to the `Hif` (they take directly a boolean value)?\n\nBut I *am* using `boolean` inputs instead of synthesizing conditions to avoid being short-circuited by `HSelect` and `HBooleanNot` optimizations.",
      "parentUuid": "918f4c7c_aff8b99f",
      "range": {
        "startLine": 84,
        "startChar": 14,
        "endLine": 84,
        "endChar": 15
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7176584c_0e330b33",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-02-05T10:57:10Z",
      "side": 1,
      "message": "And",
      "range": {
        "startLine": 126,
        "startChar": 21,
        "endLine": 126,
        "endChar": 23
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31e4e025_6c963b11",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-02-05T11:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7176584c_0e330b33",
      "range": {
        "startLine": 126,
        "startChar": 21,
        "endLine": 126,
        "endChar": 23
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1340868_022aeabb",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-02-05T10:57:10Z",
      "side": 1,
      "message": "And",
      "range": {
        "startLine": 127,
        "startChar": 54,
        "endLine": 127,
        "endChar": 56
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51715452_8d45c1a0",
        "filename": "test/565-checker-doublenegbitwise/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-02-05T11:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1340868_022aeabb",
      "range": {
        "startLine": 127,
        "startChar": 54,
        "endLine": 127,
        "endChar": 56
      },
      "revId": "90acd0ee48f61c88521215608988ea37271f2c1c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}