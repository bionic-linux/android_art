{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19f6ed2d_9e154c21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-02-21T19:26:17Z",
      "side": 1,
      "message": "Many tests failed. However, they both show up as \"non-blocking warning\" and \"presubmit-verified -1\" in our system. So, it\u0027s unclear to me if they\u0027re caused by this. b/326264601 for discrepency in presubmit results. Will re-run since commit message says all art tests ran, but you may want to check these locally as well:\n\n```\nart-run-test-482-checker-loop-back-edge-use(module-abi\u003dx86_64) \nart-run-test-580-checker-string-fact-intrinsics(module-abi\u003dx86_64) \nart-run-test-640-checker-integer-valueof(module-abi\u003dx86_64) \nart_standalone_compiler_tests(module-abi\u003dx86_64) \nart_standalone_dex2oat_tests(module-abi\u003dx86_64) \nart_standalone_dexdump_tests(module-abi\u003dx86_64) \nart_standalone_dexlist_tests(module-abi\u003dx86_64) \nart_standalone_dexoptanalyzer_tests(module-abi\u003dx86_64) \nart_standalone_libartbase_tests(module-abi\u003dx86_64) \nart_standalone_libartpalette_tests(module-abi\u003dx86_64) \nart_standalone_libartservice_tests(module-abi\u003dx86_64) \nart_standalone_oatdump_tests(module-abi\u003dx86_64) \nart_standalone_profman_tests(module-abi\u003dx86_64) \nart_standalone_runtime_tests(module-abi\u003dx86_64) \n```",
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc400c8e_607acd76",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-02-23T01:47:41Z",
      "side": 1,
      "message": "nit: should we DCHECK_GT this after the first iteration?",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 40
      },
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ece2781_6a838692",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 1975620
      },
      "writtenOn": "2024-03-25T16:36:14Z",
      "side": 1,
      "message": "Comment no longer applies with the updated patchset.",
      "parentUuid": "fc400c8e_607acd76",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 40
      },
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea144220_bd14fbff",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2024-02-23T18:51:23Z",
      "side": 1,
      "message": "this makes an assumption that copying starts that offset 0 for output FD. But original code doesn\u0027t seem to have such assumption. Are we sure this assumption is OK?",
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9635cd72_79172f4a",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 1975620
      },
      "writtenOn": "2024-03-25T16:36:14Z",
      "side": 1,
      "message": "Thanks Kelvin, this has been incorporated into the latest version, along with a test.",
      "parentUuid": "ea144220_bd14fbff",
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57441733_bbe64908",
        "filename": "libartbase/base/unix_file/fd_file_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-02-23T01:41:06Z",
      "side": 1,
      "message": "nit: if any of these cases fail, it will cause the test to fail. You might want to move \u0027verify\u0027 into a separate function, and then call these from different TEST_F entires. That may help if there are failures which only break certain parts of these.",
      "range": {
        "startLine": 338,
        "startChar": 2,
        "endLine": 367,
        "endChar": 35
      },
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b12a096_61955817",
        "filename": "libartbase/base/unix_file/fd_file_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1975620
      },
      "writtenOn": "2024-03-25T16:36:14Z",
      "side": 1,
      "message": "I\u0027ve aimed to address this by modularising the tests to be more specific about what is being tested, and using SCOPED_TRACE within calls of a lambda function to identify which instance encountered a failure, which makes debugging much easier.",
      "parentUuid": "57441733_bbe64908",
      "range": {
        "startLine": 338,
        "startChar": 2,
        "endLine": 367,
        "endChar": 35
      },
      "revId": "8e2b34e54af5a079a3cb9035a56e442eb1ee2b94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}