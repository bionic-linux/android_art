{
  "comments": [
    {
      "key": {
        "uuid": "48212645_b7543cb2",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-11-10T21:56:13Z",
      "side": 1,
      "message": "Can you move this functionality somewhere else? I think there is a goal to not have dex file depend on ART specific functionality.",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd8958c_cf3e0f24",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-11-10T22:06:32Z",
      "side": 1,
      "message": "Yes, please don\u0027t call OatFile, vdex, etc., methods from dex_file...",
      "parentUuid": "48212645_b7543cb2",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8f401f_fc8c3e1f",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-13T13:17:52Z",
      "side": 1,
      "message": "Any suggestion on where you would like to move this out?\n\nI see some methods have been templatized in dex_file-inl.h file to apparently accomodate this requirement?\n\nIs that the preferred way? Or a \"reader\" abstraction, or just passing a lambda? Note that will add another abstraction on top of DexFile::DecodeDebugLocalInfo.",
      "parentUuid": "8cd8958c_cf3e0f24",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c587a2a0_448e572a",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-14T14:21:47Z",
      "side": 1,
      "message": "Mathieu, David, can you let me know?",
      "parentUuid": "4a8f401f_fc8c3e1f",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b65544_8e310a35",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-11-14T23:40:41Z",
      "side": 1,
      "message": "I would suggest that we want to make it a static method of runtime/oat_file.h.  Otherwise mostly the same.\n\nThe issue is that including oat/vdex files causes us to have to slurp in Runtime, which will be extremely difficult to make work on Windows.",
      "parentUuid": "c587a2a0_448e572a",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc9723ad_2535fd37",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 901,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-15T11:16:15Z",
      "side": 1,
      "message": "Making it a static on OatFile works for me, but the real issue is how do you want to deal with users of GetDebugInfoStream and GetDebugLocalInfo?\n\nWe now have two \"kinds\" of users: the tools (dexdump) and the runtime (art). The former wants to use those methods on a raw dex file, and the latter should *never* use those methods directly.",
      "parentUuid": "c2b65544_8e310a35",
      "range": {
        "startLine": 887,
        "startChar": 0,
        "endLine": 901,
        "endChar": 0
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c963cd0b_494dccdf",
        "filename": "runtime/dex_file.h",
        "patchSetId": 6
      },
      "lineNbr": 323,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-11-10T21:56:13Z",
      "side": 1,
      "message": "Make this private if it\u0027s not supposed to be accessed, and make DexFile a friend class?",
      "range": {
        "startLine": 323,
        "startChar": 13,
        "endLine": 323,
        "endChar": 28
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34ee73f8_87b765d8",
        "filename": "runtime/dex_file.h",
        "patchSetId": 6
      },
      "lineNbr": 323,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-13T13:17:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c963cd0b_494dccdf",
      "range": {
        "startLine": 323,
        "startChar": 13,
        "endLine": 323,
        "endChar": 28
      },
      "revId": "f98d28c4f6eeb884de69f34c4a053d7cbe01cf2e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}