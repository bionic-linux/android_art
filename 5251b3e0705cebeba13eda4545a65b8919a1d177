{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "45ac6eb7_363480aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-01-31T18:20:22Z",
      "side": 1,
      "message": "This CL changed quite a bit after the fixes. Please take another look ðŸ˜Š\n\nThanks!",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f95e9420_e03c91b9",
        "filename": "runtime/debugger.h",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-01-31T18:20:22Z",
      "side": 1,
      "message": "IsDeoptimizedMethodsEmpty requires a shared lock on deoptimized_methods_lock_. I think that\u0027s not an issue since this is only on exceptions. If that is an issue we can also check for have_dex_pc_listeners_. That works since with the current implementation we only perform limited deoptimization (i.e. update deoptimized_methods_) for break points which also installs dex_pc_listeners. Though I felt that\u0027s a bit brittle.",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af12e7a8_f60b5816",
        "filename": "runtime/debugger.h",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-01T12:50:46Z",
      "side": 1,
      "message": "Why do we need to add this check as part of this CL?",
      "parentUuid": "f95e9420_e03c91b9",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e43911de_744779c8",
        "filename": "runtime/debugger.h",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-01T15:28:47Z",
      "side": 1,
      "message": "Without this CL when we have any exception_throw_listeners (or any kind of listeners actually) we mostly run in interpreter code since we disable nterp and so it was working even without having to check if we need a deoptimization here. \n\nWhen there are exception_throw_listeners the debugger can set breakpoints or enable single stepping in the throw listener. For it to work as expected we need to check if we need to deoptimize the stack if the break point was set on any of the methods on the stack. I believe we always needed this check but it didn\u0027t impact it much since we force interpreter when any of these listeners were present.\n\nThere was a Debugger::IsActive check here but we removed it sometime back here: https://android-review.googlesource.com/c/platform/art/+/1216803/18/runtime/debugger.h#52\nI didn\u0027t dig deeper on what Debugger::IsActive actually meant.",
      "parentUuid": "af12e7a8_f60b5816",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "526b11d3_2815cec6",
        "filename": "runtime/debugger.h",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:16:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e43911de_744779c8",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "835d791d_60b39783",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 8
      },
      "lineNbr": 486,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-01-31T18:20:22Z",
      "side": 1,
      "message": "I am not very happy having skip_throw_listeners but couldn\u0027t find a better way. We cannot check if we need a deopt prior to calling throw listeners so we might deopt after calling throw listener but before calling other listeners.\n\nOne improvement would be to pass a flag to say whether we want to skip throw listeners when calling EnterInterpreterDeoptimize instead of checking frame_cnt \u003d\u003d 0. We need to record this information when we push a deoptimization context. I can do that if that\u0027s better.",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c48b7e28_ed6cfe69",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 8
      },
      "lineNbr": 486,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-01T12:50:46Z",
      "side": 1,
      "message": "Are you worried about correctness? It seems to me the frame_cnt is ok?",
      "parentUuid": "835d791d_60b39783",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b622fda_5bb6b8b8",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 8
      },
      "lineNbr": 486,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-01T15:28:47Z",
      "side": 1,
      "message": "The expectation here is that we called the exception throw listener before we deoptimize. That is true with the current implementation because we check if there is an exception before checking if we need a deoptimize for other reasons. I was just a bit unsure if we somehow break this expectation in future. If this changes then we might miss a call to the listener. Though, We do have a number of tests that cover this case.",
      "parentUuid": "c48b7e28_ed6cfe69",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "772aeac3_ac54914a",
        "filename": "runtime/interpreter/interpreter.cc",
        "patchSetId": 8
      },
      "lineNbr": 486,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:16:33Z",
      "side": 1,
      "message": "I guess we can leave it as is for now.",
      "parentUuid": "1b622fda_5bb6b8b8",
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "199faa69_a1aebf43",
        "filename": "runtime/interpreter/interpreter_common.cc",
        "patchSetId": 8
      },
      "lineNbr": 161,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-01T12:50:46Z",
      "side": 1,
      "message": "nit: one per line",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 161,
        "endChar": 60
      },
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ce0bb9b_498aaebf",
        "filename": "runtime/interpreter/interpreter_common.cc",
        "patchSetId": 8
      },
      "lineNbr": 161,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:16:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "199faa69_a1aebf43",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 161,
        "endChar": 60
      },
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f53dfdf_39e82a16",
        "filename": "runtime/thread.cc",
        "patchSetId": 8
      },
      "lineNbr": 3677,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-01T12:50:46Z",
      "side": 1,
      "message": "drop",
      "range": {
        "startLine": 3677,
        "startChar": 48,
        "endLine": 3677,
        "endChar": 51
      },
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c3057e6_1ba4247b",
        "filename": "runtime/thread.cc",
        "patchSetId": 8
      },
      "lineNbr": 3677,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:16:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f53dfdf_39e82a16",
      "range": {
        "startLine": 3677,
        "startChar": 48,
        "endLine": 3677,
        "endChar": 51
      },
      "revId": "5251b3e0705cebeba13eda4545a65b8919a1d177",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}