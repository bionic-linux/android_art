{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f3784ca8_65da3bc0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "nit: example",
      "range": {
        "startLine": 9,
        "startChar": 54,
        "endLine": 9,
        "endChar": 61
      },
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1649cb3_40fa6904",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2023-04-24T09:30:03Z",
      "side": 1,
      "message": "The test case is in the libcore/ CL. I will add a few more test cases there.",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66408f3f_2d3f6189",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2023-04-24T12:58:57Z",
      "side": 1,
      "message": "It\u0027s now done.",
      "parentUuid": "a1649cb3_40fa6904",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37223e5f_7e98623f",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 9380,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Better to have these checks in a separate `ValidateRecordAnnotationElements` call.",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993e9761_46fef772",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 9412,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Instead of checking error in all the calls, I\u0027d add `VisitorStatus::kError` and handle this in the dex reader.",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1bd8445_83873635",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 9426,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Would it make sense to reject a class that has double Record annotation?",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4dfda20_1dea1858",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 9441,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Maybe to have a function `RecordElementType ElementNameToType(const char*)` that does this conversion. Also add `RecordElementType::kTypeUnkown \u003d 0xFF` and have a single counts_ array (`counts_[] \u003d {UINT32_MAX, UINT32_MAX, UINT32_MAX, UINT32_MAX, UINT32_MAX};`). Then just have something like:\n\n```\nRecordElementType visiting_type \u003d ElementNameToType(element_name);\nif (visiting_type \u003d\u003d RecordElementType::kTypeUnkown) {\n  return annotations::VisitorStatus::kVisitNext;\n}\nif (counts_[visiting_type] !\u003d UINT32_MAX) {\n  // treat as duplicate\n}\ncounts_[visiting_type] \u003d 0;\nvisiting_type_ \u003d visiting_type;\nreturn annotations::VisitorStatus::kVisitInner;\n```",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "520db642_6c443ecc",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 9481,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Can this check go to the start of the function, or you prefer to check for duplicate first?",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8578c10_959d0f66",
        "filename": "runtime/dex/dex_file_annotations.cc",
        "patchSetId": 2
      },
      "lineNbr": 1913,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Might be good to use a constant here for header size, or have some `AdvancePastAnnotationHeader()` function.",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c92cec20_8fc38632",
        "filename": "runtime/dex/dex_file_annotations.cc",
        "patchSetId": 2
      },
      "lineNbr": 1940,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "Would it be possible that we want to visit the elements of the inner annotation? Or they cannot be annotations?",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a441c657_af1c2c46",
        "filename": "runtime/dex/dex_file_annotations.h",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1863710
      },
      "writtenOn": "2023-04-24T13:11:51Z",
      "side": 1,
      "message": "I like having the visitor class for this!",
      "revId": "2f0b9fa12c76fa15e96dbbd3fada9d85455bc6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}