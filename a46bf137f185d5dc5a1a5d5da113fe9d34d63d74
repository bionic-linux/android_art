{
  "comments": [
    {
      "key": {
        "uuid": "998877dd_36fb14e5",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:47:08Z",
      "side": 1,
      "message": "Not sure what this new stuff is for. You don\u0027t think #ifndef ADD_TEST_EQ error is enough?",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2afae20_f8f7208a",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-09T15:54:58Z",
      "side": 1,
      "message": "Can you explain what you mean?\n\nI was trying to encapsulate the includes and CheckXYZ() generation into asm_support_check (it\u0027s used both here and in runtime.cc). Here\u0027 we want gtest behavior. In runtime.cc, you need CHECK.",
      "parentUuid": "998877dd_36fb14e5",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7c1aa4b_b5a32623",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:57:59Z",
      "side": 1,
      "message": "Isn\u0027t this new code? It doesn\u0027t appear to be moved from the base from some other file into here.\n\nI am talking about the \"size_t count, count++ ,EXPECT_GT(count, 0u)\" in particular",
      "parentUuid": "f2afae20_f8f7208a",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98693616_55a9a9a7",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-09T16:05:22Z",
      "side": 1,
      "message": "What I added was HEADER and FOOTER. I wanted to make sure it\u0027s actually doing something, so I\u0027m trying to see whether the test count is \u003e 0.\n\nNow that is still not guaranteeing anything, because all of it is generated into the CheckXYZ thingy, and so that itself could be empty. To really be sure, I\u0027d have to generate the sequence of checks directly into the test code, and have the count be defined there, instead of the FOOTER. But I think it\u0027s better than nothing.\n\nOtherwise, this is all old code: overwrite the default ADD_TEST_EQ \u003d\u003d CHECK_EQ with EXPECT_EQ to get nice printout of all mismatches by gtest.",
      "parentUuid": "e7c1aa4b_b5a32623",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5749099_40fbf823",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-09T16:06:19Z",
      "side": 1,
      "message": "(I could make the return of CheckXYZ variable, then I could return count here...)",
      "parentUuid": "98693616_55a9a9a7",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba62b4c0_1426ecb1",
        "filename": "runtime/asm_support_check.h",
        "patchSetId": 5
      },
      "lineNbr": 2,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:47:08Z",
      "side": 1,
      "message": "2017",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97fbe42c_8e2535ee",
        "filename": "runtime/asm_support_check.h",
        "patchSetId": 5
      },
      "lineNbr": 2,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-09T15:54:58Z",
      "side": 1,
      "message": "It\u0027s derived from asm_support.h, so I kept that file\u0027s date.",
      "parentUuid": "ba62b4c0_1426ecb1",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaf23355_68bd6143",
        "filename": "runtime/asm_support_check.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:47:08Z",
      "side": 1,
      "message": "Yes, this seems good. Any issues with the #defines being redefined?",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af643e6a_6428cb6e",
        "filename": "runtime/asm_support_check.h",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-09T15:54:58Z",
      "side": 1,
      "message": "They should all have the same value, so you won\u0027t get a warning.",
      "parentUuid": "aaf23355_68bd6143",
      "revId": "a46bf137f185d5dc5a1a5d5da113fe9d34d63d74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}