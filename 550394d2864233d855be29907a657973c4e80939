{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5898ca9d_b0447bc4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "drop",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 3
      },
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "211f8f0c_f2c19b0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-08-12T12:57:36Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3510ceab_d156701f",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "Why not `TraceProfile` (here and below) ?",
      "range": {
        "startLine": 157,
        "startChar": 12,
        "endLine": 157,
        "endChar": 35
      },
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6943d20b_1dd8a839",
        "filename": "runtime/trace.h",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "`tracing` (for consistency with line 127)",
      "range": {
        "startLine": 133,
        "startChar": 35,
        "endLine": 133,
        "endChar": 40
      },
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c1cc44_40379bab",
        "filename": "runtime/trace_profile.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "To avoid overflow, we ensure ..... free space in the buffer.",
      "range": {
        "startLine": 39,
        "startChar": 15,
        "endLine": 39,
        "endChar": 57
      },
      "fixSuggestions": [
        {
          "fixId": "a83e1b1f_d1965e06",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/trace_profile.cc",
              "range": {
                "startLine": 39,
                "startChar": 0,
                "endLine": 41,
                "endChar": 0
              },
              "replacement": "// each entry. To ensure there is no overflow, we ensure there are at least\n// kMinBufSizeForEncodedData bytes free space in the buffer to avoid overflow.\n"
            }
          ]
        }
      ],
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "642da215_d73ad50d",
        "filename": "runtime/trace_profile.cc",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "Should this be remaned to `SetMethodTraceBufferCurrentEntry` (to be consistent with `GetMethodTraceBuffer`.",
      "range": {
        "startLine": 184,
        "startChar": 12,
        "endLine": 184,
        "endChar": 38
      },
      "fixSuggestions": [
        {
          "fixId": "f58f2b94_7c7e043c",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/trace_profile.cc",
              "range": {
                "startLine": 184,
                "startChar": 0,
                "endLine": 185,
                "endChar": 0
              },
              "replacement": "    thread-\u003eSetMethodTraceBufferCurrentEntry(kAlwaysOnTraceBufSize);\n"
            }
          ]
        }
      ],
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f525795a_684b0f9e",
        "filename": "runtime/trace_profile.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "nit: add a high-level comment.",
      "fixSuggestions": [
        {
          "fixId": "3c1b0b80_f1d0720f",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/trace_profile.h",
              "range": {
                "startLine": 33,
                "startChar": 0,
                "endLine": 33,
                "endChar": 0
              },
              "replacement": "// TODO(mythria): Add a test for this class.\n"
            }
          ]
        }
      ],
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4a3804a_a1ee8348",
        "filename": "runtime/trace_profile.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "Mention in a comment what happens to `methods` and what is the return value.",
      "fixSuggestions": [
        {
          "fixId": "f8249043_406e1b8d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/trace_profile.h",
              "range": {
                "startLine": 41,
                "startChar": 0,
                "endLine": 41,
                "endChar": 0
              },
              "replacement": "  // Dumps the trace buffer for the given thread.\n  // Returns the pointer to the next available location in the buffer.\n  // Adds the methods in the buffer to the set of methods.\n"
            }
          ]
        }
      ],
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bec1991_463e36d8",
        "filename": "runtime/trace_profile.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-08-28T20:39:07Z",
      "side": 1,
      "message": "Add /* out */",
      "range": {
        "startLine": 44,
        "startChar": 29,
        "endLine": 44,
        "endChar": 32
      },
      "fixSuggestions": [
        {
          "fixId": "3677d67e_762248d4",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/trace_profile.h",
              "range": {
                "startLine": 44,
                "startChar": 0,
                "endLine": 45,
                "endChar": 0
              },
              "replacement": "                             std::unordered_set\u003cArtMethod*\u003e\u0026 methods /* out */);\n"
            }
          ]
        }
      ],
      "revId": "550394d2864233d855be29907a657973c4e80939",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}