{
  "comments": [
    {
      "key": {
        "uuid": "ed64af22_4afdd8ec",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 555,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-14T12:15:45Z",
      "side": 1,
      "message": "Why would we need to record at runtime APK splits? Won;t the framework guarantee how they\u0027re loaded?",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 555,
        "endChar": 44
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1574ad3f_5f6ce576",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 555,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-14T21:45:43Z",
      "side": 1,
      "message": "he framework appends new apks to the classpath of the current class loader. The logic in DexPathList is to pass the previous elements in `dex_elements` when loading the new code paths. I rephrased a bit the comment. It\u0027s just another corner case.",
      "parentUuid": "ed64af22_4afdd8ec",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 555,
        "endChar": 44
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f9afd18_86c9859b",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-14T12:15:45Z",
      "side": 1,
      "message": "Maybe a for loop will read better.",
      "range": {
        "startLine": 571,
        "startChar": 0,
        "endLine": 577,
        "endChar": 80
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13698e93_31175c2e",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-14T21:45:43Z",
      "side": 1,
      "message": "I\u0027ll end up duplicating quite a bit of code like the validity check at L535-542 or the addition at L563-568. I could write helpers but not sure how much that would improve things.",
      "parentUuid": "8f9afd18_86c9859b",
      "range": {
        "startLine": 571,
        "startChar": 0,
        "endLine": 577,
        "endChar": 80
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "949a3b45_cf3b1a9d",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-18T14:02:38Z",
      "side": 1,
      "message": "Then please mention this method is recursive, but we don\u0027t expect more than N levels? If we can\u0027t limit the level, it will be safer to do a for loop.",
      "parentUuid": "13698e93_31175c2e",
      "range": {
        "startLine": 571,
        "startChar": 0,
        "endLine": 577,
        "endChar": 80
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dd95f8c_863dd228",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 4
      },
      "lineNbr": 577,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-18T18:45:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "949a3b45_cf3b1a9d",
      "range": {
        "startLine": 571,
        "startChar": 0,
        "endLine": 577,
        "endChar": 80
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a57e814b_504b962a",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-14T12:15:45Z",
      "side": 1,
      "message": "retained",
      "range": {
        "startLine": 105,
        "startChar": 51,
        "endLine": 105,
        "endChar": 58
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1494423_1e4c8684",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-14T21:45:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a57e814b_504b962a",
      "range": {
        "startLine": 105,
        "startChar": 51,
        "endLine": 105,
        "endChar": 58
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c8bf12a_19a1ed05",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-14T12:15:45Z",
      "side": 1,
      "message": "document this?",
      "range": {
        "startLine": 155,
        "startChar": 27,
        "endLine": 155,
        "endChar": 60
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c8ef56_221bdf5f",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-14T21:45:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c8bf12a_19a1ed05",
      "range": {
        "startLine": 155,
        "startChar": 27,
        "endLine": 155,
        "endChar": 60
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d635c00c_cf250be1",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-14T12:15:45Z",
      "side": 1,
      "message": "Maybe have a consistent API and take a Handle here?",
      "range": {
        "startLine": 162,
        "startChar": 39,
        "endLine": 162,
        "endChar": 51
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbe6767f_cd801b16",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-07-14T21:45:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d635c00c_cf250be1",
      "range": {
        "startLine": 162,
        "startChar": 39,
        "endLine": 162,
        "endChar": 51
      },
      "revId": "15fa4d41716c6b6dc037c1b26189cc0f664958fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}