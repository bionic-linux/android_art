{
  "comments": [
    {
      "key": {
        "uuid": "f9b9ccd3_7d307bb0",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T10:46:10Z",
      "side": 1,
      "message": "This name feels very generic; maybe use something more specific like `STATIC_LIBDEXFILE`?",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2a34d7_23684e67",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "It\u0027s set with a -D flag, so its scope is only this file. I see it as a pattern for doing conditionals for static compilation, following this example: http://cs/aosp-master/external/conscrypt/common/src/jni/main/cpp/conscrypt/jniload.cc?l\u003d50",
      "parentUuid": "f9b9ccd3_7d307bb0",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "591ae05e_e29e0884",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T10:46:10Z",
      "side": 1,
      "message": "Could you add an explanation for this?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce4259c_622d3e97",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "Sorry, what with it needs explaining?",
      "parentUuid": "591ae05e_e29e0884",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "347498de_c4bd4557",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-02-13T12:57:33Z",
      "side": 1,
      "message": "\"For fatal initialization failure for when loading methods from SO\"",
      "parentUuid": "3ce4259c_622d3e97",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4db2cae4_287691d8",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T13:55:37Z",
      "side": 1,
      "message": "\u003e \"Sorry, what with it needs explaining?\n\nThis header is conditionally included; I thought it would be useful to add an explanation about why the static case requires it.",
      "parentUuid": "347498de_c4bd4557",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "339db829_0edff97b",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T14:28:07Z",
      "side": 1,
      "message": "It\u0027s actually the other way around, but comment added.",
      "parentUuid": "4db2cae4_287691d8",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d31c6c68_b007c03b",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-02-13T10:03:59Z",
      "side": 1,
      "message": "If the code here used the _LIST pattern, it\u0027d avoid the duplicate pairings that appear here and with the SET_DLFUNC_PTR block below. Up to you.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 42,
        "endChar": 41
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5251a3bb_8b154e3a",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T14:28:07Z",
      "side": 1,
      "message": "[Sorry, missed this comment last round.] You mean a higher-order macro? I considered it, but thought it wasn\u0027t worth the extra complexity in this case.",
      "parentUuid": "d31c6c68_b007c03b",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 42,
        "endChar": 41
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a309af76_7346edfe",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T14:37:23Z",
      "side": 1,
      "message": "Yes, you can have a look at `FOR_EACH_CONCRETE_INSTRUCTION*` macros in art/compiler/optimizing/nodes.h (https://android.googlesource.com/platform/art/+/master/compiler/optimizing/nodes.h) for an example.",
      "parentUuid": "5251a3bb_8b154e3a",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 42,
        "endChar": 41
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2bf3140_6d50c92f",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T10:46:10Z",
      "side": 1,
      "message": "I\u0027d insert a blank line between lines 68 and 69 to improve legibility.",
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "039392fa_bddfaefc",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2bf3140_6d50c92f",
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebee1ca8_ba61074d",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-13T10:46:10Z",
      "side": 1,
      "message": "Ditto between lines 76 and 77.",
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "701c9df5_97a9434e",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebee1ca8_ba61074d",
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c1363c7_dc7e9492",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-02-13T10:03:59Z",
      "side": 1,
      "message": "Please add a comment on whether the consumer needs to use this or it\u0027s internal.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4565724a_2919ca50",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c1363c7_dc7e9492",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30c13295_724af123",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-02-13T09:15:00Z",
      "side": 1,
      "message": "Just make this a static function of the class?",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efcea288_3b82c3b7",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-02-13T10:03:59Z",
      "side": 1,
      "message": "It touches static fields in both DexString and DexFile here.\n\nAs a strawman, it could be refactored with an internal singleton class holding those function pointers and this would remove the need for LoadLibdexfileExternal() and the explicit checks for nullptr in the factory methods for ExtDexFileString and DexFile.\n\nI think the current scheme suffices for the size of the task.",
      "parentUuid": "30c13295_724af123",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76fc0dec_031cc60e",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "I agree with Orion. I also chose this approach because it minimises exposure of internal implementation details, since an anonymous namespace isn\u0027t useful in a header.",
      "parentUuid": "efcea288_3b82c3b7",
      "range": {
        "startLine": 77,
        "startChar": 3,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d07175ff_01c78596",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-02-13T10:03:59Z",
      "side": 1,
      "message": "Please add a comment that instance methods are not invoked before an instance is created.",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "656bff56_3441b14b",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-02-13T12:50:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d07175ff_01c78596",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 90,
        "endChar": 5
      },
      "revId": "c9a56c37e379d15b8d768eb6eb408f7ff75c099e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}