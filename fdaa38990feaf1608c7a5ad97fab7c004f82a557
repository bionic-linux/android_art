{
  "comments": [
    {
      "key": {
        "uuid": "65fcce2b_fe3141c7",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 420,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-12-10T11:27:07Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 420,
        "startChar": 9,
        "endLine": 420,
        "endChar": 13
      },
      "revId": "fdaa38990feaf1608c7a5ad97fab7c004f82a557",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5701ac6_b963bfed",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 954,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-10T15:14:11Z",
      "side": 1,
      "message": "Such a map is already being created in the compiler, why do you need to create it again?",
      "range": {
        "startLine": 954,
        "startChar": 18,
        "endLine": 954,
        "endChar": 28
      },
      "revId": "fdaa38990feaf1608c7a5ad97fab7c004f82a557",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8030d0ce_07601683",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 954,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-12-10T15:40:30Z",
      "side": 1,
      "message": "This CL removes it from the compiler, and delays its creation until this point, removing the need to keep it in memory in the meantime.\n\nIf the quick compiler gets killed or if we do not need to support native debugging there, I can remove the need to materialize the vector in memory altogether.",
      "parentUuid": "c5701ac6_b963bfed",
      "range": {
        "startLine": 954,
        "startChar": 18,
        "endLine": 954,
        "endChar": 28
      },
      "revId": "fdaa38990feaf1608c7a5ad97fab7c004f82a557",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_f307105f",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 954,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-10T15:42:36Z",
      "side": 1,
      "message": "Oh yeah, i\u0027ve done a half way review. Cool :-) Still, it looks like the code in the compiler was doing it for each instruction, whereas now you\u0027re only doing it for stack map entries. Is that intended?",
      "parentUuid": "8030d0ce_07601683",
      "range": {
        "startLine": 954,
        "startChar": 18,
        "endLine": 954,
        "endChar": 28
      },
      "revId": "fdaa38990feaf1608c7a5ad97fab7c004f82a557",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_b301984b",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 954,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-12-10T15:50:52Z",
      "side": 1,
      "message": "Correct.  The next step is to ensure that I have more stack map entries when doing native debugging.  I need native_pc to dex_pc mapping, and location (stack or machine register) of dex registers.  In other words, precisely the content of stackmaps.  So it makes sense to get the data from there rather than adding more debugging side-channels.",
      "parentUuid": "0576b2c5_f307105f",
      "range": {
        "startLine": 954,
        "startChar": 18,
        "endLine": 954,
        "endChar": 28
      },
      "revId": "fdaa38990feaf1608c7a5ad97fab7c004f82a557",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}