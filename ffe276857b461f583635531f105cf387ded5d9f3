{
  "comments": [
    {
      "key": {
        "uuid": "b12b43c2_a9ffbdba",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1098,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "Might be worth documenting what we consider valid here.",
      "range": {
        "startLine": 1098,
        "startChar": 17,
        "endLine": 1098,
        "endChar": 30
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_8c93e7f0",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1098,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "b12b43c2_a9ffbdba",
      "range": {
        "startLine": 1098,
        "startChar": 17,
        "endLine": 1098,
        "endChar": 30
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b12b43c2_29ec6d1c",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1121,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "Nit: Could fit on one line?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_a837bb59",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1121,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b12b43c2_29ec6d1c",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_4e70d3c2",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1124,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "pattern",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_a8217b49",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 1
      },
      "lineNbr": 1124,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f127a1_4e70d3c2",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_ee7edf94",
        "filename": "runtime/jni_internal_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 1379,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "maybe spaces between them?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_c8182f16",
        "filename": "runtime/jni_internal_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 1379,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f127a1_ee7edf94",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_0e4d2b84",
        "filename": "runtime/mirror/object_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "four-byte (or change the others above to be more en-US)",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_28510ba6",
        "filename": "runtime/mirror/object_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f127a1_0e4d2b84",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_a5d87e77",
        "filename": "runtime/mirror/string-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "It\u0027s clear what is \"unchecked\" about this. Maybe it\u0027s obvious to others. Perhaps a comment.",
      "range": {
        "startLine": 36,
        "startChar": 24,
        "endLine": 36,
        "endChar": 39
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_6c84bba6",
        "filename": "runtime/mirror/string-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "We don\u0027t test that index is valid.",
      "parentUuid": "3117538d_a5d87e77",
      "range": {
        "startLine": 36,
        "startChar": 24,
        "endLine": 36,
        "endChar": 39
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1493ba5_dbe653b5",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "why 32?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_ae5b373a",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "these seem big enough to warrant factoring out now. or just have this overload call the other one. that doesn\u0027t cost anything. (the other way round would cost a useless strlen.)",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_45eeeacb",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f127a1_ae5b373a",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_8893d7f0",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:19:44Z",
      "side": 1,
      "message": "Actually, I\u0027ll do this separately. There\u0027s a minor annoyance here : one of them checks for null termination and the other doesn\u0027t.",
      "parentUuid": "3117538d_45eeeacb",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_6ce95bc2",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "I may be odd so feel free to ignore: I always get slightly twitchy when I see a for loop with a counter that can be incremented independently of the main clause. It makes me want to turn it into a while() so the reader has to go hunting for the increments.\n\nHere it would mean changes:\nline 203 to be i++,\nline 209 to be (i \u003d\u003d length)\nline 213 to be i++",
      "range": {
        "startLine": 200,
        "startChar": 34,
        "endLine": 200,
        "endChar": 36
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_084d2784",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "Should this be uint32_t as well, or is there some expense?",
      "range": {
        "startLine": 200,
        "startChar": 7,
        "endLine": 200,
        "endChar": 14
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_68f0231c",
        "filename": "runtime/mirror/string.cc",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "string lengths are (signed) ints in java, so GetLength() Returns int32_t.\n\nI\u0027ve changed this to a while loop as suggested.",
      "parentUuid": "9120ffdf_084d2784",
      "range": {
        "startLine": 200,
        "startChar": 7,
        "endLine": 200,
        "endChar": 14
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_4870bfc2",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "Bug number, or is this for reviewers?",
      "range": {
        "startLine": 87,
        "startChar": 5,
        "endLine": 87,
        "endChar": 9
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a88f5a_e71dfc5e",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_0856c79d",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a88f5a_e71dfc5e",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a88f5a_872a087a",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "(/me sniggers at the thought of this being pronounced like the disease rather than like \"stud\".)",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1493ba5_fbe98f87",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "GetCharArray and pull chars out of that?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_8c1da760",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "Bug number or remove.",
      "range": {
        "startLine": 133,
        "startChar": 5,
        "endLine": 133,
        "endChar": 9
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_08fb6703",
        "filename": "runtime/mirror/string.h",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "follow up change.",
      "parentUuid": "11fb2f87_8c1da760",
      "range": {
        "startLine": 133,
        "startChar": 5,
        "endLine": 133,
        "endChar": 9
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_ce52031b",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "i\u0027m torn. java usually uses high and low rather than leading or trailing, but the latter do seem clearer for streams.\n\ns/pseudo/maybe/?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_0c0c17e7",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "I chose Leading and Trailing because it\u0027s a more intuitive name wrt. to string indices; the leading surrogate always comes \"first\".\n\nre: s/pseduo/maybe - done.",
      "parentUuid": "51f127a1_ce52031b",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_68bdc3e4",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "I would have found docs helpful here.",
      "range": {
        "startLine": 24,
        "startChar": 16,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_458a6afb",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "docs included in the header",
      "parentUuid": "9120ffdf_68bdc3e4",
      "range": {
        "startLine": 24,
        "startChar": 16,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a88f5a_473410da",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "oh, i see. i think we should change the name of this now, especially because of implicit truncation.",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_e541d62a",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "any suggestions ? I toyed around with a few names before i put this up, but they were all generally worse than this.",
      "parentUuid": "11a88f5a_473410da",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_acefc38c",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "This is neat. It\u0027s not the classic way it\u0027s explained in the docs I\u0027ve read, but I did check it and \n\n(x \u003e\u003e 10) + (0xD800 - (0x10000 \u003e\u003e 10))\n\nseems a reasonable way of doing: \n\n((x - 0x10000) \u003e\u003e 10) + 0xD800",
      "range": {
        "startLine": 65,
        "startChar": 42,
        "endLine": 65,
        "endChar": 48
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_8cec8799",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "To do for review?",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_ac7d0305",
        "filename": "runtime/utf-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "i\u0027ll remove this. this wasn\u0027t any slower.",
      "parentUuid": "11fb2f87_8cec8799",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_ac64e388",
        "filename": "runtime/utf.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "So, this is the count in UTF16 code-units, where as previously it was the count in characters / code-points. Might be worth a rename or doc change somewhere.",
      "range": {
        "startLine": 26,
        "startChar": 7,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_2562cea8",
        "filename": "runtime/utf.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "it was always supposed to be the count in UTF-16 code units. i haven\u0027t changed any of the semantics.",
      "parentUuid": "11fb2f87_ac64e388",
      "range": {
        "startLine": 26,
        "startChar": 7,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_08a88726",
        "filename": "runtime/utf.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2015-02-09T17:22:42Z",
      "side": 1,
      "message": "I suppose it doesn\u0027t matter too much what the return value is given it is supposed to be used with the methods below. \n\nHowever, I wasn\u0027t sure that \"UTF character\" was a correct phrase here. Perhaps \"UTF16 code unit\"?",
      "range": {
        "startLine": 89,
        "startChar": 3,
        "endLine": 89,
        "endChar": 12
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_c575ba60",
        "filename": "runtime/utf.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:43:11Z",
      "side": 1,
      "message": "the rest of the code seems to use  \"UTF-16 character\" (perhaps derived from jchar) so i\u0027ll use that.",
      "parentUuid": "9120ffdf_08a88726",
      "range": {
        "startLine": 89,
        "startChar": 3,
        "endLine": 89,
        "endChar": 12
      },
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1493ba5_5b16c3f4",
        "filename": "runtime/utf.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "!\n\nthey\u0027re assuming there\u0027s no such thing as a deliberately-crafted invalid dex file?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9120ffdf_88ec7799",
        "filename": "runtime/utf.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "This is supposed to be handled by the verifier, but i can\u0027t really see that happening anywhere.\n\nI wonder what the difference in performance is if we do validate these values.",
      "parentUuid": "f1493ba5_5b16c3f4",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1493ba5_9bf7ab59",
        "filename": "runtime/utf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "\\n",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_c5277ab0",
        "filename": "runtime/utf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1493ba5_9bf7ab59",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f127a1_4ec2935a",
        "filename": "runtime/utf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "type*",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11fb2f87_2cdc73e6",
        "filename": "runtime/utf_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51f127a1_4ec2935a",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a88f5a_072e188c",
        "filename": "runtime/utils.cc",
        "patchSetId": 1
      },
      "lineNbr": 639,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-02-09T16:38:41Z",
      "side": 1,
      "message": "maybe we should just have one function that breaks ch in two?",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3117538d_053992d1",
        "filename": "runtime/utils.cc",
        "patchSetId": 1
      },
      "lineNbr": 639,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-02-09T17:10:47Z",
      "side": 1,
      "message": "I considered doing that. This reads slightly better in places where we look at leading and trailing at different points in the code. Speaking of which, I can move the call to GetTrailing closer to the point of use.\n\nThere\u0027s no efficiency argument either, since i\u0027ve marked these as always inline. Even if i didn\u0027t, the compiler would inline these because they\u0027re less than a handful of instructions (1 in the best case)",
      "parentUuid": "11a88f5a_072e188c",
      "revId": "ffe276857b461f583635531f105cf387ded5d9f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}