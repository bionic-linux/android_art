{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d01278ad_2e30d43c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-01-30T02:54:05Z",
      "side": 1,
      "message": "Maybe also mention \"Includes the fix for incrementing hotness that got reverted: https://android-review.git.corp.google.com/c/platform/art/+/2906378\"\n\nI was a bit surprised when looking at the diff, I forgot the fix for incrementing hotness landed as a different CL.",
      "range": {
        "startLine": 11,
        "startChar": 19,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "708fa1c3_4ec25815",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-01-30T02:54:05Z",
      "side": 1,
      "message": "Thanks lgtm with a quick question.",
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe03c7e_a105948b",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 1637,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-01-30T09:24:23Z",
      "side": 1,
      "message": "nit: Add parenthesis surrounding this code. The `\u0026\u0026` operator should happen before the ternary operator but it should be easier to see the operator precedence if we had `()`",
      "range": {
        "startLine": 1637,
        "startChar": 9,
        "endLine": 1637,
        "endChar": 81
      },
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "591ca01b_6372f1f0",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 2
      },
      "lineNbr": 870,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-01-30T09:24:23Z",
      "side": 1,
      "message": "Since we have `baseline ` this would mean that the current CHECKer tests are not testing for baseline compilations, right? Do we want (maybe as a follow-up?) to add some baseline-specific tests? Or maybe somehow reuse the existing tests to test for baseline too.",
      "range": {
        "startLine": 870,
        "startChar": 59,
        "endLine": 870,
        "endChar": 67
      },
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28601090_b1e7c95f",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-01-30T02:54:05Z",
      "side": 1,
      "message": "Do we compile baseline for AOT? Why do we want to exclude baseline here?",
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12ca67b3_7ef78c21",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1555,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-01-30T09:24:23Z",
      "side": 1,
      "message": "suggestion: Move it next to the other one in compiler options (https://cs.android.com/android/platform/superproject/main/+/main:art/compiler/driver/compiler_options.h;l\u003d68;drc\u003d79807d26ae1df9414a6ece87acf72344f361882d) and add a comment explaning why baseline needs a second one (Maybe something like `Set a lower inlining threshold for baseline to reduce code size and compilation time`)",
      "range": {
        "startLine": 1555,
        "startChar": 0,
        "endLine": 1555,
        "endChar": 52
      },
      "revId": "903e5528acdec9504a46ccff645aa9e24eaa4a0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}