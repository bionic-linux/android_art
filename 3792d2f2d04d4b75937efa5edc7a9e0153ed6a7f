{
  "comments": [
    {
      "key": {
        "uuid": "c61c8421_1685bc08",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-21T14:45:11Z",
      "side": 1,
      "message": "Is this because the HashMap implementation needs it?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 90
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_95f6e45d",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Yeah; that was supposed to be a short alias, but it\u0027s longer than the original typeâ€¦ Removed.",
      "parentUuid": "c61c8421_1685bc08",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 90
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "667af834_2b47d9a8",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "worth mentioning that this hash function does not create collisions",
      "range": {
        "startLine": 43,
        "startChar": 6,
        "endLine": 43,
        "endChar": 31
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_533744ad",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Good point!  Done.",
      "parentUuid": "667af834_2b47d9a8",
      "range": {
        "startLine": 43,
        "startChar": 6,
        "endLine": 43,
        "endChar": 31
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "466b346a_cd3f3d6c",
        "filename": "runtime/check_reference_map_visitor.h",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "This is getting nasty, as more implementation details are exposed to the user. I think we should invest in finding a good/efficient abstraction for this.\n\nI already had this discussion with Nicolas and I think we should resume it..",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_b32fb8ba",
        "filename": "runtime/check_reference_map_visitor.h",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-21T14:45:11Z",
      "side": 1,
      "message": "Yeah, for now I suggest just passing the CodeInfo to a query on the DexRegisterMap.",
      "parentUuid": "466b346a_cd3f3d6c",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_53fd8434",
        "filename": "runtime/check_reference_map_visitor.h",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "66111809_b32fb8ba",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 80,
        "endChar": 70
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "667af834_f1ec60bf",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "length must not be larger than the number of bits which can be fitted in `unsigned`",
      "range": {
        "startLine": 131,
        "startChar": 20,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61c8421_7621901f",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "667af834_f1ec60bf",
      "range": {
        "startLine": 131,
        "startChar": 20,
        "endLine": 131,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "266e407b_2c613b7f",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "use more exact types. i.e. uint32_t",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 10
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_f3393088",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "266e407b_2c613b7f",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 10
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "266e407b_ccbc1f53",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 144,
        "startChar": 39,
        "endLine": 144,
        "endChar": 47
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_d33eb46d",
        "filename": "runtime/memory_region.h",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "266e407b_ccbc1f53",
      "range": {
        "startLine": 144,
        "startChar": 39,
        "endLine": 144,
        "endChar": 47
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "667af834_91e15cc6",
        "filename": "runtime/stack.cc",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "Same comment regarding exposing implementation details.",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 87
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61c8421_76823002",
        "filename": "runtime/stack.cc",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-21T14:45:11Z",
      "side": 1,
      "message": "I agree the dictionary should not be exposed.",
      "parentUuid": "667af834_91e15cc6",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 87
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_b3297809",
        "filename": "runtime/stack.cc",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c61c8421_76823002",
      "range": {
        "startLine": 206,
        "startChar": 1,
        "endLine": 206,
        "endChar": 87
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_b52fa0ba",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-21T14:45:11Z",
      "side": 1,
      "message": "One line?",
      "range": {
        "startLine": 194,
        "startChar": 0,
        "endLine": 195,
        "endChar": 40
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_15e9342a",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Done (and likewise for the other ctor on line 197).",
      "parentUuid": "a61790fa_b52fa0ba",
      "range": {
        "startLine": 194,
        "startChar": 0,
        "endLine": 195,
        "endChar": 40
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "266e407b_8987f963",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "Is there an actual benefit of having this here? I would just use GetValue()/GetKind()",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 225,
        "endChar": 41
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61c8421_791ea390",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "`art::DexRegisterLocationHashFn\u0027 deals with internals of `art::DexRegisterLocation\u0027 and needs access to the actual values of `art::DexRegisterLocation\u0027s attributes.  An accessor could provide a different value (indeed, calling `art::DexRegisterLocation::GetKind()\u0027 is actually different from using `art::DexRegisterLocation::kind_\u0027!), especially if the implementation of `art::DexRegisterLocation\u0027s changes in the future.",
      "parentUuid": "266e407b_8987f963",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 225,
        "endChar": 41
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "466b346a_ca5ba38c",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "How about naming this DexRegistersRepository? Or something more semantically adequate (even if from a data structure perspective this is a map/dictionary).",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 27
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_35bb9027",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "I\u0027m not sure that \"repository\" conveys the idea of uniqueness.  What about `DexRegisterLocationSet\u0027?",
      "parentUuid": "466b346a_ca5ba38c",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 27
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66111809_f6f11e17",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-23T17:10:19Z",
      "side": 1,
      "message": "I think the uniqueness part could be document and does not necessary need to be reflected in the name.\n\nI\u0027m good with DexRegisterLocationSet.",
      "parentUuid": "a61790fa_35bb9027",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 27
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "263640c8_0c2e778b",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-24T17:03:37Z",
      "side": 1,
      "message": "Alright; I renamed DexRegisterDictionary to DexRegisterLocationSet in PS5.",
      "parentUuid": "66111809_f6f11e17",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 27
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "667af834_6e2baf7b",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 428,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "kNoneLocationEntryIndex ?",
      "range": {
        "startLine": 428,
        "startChar": 26,
        "endLine": 428,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61c8421_d96d3701",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 428,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "Renamed to NoLocationEntryIndex.",
      "parentUuid": "667af834_6e2baf7b",
      "range": {
        "startLine": 428,
        "startChar": 26,
        "endLine": 428,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_989299a6",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 428,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-23T17:10:19Z",
      "side": 1,
      "message": "i just realized... why is this a function?",
      "parentUuid": "c61c8421_d96d3701",
      "range": {
        "startLine": 428,
        "startChar": 26,
        "endLine": 428,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c63d64a0_514ad6b2",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 428,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-24T17:03:37Z",
      "side": 1,
      "message": "Because I could not use a static member here initialy, as it would have required a corresponding definition in a `.cc\u0027 file.  This was triggered by an ASSERT_EQ in stack_map_test.cc, requiring this constant to have an address.  Such a file did not exist at that time, and I did not want to create a stack_map.cc file for just one static member definition.  As we now have a stack_map.cc file with other definitions, I have turned this static member function into a static member in PS5.",
      "parentUuid": "a61790fa_989299a6",
      "range": {
        "startLine": 428,
        "startChar": 26,
        "endLine": 428,
        "endChar": 57
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "266e407b_49a261f0",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "i would get rid of this.",
      "range": {
        "startLine": 433,
        "startChar": 23,
        "endLine": 433,
        "endChar": 33
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a61790fa_55c28ca0",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 433,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "We use this idiom throughout this file.  I think it is useful from the consistency perspective, especially since CodeInfo/StackMap/DexRegisterMap form a light, stateless layer on top of MemoryRegion.",
      "parentUuid": "266e407b_49a261f0",
      "range": {
        "startLine": 433,
        "startChar": 23,
        "endLine": 433,
        "endChar": 33
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "266e407b_ec5a43d8",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 908,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-20T18:10:02Z",
      "side": 1,
      "message": "this is a bit hard to read and i think i miss something. Why do you you need to add the offset to the size?",
      "range": {
        "startLine": 908,
        "startChar": 8,
        "endLine": 908,
        "endChar": 44
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61c8421_7954e325",
        "filename": "runtime/stack_map.h",
        "patchSetId": 3
      },
      "lineNbr": 908,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-03-23T15:49:42Z",
      "side": 1,
      "message": "`locations_offset_in_dex_register_map\u0027 is the offset where the actual Dex register mapping data starts within the `art::DexRegisterMap\u0027 object, just after the live bit mask.  I added a comment, renamed this variable as `location_mapping_data_offset_in_dex_register_map\u0027 and renamed `art::DexRegisterMap::GetDexRegisterMapLocationsOffset\u0027 as `art::DexRegisterMap::GetLocationMappingDataOffset\u0027.  I renamed some other variables as well for the sake of uniformity.",
      "parentUuid": "266e407b_ec5a43d8",
      "range": {
        "startLine": 908,
        "startChar": 8,
        "endLine": 908,
        "endChar": 44
      },
      "revId": "3792d2f2d04d4b75937efa5edc7a9e0153ed6a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}