{
  "comments": [
    {
      "key": {
        "uuid": "111ee086_057cc561",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-07-02T07:08:52Z",
      "side": 1,
      "message": "Not really right now - 99% of the lookups are with a pc as that\u0027s what stack walking does. I think you could special case LookupMethodHeader to look at the method entrypoint for a first fast check if you wanted to fix that.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a7324ff_8f3b6203",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-07-02T09:26:29Z",
      "side": 1,
      "message": "Would the implementation of LookupMethodHeader in this CL work?\nThe lookup takes the ArtMethod* as argument so we don\u0027t really need to lookup by pc?",
      "parentUuid": "111ee086_057cc561",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55f220cd_58f90278",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-07-02T10:06:44Z",
      "side": 1,
      "message": "Yes, didn\u0027t noticed you changed it to optimize for this.",
      "parentUuid": "5a7324ff_8f3b6203",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "013f54c4_ac86aeff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-07-02T07:08:52Z",
      "side": 1,
      "message": "I don\u0027t think that will be enough. A method can have multiple compiled version. You won\u0027t know which one to pick.\n\nWhile I agree the saved entry point is super annoying, I think the way forward to remove it is:\n- Change JIT garbage collection logic\n- Change instrumentation to itself keep a record of entrypoints, and don\u0027t rely on the saved entrypoint.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "356467e8_64063ec9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-07-02T09:26:29Z",
      "side": 1,
      "message": "Would it be sufficient to somehow mark the other versions of the method as obsolete in the map?",
      "parentUuid": "013f54c4_ac86aeff",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf67d40a_7dc14a10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-07-02T10:06:44Z",
      "side": 1,
      "message": "Sure, but then you\u0027re adding something on top of the map again, which raises the question about being worth it (moving to multimap already has some memory costs that need to be evaluated). The current (simple) map works for most production cases (assuming we change the GC logic to get rid of the saved entry point hack), and making it less simple questions whether we\u0027ve moving hacks from one place to another.",
      "parentUuid": "356467e8_64063ec9",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48db3b0c_04156c2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-07-02T10:09:51Z",
      "side": 1,
      "message": "Also, I forgot to mention: having the ArtMethod in LookupMethodHeader is thanks to us pushing it at every method entry. We have been discussing about removing the need for that extra push which is most of the time useless. However that would require some heavy refactoring.",
      "parentUuid": "cf67d40a_7dc14a10",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4a4249_b0b6daf8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-07-02T13:06:30Z",
      "side": 1,
      "message": "Point taken.  It might be better to just fix instrumentation, if that is the main user of the saved entry-points.\n\nBut maybe we need to do this CL regardless to enable the memory sharing? (if we want to pre-populate the map and fill in the code addresses later from zygote process, we need the code addresses to be the keys).",
      "parentUuid": "48db3b0c_04156c2a",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "6d9478ab6c0c15abcc7f35ce664dece824270a89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}