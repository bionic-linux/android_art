{
  "comments": [
    {
      "key": {
        "uuid": "90673931_0f86b951",
        "filename": "runtime/art_method.h",
        "patchSetId": 24
      },
      "lineNbr": 140,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "How about IsDefaultMethod() to be clearer as just default could mean something else?",
      "range": {
        "startLine": 140,
        "startChar": 7,
        "endLine": 140,
        "endChar": 16
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03c51f4_936b0c20",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 4867,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "Can this be Handle instead of a MutableHandle?",
      "range": {
        "startLine": 4867,
        "startChar": 4,
        "endLine": 4867,
        "endChar": 17
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0435d80_531d06ab",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 4867,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-10-08T00:05:06Z",
      "side": 1,
      "message": "No. 5021 assigns it.",
      "parentUuid": "d03c51f4_936b0c20",
      "range": {
        "startLine": 4867,
        "startChar": 4,
        "endLine": 4867,
        "endChar": 17
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0435d80_0d251dc1",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 5660,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "In general, an important thing for GC around here is to always copy ArtMethod contents by using CopyFrom() as it contains the right read barriers. I think we do, correct?",
      "range": {
        "startLine": 5660,
        "startChar": 17,
        "endLine": 5660,
        "endChar": 25
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03c51f4_59724372",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 5660,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-08T01:02:17Z",
      "side": 1,
      "message": "Yes, IIRC he only uses CopyFrom to copy the ArtMethod.",
      "parentUuid": "b0435d80_0d251dc1",
      "range": {
        "startLine": 5660,
        "startChar": 17,
        "endLine": 5660,
        "endChar": 25
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30592d74_4f242d83",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 5666,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "out \u003d\u003d new_method, correct? Seems better write this as \"new_method.SetAccessFlags(..)\" here to be clearer?",
      "range": {
        "startLine": 5666,
        "startChar": 6,
        "endLine": 5666,
        "endChar": 9
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5061411e_5c5b4ce0",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 24
      },
      "lineNbr": 5666,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-10-08T00:05:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30592d74_4f242d83",
      "range": {
        "startLine": 5666,
        "startChar": 6,
        "endLine": 5666,
        "endChar": 9
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704d65ae_8bc91986",
        "filename": "runtime/experimental_flags.h",
        "patchSetId": 24
      },
      "lineNbr": 29,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "What happens if/when lambdas and default methods become non-experimental? Do we care to minimize code/flag change when that happens?",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 12
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03c51f4_4e1d5bab",
        "filename": "runtime/experimental_flags.h",
        "patchSetId": 24
      },
      "lineNbr": 29,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "We can always remove this particular value and the call checks for it after we ship the feature.\n\nIt\u0027s preferred this way for now since it\u0027s only on in a few test cases, since turning on by default on causes a regression in compiler performance (quick has to scan all the opcodes to bail out when it sees lambdas).",
      "parentUuid": "704d65ae_8bc91986",
      "range": {
        "startLine": 29,
        "startChar": 4,
        "endLine": 29,
        "endChar": 12
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704d65ae_0b222971",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 24
      },
      "lineNbr": 234,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "Is there a more obvious way to assert the lock held? Hiroshi/Mathieu?",
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1001893d_050d0204",
        "filename": "runtime/modifiers.h",
        "patchSetId": 24
      },
      "lineNbr": 52,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "How about kAccDefaultMethod? Default could be confused with the default package-scoped visibility?",
      "range": {
        "startLine": 52,
        "startChar": 26,
        "endLine": 52,
        "endChar": 37
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d00a915c_a90df176",
        "filename": "runtime/modifiers.h",
        "patchSetId": 24
      },
      "lineNbr": 52,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "Shouldn\u0027t we also change the other ones to be consistent then? \n\n   kAccFastNativeMethod\n   kAccMirandaMethod\n\netc\n\n(That being said, I personally didn\u0027t think it was confusing since \u0027default\u0027 wasn\u0027t a keyword previously, but it is now).",
      "parentUuid": "1001893d_050d0204",
      "range": {
        "startLine": 52,
        "startChar": 26,
        "endLine": 52,
        "endChar": 37
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5061411e_68e487c0",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "Alex, can we change this to just one function?\n\n   bool AreExperimentalFlagsEnabled(ExperimentalFlags flags) {\n     return (experimental_flags_ \u0026 flags) !\u003d kNone;\n   }\n\nThis way we won\u0027t need to add or remove the methods later when new elements get added or removed.",
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5061411e_7c4608e6",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-10-08T00:05:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5061411e_68e487c0",
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "504861a0_0a39830d",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 535,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "Make sense to drop \"Experimental\" from the name?",
      "range": {
        "startLine": 535,
        "startChar": 10,
        "endLine": 535,
        "endChar": 22
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "105c2963_cd120929",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 535,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "It has experimental in the name intentionally so that people don\u0027t try to ship out of AOSP with this feature enabled, since it\u0027s incomplete.\n\nIIRC, there\u0027s also giant warnings that get printed when enabling these flags :).",
      "parentUuid": "504861a0_0a39830d",
      "range": {
        "startLine": 535,
        "startChar": 10,
        "endLine": 535,
        "endChar": 22
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704d65ae_6bce4d8d",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 539,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T20:50:54Z",
      "side": 1,
      "message": "Make sense to drop \"Experimental\" from the name?",
      "range": {
        "startLine": 539,
        "startChar": 10,
        "endLine": 539,
        "endChar": 22
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "105c2963_8df9313c",
        "filename": "runtime/runtime.h",
        "patchSetId": 24
      },
      "lineNbr": 539,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-07T21:32:12Z",
      "side": 1,
      "message": "See 535.",
      "parentUuid": "704d65ae_6bce4d8d",
      "range": {
        "startLine": 539,
        "startChar": 10,
        "endLine": 539,
        "endChar": 22
      },
      "revId": "2eaee1290b575347eabb78c076c859ed3816b74c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}