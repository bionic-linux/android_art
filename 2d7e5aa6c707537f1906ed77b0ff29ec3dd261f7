{
  "comments": [
    {
      "key": {
        "uuid": "e8b4d3fd_dcb60d09",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2013-12-16T10:06:34Z",
      "side": 1,
      "message": "const mirror::Class* super ?",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 8
      },
      "revId": "2d7e5aa6c707537f1906ed77b0ff29ec3dd261f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c86c6f4a_d2cb9ae1",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1010108
      },
      "writtenOn": "2013-12-16T18:14:15Z",
      "side": 1,
      "message": "Brian said Ian might have had a reason to leave the const off mirror object pointers. This line is the same as the old code, just moved, so I\u0027ll leave it as is, and make sure Ian is ok with it.",
      "parentUuid": "e8b4d3fd_dcb60d09",
      "revId": "2d7e5aa6c707537f1906ed77b0ff29ec3dd261f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dec497b_27f55eac",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-30T22:33:53Z",
      "side": 1,
      "message": "const is ok on local variables but not for fields. The particular problem is that const for C++ differs from Java, where a pointer may move because of moving GC. If you make fields constant then repeated loads may be cached by C++ and this may mean a stale pointer gets used even if the code attempts to explicitly reload it. Were the code below to have a safe point then we should place the mirror::Class* into a handle (SirtRef).",
      "parentUuid": "c86c6f4a_d2cb9ae1",
      "revId": "2d7e5aa6c707537f1906ed77b0ff29ec3dd261f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}