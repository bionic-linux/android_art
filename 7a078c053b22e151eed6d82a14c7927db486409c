{
  "comments": [
    {
      "key": {
        "uuid": "c8438f32_6b2521d8",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1002185
      },
      "writtenOn": "2013-12-20T15:24:03Z",
      "side": 1,
      "message": "dmb ish?",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8649bc8_b40dc006",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:48:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8438f32_6b2521d8",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8438f32_aee1d744",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1002185
      },
      "writtenOn": "2013-12-20T15:24:03Z",
      "side": 1,
      "message": "dmb ishst?",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8649bc8_d4123421",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:48:30Z",
      "side": 1,
      "message": "Done. Presumably LoadLoad and StoreLoad should also be ish too.\nhttp://g.oswego.edu/dl/jmm/cookbook.html",
      "parentUuid": "c8438f32_aee1d744",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a832dbd0_2d26d99f",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1002185
      },
      "writtenOn": "2013-12-20T15:58:09Z",
      "side": 1,
      "message": "Sorry, Yes. I ought to have been more explicit.",
      "parentUuid": "a8649bc8_d4123421",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8649bc8_54ff0482",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:59:24Z",
      "side": 1,
      "message": "No problem and thanks for the clarification.",
      "parentUuid": "a832dbd0_2d26d99f",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8649bc8_291a39f8",
        "filename": "runtime/atomic_integer.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2013-12-20T02:35:56Z",
      "side": 1,
      "message": "These were lower case to match std::atomic since we are going to do the transition eventually.\nhttp://en.cppreference.com/w/cpp/atomic/atomic",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685e23ff_67a0dcba",
        "filename": "runtime/atomic_integer.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:48:30Z",
      "side": 1,
      "message": "Unfortunately std::atomic lacks an Address method (or operator) which we require for the use of AtomicInteger in the Mutex/Futex code to pass the address of the inner integer to the futex system call. This change normalizes the names to the compiler builtins and the regular coding convention. We\u0027re waiting on stlport enhancements or libc++ for std::atomic and that doesn\u0027t appear to be happening in the short-term.",
      "parentUuid": "a8649bc8_291a39f8",
      "revId": "7a078c053b22e151eed6d82a14c7927db486409c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}