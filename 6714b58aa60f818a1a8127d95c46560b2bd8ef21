{
  "comments": [
    {
      "key": {
        "uuid": "73666a01_6da807d7",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-02T22:55:35Z",
      "side": 1,
      "message": "Who calls this with an obsolete method? Can we fix the caller instead?",
      "range": {
        "startLine": 445,
        "startChar": 32,
        "endLine": 445,
        "endChar": 48
      },
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3b300d6_080d9077",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-02T22:58:28Z",
      "side": 1,
      "message": "The JIT does.\n\nAs we are leaving the obsolete method it gets hot enough that the system can try to compile it.\n\nI could also fix it by just making obsolete methods not compilable but this seems nicer.",
      "parentUuid": "73666a01_6da807d7",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c9d1779_c3a36e5d",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-02T23:01:49Z",
      "side": 1,
      "message": "I would agree with Nicolas here, until we find a case where performance really matters.",
      "parentUuid": "f3b300d6_080d9077",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd59e921_775753a9",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-02T23:09:07Z",
      "side": 1,
      "message": "kk. I\u0027ll replace this with a DCHECK(!method-\u003eIsObsolete()); and make sure that obsolete methods are not compilable.",
      "parentUuid": "1c9d1779_c3a36e5d",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "783ba529_349870c7",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-02T23:11:11Z",
      "side": 1,
      "message": "I think I\u0027d rather not JIT it actually: you know it\u0027s never going to be called again. Maybe you\u0027re stuck in a loop, but do we really want to optimize that case?\n\nNot having obsolete methods \"leak\" too much in the runtime makes things much simpler IMO. Right now, it\u0027s mostly just ArtMethod::GetDexFile() that knows about obsolete right?",
      "parentUuid": "f3b300d6_080d9077",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29ea7af9_cbd05b94",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-02T23:12:00Z",
      "side": 1,
      "message": "(Wrote the message before seeing your comments).\n\nAlex, your suggestion LGTM.",
      "parentUuid": "783ba529_349870c7",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13a99ec9_dcbaded9",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-02T23:14:48Z",
      "side": 1,
      "message": "\u003e I think I\u0027d rather not JIT it actually: you know it\u0027s never going to be called again. Maybe you\u0027re stuck in a loop, but do we really want to optimize that case?\n\u003e \n\u003e Not having obsolete methods \"leak\" too much in the runtime makes things much simpler IMO. Right now, it\u0027s mostly just ArtMethod::GetDexFile() that knows about obsolete right?\n\nCorrect.\n\nDone.",
      "parentUuid": "29ea7af9_cbd05b94",
      "revId": "6714b58aa60f818a1a8127d95c46560b2bd8ef21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}