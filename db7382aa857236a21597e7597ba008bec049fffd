{
  "comments": [
    {
      "key": {
        "uuid": "0ba13c5e_5c57fda0",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "Why not? Because we don\u0027t expect checkcast of Object?",
      "range": {
        "startLine": 59,
        "startChar": 2,
        "endLine": 59,
        "endChar": 29
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ba13c5e_7c5c39c4",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "I would move this logic to ReferenceTypeInfo.",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 61,
        "endChar": 82
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4cdc89_a70e045c",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "indent is off.",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 8
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4cdc89_870b084c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 881,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "SetTop",
      "range": {
        "startLine": 881,
        "startChar": 7,
        "endLine": 881,
        "endChar": 10
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b9440fe_5d64dbad",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 887,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 887,
        "startChar": 2,
        "endLine": 887,
        "endChar": 42
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4cdc89_67380cfd",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 897,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "Please document these. is_precise is we know the exact type? Would \u0027exact\u0027 be clearer?",
      "range": {
        "startLine": 895,
        "startChar": 1,
        "endLine": 897,
        "endChar": 15
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b9440fe_1d5e53e4",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1104,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "We need something like invalid reference type for primitive types.",
      "range": {
        "startLine": 1104,
        "startChar": 2,
        "endLine": 1104,
        "endChar": 41
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4cdc89_c728e0a7",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "I think that of you put the IsAssignableFrom on ReferenceTypeInfo, you dont need these.\n\nAlso, for reference, please don\u0027t create free-floating mirrors without handles.",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 100,
        "endChar": 65
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ba13c5e_dc51cda0",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "to do",
      "range": {
        "startLine": 104,
        "startChar": 17,
        "endLine": 104,
        "endChar": 21
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ba13c5e_5ca5bd48",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "Suggestion: !old_rti.Equals(new_rti)",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 121,
        "endChar": 82
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b4cdc89_8722e8c1",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "This isn\u0027t correct. The type of this guy is java.lang.Class. You need another field in the node to cover what class it actually refers to.",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 140,
        "endChar": 51
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb48687a_234e8ab2",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-13T16:05:54Z",
      "side": 1,
      "message": "This isn\u0027t the only interesting one for types. NewArray/Call/Field accesses/array accesses, .... also tell you which types they have.",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 146,
        "endChar": 54
      },
      "revId": "db7382aa857236a21597e7597ba008bec049fffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}