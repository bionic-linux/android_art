{
  "comments": [
    {
      "key": {
        "uuid": "6d7bb7cf_c7cbcc80",
        "filename": "libartbase/base/utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 262,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-09-19T11:52:27Z",
      "side": 1,
      "message": "I think\n\n  std::string keyword(std::string(key) + \u0027:\u0027);\n\nwould me more natural here.",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 262,
        "endChar": 25
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d74b7a8c_098396c2",
        "filename": "libartbase/base/utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 262,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-09-19T15:20:20Z",
      "side": 1,
      "message": "Amusingly, clang-tidy would disagree with you and tell you that you\u0027re doing string concatenation suboptimally :-) (not that I agree).",
      "parentUuid": "6d7bb7cf_c7cbcc80",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 262,
        "endChar": 25
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e3b1f32_e85d7eee",
        "filename": "libartbase/base/utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-09-19T15:20:20Z",
      "side": 1,
      "message": "That check isn\u0027t precise. It will match entries suffixed with the key, also.",
      "range": {
        "startLine": 264,
        "startChar": 36,
        "endLine": 264,
        "endChar": 56
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e50a4ba5_6154bc96",
        "filename": "libartbase/base/utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-09-20T10:38:43Z",
      "side": 1,
      "message": "Good catch.\n\nI think using regexp matching would be simpler and shorter here.",
      "parentUuid": "1e3b1f32_e85d7eee",
      "range": {
        "startLine": 264,
        "startChar": 36,
        "endLine": 264,
        "endChar": 56
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7517d54f_5e940d38",
        "filename": "libartbase/base/utils.cc",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2018-09-20T13:42:26Z",
      "side": 1,
      "message": "The code is also assigning pos1 twice which we\u0027ve all overlooked.\n\nChanging the check to (pos1 \u003d\u003d 0 || status[pos1 - 1] \u003d\u003d \u0027\\n\u0027) ought to suffice.\n\nOtherwise, switch to using an ifstream, read one line at a time, match start of line against key, then check for \u0027:\u0027, then skip ws, then done.",
      "parentUuid": "e50a4ba5_6154bc96",
      "range": {
        "startLine": 264,
        "startChar": 36,
        "endLine": 264,
        "endChar": 56
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef5f0331_7f6973c6",
        "filename": "libartbase/base/utils.h",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-09-19T11:52:27Z",
      "side": 1,
      "message": "Also add:\n\n  Return \"\u003cunknown\u003e\" if the key cannot be found or if /proc/self/status cannot be read.",
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2515c9fa_fa8715a0",
        "filename": "libartbase/base/utils_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 132,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-09-19T11:52:27Z",
      "side": 1,
      "message": "Maybe replace this with an explicitly unexpected key, like \"Dummy\"? (There\u0027s a \"Groups\" key, which makes this a bit confusing IMO).",
      "range": {
        "startLine": 132,
        "startChar": 43,
        "endLine": 132,
        "endChar": 48
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d1cf05d_662be06c",
        "filename": "runtime/thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2018-09-18T09:46:09Z",
      "side": 1,
      "message": "nit: ART style would put this between cerrno and iostream.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 18
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a90a7125_2a35bf14",
        "filename": "runtime/thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1129218
      },
      "writtenOn": "2018-09-19T01:35:11Z",
      "side": 1,
      "message": "Got it, thanks a lot for Orion:)",
      "parentUuid": "1d1cf05d_662be06c",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 18
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0c546_293be84b",
        "filename": "runtime/thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-09-19T11:52:27Z",
      "side": 1,
      "message": "Yes, please keep the list of #include\u0027s sorted.",
      "parentUuid": "a90a7125_2a35bf14",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 18
      },
      "revId": "9382fcdac7c5200475d0ab662025205dcb84f521",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}