{
  "comments": [
    {
      "key": {
        "uuid": "ebfa006e_da16e3e1",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-04-05T10:05:22Z",
      "side": 1,
      "message": "The problem is that marking the class resolved and updating the CHA info should be atomic as the things stand right now.\n\nHowever, why do we update the CHA info when making the class resolved? I think it would be correct to postpone the CHA info update until just before running the \u003cclinit\u003e() if any.",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "367cdcc0_00ba3395",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-05T12:16:28Z",
      "side": 1,
      "message": "See Mingyao\u0027s comment here:\nhttps://cs.corp.google.com/android/art/runtime/class_linker.cc?sq\u003dpackage:%5Eandroid$\u0026dr\u0026l\u003d5272\n\nMaybe we can relax it.",
      "parentUuid": "ebfa006e_da16e3e1",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8a7ee4c_8d1d96d0",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-04-05T12:43:58Z",
      "side": 1,
      "message": "How can a merely resolved class be instantiated? Doesn\u0027t it need to be at least initializing?",
      "parentUuid": "367cdcc0_00ba3395",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7de08a9c_cc618f69",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-05T12:52:18Z",
      "side": 1,
      "message": "I believe the idea is that as soon as you publish the class as \"resolved\" some other thread can concurrently initialize the class. And that\u0027s the reason for updating the CHA before, as you have no control of the other threads.",
      "parentUuid": "b8a7ee4c_8d1d96d0",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f120328f_fbb34b2d",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-04-05T13:31:15Z",
      "side": 1,
      "message": "And my point is that the thread that actually wins the race to initialize the class can update CHA info before calling \u003cclinit\u003e() from ClassLinker::InitializeClass().",
      "parentUuid": "7de08a9c_cc618f69",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f18e0feb_adf806eb",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-05T13:35:01Z",
      "side": 1,
      "message": "I agree it sounds doable.",
      "parentUuid": "f120328f_fbb34b2d",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71e8f706_8f3e24d3",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-04-05T17:38:02Z",
      "side": 1,
      "message": "The issue here is single_impl\u0027s class isn\u0027t resolved yet when single_impl is set as another method\u0027s single-implementation. So doing it at class init time doesn\u0027t solve it since the race is still there. And not all classes have \u003cclinit\u003e so doing CHA info update at link time controls all cases. Grabbing cha_lock_ doesn\u0027t help either since that status of single-implementation can change during compilation anyway so in a sense it\u0027s speculative.\n\nLater during JitCodeCache::CommitCodeInternal() we grab cha_lock_ and verify all single-implementation assumptions are still valid since they can change during compilation time. We make sure all single-implementation assumption verification and dependency registration are atomic under cha_lock_ so either assumptions are not valid anymore and we discard the compiled code or the dependency will guaranteed to be seen by CHA for possible code invalidation.",
      "parentUuid": "f18e0feb_adf806eb",
      "revId": "8e33e84072c6d22788e61a0b1a7db56f0ca14c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}