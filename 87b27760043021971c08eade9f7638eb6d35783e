{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6122d1f9_a2f2ad02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T15:26:01Z",
      "side": 1,
      "message": "PTAL",
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f83cc76_a3e5aae9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Note: Reviewed CFI changes but not the python script.",
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f293e2d1_6f4fb3ee",
        "filename": "runtime/arch/arm/jni_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "This should not be needed at the very end of the function.",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3d993f7_ecf9c421",
        "filename": "runtime/arch/arm/jni_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "It is correct.  (but very pedantic)\n\nThere are nop/data in the disassembly after the pop, so the script complains that the pop does not have matching cfa_offset adjustment.\n\nRather than trying to exclude non-reachable assembly from the analysis, I would rather be pedantically correct.",
      "parentUuid": "f293e2d1_6f4fb3ee",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "510f69ad_9b9aad5e",
        "filename": "runtime/arch/arm/jni_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-07T11:17:27Z",
      "side": 1,
      "message": "I think the script really needs to process control flow. Otherwise we shall not check whether we\u0027re jumping to a section with completely different CFI data.",
      "parentUuid": "f3d993f7_ecf9c421",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f513421_52499be4",
        "filename": "runtime/arch/arm/jni_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "It does handle control flow to some extent (need as we often have slow paths at the end).  I would say there \"no\" control flow in this method though.\n\nWithout the fix, the output of the script is:\n000dfa10: dwarf\u003d0    infered\u003d0    push {r0, r1, r4, lr}                    // jni_entrypoints_arm.S:420\n000dfa12: dwarf\u003d16   infered\u003d16   vpush {s0, s1}                           // jni_entrypoints_arm.S:420\n000dfa16: dwarf\u003d24   infered\u003d24   mov r0, r4                               // jni_entrypoints_arm.S:420\n000dfa18: dwarf\u003d24   infered\u003d24   mov r1, r9                               // jni_entrypoints_arm.S:420\n000dfa1a: dwarf\u003d24   infered\u003d24   bl 0x4c6dc8 \u003cartJniUnlockObject\u003e @ imm \u003d #4092842 // jni_entrypoints_arm.S:420\n000dfa1e: dwarf\u003d24   infered\u003d24   vpop {s0, s1}                            // jni_entrypoints_arm.S:420\n000dfa22: dwarf\u003d16   infered\u003d16   pop {r0, r1, r4, pc}                     // jni_entrypoints_arm.S:420\n000dfa24: dwarf\u003d16   infered\u003d0    bmi 0xdf9d0 \u003cart_jni_unlock_object\u003e @ imm \u003d #-88 // \n000dfa26: dwarf\u003d16   infered\u003d0    bmi 0xdf9d2 \u003cart_jni_unlock_object+0x2\u003e @ imm \u003d #-88 // \n\nThere is question why objdump outputs the bogus opcodes after the pop.  Maybe that is data or padding.\n\nBut IMHO the tool is correct to complain the pop should have matching cfi adjustment.\n\nNote that if there was slow path, it would be handled correctly (and it would mask the issue)",
      "parentUuid": "510f69ad_9b9aad5e",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18389485_6dd739c2",
        "filename": "runtime/arch/arm/jni_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-14T12:11:20Z",
      "side": 1,
      "message": "`pop {..., pc}` is control flow. The next instruction is unreachable.",
      "parentUuid": "6f513421_52499be4",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f342c6d_1f525508",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Why not `pop {r4, pc}`?",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 160,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "678209f3_a88a1414",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "I didn\u0027t write/modify the assembly.\n\nShould I sneak in the simplification, or make it separate CL?",
      "parentUuid": "2f342c6d_1f525508",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 160,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7899d1b_b80ced27",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-07T11:17:27Z",
      "side": 1,
      "message": "Done in https://android-review.googlesource.com/1972702 .",
      "parentUuid": "678209f3_a88a1414",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 160,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb98c14c_99c613ad",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 170,
        "startChar": 8,
        "endLine": 177,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc47830e_56615f3a",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-07T11:17:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb98c14c_99c613ad",
      "range": {
        "startLine": 170,
        "startChar": 8,
        "endLine": 177,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d99e9580_c76bdb02",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 188,
        "startChar": 8,
        "endLine": 195,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d6a2d40_9b33714e",
        "filename": "runtime/arch/arm/memcmp16_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-07T11:17:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d99e9580_c76bdb02",
      "range": {
        "startLine": 188,
        "startChar": 8,
        "endLine": 195,
        "endChar": 29
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38b6bfda_c88c413c",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 684,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Why do we have CFI directives for r0-r2? They do not need to be preserved and therefore they are useless for both unwinding and debugging.",
      "range": {
        "startLine": 682,
        "startChar": 4,
        "endLine": 684,
        "endChar": 25
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccc1ab15_bcfd20c6",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 684,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "Hmmm... yeah, I don\u0027t see need for them.\nBut the CFI is correct and there is no harm.",
      "parentUuid": "38b6bfda_c88c413c",
      "range": {
        "startLine": 682,
        "startChar": 4,
        "endLine": 684,
        "endChar": 25
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf41d54_1160f18a",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Define macro CFI_RESTORE_STATE_AND_DEF_CFA?",
      "range": {
        "startLine": 705,
        "startChar": 4,
        "endLine": 706,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cf9b6b3_1d6821d5",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "I did in the past, but I think people were not fond of it.\n\nI will do it again.",
      "parentUuid": "dcf41d54_1160f18a",
      "range": {
        "startLine": 705,
        "startChar": 4,
        "endLine": 706,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8cc0c50_00032f5a",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-07T11:17:27Z",
      "side": 1,
      "message": "We already have that macro on x86/x86-64, so we may as well have it on ARM/ARM64.",
      "parentUuid": "8cf9b6b3_1d6821d5",
      "range": {
        "startLine": 705,
        "startChar": 4,
        "endLine": 706,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea37f604_3b5757c6",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8cc0c50_00032f5a",
      "range": {
        "startLine": 705,
        "startChar": 4,
        "endLine": 706,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96f07b70_f7bad2ea",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 709,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "This is not true anymore.",
      "range": {
        "startLine": 709,
        "startChar": 4,
        "endLine": 709,
        "endChar": 78
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05887750_3ac88017",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 709,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96f07b70_f7bad2ea",
      "range": {
        "startLine": 709,
        "startChar": 4,
        "endLine": 709,
        "endChar": 78
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e229ec95_5d31f468",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1559,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "This (and the corresponding `.cfi_remember_state`) is unnecessary, the `DELIVER_PENDING_EXCEPTION_FRAME_READY` does not save/restore registers or modify SP.",
      "range": {
        "startLine": 1558,
        "startChar": 4,
        "endLine": 1559,
        "endChar": 50
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3452186_68aa7c6a",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1559,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e229ec95_5d31f468",
      "range": {
        "startLine": 1558,
        "startChar": 4,
        "endLine": 1559,
        "endChar": 50
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b31655b5_d6d5c0ea",
        "filename": "runtime/interpreter/mterp/arm64ng/control_flow.S",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Given the .cfi_restore_state above, shouldn\u0027t we just restore the CFA with `CFI_DEF_CFA_BREG_PLUS_UCONST`?",
      "range": {
        "startLine": 172,
        "startChar": 4,
        "endLine": 175,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c4cb470_6c53084e",
        "filename": "runtime/interpreter/mterp/arm64ng/control_flow.S",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "There are two issues (note that CFA is compared with assembly).\n\nThe CFA has actual bug, which the `CFI_DEF_CFA_BREG_PLUS_UCONST` in opcode_start fixes.\n\nThe SPILLs are about the assembly side - just to keep the pushes and pop balanced.  Otherwise the analysis keeps thinking the assembly just keeps decreasing the stack size past all the return opcodes.  So then obviously things mismatch after this point.",
      "parentUuid": "b31655b5_d6d5c0ea",
      "range": {
        "startLine": 172,
        "startChar": 4,
        "endLine": 175,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef527ca_d74bd40a",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 1936,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Do we need this anywhere else than `op_return`?",
      "range": {
        "startLine": 1935,
        "startChar": 4,
        "endLine": 1936,
        "endChar": 64
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7bb4408_8817beeb",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 1936,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "I don\u0027t think so, but to be on the safe side and future proof, I think it is better here.",
      "parentUuid": "aef527ca_d74bd40a",
      "range": {
        "startLine": 1935,
        "startChar": 4,
        "endLine": 1936,
        "endChar": 64
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dc44f0c_591b9f0d",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 1936,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "So although not needed, I am tempted to keep it here as safety net.",
      "parentUuid": "e7bb4408_8817beeb",
      "range": {
        "startLine": 1935,
        "startChar": 4,
        "endLine": 1936,
        "endChar": 64
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d158d926_76f835a6",
        "filename": "runtime/interpreter/mterp/armng/control_flow.S",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "CFI_DEF_CFA_BREG_PLUS_UCONST?",
      "range": {
        "startLine": 172,
        "startChar": 4,
        "endLine": 175,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "818e9752_1d2599cd",
        "filename": "runtime/interpreter/mterp/armng/control_flow.S",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "Added to restore CFI state.\nBut the SPILL macro is still needed to balance the assembly instructions.",
      "parentUuid": "d158d926_76f835a6",
      "range": {
        "startLine": 172,
        "startChar": 4,
        "endLine": 175,
        "endChar": 26
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "183759a1_73ab78a5",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 499,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Do not add this. The `pop {..., pc}` redirects the control flow elsewhere, so the following instruction, if reachable by a conditional branch, does not need this adjustment. If anything, code following `RESTORE_ALL_CALLEE_SAVES lr_to_pc\u003d1` should probably use `.cfi_restore_state` and `.cfi_def_cfa` directly.",
      "range": {
        "startLine": 499,
        "startChar": 4,
        "endLine": 499,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdc0448a_ff1f1e85",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 499,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-03T17:33:13Z",
      "side": 1,
      "message": "This is pedantically correct.\n\nThe following code is indeed unreachable, but the analysis still rightfully complains that this pop is missing cfa_offset adjustment.\n\nIn particular this is needed to make return opcode\u0027s CFI offset correct at the end and in the unreachable SPILL code.\n\nIf there was reachable code after it, it would indeed need `.cfi_restore_state`, and cfa_offset from here would be ignored.",
      "parentUuid": "183759a1_73ab78a5",
      "range": {
        "startLine": 499,
        "startChar": 4,
        "endLine": 499,
        "endChar": 30
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d729e280_abc56f5d",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 2013,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T15:57:57Z",
      "side": 1,
      "message": "Move to `op_return`?",
      "range": {
        "startLine": 2012,
        "startChar": 4,
        "endLine": 2013,
        "endChar": 64
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7c2b73b_ec28a158",
        "filename": "runtime/interpreter/mterp/armng/main.S",
        "patchSetId": 1
      },
      "lineNbr": 2013,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-02-07T17:24:28Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "d729e280_abc56f5d",
      "range": {
        "startLine": 2012,
        "startChar": 4,
        "endLine": 2013,
        "endChar": 64
      },
      "revId": "87b27760043021971c08eade9f7638eb6d35783e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}