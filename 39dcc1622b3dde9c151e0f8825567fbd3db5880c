{
  "comments": [
    {
      "key": {
        "uuid": "64d659dd_b45deecc",
        "filename": "runtime/class_linker-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "nit: It might make sense to have kMoveFieldArrays and set it to !kMarkCompactSupport.",
      "range": {
        "startLine": 201,
        "startChar": 6,
        "endLine": 201,
        "endChar": 25
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04975d03_2d9c3913",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "s/Semi-space/Mark-compact/",
      "range": {
        "startLine": 80,
        "startChar": 5,
        "endLine": 80,
        "endChar": 15
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04975d03_4dfbc527",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "This should probably be BumpPointer::kAlignment?",
      "range": {
        "startLine": 104,
        "startChar": 52,
        "endLine": 104,
        "endChar": 68
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e0e1ae_0fa5c5d6",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "nit: \u0027alloc_size\u0027 might be a more accurate name as object_size might suggest what SizeOf() returns?",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 26
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44db1506_10f64442",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "This does not have to be a map with obj as the key because we always visit objects in the address order, correct?",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 26
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e0e1ae_4fb8add5",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "BumpPointer::kAlignment?",
      "range": {
        "startLine": 124,
        "startChar": 23,
        "endLine": 124,
        "endChar": 39
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44db1506_30e6e87b",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Does this need to be a IsHeapReferenceMarkCallback now after a rebase?",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 65
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c59d23_aef03770",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "There\u0027s no RecordFree here.",
      "range": {
        "startLine": 240,
        "startChar": 2,
        "endLine": 240,
        "endChar": 34
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44db1506_13cc0e9d",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "It appears this obj is always non-null as Runtime::VisitRoots() does not call back if it\u0027s null, correct?",
      "range": {
        "startLine": 335,
        "startChar": 18,
        "endLine": 335,
        "endChar": 21
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e0e1ae_ef25e114",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Is this function identical to UpdateRootCallback()? If so, merge them? Or, is this unused?",
      "range": {
        "startLine": 343,
        "startChar": 18,
        "endLine": 343,
        "endChar": 41
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e0e1ae_ef9881ee",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 393,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Might it make sense to assert that \"DCHECK(!kMovingClasses)\" or that all the primitive array classes are in a non-moving space to be defensive?",
      "range": {
        "startLine": 393,
        "startChar": 43,
        "endLine": 393,
        "endChar": 84
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44db1506_b38422fb",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "This is a second SweepSystemWeaks call. As I understand, the first one nulls out dead objects, and this second call updates the references for objects that moved. Correct?",
      "range": {
        "startLine": 395,
        "startChar": 30,
        "endLine": 395,
        "endChar": 66
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6471f9c6_3ffd4f8b",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 403,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "We need to update this because we call ProcessReferences() before computing forwarding addresses. Correct?\n\nFor a future note, would it alternatively be feasible (may not necessarily a good idea) to call SweepSystemWeaks() and ProcessReferences() after MoveObjects() and remove the need to call SweepSystemWeaks() twice and ReferenceProcessor::UpdateRoots()?",
      "range": {
        "startLine": 403,
        "startChar": 34,
        "endLine": 403,
        "endChar": 45
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e0e1ae_524ff27c",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 526,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Is it worth doing DCHECK(space_.HasAddress(dest_addr))?",
      "range": {
        "startLine": 526,
        "startChar": 12,
        "endLine": 526,
        "endChar": 21
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64d659dd_f7e4d849",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Does this need to be virtual?",
      "range": {
        "startLine": 105,
        "startChar": 2,
        "endLine": 105,
        "endChar": 9
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2492a112_934a4c3a",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Does this need to be virtual?",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 115,
        "endChar": 9
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64d659dd_17f71cf7",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Does this need to be virtual?",
      "range": {
        "startLine": 165,
        "startChar": 2,
        "endLine": 165,
        "endChar": 9
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a49db127_1b0f3b94",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 3
      },
      "lineNbr": 224,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "Is this comment describing something else?",
      "range": {
        "startLine": 223,
        "startChar": 5,
        "endLine": 224,
        "endChar": 12
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04975d03_ad04c9e3",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1822,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "This used to be Partial for SemiSpace before as SemiSpace::GetGcType() still returns Partial. I guess this does not matter.",
      "range": {
        "startLine": 1822,
        "startChar": 4,
        "endLine": 1822,
        "endChar": 11
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2492a112_f3195892",
        "filename": "runtime/gc/reference_queue.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "So, is list_ a root?",
      "range": {
        "startLine": 95,
        "startChar": 32,
        "endLine": 95,
        "endChar": 42
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4466b513_1e6ded85",
        "filename": "runtime/mirror/object-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 699,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "This DCHECK is probably redundant.",
      "range": {
        "startLine": 699,
        "startChar": 4,
        "endLine": 699,
        "endChar": 48
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2492a112_88769be9",
        "filename": "runtime/mirror/object-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 705,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-18T18:46:11Z",
      "side": 1,
      "message": "How about putting DCHECK(!klass-\u003eIsVariableSize()) at the beginning of this else block to be defensive (eg the new String)?",
      "range": {
        "startLine": 705,
        "startChar": 9,
        "endLine": 705,
        "endChar": 10
      },
      "revId": "39dcc1622b3dde9c151e0f8825567fbd3db5880c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}