{
  "comments": [
    {
      "key": {
        "uuid": "08f6ac87_465a1ba7",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 467,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-28T15:58:53Z",
      "side": 1,
      "message": "This would synchronize, but what if it doesn\u0027t join?",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd2a861b_e4226243",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 479,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-28T15:58:53Z",
      "side": 1,
      "message": "So I suppose the suspend-all is a guarantee that it finishes synchronizing?",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb2571b_d4baf316",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 712,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-28T15:58:53Z",
      "side": 1,
      "message": "This seems too vague to me, locks should be in pairs.",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a395607_757ad4c2",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 720,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-28T14:56:13Z",
      "side": 1,
      "message": "Its only acquiring lock for streaming. How does this synchronize-with WriteBuffers for non-streaming modes?",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e0ff891_5e1cfc54",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 720,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2018-03-28T15:41:37Z",
      "side": 1,
      "message": "See comment at top of function. The common synchronization is in StopTracing(). The Trace::the_trace_ singleton is null at this point and the sampling thread is gone.\n\nThe reason the lock acquisition here may be to emphasize it\u0027s modifying state that guarded by the streaming lock. In particular, it keeps the verifier happy.",
      "parentUuid": "5a395607_757ad4c2",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec46c5f8_9c33618c",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 765,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-28T14:56:13Z",
      "side": 1,
      "message": "same",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70c614c4_4b017e06",
        "filename": "runtime/trace.cc",
        "patchSetId": 9
      },
      "lineNbr": 765,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2018-03-28T15:41:37Z",
      "side": 1,
      "message": "The comment in the code here doesn\u0027t seem very accurate, cut-and-paste artifact (?).",
      "parentUuid": "ec46c5f8_9c33618c",
      "revId": "ba6180aea29c67daac30612d114716e662a3acad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}