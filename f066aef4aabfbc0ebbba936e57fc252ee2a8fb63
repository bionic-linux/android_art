{
  "comments": [
    {
      "key": {
        "uuid": "1699e1c0_9a502eb9",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2749,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "Please add a comment.",
      "range": {
        "startLine": 2747,
        "startChar": 0,
        "endLine": 2749,
        "endChar": 3
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27403332_ffb118fb",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2778,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "That\u0027s a lot of ScopedLocalRef. Could you use VariableSizeHandleScope instead?",
      "range": {
        "startLine": 2775,
        "startChar": 0,
        "endLine": 2778,
        "endChar": 67
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f9b6597_ebbd27ba",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2778,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-01-05T16:46:57Z",
      "side": 1,
      "message": "Sure could, but the table resizing is more efficient for local refs nowadays, actually. It\u0027s not a linked list.",
      "parentUuid": "27403332_ffb118fb",
      "range": {
        "startLine": 2775,
        "startChar": 0,
        "endLine": 2778,
        "endChar": 67
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e86d576_f78c5fa8",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2778,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-08T12:49:47Z",
      "side": 1,
      "message": "So it\u0027s a tradeoff of cost of creating a ScopedLocalRef/Handle vs cost of resizing?",
      "parentUuid": "0f9b6597_ebbd27ba",
      "range": {
        "startLine": 2775,
        "startChar": 0,
        "endLine": 2778,
        "endChar": 67
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7f8fec1_8cad55f0",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2784,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "nit: add /* */",
      "range": {
        "startLine": 2784,
        "startChar": 88,
        "endLine": 2784,
        "endChar": 93
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de355199_62cc190b",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2827,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "Not sure what the style is, but I\u0027d prefer having all fields (whether private/public) next to each other.",
      "range": {
        "startLine": 2827,
        "startChar": 0,
        "endLine": 2827,
        "endChar": 60
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9af56188_647d0ae7",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2836,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "Please add a comment.",
      "range": {
        "startLine": 2834,
        "startChar": 0,
        "endLine": 2836,
        "endChar": 3
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0998129_1f338ee9",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2843,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "Could you drop this? I think it defeats readability if any local method decides to rename a type.",
      "range": {
        "startLine": 2843,
        "startChar": 0,
        "endLine": 2843,
        "endChar": 55
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ab7bdb7_92676a81",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2843,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-01-05T16:46:57Z",
      "side": 1,
      "message": "I disagree here. ObjectArray is needlessly verbose (because we don\u0027t have the generic \"it\u0027s an Object[]), and especially the allocation calls look horrible with double repetition. Unless you\u0027re OK with something like\n\n  auto instance \u003d type::Alloc(...)",
      "parentUuid": "d0998129_1f338ee9",
      "range": {
        "startLine": 2843,
        "startChar": 0,
        "endLine": 2843,
        "endChar": 55
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa81c6e7_e039890d",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2843,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-08T12:49:47Z",
      "side": 1,
      "message": "I\u0027d rather we don\u0027t use auto.\n\nSo how do you prevent others that can share your opinion just creating their type and ending up with multiple type names for the same thing?",
      "parentUuid": "2ab7bdb7_92676a81",
      "range": {
        "startLine": 2843,
        "startChar": 0,
        "endLine": 2843,
        "endChar": 55
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5546f571_71e97777",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2843,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-01-08T16:02:21Z",
      "side": 1,
      "message": "I can\u0027t. I can just make this local to a single function. Then it\u0027s a question of consistency, but at least not leaky.",
      "parentUuid": "aa81c6e7_e039890d",
      "range": {
        "startLine": 2843,
        "startChar": 0,
        "endLine": 2843,
        "endChar": 55
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317e8c29_aedfbb76",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 2858,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-05T10:02:32Z",
      "side": 1,
      "message": "Please add a comment.",
      "range": {
        "startLine": 2856,
        "startChar": 0,
        "endLine": 2858,
        "endChar": 3
      },
      "revId": "f066aef4aabfbc0ebbba936e57fc252ee2a8fb63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}