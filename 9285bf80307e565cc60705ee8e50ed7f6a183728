{
  "comments": [
    {
      "key": {
        "uuid": "ff32061b_1958b618",
        "filename": "compiler/optimizing/boolean_simplifier.cc",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-14T18:09:35Z",
      "side": 1,
      "message": "Should this be transformed into a switch (on cond-\u003eAsCondition()-\u003eGetCondition())? It\u0027s a rather ugly if-else chain now.\n\n(The design also seems a bit weird to me now, making all the specific conditions sub-classes...)",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fa8725b_4b5df6d4",
        "filename": "compiler/optimizing/boolean_simplifier.cc",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-10-14T18:12:38Z",
      "side": 1,
      "message": "Agreed switch is better. In fact, this would even be better with a one liner if we could create instances using the GetOppositeCondition(). But for now, I will do the rewrite to switch, which will read better already (and force that all the cases are handled at compile time!)",
      "parentUuid": "ff32061b_1958b618",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfb462b2_3e0a36a6",
        "filename": "compiler/optimizing/boolean_simplifier.cc",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-14T18:18:22Z",
      "side": 1,
      "message": "The issue is that that would couple the node classes (as now one class needs to know what the opposite class is), and node classes need to know about allocation (as you may or may not want to give an allocator etc). That\u0027s why overall the design is weird - just one class with a field would have been easier IMHO.",
      "parentUuid": "5fa8725b_4b5df6d4",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa9b65d_f89fd0d3",
        "filename": "compiler/optimizing/boolean_simplifier.cc",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-10-14T18:20:21Z",
      "side": 1,
      "message": "Not disagreeing. But I leave a full redesign to another CL :-)",
      "parentUuid": "dfb462b2_3e0a36a6",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f30ba11_dd08fc6b",
        "filename": "compiler/optimizing/boolean_simplifier.cc",
        "patchSetId": 14
      },
      "lineNbr": 93,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-14T18:22:16Z",
      "side": 1,
      "message": "I was just noting why I only asked for the switch... :-)",
      "parentUuid": "7fa9b65d_f89fd0d3",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 93,
        "endChar": 5
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff13e649_3cf33d10",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 14
      },
      "lineNbr": 1871,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-14T18:14:11Z",
      "side": 1,
      "message": "Indentation seems to be one space off.",
      "range": {
        "startLine": 1870,
        "startChar": 0,
        "endLine": 1871,
        "endChar": 36
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa9b65d_38a6c82d",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 14
      },
      "lineNbr": 1871,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-10-14T18:20:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff13e649_3cf33d10",
      "range": {
        "startLine": 1870,
        "startChar": 0,
        "endLine": 1871,
        "endChar": 36
      },
      "revId": "9285bf80307e565cc60705ee8e50ed7f6a183728",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}