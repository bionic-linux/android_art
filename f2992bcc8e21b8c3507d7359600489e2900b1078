{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21a6024c_f4c1a004",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-07-29T07:28:38Z",
      "side": 1,
      "message": "Thanks a lot and sorry for the delay. I am unfamiliar with this code and it took sometime to understand it. I have a couple of more questions which I added as comments. Thanks!",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc5b5146_7393d15d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-08T06:37:05Z",
      "side": 1,
      "message": "Sorry for the delay. I am not familiar with this code and it took some time for me to understand this. Thanks!",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8371f0a8_224c47c4",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1657,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-07-29T07:28:38Z",
      "side": 1,
      "message": "I am still unsure here. We are trying to make sure that all old_data that has same class loader has the same cookie. See lines 1685-1692. I do see why we want to maintain the same cookie per each class loader + java dex file, since if there are multiple redefinitions we don\u0027t want to miss them. I am not sure why we wanted to maintain the same cookie across all class loaders. I am not very familiar with this code, so it is taking sometime for me to understand this.\n\nGiven that we update the cookie in 1685-1692 Do we need to change something there too?",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3f347a2_c424ac78",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1657,
      "author": {
        "id": 1933440
      },
      "writtenOn": "2022-07-29T10:10:07Z",
      "side": 1,
      "message": "Suppose we redefine two classes:\n1. When redefining the first class, we get JavaDexFile through FindSourceDexFileObject method, such as apk, the cookie obtained at this time is from apk\n2. Then another thread inserts the custom dex file into the front of the classloader\u0027s elments\n3. When redefining the second class, the JavaDexFile we get through the FindSourceDexFileObject method is inserted in step 2, but the cookie is still from apk\n4. Finally, incorrectly update the cookie of the apk to the inserted dex file\nhttps://cs.android.com/android/platform/superproject/+/master:art/openjdkjvmti/ti_redefine.cc;l\u003d2502;drc\u003d642d493089d58996c72cdf3149360d4ba1cd8ffb",
      "parentUuid": "8371f0a8_224c47c4",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c49c647_0bb851cc",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1657,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-01T05:30:18Z",
      "side": 1,
      "message": "During the first step, how do we make sure that the JavaDexFile is the right one? Since we are just returning the first one, wouldn\u0027t it be a problem if another thread concurrently adds another unrelated dex file?\n\nNot for this CL, but I think it will be easier if we suspend everything before starting the redefinition. I will take a look at it and see if it\u0027s simpler if we just suspend everything right at the start.",
      "parentUuid": "e3f347a2_c424ac78",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a4ef514_02a2dfb1",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1657,
      "author": {
        "id": 1933440
      },
      "writtenOn": "2022-08-04T03:05:35Z",
      "side": 1,
      "message": "I think it wouldn\u0027t be a problem if another thread concurrently adds another unrelated dex file. What we need is to insert the redefine dexfile in front of the JavaDexFile cookie and correct update.",
      "parentUuid": "6c49c647_0bb851cc",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc173be_f3374dc5",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1657,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-08T06:37:05Z",
      "side": 1,
      "message": "Thanks! In my understanding, when we redefine the class we want to update with a new native dex (classes.dex) file so we just pick the first java dex file and update it\u0027s cookie to include the new dex file. The problem here is that there are two redefinitions and\n1. We pick a java dex file (let\u0027s say JavaDex1 with cookie1) and record that we need to update the cookie with he new classes.dex1. So we would have recorded JavaDex1 with Cookie1 + new dex file.\n2. There is another thread which includes another JavaDex file in the classloader\u0027s elements (let\u0027s say JavaDex2 with cookie 2). \n3. When we try to redefine another class in the same class loader we pick the new JavaDex2 but the code here would pick the wrong cookie (Cookie 1). JavaDex2 will get updated with this wrong cookie later on. \n\nSo the current fix also checks for the dex file so we pick the right cookie corresponding (i.e. Cookie2 for Javadex2) here. \n\nThough in lines 1688-1689 we look for all cookies, so we end up updating the cookie corresponding to the earlier redefinition (the one we recorded in step1) to Cookie2 too. i.e. JavaDex1 would now get Cookie2 which is also incorrect. So I think we should update the check there to also include the dex file check. \n\nIf my understanding is correct could you also update the lines in 1688-1689. Please correct me if I am wrong.",
      "parentUuid": "1a4ef514_02a2dfb1",
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a65bd5_ea12cfc7",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1658,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-08T06:37:05Z",
      "side": 1,
      "message": "Could you also update this comment here. I think this is no longer correct.\n\nMaybe update it to Since every instance of this Javadex file...",
      "range": {
        "startLine": 1658,
        "startChar": 9,
        "endLine": 1658,
        "endChar": 49
      },
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca17ba14_f37a5f19",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1683,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-08T06:37:05Z",
      "side": 1,
      "message": "Could you also update this comment to say \nIf there are other copies of the same classloader and the same JavaDexfile",
      "range": {
        "startLine": 1683,
        "startChar": 8,
        "endLine": 1683,
        "endChar": 55
      },
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ba05583_2bcbc283",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 2
      },
      "lineNbr": 1688,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-08-08T06:37:05Z",
      "side": 1,
      "message": "This is the check I was mentioning that also needs to be updated to:\n\n`` old_data.GetSourceClassLoader() \u003d\u003d source_class_loader.Get() \u0026\u0026 old_data.GetJavaDexFile() \u003d\u003d dex_file_obj.Get() ``",
      "range": {
        "startLine": 1688,
        "startChar": 6,
        "endLine": 1688,
        "endChar": 71
      },
      "revId": "f2992bcc8e21b8c3507d7359600489e2900b1078",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}