{
  "comments": [
    {
      "key": {
        "uuid": "70529c24_c67b42af",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 1138,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-01T08:13:09Z",
      "side": 1,
      "message": "I guess you\u0027re only using this in your backend :) We shouldn\u0027t need this though, as currently a constant in between the condition and if will force a materialization.",
      "range": {
        "startLine": 1138,
        "startChar": 7,
        "endLine": 1138,
        "endChar": 30
      },
      "revId": "8db851b6e86af40947396ecc377f4049da39b2c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70529c24_a68de63e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 1138,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2014-10-01T09:26:11Z",
      "side": 1,
      "message": "Oops I forgot a line in the patch. Re-uploading.\n\nIn the tests I use this function to ensure the condition is materialized. NeedsMaterialization() returns true if a \u0027force materialization\u0027 has been required.\nI don\u0027t see how inserting an HConstant would make a difference in NeedsMaterialization(): The test \u0027GetNext() !\u003d user\u0027 is after the \u0027merge with if\u0027 test. I thought about using the result of the HCondition in another operation to have multiple uses (and thus force materialization), but I didn\u0027t want to rely on the implementation of NeedsMaterialization(). This is not ideal, but it makes the test more reliable.",
      "parentUuid": "70529c24_c67b42af",
      "range": {
        "startLine": 1138,
        "startChar": 7,
        "endLine": 1138,
        "endChar": 30
      },
      "revId": "8db851b6e86af40947396ecc377f4049da39b2c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70529c24_0616fa3d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 1138,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-01T09:36:17Z",
      "side": 1,
      "message": "I\u0027m not a big fan of test-specific fields/data. I\u0027d avoid it if possible. The NeedsMaterialization will probably remain this way, as I don\u0027t think it should be smart about instructions in between not having side effects, and not generating any code.\n\nI don\u0027t understand why you\u0027re saying the constant wouldn\u0027t work. What\u0027s the \"merge with if test\"? NeedsMaterialization will return true for the following list of instructions:\n\ni0 \u003d HEqual\ni1 \u003d HConstant\nHIf i0",
      "parentUuid": "70529c24_a68de63e",
      "range": {
        "startLine": 1138,
        "startChar": 7,
        "endLine": 1138,
        "endChar": 30
      },
      "revId": "8db851b6e86af40947396ecc377f4049da39b2c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "504f587e_c59a1a48",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 1138,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2014-10-01T10:00:52Z",
      "side": 1,
      "message": "Ok. Reworking this.",
      "parentUuid": "70529c24_0616fa3d",
      "range": {
        "startLine": 1138,
        "startChar": 7,
        "endLine": 1138,
        "endChar": 30
      },
      "revId": "8db851b6e86af40947396ecc377f4049da39b2c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}