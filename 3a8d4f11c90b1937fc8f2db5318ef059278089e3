{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d5699b_589aa925",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T19:57:12Z",
      "side": 1,
      "message": "There are several returns above that can still return \"speed-profile\" (if `targetCompilerFilter` is set to that). Shouldn\u0027t this override all of them?\n\nIf it shouldn\u0027t, e.g. for the system UI and launcher special cases above, then it\u0027d be more clear if we checked that this flag isn\u0027t set in those cases.",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 344,
        "endChar": 9
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ef2fa8f_69f7e076",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-10-17T10:48:36Z",
      "side": 1,
      "message": "That\u0027s a good point. I changed the code to fall through on every condition.",
      "parentUuid": "f1d5699b_589aa925",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 344,
        "endChar": 9
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa3f047_cf8971f1",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-17T13:28:08Z",
      "side": 1,
      "message": "Hmm, I think it makes it harder to reason about the code, because one has to consider more branches for the different cases.\n\nI suggest keeping the returns but reversing the order (more or less - see below). Assuming \"verify\" is the lowest compiler filter*, you can safely return that directly near the top, and it\u0027s simple and clear.\n\nThe fall through from `getSafeModeCompilerFilter` looks like a fix from the old code, but that too can be handled by putting it after the \"verify\" downgrades.\n\nFor the system UI and launcher special cases, do we want all the downgrade checks to apply to them? Most shouldn\u0027t be applicable then, but if something is off then they may kick in, and in that case I wonder if it\u0027s better that dex2oat gets fed \"speed-profile\" and complains instead. That\u0027d make those special cases easier to reason about.\n\nFor the particular case of `FLAG_IGNORE_PROFILE`, I\u0027d argue it should override even them, though.\n\n*) Actually, there\u0027s \"assume-verified\" which is even lower, but if this function is fed that it\u0027s already buggy in the sense that it\u0027ll upgrade it. Could be worth a debug check that we\u0027re not getting that value.",
      "parentUuid": "7ef2fa8f_69f7e076",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 344,
        "endChar": 9
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59993a1c_6b1e4c70",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-10-17T15:36:47Z",
      "side": 1,
      "message": "Discussed offline. Kept the early returns to keep the logic simple, but changed the order.",
      "parentUuid": "4fa3f047_cf8971f1",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 344,
        "endChar": 9
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "283fc765_ed07f030",
        "filename": "libartservice/service/java/com/android/server/art/model/ArtFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T19:57:12Z",
      "side": 1,
      "message": "Grammar nit: Looks slightly clunky to me to follow \"i.e.\" by a comma like this. But I\u0027m no language expert.",
      "range": {
        "startLine": 82,
        "startChar": 54,
        "endLine": 82,
        "endChar": 55
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c954dcb_2230baeb",
        "filename": "libartservice/service/java/com/android/server/art/model/ArtFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-10-17T10:48:36Z",
      "side": 1,
      "message": "\"I.e.,\" is American English style. I found [this doc](https://developers.google.com/style/spelling), which applies to \"Google-related developer documentation\", which I believe includes Android API documentation, and it prefers American English.",
      "parentUuid": "283fc765_ed07f030",
      "range": {
        "startLine": 82,
        "startChar": 54,
        "endLine": 82,
        "endChar": 55
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8187fc85_8399ef5f",
        "filename": "libartservice/service/java/com/android/server/art/model/ArtFlags.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-17T13:28:08Z",
      "side": 1,
      "message": "Oh, I\u0027d no idea that\u0027s AE.",
      "parentUuid": "9c954dcb_2230baeb",
      "range": {
        "startLine": 82,
        "startChar": 54,
        "endLine": 82,
        "endChar": 55
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d42f89ff_8c940586",
        "filename": "libartservice/service/java/com/android/server/art/model/DexoptResult.java",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-10-16T19:57:12Z",
      "side": 1,
      "message": "Nit: I\u0027d say error messages are for logging almost by definition. However, the errors as a whole may or may not be.",
      "range": {
        "startLine": 338,
        "startChar": 21,
        "endLine": 338,
        "endChar": 29
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99a19d94_18fa20fd",
        "filename": "libartservice/service/java/com/android/server/art/model/DexoptResult.java",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-10-17T10:48:36Z",
      "side": 1,
      "message": "Here, the point is that no automatic processing should be done to the messages. Alex was worried that these messages will be used by some automatic processing that generates localized messages. I told him that the messages are only for adb, so localization isn\u0027t a concern. Then Alex suggested to add a comment to call them \"logging only\". Therefore, I\u0027m adding this line here.",
      "parentUuid": "d42f89ff_8c940586",
      "range": {
        "startLine": 338,
        "startChar": 21,
        "endLine": 338,
        "endChar": 29
      },
      "revId": "3a8d4f11c90b1937fc8f2db5318ef059278089e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}