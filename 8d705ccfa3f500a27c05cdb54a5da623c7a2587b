{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "326cd6af_258c86d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-13T17:58:10Z",
      "side": 1,
      "message": "Looks like it doesn\u0027t compile.\n\n```\nart/libartbase/base/unix_file/fd_file.cc:508:28: error: implicit instantiation of undefined template \u0027std::vector\u003cstd::basic_string\u003cchar\u003e\u003e\u0027\n  508 |   std::vector\u003cstd::string\u003e sync_dirs \u003d {new_dir};\n      |                            ^\nexternal/libcxx/include/iosfwd:217:28: note: template is declared here\n  217 | class _LIBCPP_TEMPLATE_VIS vector;\n      |                            ^\n1 error generated.\n```",
      "revId": "8d705ccfa3f500a27c05cdb54a5da623c7a2587b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac228d1_5f8c5225",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1975620
      },
      "writtenOn": "2024-03-13T18:49:26Z",
      "side": 1,
      "message": "Hi Jiakai, that\u0027s interesting, I haven\u0027t reproduced this on my environment. I\u0027ll check my setup and fix.",
      "parentUuid": "326cd6af_258c86d3",
      "revId": "8d705ccfa3f500a27c05cdb54a5da623c7a2587b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e0a5663_dcbbfca0",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 483,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-14T13:00:25Z",
      "side": 1,
      "message": "Please do both logging and DCHECK like what `FdFile::Destroy()` does. Logging is for any build, and DCHECK is for surfacing the problem even better on a debug build.\n```suggestion\n    if (guard_state_ \u003c GuardState::kFlushed) {\n      LOG(ERROR) \u003c\u003c \"File \" \u003c\u003c file_path_ \u003c\u003c \" has not been flushed before renaming.\";\n    }\n    DCHECK_GE(guard_state_, GuardState::kFlushed);\n```",
      "range": {
        "startLine": 483,
        "startChar": 4,
        "endLine": 483,
        "endChar": 13
      },
      "revId": "8d705ccfa3f500a27c05cdb54a5da623c7a2587b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28fb0879_c957f86c",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 513,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-13T17:22:38Z",
      "side": 1,
      "message": "Please add argument comment (`/*check_usage\u003d*/`), here and on the line below.",
      "range": {
        "startLine": 513,
        "startChar": 43,
        "endLine": 513,
        "endChar": 48
      },
      "revId": "8d705ccfa3f500a27c05cdb54a5da623c7a2587b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9033eda2_af4d64cf",
        "filename": "libartbase/base/unix_file/fd_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 513,
      "author": {
        "id": 1975620
      },
      "writtenOn": "2024-03-13T18:49:26Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "28fb0879_c957f86c",
      "range": {
        "startLine": 513,
        "startChar": 43,
        "endLine": 513,
        "endChar": 48
      },
      "revId": "8d705ccfa3f500a27c05cdb54a5da623c7a2587b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}