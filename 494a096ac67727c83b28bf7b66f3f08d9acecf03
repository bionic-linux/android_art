{
  "comments": [
    {
      "key": {
        "uuid": "126f74ea_9bccdce9",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 3350,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-17T17:43:50Z",
      "side": 1,
      "message": "Constant case",
      "range": {
        "startLine": 3350,
        "startChar": 7,
        "endLine": 3350,
        "endChar": 16
      },
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0c01e4_6a03bd9e",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 3350,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-18T10:29:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "126f74ea_9bccdce9",
      "range": {
        "startLine": 3350,
        "startChar": 7,
        "endLine": 3350,
        "endChar": 16
      },
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce258640_58b55144",
        "filename": "test/409-materialized-condition/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-17T17:43:50Z",
      "side": 1,
      "message": "Add some comments about what\u0027s being tested here.",
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a23eb89e_809be930",
        "filename": "test/409-materialized-condition/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-18T10:29:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce258640_58b55144",
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77441ec6_9f578366",
        "filename": "test/409-materialized-condition/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-17T17:43:50Z",
      "side": 1,
      "message": "Use a local method, for example\n\n  static Object $noinline$ignoreArg(String arg) { return null; }\n\nOr is the getSystemResource being inlined, creating the conditions that we want to test?",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "797c5ad0_07ef72a5",
        "filename": "test/409-materialized-condition/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2017-05-17T17:57:46Z",
      "side": 1,
      "message": "No, exactly the opposite - I chose an arbitrary method that seemed complicated enough never to get fully inlined (even by the JIT), so that DCE does not kick in, and turn the method into \"return false\" (which happens when there is no method call). It is doable with a local method (e.g. $noinline$intNe0()), but I decided to be extra careful; I agree that it deserves an extra comment, though.",
      "parentUuid": "77441ec6_9f578366",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "339628ed_93533578",
        "filename": "test/409-materialized-condition/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-18T12:45:32Z",
      "side": 1,
      "message": "The $noinline$ prevents inlining when using a \"core\" image (core.art or core-optimizing.art), so we can simply use\n\n  $noinline$intNe0(value);",
      "parentUuid": "797c5ad0_07ef72a5",
      "range": {
        "startLine": 86,
        "startChar": 4,
        "endLine": 86,
        "endChar": 43
      },
      "revId": "494a096ac67727c83b28bf7b66f3f08d9acecf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}