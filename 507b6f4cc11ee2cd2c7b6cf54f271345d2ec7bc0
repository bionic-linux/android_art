{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25533ec6_e0642028",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "Only done the native code so far, but thought it worth sending off.",
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5296e6dc_fbe12764",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Thanks for the offline discussion. I added a `isPreReboot` flag to all output file types and passed the flag from the Java code. Many of your comments no longer apply, so I just marked them as resolved. A lot of previous changes are then reverted, so it will be easier to review if you look at the diff between Base and the latest PS.",
      "parentUuid": "25533ec6_e0642028",
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b723902_469041c6",
        "filename": "artd/README.md",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "This isn\u0027t quite true, is it? You mention some more differences in the CL description which seem useful to put here too. Then there\u0027s also the environment handling in artd (although that\u0027s strictly speaking part of the parent CL I don\u0027t mind if the README update happens here instead).",
      "range": {
        "startLine": 21,
        "startChar": 65,
        "endLine": 22,
        "endChar": 10
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cac6c379_0c1a4800",
        "filename": "artd/README.md",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Clarified that this section is only about the `--pre-reboot` flag",
      "parentUuid": "0b723902_469041c6",
      "range": {
        "startLine": 21,
        "startChar": 65,
        "endLine": 22,
        "endChar": 10
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "121820ab_2bf65e9a",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 256,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "I suppose this can be false regardless of the artd instance because we only use the directory part. That\u0027s a bit \"smart coding\" so it\u0027s worth a comment.\n\nOr if you go with my suggestion elsewhere to make `RawArtifactsPath` a small class then it\u0027s cleaner to add a method to it that returns the directory directly.",
      "range": {
        "startLine": 256,
        "startChar": 67,
        "endLine": 256,
        "endChar": 90
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82bf3900_5793402d",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 256,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "121820ab_2bf65e9a",
      "range": {
        "startLine": 256,
        "startChar": 67,
        "endLine": 256,
        "endChar": 90
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc97e876_e8cbce02",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 515,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "Why not look at the `is_pre_reboot` option here?\n\nThroughout, every use of this that\u0027s hardcoded so it can be \"wrong\" in one of the instances deserves attention. Either make sure it gets set from the `is_pre_reboot` option, guard it with a DCHECK if the code path shouldn\u0027t be used, or explain why it\u0027s DTRT in both contexts.",
      "range": {
        "startLine": 515,
        "startChar": 59,
        "endLine": 515,
        "endChar": 82
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32bda0e5_07287a85",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 515,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fc97e876_e8cbce02",
      "range": {
        "startLine": 515,
        "startChar": 59,
        "endLine": 515,
        "endChar": 82
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78573138_6baccb51",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 716,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "It may help debugging to see what value at least one of them has.\n```suggestion\n     return Fatal(ART_FORMAT(\"in_profile.isPreReboot !\u003d options_.is_pre_reboot: {} !\u003d {}\",\n                            in_profile.isPreReboot, options_.is_pre_reboot));\n```",
      "range": {
        "startLine": 716,
        "startChar": 17,
        "endLine": 716,
        "endChar": 67
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34e2a39d_837f644b",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 716,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78573138_6baccb51",
      "range": {
        "startLine": 716,
        "startChar": 17,
        "endLine": 716,
        "endChar": 67
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab29f569_c448fefb",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 789,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "Can we have the invariant that `isPreReboot` in here has the correct value on entry? If so it should have an `OR_RETURN_FATAL` check?",
      "range": {
        "startLine": 789,
        "startChar": 62,
        "endLine": 789,
        "endChar": 73
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a9ffe25_ce0158ef",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 789,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab29f569_c448fefb",
      "range": {
        "startLine": 789,
        "startChar": 62,
        "endLine": 789,
        "endChar": 73
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bef2445f_6f51d820",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 899,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "If it has the correct value on entry then this can go away. If not the docs for `mergeProfiles` in IArtd.aidl needs an update.",
      "range": {
        "startLine": 899,
        "startChar": 2,
        "endLine": 899,
        "endChar": 69
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a28a0253_7794beb4",
        "filename": "artd/artd.cc",
        "patchSetId": 7
      },
      "lineNbr": 899,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "bef2445f_6f51d820",
      "range": {
        "startLine": 899,
        "startChar": 2,
        "endLine": 899,
        "endChar": 69
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ca24cf5_1c137213",
        "filename": "artd/path_utils.cc",
        "patchSetId": 7
      },
      "lineNbr": 239,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "I can only see one call. Is this a separate function just because of the flow with the fatal after the switch?\n\nTBH I think it\u0027d be fair to use - dare I say it - a `goto` in a case like this. Another option is a lambda inside `BuildWritableProfilePath`. But optional - this is ok too, it\u0027s just that one may think it\u0027s called from more than one place.",
      "range": {
        "startLine": 239,
        "startChar": 27,
        "endLine": 239,
        "endChar": 55
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "befaff5e_5c997cf4",
        "filename": "artd/path_utils.cc",
        "patchSetId": 7
      },
      "lineNbr": 239,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7ca24cf5_1c137213",
      "range": {
        "startLine": 239,
        "startChar": 27,
        "endLine": 239,
        "endChar": 55
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd95166e_72e4bdaa",
        "filename": "artd/path_utils.cc",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "We\u0027re getting an `isPreReboot` flag here that can potentially be inconsistent with `is_pre_reboot`. Can we have a DCHECK that it isn\u0027t?\n```suggestion\n  DCHECK_EQ(tmp_profile_path.isPreReboot, is_pre_reboot);\n  return BuildWritableProfilePath(tmp_profile_path.finalPath, is_pre_reboot);\n```",
      "range": {
        "startLine": 263,
        "startChar": 34,
        "endLine": 263,
        "endChar": 50
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a041535_fc7c6038",
        "filename": "artd/path_utils.cc",
        "patchSetId": 7
      },
      "lineNbr": 263,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fd95166e_72e4bdaa",
      "range": {
        "startLine": 263,
        "startChar": 34,
        "endLine": 263,
        "endChar": 50
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "560f081f_819ef19a",
        "filename": "artd/path_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "I\u0027d go with a tiny class that stores the oat path and the pre-reboot flag and have methods to return the three paths from that. But I guess this gets the job done too, if you feel strongly about it.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 34,
        "endChar": 2
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24213fa7_bdadd245",
        "filename": "artd/path_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Thanks for the suggestion. I think the struct is simpler and does the job for now.",
      "parentUuid": "560f081f_819ef19a",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 34,
        "endChar": 2
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eb383aa_92b46e07",
        "filename": "artd/path_utils_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-12T19:28:05Z",
      "side": 1,
      "message": "We can get staged paths in dalvik-cache as well, right? Please add a test for that too, partly to make it clear it\u0027s a combination that occurs.",
      "range": {
        "startLine": 77,
        "startChar": 18,
        "endLine": 77,
        "endChar": 41
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fc27965_39149a78",
        "filename": "artd/path_utils_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-18T15:19:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6eb383aa_92b46e07",
      "range": {
        "startLine": 77,
        "startChar": 18,
        "endLine": 77,
        "endChar": 41
      },
      "revId": "507b6f4cc11ee2cd2c7b6cf54f271345d2ec7bc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}