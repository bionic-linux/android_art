{
  "comments": [
    {
      "key": {
        "uuid": "fa58a6db_ed6199ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-18T10:24:09Z",
      "side": 1,
      "message": "This is unfortunate :( Note: one device build only builds one apex kind. We\u0027re not going to generate two apexes for a build (eg sailfish only builds the release version, walleye only builds the debug version). Can this information be used for still having symbols?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb76c5a_9ae61c17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-03-18T10:36:12Z",
      "side": 1,
      "message": "Unfortunately, no. The build rules are anyway generated regardless of which one is selected for installation (i.e added to PRODUCT_PACKAGES). And the build system complains when it finds multiple rules for the same target.\n\nFor the devices using the release version, developers could replace \u0027com.android.runtime\u0027 with \u0027com.android.runtime.release\u0027 in the stack trace, which I admit that it\u0027s not ideal...",
      "parentUuid": "fa58a6db_ed6199ef",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "581ac1f7_67c82297",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-18T10:47:41Z",
      "side": 1,
      "message": "Could we hardcode the symbol directory to the apex actual name on device (ie com.android.runtime)?",
      "parentUuid": "1cb76c5a_9ae61c17",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b572c2fa_b85ed854",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-03-18T11:05:25Z",
      "side": 1,
      "message": "Sorry, I don\u0027t understand. That is what this change does.\n\nI think the ideal solution is to merge *.debug and *.release to a single module definition with conditionals in it.\n\napex_art { // a new module type\n    name: \"com.android.runtime\",\n    native_shared_libraries: [...],\n    product: {\n        runtime_apex_debuggable: {\n            native_shared_libraries: [...],\n        },\n    },\n}",
      "parentUuid": "581ac1f7_67c82297",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "931b3fec_4aec8f28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-18T11:10:22Z",
      "side": 1,
      "message": "I mean, the apex name in its manifest (?) is com.android.runtime. Can we at build just pick this up and generate the debug symbols at this location, always?",
      "parentUuid": "b572c2fa_b85ed854",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e04fa24_f045fa50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-03-18T11:17:28Z",
      "side": 1,
      "message": "We usually don\u0027t read the input file (like the manifest) when generating the build rules. Even if we do, the problem still persists; the two apexes will give same name com.android.runtime and this will create two rules for the same symbol path $(PRODUCT_OUT)/symbol/apex/com.android.runtime/lib/libSomething.so",
      "parentUuid": "931b3fec_4aec8f28",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b23d2309_1ff85b2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-18T11:51:52Z",
      "side": 1,
      "message": "Right. How about a symlink?",
      "parentUuid": "2e04fa24_f045fa50",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "2c1cdde7f99e6ddaa64c99da1e68e5d1c3323c1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}