{
  "comments": [
    {
      "key": {
        "uuid": "400b5318_185c0568",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-06-27T09:13:20Z",
      "side": 1,
      "message": "Extremely pedantic nit: we use underscore at the end to mark fields. \u0027and_insn\u0027?",
      "range": {
        "startLine": 268,
        "startChar": 10,
        "endLine": 268,
        "endChar": 14
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00fcfb29_fe670136",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-06-27T09:31:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "400b5318_185c0568",
      "range": {
        "startLine": 268,
        "startChar": 10,
        "endLine": 268,
        "endChar": 14
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "400b5318_18d9a500",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 1992,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-06-27T10:21:19Z",
      "side": 1,
      "message": "I think we should always use CHECK for ParameterValue instructions, as the order matters.",
      "range": {
        "startLine": 1992,
        "startChar": 6,
        "endLine": 1992,
        "endChar": 15
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a342592e_4baea542",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 1992,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-06-27T10:25:56Z",
      "side": 1,
      "message": "Done. Note that this is note done consistently in other tests.",
      "parentUuid": "400b5318_18d9a500",
      "range": {
        "startLine": 1992,
        "startChar": 6,
        "endLine": 1992,
        "endChar": 15
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "033ec59b_ae60f719",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 1992,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-06-27T10:43:18Z",
      "side": 1,
      "message": "Let me just point out that the way -DAG is defined cannot mix up these lines. -DAG line is matched with the first suitable (regex match + not matched before) line after the current cursor location. I do agree that it makes it difficult to spot bugs such as mixing up types, e.g. foo(long, int) and having ParamValues for int and then long.",
      "parentUuid": "a342592e_4baea542",
      "range": {
        "startLine": 1992,
        "startChar": 6,
        "endLine": 1992,
        "endChar": 15
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "432d1d76_68e603b9",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 2005,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-06-27T10:21:19Z",
      "side": 1,
      "message": "You may want to prevent inlining of those methods too.",
      "range": {
        "startLine": 2005,
        "startChar": 20,
        "endLine": 2005,
        "endChar": 46
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8011cb44_da4a0511",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 2005,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-06-27T10:25:56Z",
      "side": 1,
      "message": "Yes I did it. Commented on this in reply to David.",
      "parentUuid": "432d1d76_68e603b9",
      "range": {
        "startLine": 2005,
        "startChar": 20,
        "endLine": 2005,
        "endChar": 46
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6336a1c9_e9a7556d",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 2240,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-06-27T09:13:20Z",
      "side": 1,
      "message": "Please use constants for the expected values. I know it\u0027s a drag but there\u0027s a good chance all of these calls will get inlined in near future and the arithmetic optimized out.",
      "range": {
        "startLine": 2240,
        "startChar": 20,
        "endLine": 2240,
        "endChar": 32
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8011cb44_5ad27569",
        "filename": "test/458-checker-instruction-simplification/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 2240,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-06-27T09:31:11Z",
      "side": 1,
      "message": "Ok. I should be using the `throw` trick here as well!",
      "parentUuid": "6336a1c9_e9a7556d",
      "range": {
        "startLine": 2240,
        "startChar": 20,
        "endLine": 2240,
        "endChar": 32
      },
      "revId": "090105b2fee057fee6531e456f88a705456509c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}