{
  "comments": [
    {
      "key": {
        "uuid": "102df676_d4e4d928",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 2
      },
      "lineNbr": 1163,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-05-05T22:15:58Z",
      "side": 1,
      "message": "initial is used in bce for initial value of induction variable. Maybe just call it input1 instead?",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad24d1ad_8d1d6191",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 2
      },
      "lineNbr": 1163,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T08:12:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "102df676_d4e4d928",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d026fe9b_7dca2d9e",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 1307,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-05-05T22:15:58Z",
      "side": 1,
      "message": "Should `at` be `to` in the comment?",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d62a1ee_c96c7105",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 1307,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T08:12:30Z",
      "side": 1,
      "message": "Good catch. done.",
      "parentUuid": "d026fe9b_7dca2d9e",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d19f971_d6d8a2f2",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 2
      },
      "lineNbr": 977,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-05-05T22:15:58Z",
      "side": 1,
      "message": "synthesized uses only seem to be used in some asserts. What\u0027s the true purpose of it?",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd290587_ee8a9f1b",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 2
      },
      "lineNbr": 977,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T08:12:30Z",
      "side": 1,
      "message": "It\u0027s actually used during register allocation. In AllocateblockedReg (where we don\u0027t have enough registers for all live instructions), we spill intervals based on the next use of the intervals. Those synthesized uses ensure we prefer spilling an interval used outside of a loop rather than a interval used inside.",
      "parentUuid": "6d19f971_d6d8a2f2",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd24a5a6_7d0f6868",
        "filename": "compiler/optimizing/ssa_liveness_analysis.h",
        "patchSetId": 2
      },
      "lineNbr": 977,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-05-06T17:31:01Z",
      "side": 1,
      "message": "I see. So uses aren\u0027t for correctness of register allocation. It\u0027s more like a hint thing. The AddLoopRange() in ComputeLiveRanges() guarantees correctness, right?\n\nIt seems to me there is no need to add synthesize use at all back edges, since any use that has higher priority then the use added at current-\u003eGetLifetimeEnd() is also something used in the loop. It\u0027s hard to say another back edge should take priority over that that use. It all depends on which branch in the loop is taken.",
      "parentUuid": "cd290587_ee8a9f1b",
      "revId": "0c2385bb3b030984062b19fa4f74e4ad38a5842f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}