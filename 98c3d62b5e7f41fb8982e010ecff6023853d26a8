{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "50e7d385_b247356a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-09T18:48:08Z",
      "side": 1,
      "message": "LGTM except for minor nits below.",
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24dce64d_f08bcf76",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2019,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-09T18:48:08Z",
      "side": 1,
      "message": "Since this is specifically used only for homogenous-space compaction, can you please name it to indicate that.",
      "range": {
        "startLine": 2019,
        "startChar": 9,
        "endLine": 2019,
        "endChar": 18
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6480a70c_288e58f9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2019,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-07-10T22:30:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24dce64d_f08bcf76",
      "range": {
        "startLine": 2019,
        "startChar": 9,
        "endLine": 2019,
        "endChar": 18
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff86b4e7_92f0ddea",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2047,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-09T18:48:08Z",
      "side": 1,
      "message": "Can we avoid reassessing this for our default GC? Maybe have a local variable store the value of the first call in the loop. And update the variable if and when homogeneous compaction is done.",
      "range": {
        "startLine": 2047,
        "startChar": 8,
        "endLine": 2047,
        "endChar": 29
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8d85470_5d95f9b9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2047,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-07-10T22:30:59Z",
      "side": 1,
      "message": "Did that, though I wonder whether it\u0027s worth it. have_reclaimed_enough() isn\u0027t very expensive, right? And this is already a very slow path.\n\nIt now occurred to me that previously we were successfully returning after a HSC, even if we still didn\u0027t reclaim \"enough\". That feels wrong to me, so I think the change is positive. But does count_delayed_oom_ still make sense now?",
      "parentUuid": "ff86b4e7_92f0ddea",
      "range": {
        "startLine": 2047,
        "startChar": 8,
        "endLine": 2047,
        "endChar": 29
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05bb64e6_e5f417cd",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2047,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-11T03:05:45Z",
      "side": 1,
      "message": "I agree it\u0027s not expensive, but it just looked odd to call it again, particularly for our mostly used GCs.\n\n\u003e It now occurred to me that previously we were successfully returning after a HSC, even if we still didn\u0027t reclaim \"enough\". That feels wrong to me, so I think the change is positive.\n\nI don\u0027t see how it was the case before. You were calling `have_reclaimed_enough()` again after HSC. So wouldn\u0027t that have ensured that we returned only after reclaiming enough?\n\n\u003e But does count_delayed_oom_ still make sense now?\n\nYes, I agree. This counter isn\u0027t needed anymore.",
      "parentUuid": "b8d85470_5d95f9b9",
      "range": {
        "startLine": 2047,
        "startChar": 8,
        "endLine": 2047,
        "endChar": 29
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0c96743_56f38be3",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2047,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-07-11T23:57:48Z",
      "side": 1,
      "message": "I meant in the base code. I think even if have_reclaimed_enough was consistently false, and we did an HSC, we could set ptr to a non-null value at line 2012, fail the test at 2050, and return it at 2054. That seems like an oversight.\n\nActually, looking at count_delayed_oom_ again, it arguablty makes more sense than before. Now it counts how often we got enough memory back from HSC to rescue us from an OOME, which the heap.h comment says was what we meant to count before (in \"base\"). We also did that before, but would often have succeeded even if HSC accomplished nothing, so the count wasn\u0027t meaningful.\n\nWith that in mind, maybe we should just leave it?",
      "parentUuid": "05bb64e6_e5f417cd",
      "range": {
        "startLine": 2047,
        "startChar": 8,
        "endLine": 2047,
        "endChar": 29
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18859e77_d3246753",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 2047,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-07-12T07:12:36Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "f0c96743_56f38be3",
      "range": {
        "startLine": 2047,
        "startChar": 8,
        "endLine": 2047,
        "endChar": 29
      },
      "revId": "98c3d62b5e7f41fb8982e010ecff6023853d26a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}