{
  "comments": [
    {
      "key": {
        "uuid": "6102d48e_15133e80",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 951,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This isn\u0027t this CL, but does this local variable write have a meaning as we return in the next line?",
      "range": {
        "startLine": 951,
        "startChar": 0,
        "endLine": 951,
        "endChar": 45
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_4c9db3f9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3051,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This line may be better placed in ConcurrentGCTask::Run(), like the transition and the trim code, in case ConcurrentGC() is called in another context down the road.",
      "range": {
        "startLine": 3051,
        "startChar": 0,
        "endLine": 3051,
        "endChar": 45
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_cc0c03e3",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3081,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "I wonder if this call should be synchronized with the task processor.",
      "range": {
        "startLine": 3081,
        "startChar": 0,
        "endLine": 3081,
        "endChar": 67
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_2cd83701",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3121,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Should we check !CanAddHeapTask() here?",
      "range": {
        "startLine": 3121,
        "startChar": 37,
        "endLine": 3121,
        "endChar": 40
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_3a550993",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 484,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Could these two be private?",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 484,
        "endChar": 49
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_f6ce98c0",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Can this be private?",
      "range": {
        "startLine": 626,
        "startChar": 7,
        "endLine": 626,
        "endChar": 23
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e133247d_4590fc59",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 631,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Can this be private?",
      "range": {
        "startLine": 631,
        "startChar": 7,
        "endLine": 631,
        "endChar": 38
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_939e3e71",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This would make the java_lang_ref_ReferenceQueue_add calls asynchronous.\n\nWhat\u0027s the advantage of this over the old way? Is it that the GC time gets shorter as the old synchronous java_lang_ref_ReferenceQueue_add calls are expected to take longer than the asynchronous AddTask calls?\n\nNot sure about this, but would there be any issue due to the change from the synchronous calls to the asynchronous calls? Would it be ok for the java_lang_ref_ReferenceQueue_add calls to have not finished running when the next GC starts?",
      "range": {
        "startLine": 241,
        "startChar": 57,
        "endLine": 241,
        "endChar": 64
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_cf83d569",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Does it make sense to initialize this to true?",
      "range": {
        "startLine": 24,
        "startChar": 86,
        "endLine": 24,
        "endChar": 90
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_93dcfef2",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "If we are shutting down, would it make sense to return nullptr as it could be a concurrent GC which may take a while?",
      "range": {
        "startLine": 55,
        "startChar": 10,
        "endLine": 55,
        "endChar": 22
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_7a070144",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Why don\u0027t we need to check if the target time was updated before returning the task here?",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_a9e2d957",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Does the updated target time gets set (SetTargetRuntime()) without synchronization. Should it be synchronized?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 56
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_4955a54a",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "UNREACHABLE()?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 17
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_8ce72b68",
        "filename": "runtime/gc/task_processor.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Add a comment on what this is?",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_fabbf1e6",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Do we need this?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 8
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_3303d2ae",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Should this be named a Task instead of a Thread?",
      "range": {
        "startLine": 63,
        "startChar": 26,
        "endLine": 63,
        "endChar": 32
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_0ce57b33",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Maybe Atomic\u003cbool\u003e?",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 15
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_da06f511",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "the",
      "range": {
        "startLine": 86,
        "startChar": 53,
        "endLine": 86,
        "endChar": 56
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_93c95eea",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "What\u0027s the significance of doing a self interrupt here? The task processor is already interrupted in line 95.",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 106,
        "endChar": 71
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}