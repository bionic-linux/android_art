{
  "comments": [
    {
      "key": {
        "uuid": "6102d48e_15133e80",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 951,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This isn\u0027t this CL, but does this local variable write have a meaning as we return in the next line?",
      "range": {
        "startLine": 951,
        "startChar": 0,
        "endLine": 951,
        "endChar": 45
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_f7bf8832",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 951,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6102d48e_15133e80",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_4c9db3f9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3051,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This line may be better placed in ConcurrentGCTask::Run(), like the transition and the trim code, in case ConcurrentGC() is called in another context down the road.",
      "range": {
        "startLine": 3051,
        "startChar": 0,
        "endLine": 3051,
        "endChar": 45
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_39d41375",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3051,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f918d6_4c9db3f9",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_0da572ba",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3051,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-19T23:10:24Z",
      "side": 1,
      "message": "I don\u0027t think it makes sense to say Relaxed here and SequentiallyConsistent in the CAS.  If this is only a preformance hint, it\u0027s probably OK to say Relaxed in both places.  You\u0027re still guaranteed that only the first CAS will succeed.  If you\u0027re relying on a successful CAS to indicate completetion of the prior GC, then you should use at least Release here.",
      "range": {
        "startLine": 3051,
        "startChar": 30,
        "endLine": 3051,
        "endChar": 37
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_cc0c03e3",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3081,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "I wonder if this call should be synchronized with the task processor.",
      "range": {
        "startLine": 3081,
        "startChar": 0,
        "endLine": 3081,
        "endChar": 67
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_40be9233",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3081,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Good point, I\u0027ll add a TODO since I think its benign currently.",
      "parentUuid": "01f918d6_cc0c03e3",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_2cd83701",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3121,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Should we check !CanAddHeapTask() here?",
      "range": {
        "startLine": 3121,
        "startChar": 37,
        "endLine": 3121,
        "endChar": 40
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_60daaea5",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3121,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f918d6_2cd83701",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6175743d_2e0da7a6",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 3156,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-19T23:10:24Z",
      "side": 1,
      "message": "Again, I think all accesses should be Relaxed, or this should be strengthened.  The question is whether this is a hint or promises something.",
      "range": {
        "startLine": 3156,
        "startChar": 9,
        "endLine": 3156,
        "endChar": 43
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_3a550993",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 484,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Could these two be private?",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 484,
        "endChar": 49
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_977df4da",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 484,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6102d48e_3a550993",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_f6ce98c0",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Can this be private?",
      "range": {
        "startLine": 626,
        "startChar": 7,
        "endLine": 626,
        "endChar": 23
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_e051fe5c",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a18bec6e_f6ce98c0",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e133247d_4590fc59",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 631,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Can this be private?",
      "range": {
        "startLine": 631,
        "startChar": 7,
        "endLine": 631,
        "endChar": 38
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_a43a1ae9",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 631,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e133247d_4590fc59",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217ffc22_ccf2effd",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 1065,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-19T23:10:24Z",
      "side": 1,
      "message": "Should we be switching to C++11 atomic\u003cbool\u003e?  I suspect that\u0027s now OK for AOSP.",
      "range": {
        "startLine": 1065,
        "startChar": 2,
        "endLine": 1065,
        "endChar": 14
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217ffc22_52f77469",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 5
      },
      "lineNbr": 1065,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-20T01:08:31Z",
      "side": 1,
      "message": "Good question, probably better to do that in another change though.",
      "parentUuid": "217ffc22_ccf2effd",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_939e3e71",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "This would make the java_lang_ref_ReferenceQueue_add calls asynchronous.\n\nWhat\u0027s the advantage of this over the old way? Is it that the GC time gets shorter as the old synchronous java_lang_ref_ReferenceQueue_add calls are expected to take longer than the asynchronous AddTask calls?\n\nNot sure about this, but would there be any issue due to the change from the synchronous calls to the asynchronous calls? Would it be ok for the java_lang_ref_ReferenceQueue_add calls to have not finished running when the next GC starts?",
      "range": {
        "startLine": 241,
        "startChar": 57,
        "endLine": 241,
        "endChar": 64
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_bb77bbc2",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "I think that was one of the problems, the GC could get blocked if the reference queue daemon was blocked here (e.g. by GetThreadStack). So we need to do it async or else we may get deadlocks (such as gcstress 129).\n\nsynchronized (ReferenceQueue.class) {\n                        while (ReferenceQueue.unenqueued \u003d\u003d null) {\n                            ReferenceQueue.class.wait();\n// suspend check at backwards branch.\n                        }\n                        list \u003d ReferenceQueue.unenqueued;\n                        ReferenceQueue.unenqueued \u003d null;\n                    }\n\nI don\u0027t think there are any issues since we store the cleared references in a global ref. Also since the task processor maintains order, it would mean that things are always added in the right order.",
      "parentUuid": "a18bec6e_939e3e71",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6175743d_31366ad3",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-19T23:10:24Z",
      "side": 1,
      "message": "Any danger that we will end up finalizing objects before the corresponding WeakReferences are enquued?",
      "range": {
        "startLine": 241,
        "startChar": 57,
        "endLine": 241,
        "endChar": 64
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_0d6e92ee",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T23:29:14Z",
      "side": 1,
      "message": "Is there a chance that the global reference table could overflow if we have a lot of Reference objects to process?",
      "parentUuid": "6102d48e_bb77bbc2",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217ffc22_0c3b170c",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T23:37:52Z",
      "side": 1,
      "message": "Never mind. It is only one object.",
      "parentUuid": "6102d48e_0d6e92ee",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217ffc22_b216d8f0",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-20T01:08:31Z",
      "side": 1,
      "message": "No, this maintains the ordering. And weak references are cleared earlier with ClearWhiteReferences.",
      "parentUuid": "6175743d_31366ad3",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_cf83d569",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Does it make sense to initialize this to true?",
      "range": {
        "startLine": 24,
        "startChar": 86,
        "endLine": 24,
        "endChar": 90
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_fb4653f2",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "I think its not necessary.",
      "parentUuid": "6102d48e_cf83d569",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_93dcfef2",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "If we are shutting down, would it make sense to return nullptr as it could be a concurrent GC which may take a while?",
      "range": {
        "startLine": 55,
        "startChar": 10,
        "endLine": 55,
        "endChar": 22
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_44900e5a",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "This is certainly a good question, if we skip the tasks it could result in objects not being finalized however. I think we should leave it for now.",
      "parentUuid": "a18bec6e_93dcfef2",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_7a070144",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Why don\u0027t we need to check if the target time was updated before returning the task here?",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_12e472de",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6102d48e_7a070144",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_a9e2d957",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Does the updated target time gets set (SetTargetRuntime()) without synchronization. Should it be synchronized?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 56
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_fb73f387",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f918d6_a9e2d957",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_4955a54a",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "UNREACHABLE()?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 17
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_f2a436c0",
        "filename": "runtime/gc/task_processor.cc",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f918d6_4955a54a",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_8ce72b68",
        "filename": "runtime/gc/task_processor.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Add a comment on what this is?",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_9b5bdff9",
        "filename": "runtime/gc/task_processor.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Deleted",
      "parentUuid": "01f918d6_8ce72b68",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217ffc22_0c9d5741",
        "filename": "runtime/gc/task_processor.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-19T23:10:24Z",
      "side": 1,
      "message": "Explanatory comment?  It wasn\u0027t obvious to me what this is intended to do.",
      "range": {
        "startLine": 67,
        "startChar": 12,
        "endLine": 67,
        "endChar": 56
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41723059_6d9095ac",
        "filename": "runtime/gc/task_processor.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-20T01:08:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "217ffc22_0c9d5741",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_fabbf1e6",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Do we need this?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 8
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_f20796bd",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Yes\n\nexternal/gtest/include/gtest/internal/gtest-internal.h:454:43: error: cannot convert \u0027art::gc::TaskProcessorTest_Ordering_Test*\u0027 to \u0027testing::Test*\u0027 in return",
      "parentUuid": "6102d48e_fabbf1e6",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_3303d2ae",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Should this be named a Task instead of a Thread?",
      "range": {
        "startLine": 63,
        "startChar": 26,
        "endLine": 63,
        "endChar": 32
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_329d2e42",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a18bec6e_3303d2ae",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_0ce57b33",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "Maybe Atomic\u003cbool\u003e?",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 15
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_7bcee33f",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f918d6_0ce57b33",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6102d48e_da06f511",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "the",
      "range": {
        "startLine": 86,
        "startChar": 53,
        "endLine": 86,
        "endChar": 56
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_3272ce80",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6102d48e_da06f511",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a18bec6e_93c95eea",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-19T19:48:20Z",
      "side": 1,
      "message": "What\u0027s the significance of doing a self interrupt here? The task processor is already interrupted in line 95.",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 106,
        "endChar": 71
      },
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01f918d6_725166d8",
        "filename": "runtime/gc/task_processor_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-12-19T21:59:39Z",
      "side": 1,
      "message": "Interrupt gets cleared when RunTasksUntilInterrupted is called, so if we want to self interrupt, this is the easiest way to do it.",
      "parentUuid": "a18bec6e_93c95eea",
      "revId": "7d9dc9b0c96ecbf09627c36af87b912432b0116b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}