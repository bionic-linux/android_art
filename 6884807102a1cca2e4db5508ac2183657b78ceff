{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17974e21_af4deed2",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6264,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Revert, please. This is already handled by the `Jalr()` we call below.",
      "range": {
        "startLine": 6264,
        "startChar": 2,
        "endLine": 6264,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95eb64b_4c0fe388",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6275,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 6275,
        "startChar": 2,
        "endLine": 6275,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a631345_85b2d4bc",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6286,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 6286,
        "startChar": 2,
        "endLine": 6286,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26d5d0d7_a2911741",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6802,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: Add `{`, `}`.",
      "range": {
        "startLine": 6801,
        "startChar": 2,
        "endLine": 6802,
        "endChar": 31
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9061156a_49d459fa",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6964,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Define local variables in the cases that need it, add `{`/`}` where necessary.",
      "range": {
        "startLine": 6964,
        "startChar": 2,
        "endLine": 6964,
        "endChar": 25
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb606c65_92b4e3c7",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6991,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Remove blank line.",
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589c40a4_d50f3348",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6996,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Once a `kCondCBranch` is promoted to `kCondBranch`, it cannot be promoted to `kCondCBranch21`. If we checked `old_type_` here, we could promote `kCondCBranch` -\u003e `kCondBranch` -\u003e `kCondCBranch21` for forward branches but backward conditional branches can be promoted to `kCondBranch` during initialization, losing the `compression_allowed` information.",
      "range": {
        "startLine": 6996,
        "startChar": 24,
        "endLine": 6996,
        "endChar": 48
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f78d378f_050fc70e",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7002,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Update comment.",
      "range": {
        "startLine": 7002,
        "startChar": 41,
        "endLine": 7002,
        "endChar": 54
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65d3469c_2c3867c6",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7146,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Add extra scope so that the `J(offset)` is emitted with \"C\" disabled.",
      "range": {
        "startLine": 7146,
        "startChar": 6,
        "endLine": 7146,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b065493b_98c73bef",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7147,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "I\u0027d prefer `condition \u003d\u003d kCondNE`. And maybe `DCHECK_EQ(condition, kCondEQ)` in the else-block.",
      "range": {
        "startLine": 7147,
        "startChar": 10,
        "endLine": 7147,
        "endChar": 57
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b18056f4_b0500484",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7209,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `branch_length`.",
      "range": {
        "startLine": 7209,
        "startChar": 11,
        "endLine": 7209,
        "endChar": 23
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98ea1f0_2b11e606",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7304,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "This essentially forces the call to `Bind()` to be done with the \"Zca\" flag as when placing branches to the label. That\u0027s not great. Maybe the TODO from line 7217 should really be implemented first.",
      "range": {
        "startLine": 7304,
        "startChar": 20,
        "endLine": 7304,
        "endChar": 62
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a3261ea_bd9778b4",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 14
      },
      "lineNbr": 1968,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "We could also have a `kLongCondCBranch` but I\u0027d rather not emit that much code for a method in the first place.",
      "range": {
        "startLine": 1968,
        "startChar": 6,
        "endLine": 1968,
        "endChar": 21
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "402b7933_2e2bc00d",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 14
      },
      "lineNbr": 2008,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `compression_allowed`.",
      "range": {
        "startLine": 2008,
        "startChar": 80,
        "endLine": 2008,
        "endChar": 98
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b0f4bc1_01eb47b3",
        "filename": "compiler/utils/riscv64/assembler_riscv64_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 340,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `nop_size`.",
      "range": {
        "startLine": 340,
        "startChar": 17,
        "endLine": 340,
        "endChar": 24
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}