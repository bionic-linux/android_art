{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17974e21_af4deed2",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6264,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Revert, please. This is already handled by the `Jalr()` we call below.",
      "range": {
        "startLine": 6264,
        "startChar": 2,
        "endLine": 6264,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a18e341d_6a63e347",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6264,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17974e21_af4deed2",
      "range": {
        "startLine": 6264,
        "startChar": 2,
        "endLine": 6264,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95eb64b_4c0fe388",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6275,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 6275,
        "startChar": 2,
        "endLine": 6275,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48f02424_9a3a04f2",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6275,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b95eb64b_4c0fe388",
      "range": {
        "startLine": 6275,
        "startChar": 2,
        "endLine": 6275,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a631345_85b2d4bc",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6286,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 6286,
        "startChar": 2,
        "endLine": 6286,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00fe1f05_35fdc39a",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6286,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a631345_85b2d4bc",
      "range": {
        "startLine": 6286,
        "startChar": 2,
        "endLine": 6286,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26d5d0d7_a2911741",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6802,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: Add `{`, `}`.",
      "range": {
        "startLine": 6801,
        "startChar": 2,
        "endLine": 6802,
        "endChar": 31
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bad3cd6c_64144c74",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6802,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26d5d0d7_a2911741",
      "range": {
        "startLine": 6801,
        "startChar": 2,
        "endLine": 6802,
        "endChar": 31
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9061156a_49d459fa",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6964,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Define local variables in the cases that need it, add `{`/`}` where necessary.",
      "range": {
        "startLine": 6964,
        "startChar": 2,
        "endLine": 6964,
        "endChar": 25
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26e1c879_6397a1ae",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6964,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "There is `FALLTHROUGH_INTENDED;` at line 6989 so having that declaration on top level seems (to me at least) a bit more clear",
      "parentUuid": "9061156a_49d459fa",
      "range": {
        "startLine": 6964,
        "startChar": 2,
        "endLine": 6964,
        "endChar": 25
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac00fac7_dca52353",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6964,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:26:27Z",
      "side": 1,
      "message": "Fixed: on line 6963",
      "parentUuid": "26e1c879_6397a1ae",
      "range": {
        "startLine": 6964,
        "startChar": 2,
        "endLine": 6964,
        "endChar": 25
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb606c65_92b4e3c7",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6991,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Remove blank line.",
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db1d3a68_fb5edaa5",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6991,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb606c65_92b4e3c7",
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589c40a4_d50f3348",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6996,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Once a `kCondCBranch` is promoted to `kCondBranch`, it cannot be promoted to `kCondCBranch21`. If we checked `old_type_` here, we could promote `kCondCBranch` -\u003e `kCondBranch` -\u003e `kCondCBranch21` for forward branches but backward conditional branches can be promoted to `kCondBranch` during initialization, losing the `compression_allowed` information.",
      "range": {
        "startLine": 6996,
        "startChar": 24,
        "endLine": 6996,
        "endChar": 48
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e65af8b_6a38bcd1",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6996,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "I added back-promotion if possible but I am not sure whether it\u0027s safe enough. Wouldn\u0027t this feature cause some kind of \u0027ping-pong\u0027 and lead to hanging on the loop in `Riscv64Assembler::PromoteBranches()`?",
      "parentUuid": "589c40a4_d50f3348",
      "range": {
        "startLine": 6996,
        "startChar": 24,
        "endLine": 6996,
        "endChar": 48
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82a645d8_cfae4ab0",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 6996,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:36:39Z",
      "side": 1,
      "message": "Re-think again and seems like the answer is yes -- it\u0027s safe since the promotion itself does not decrease size of branch. It just tries to use a shorter version if possible.",
      "parentUuid": "0e65af8b_6a38bcd1",
      "range": {
        "startLine": 6996,
        "startChar": 24,
        "endLine": 6996,
        "endChar": 48
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f78d378f_050fc70e",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7002,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Update comment.",
      "range": {
        "startLine": 7002,
        "startChar": 41,
        "endLine": 7002,
        "endChar": 54
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b7b7ce0_03fda08f",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7002,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f78d378f_050fc70e",
      "range": {
        "startLine": 7002,
        "startChar": 41,
        "endLine": 7002,
        "endChar": 54
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65d3469c_2c3867c6",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7146,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Add extra scope so that the `J(offset)` is emitted with \"C\" disabled.",
      "range": {
        "startLine": 7146,
        "startChar": 6,
        "endLine": 7146,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0feba5a_9ab052a8",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7146,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Isn\u0027t `case`-level scope enough? It covers `J` too",
      "parentUuid": "65d3469c_2c3867c6",
      "range": {
        "startLine": 7146,
        "startChar": 6,
        "endLine": 7146,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "521478da_6dff6683",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7146,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:29:51Z",
      "side": 1,
      "message": "Pardon me. Fixed.",
      "parentUuid": "f0feba5a_9ab052a8",
      "range": {
        "startLine": 7146,
        "startChar": 6,
        "endLine": 7146,
        "endChar": 51
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b065493b_98c73bef",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7147,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "I\u0027d prefer `condition \u003d\u003d kCondNE`. And maybe `DCHECK_EQ(condition, kCondEQ)` in the else-block.",
      "range": {
        "startLine": 7147,
        "startChar": 10,
        "endLine": 7147,
        "endChar": 57
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce45d694_d40a6476",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7147,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "In that case condition is aligned with actually used instruction `*eq*` so probably it could be a better option.",
      "parentUuid": "b065493b_98c73bef",
      "range": {
        "startLine": 7147,
        "startChar": 10,
        "endLine": 7147,
        "endChar": 57
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b18056f4_b0500484",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7209,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `branch_length`.",
      "range": {
        "startLine": 7209,
        "startChar": 11,
        "endLine": 7209,
        "endChar": 23
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10d7206b_e857d581",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7209,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b18056f4_b0500484",
      "range": {
        "startLine": 7209,
        "startChar": 11,
        "endLine": 7209,
        "endChar": 23
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98ea1f0_2b11e606",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7304,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "This essentially forces the call to `Bind()` to be done with the \"Zca\" flag as when placing branches to the label. That\u0027s not great. Maybe the TODO from line 7217 should really be implemented first.",
      "range": {
        "startLine": 7304,
        "startChar": 20,
        "endLine": 7304,
        "endChar": 62
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2c0b1a7_2e2b101b",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 14
      },
      "lineNbr": 7304,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done in Icbf61e9ec758b0116358c29bf93d27878a9c7753",
      "parentUuid": "c98ea1f0_2b11e606",
      "range": {
        "startLine": 7304,
        "startChar": 20,
        "endLine": 7304,
        "endChar": 62
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a3261ea_bd9778b4",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 14
      },
      "lineNbr": 1968,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "We could also have a `kLongCondCBranch` but I\u0027d rather not emit that much code for a method in the first place.",
      "range": {
        "startLine": 1968,
        "startChar": 6,
        "endLine": 1968,
        "endChar": 21
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "402b7933_2e2bc00d",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 14
      },
      "lineNbr": 2008,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `compression_allowed`.",
      "range": {
        "startLine": 2008,
        "startChar": 80,
        "endLine": 2008,
        "endChar": 98
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bce23c7e_8c81a677",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 14
      },
      "lineNbr": 2008,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "402b7933_2e2bc00d",
      "range": {
        "startLine": 2008,
        "startChar": 80,
        "endLine": 2008,
        "endChar": 98
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b0f4bc1_01eb47b3",
        "filename": "compiler/utils/riscv64/assembler_riscv64_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 340,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-16T13:25:51Z",
      "side": 1,
      "message": "Style: `nop_size`.",
      "range": {
        "startLine": 340,
        "startChar": 17,
        "endLine": 340,
        "endChar": 24
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37fcb487_570d22db",
        "filename": "compiler/utils/riscv64/assembler_riscv64_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 340,
      "author": {
        "id": 3190653
      },
      "writtenOn": "2024-04-18T11:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b0f4bc1_01eb47b3",
      "range": {
        "startLine": 340,
        "startChar": 17,
        "endLine": 340,
        "endChar": 24
      },
      "revId": "6884807102a1cca2e4db5508ac2183657b78ceff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}