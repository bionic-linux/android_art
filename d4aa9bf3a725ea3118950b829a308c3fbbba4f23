{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d88703fb_6175780a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 59
      },
      "lineNbr": 37,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "Nice improvements!",
      "range": {
        "startLine": 37,
        "startChar": 11,
        "endLine": 37,
        "endChar": 48
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4a4b0b8_0de0e207",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 59
      },
      "lineNbr": 0,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "First portion of comment.",
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b80f105_c5dfead7",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 59
      },
      "lineNbr": 202,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "Why do we need a copy? Can you add a comment?",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 202,
        "endChar": 36
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a85e67b7_b5761d1d",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 59
      },
      "lineNbr": 203,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "If I\u0027m understanding this comment right, should unreachable_blocks_vec_ just be a vector instead?",
      "range": {
        "startLine": 203,
        "startChar": 23,
        "endLine": 203,
        "endChar": 49
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b73809e_665b65e2",
        "filename": "compiler/optimizing/execution_subgraph.cc",
        "patchSetId": 59
      },
      "lineNbr": 203,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "Can you explain what \"this\" is? \"Unreachable blocks\" ?",
      "range": {
        "startLine": 203,
        "startChar": 5,
        "endLine": 203,
        "endChar": 9
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d2c1547_2e141e39",
        "filename": "compiler/optimizing/execution_subgraph.h",
        "patchSetId": 59
      },
      "lineNbr": 230,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "Would it make sense to allocate this outside of the loop and clear it on each iteration?",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 230,
        "endChar": 51
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63d6e53e_e5ec114d",
        "filename": "compiler/optimizing/execution_subgraph.h",
        "patchSetId": 59
      },
      "lineNbr": 237,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "Can you add comments what this loop does (the \u0027Zip\u0027 in ZipCount is pretty obscure btw, and I couldn\u0027t find the documentation on why \u0027Zip\u0027 in ZipLeftIter).",
      "range": {
        "startLine": 229,
        "startChar": 2,
        "endLine": 237,
        "endChar": 5
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828a90e2_d2f40771",
        "filename": "compiler/optimizing/execution_subgraph.h",
        "patchSetId": 59
      },
      "lineNbr": 324,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-10-22T09:00:23Z",
      "side": 1,
      "message": "I was looking for documentation around needs_prune_, but it\u0027d be great to add documentation for all these fields.",
      "range": {
        "startLine": 319,
        "startChar": 0,
        "endLine": 324,
        "endChar": 18
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b861a9c_550ff493",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 272,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "Nit: maybe a full stop in the end of the comment, here and elsewhere.",
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4979aca_92b0c57f",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 315,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "Could you please comment why it is so and not graph_-\u003eGetBlocks().size()?",
      "range": {
        "startLine": 315,
        "startChar": 42,
        "endLine": 315,
        "endChar": 53
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a7189fd_6eafab8f",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 335,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "Could you please add a comment why all_visited_nodes_ is updated here but not in the second loop?",
      "range": {
        "startLine": 335,
        "startChar": 6,
        "endLine": 335,
        "endChar": 25
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21d6e71e_cad0c843",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 353,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "4?",
      "range": {
        "startLine": 353,
        "startChar": 74,
        "endLine": 353,
        "endChar": 75
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a54ebea_99c7ef43",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 413,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "Could you please elaborate on this please? Does this mean that your algorithm also works for graphs where the post_order set doesn\u0027t contain all the blocks?",
      "range": {
        "startLine": 413,
        "startChar": 17,
        "endLine": 413,
        "endChar": 40
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d96421c_fecb230a",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 421,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "As you are using a special approach (rounding up with block_size for padding) of representing reachability matrix rather then a plain continuous BitVector representation, I think it might be reasonable to introduce a wrapper class over the BitVector and put all the low level bit manipulations there (e.g. PathBetween(), UnionBlock(), AddEdge(). It would make reachability_graph_ more safe to use (should it ever be used outside LSE) and also make ReachabilityAnalysisHelper simpler - just to have the algorithmic/traversal part in it.",
      "range": {
        "startLine": 421,
        "startChar": 15,
        "endLine": 421,
        "endChar": 25
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e62261e1_8d1e9838",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 59
      },
      "lineNbr": 427,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-10-22T16:46:19Z",
      "side": 1,
      "message": "It looks like you are relying on BitVector::kWordBits to be 32; could you insert a static_assert for that?",
      "range": {
        "startLine": 427,
        "startChar": 37,
        "endLine": 427,
        "endChar": 43
      },
      "revId": "d4aa9bf3a725ea3118950b829a308c3fbbba4f23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}