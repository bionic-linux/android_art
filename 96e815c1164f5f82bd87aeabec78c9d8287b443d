{
  "comments": [
    {
      "key": {
        "uuid": "7e6a5b07_24fc0862",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:37:26Z",
      "side": 1,
      "message": "if we expect all users of dexoptanalyzer to include dexoptanalyzer_return_codes.h, replace this usage information with a pointer to dexoptanalyzer_return_codes.h and require users to import that file to interpret the return codes?",
      "range": {
        "startLine": 88,
        "startChar": 72,
        "endLine": 113,
        "endChar": 17
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148ac992_88297c80",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:37:26Z",
      "side": 1,
      "message": "If we are going to expose these exit codes more widely, then I would like to change OatFileAssistant::GetDexOptNeeded to return a value from this enum rather than +/- OatFileAssistant::DexOptNeeded. That way we avoid having two different ways of packing the dexopt status into an int.\n\nIn that vein, how about defining this enum as art::DexOptNeededExitCode?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0ee18e4_b94902c1",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T16:04:30Z",
      "side": 1,
      "message": "OK, but then it should live in ART instead of the dexoptanalyzer.\n\nI do remember you mentioned this in our conversation, but I expected a follow-up refactor would be OK - considering it has far-reaching exposure into the package manager.",
      "parentUuid": "148ac992_88297c80",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "097c0ac6_5a780ca3",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-24T18:54:28Z",
      "side": 1,
      "message": "If you extract this in the runtime it will quirky to deal with error codes.\n\nI don\u0027t really feel a need that we must have the same enum for the both. I mean, you can easily statically check the enum here match the one in OatFileAssistant if the only goal is to make them have the same values.",
      "parentUuid": "a0ee18e4_b94902c1",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5cab4bf_476737f4",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-27T15:17:30Z",
      "side": 1,
      "message": "follow-up refactor is OK.",
      "parentUuid": "a0ee18e4_b94902c1",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c7c081_744dba6e",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-29T08:27:49Z",
      "side": 1,
      "message": "We should have the same enum for both to better keep installd in sync with art.\n\nIf we think it is important enough to include a header file for the dexoptanalyzer::ReturnCodes rather than hard coding them in installd, then it should be important enough to include a header file for the dalvik.system.DexFile return codes currently hard coded in installd\u0027s dexopt.h (NO_DEXOPT_NEEDED \u003d 0, DEX2OAT_FROM_SCRATCH \u003d 1, etc.). But it\u0027s silly to have two headers with status codes describing the same information, just packed in a different way. This unnecessary complexity makes the interface between installd and ART harder to understand and more costly to develop and maintain.\n\nWhat\u0027s quirky about dealing with error codes? If installd cares about the error code for dexoptanalyzer::ReturnCodes, then those same error conditions should be relevant for the dexopt needed status codes, in which case they should be included in the enum returned by getDexOptNeeded. If installd doesn\u0027t care about the error codes, then they should not be included in the header exported to installd.\n\nWhen I say follow-up refactor is OK, I mean I would prefer for this CL to expose the status codes we eventually intend to use for both dexoptanalyzer and getDexOptNeeded, but this CL need not change getDexOptNeeded to start using that new status code yet. I would prefer the shared status code to be defined as part of \"art\", not \"dexoptanalyzer\".",
      "parentUuid": "097c0ac6_5a780ca3",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b8362_bf82c550",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-29T15:22:06Z",
      "side": 1,
      "message": "But is the common case actually true?\n\nThe usage in installd differentiates between oat files and odex files (because it seems to only be only for odex files). Using the DexFile codes would remove error checks. Using the OatFileAssistant/DexOptAnalyzer codes would broaden DexFile and leak details into the framework (that we tried to avoid before).",
      "parentUuid": "92c7c081_744dba6e",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52206329_92f8eb3d",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:37:26Z",
      "side": 1,
      "message": "Call this ExitStatus rather than ReturnCode? With the goal of making it explicit that these values are used as a command exit status, so they should be positive and fit in 8 bits.",
      "range": {
        "startLine": 24,
        "startChar": 11,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "96e815c1164f5f82bd87aeabec78c9d8287b443d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}