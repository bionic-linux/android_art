{
  "comments": [
    {
      "key": {
        "uuid": "c8438f32_0ef10b0e",
        "filename": "compiler/dex/quick/arm/fp_arm.cc",
        "patchSetId": 6
      },
      "lineNbr": 204,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2013-12-20T14:27:25Z",
      "side": 1,
      "message": "I don\u0027t know what the gt_bias is but shouldn\u0027t this be kCondGlt? It looks really inconsistent with the rest.",
      "revId": "fa43227f878e5afabd2b18930bd13bada87a3539",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8649bc8_140d8c01",
        "filename": "compiler/dex/quick/arm/fp_arm.cc",
        "patchSetId": 6
      },
      "lineNbr": 204,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:54:33Z",
      "side": 1,
      "message": "The floating point compare has a less-than or greater-than variant, the only difference being what the behavior is for unordered results (e.g. NaN \u003c 0.0 is true for the less-than flavor and false for the greater-than flavor). gt_bias is reflecting which variant of the compare opcode is being used, but the code/names could certainly be more intention revealing.",
      "parentUuid": "c8438f32_0ef10b0e",
      "revId": "fa43227f878e5afabd2b18930bd13bada87a3539",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685e23ff_a714b426",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 6
      },
      "lineNbr": 214,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2013-12-20T15:54:33Z",
      "side": 1,
      "message": "required",
      "range": {
        "startLine": 214,
        "startChar": 10,
        "endLine": 214,
        "endChar": 18
      },
      "revId": "fa43227f878e5afabd2b18930bd13bada87a3539",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}