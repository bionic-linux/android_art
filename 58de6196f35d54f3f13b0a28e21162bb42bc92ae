{
  "comments": [
    {
      "key": {
        "uuid": "dbdd7f2d_520fa235",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "I would add a README.md in this directory with all this information in a formatted style",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3df66f91",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "needs the version 2.7, 2.8 etc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_d214925a",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "perhaps add a usage line here (with all optional comments listed, as done in Linux man)",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_d299f217",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "maybe strip the test_float part and the 19742 to get a more concise example",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_f2218eb1",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "these globals need a comment",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3256963e",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "as a general rule, give each class its own header comment, including such exception placeholders",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_ddde6b06",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: String doc for public constructors",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3d5bcf64",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "Leaving here in a comment what this loop is trying to parse would be good.",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_bd999f18",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "use () instead of [] if you\u0027re just going to immediately iterate over again so that it\u0027s lazy.\n\nThere\u0027s no need to eagerly make an array and then immediately visit it again to make another array.",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd73cbe1",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "Why -j1? Slowing things down unnecessarily.\n\nAre lines being mixed in if it\u0027s -jMoreThanOne ?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3d44af79",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: \"if compiled_methods\" ? Do you want to disambiguate vs [] etc?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_12a27aec",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "I like this abstraction for the host/target. A very clean way. However, I would add much more documentation to this class (first why it is there, and how it is used by a driver in a way that is no longer aware of host/target)\n\nAlso, this ABS and its subclasses are useful utilities that we could share between all upcoming scripts that need to set up host and target. How about making this their own module now already, so we can start importing these in others?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd210bb2",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_fd1ec774",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_1d81b362",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc string",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_1d0d3346",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3d12ef68",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: should be constant near top of file",
      "range": {
        "startLine": 207,
        "startChar": 22,
        "endLine": 207,
        "endChar": 55
      },
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_7d0c7747",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_5dd5fbb5",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "I\u0027m not a big fan of this. It has to wait until process fully finishes (sends EOF).\n\nIt would be a superior design if it read the output as it streamed in, perhaps this can return an iterator to every line in the output instead (the exact mechanism doesn\u0027t matter so long as it doesn\u0027t need to block).\n\n(and of course it would execute faster too)",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_bd435f4d",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc string",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_9d1dc36e",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "This doesn\u0027t seem right, should be able to use one of the existing android environment variables to get it (see the art script)",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd274bb4",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "hardcoding this string is not future proof because at some point we will have 64-bit only host builds",
      "range": {
        "startLine": 236,
        "startChar": 36,
        "endLine": 236,
        "endChar": 54
      },
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_bd1a7f71",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "A comment leaving why this load bias is necessary would be good",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_1d58d336",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc string",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_3d382fd2",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "with open(..) as f:\n  ...",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_5d625be2",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc string",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_7d6717f1",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "nit: missing doc string",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_1d97f39a",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "one-liner:\n\nclasspath \u003d property(attrgetter(\"_classpath\"))",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_9d74e396",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 271,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "Comments?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_5d917ba1",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "Docstring?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd5f4be9",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "Is it doing a root anywhere first?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_5d06dbf2",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "? It should probably be making a file in /data/tmp",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_9d55c3cf",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 308,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "interface nit: it should probably look more like an argv instead of a string, that way you can wrap every argument with \"\" to make it space-safe",
      "range": {
        "startLine": 308,
        "startChar": 28,
        "endLine": 308,
        "endChar": 31
      },
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd0d8be9",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "wrap args with \"\" \n\n\"{0}\" \"{1}\" etc",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dd266b61",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "very dangerous if {0} is ever blank\n\n   \u0027adb shell [ -d {0} ] \u0026\u0026 rm {0}/* \u0027 instead\n\nalso this will fail if you have files inside subdirectories, so you probably wanted rm -r instead",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_9df943b6",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "any reason to return [] instead of () here?",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_fd87a70e",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 410,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "--correct-output",
      "range": {
        "startLine": 410,
        "startChar": 25,
        "endLine": 410,
        "endChar": 39
      },
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_d2481263",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 419,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-17T16:47:07Z",
      "side": 1,
      "message": "Use comments to break the various stages in this main (getting arguments), setting up env, running, reporting",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_dddcab40",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "too hardcoded\n\nalso there should be an option to use libartd.so instead of libart.so",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbdd7f2d_7dc39758",
        "filename": "tools/bisection-search.py",
        "patchSetId": 1
      },
      "lineNbr": 435,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T22:30:04Z",
      "side": 1,
      "message": "should be able to run dalvikvm{32,64} as well",
      "revId": "58de6196f35d54f3f13b0a28e21162bb42bc92ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}