{
  "comments": [
    {
      "key": {
        "uuid": "8a7ad3a5_f535a5a6",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 3075,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "Instead of doing this, just remove the input in prepare_for_register_allocation.",
      "range": {
        "startLine": 3071,
        "startChar": 0,
        "endLine": 3075,
        "endChar": 44
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64b6e258_7f92fbab",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 3075,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a7ad3a5_f535a5a6",
      "range": {
        "startLine": 3071,
        "startChar": 0,
        "endLine": 3075,
        "endChar": 44
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08a01160_a0eb399e",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1459,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "How is that related? The constructors only apply to instance here.",
      "range": {
        "startLine": 1459,
        "startChar": 8,
        "endLine": 1459,
        "endChar": 42
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2813b4ef_00859fed",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1459,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Right, I don\u0027t know the high level well enough to understand if it would ever inline \u003cclinit\u003e (perhaps with compiler-filter kEverything?)",
      "parentUuid": "08a01160_a0eb399e",
      "range": {
        "startLine": 1459,
        "startChar": 8,
        "endLine": 1459,
        "endChar": 42
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef03ef5f_ae553e91",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1459,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2813b4ef_00859fed",
      "range": {
        "startLine": 1459,
        "startChar": 8,
        "endLine": 1459,
        "endChar": 42
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0e0a939_9870ca50",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "ShouldGenerateConstructorBarrier only applies to instances AFAIR. Also in the code below, you are you for \u0027this\u0027 anyway.",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac37b4e7_5f96cca7",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Do we care about the correctness of compiling \u003cclinit\u003e ?\n\nI was thinking in the compiler filter kEverything which I think might even build static constructors?\n\nTo handle the case we should probably use the HLoadClass (similar to how sput/sget works) as the input.",
      "parentUuid": "d0e0a939_9870ca50",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9dcb84c_0e2b8463",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-06T18:08:04Z",
      "side": 1,
      "message": "we care about the correctness of the compiler. So if you don\u0027t expect clinit here, please (d)check it.",
      "parentUuid": "ac37b4e7_5f96cca7",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d6aee01_4fa9f540",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T18:25:27Z",
      "side": 1,
      "message": "It already DCHECKs that this_object is not null, which should only happen if it is \u003cclinit\u003e. Should I add explicit DCHECK that it\u0027s not \u003cclinit\u003e?\n\nMy primary question though is whether it should support compiling \u003cclinit\u003e or not?",
      "parentUuid": "c9dcb84c_0e2b8463",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60ae931_c4ebbcda",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-10T23:05:38Z",
      "side": 1,
      "message": "You can get a clinit here if kEverything is selected. I think you can test it in case I missed something.\n\nWhat I meant with my first comment, is that this code should not crash or fail dchecks in a valid use-case. If you are aware of a code that prevents reaching this point for clinit than document and add a DCHECK. (I am not :) ). \n\nUsing HLoadClass as input sounds good to me though I suspect it might complicate the analysis later.",
      "parentUuid": "3d6aee01_4fa9f540",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edd52f09_263c3650",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b60ae931_c4ebbcda",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6a999d8_406b2e3d",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-04-11T20:02:21Z",
      "side": 1,
      "message": "\u003cclinit\u003e should not be relevant here since calling class initializer is protected by locking/waiting mechanism which is stronger guarantee than fences.",
      "parentUuid": "edd52f09_263c3650",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc54d590_0b4f3692",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 637,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Thanks for this insight Mingyao.\n\nI had initially written some code using HLoadClass, which was making me uncomfortable since I wasn\u0027t sure how to actually test it.\n\nI dropped the \u0027static\u0027 case, fixed a \"bug\" in RequriesConstructorBarrier (it wasn\u0027t checking statics, leading to possibly making redundant barriers for returns from a \u003cclinit\u003e ) and added comments justifying why its ok.",
      "parentUuid": "d6a999d8_406b2e3d",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 96
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e040b5f_770b1f49",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "Just like we have GetNullConstant on graph, please add a GetThisParameter. Also avoid scanning, just cache it in the graph.",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c81e20da_f06ffe9d",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "It seems like it\u0027s almost always the 2nd entry, cache it anyway?",
      "parentUuid": "7e040b5f_770b1f49",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665920d8_e764cc81",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-06T18:08:04Z",
      "side": 1,
      "message": "yes please. Makes things cleaner and if I remember right there are other places where we need it (and could be cleaned up).",
      "parentUuid": "c81e20da_f06ffe9d",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8fad8ba_bdf3e93e",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T18:25:27Z",
      "side": 1,
      "message": "\"Makes things cleaner\" -\u003e if it\u0027s a \"GetThisParameter\" helper should satisfy that?\n\nI was trying to clarify if this helper should retrieve from a cache or just calculate it once and cache it afterwards, or always calculate it , or something else?",
      "parentUuid": "665920d8_e764cc81",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88fd5a43_b3aed32f",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-10T23:05:38Z",
      "side": 1,
      "message": "Given that you have a while loop here I would cache it in the beginning of the graph builder.\n\nYou can easily check how many time the method would be invoke on large apps. If you deem that the cache is useless just recomputing could work as well.",
      "parentUuid": "b8fad8ba_bdf3e93e",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a2ae85_e5fb20c9",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 662,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88fd5a43_b3aed32f",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 662,
        "endChar": 7
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae903d1a_32ad7d08",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "this_object-\u003eAsParameterValue()",
      "range": {
        "startLine": 670,
        "startChar": 14,
        "endLine": 670,
        "endChar": 55
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6d3ff7e_ea3b916f",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Beautiful, didn\u0027t know about this since it\u0027s hidden by macros :).",
      "parentUuid": "ae903d1a_32ad7d08",
      "range": {
        "startLine": 670,
        "startChar": 14,
        "endLine": 670,
        "endChar": 55
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc838d0b_2a7ea2f9",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6d3ff7e_ea3b916f",
      "range": {
        "startLine": 670,
        "startChar": 14,
        "endLine": 670,
        "endChar": 55
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e758d7ca_bb91e36e",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 675,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 675,
        "startChar": 13,
        "endLine": 675,
        "endChar": 55
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a4400b7_2853fc97",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 1
      },
      "lineNbr": 675,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e758d7ca_bb91e36e",
      "range": {
        "startLine": 675,
        "startChar": 13,
        "endLine": 675,
        "endChar": 55
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8b7ef53_01e24f12",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "Instead of doing this, you actually know if you\u0027re talking about a singleton, so there you can just remove the barrier.",
      "range": {
        "startLine": 569,
        "startChar": 4,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f19754df_0e108fa0",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "I think I agree in principle after reading how CalculateEscape works.\n\nWhat I don\u0027t understand is why in the original code it still has this guard in L571 and L577 if the singleton invariant is enough?\n\n(btw it was Mingyao who suggested I add the \"instruction has real uses\" check at this point in LSE)",
      "parentUuid": "b8b7ef53_01e24f12",
      "range": {
        "startLine": 569,
        "startChar": 4,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abe253c1_0d680635",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Still not sure about this.\n\nMingyao, thoughts?",
      "parentUuid": "f19754df_0e108fa0",
      "range": {
        "startLine": 569,
        "startChar": 4,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2a2f163_ad28011e",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-04-11T20:02:21Z",
      "side": 1,
      "message": "singleton that\u0027s not returned is never published. So it never needs fences. So I think you can always remove the fence uses first.",
      "parentUuid": "abe253c1_0d680635",
      "range": {
        "startLine": 569,
        "startChar": 4,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d1f8e80_6564e374",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Thanks for explaining this. I fixed the code.",
      "parentUuid": "a2a2f163_ad28011e",
      "range": {
        "startLine": 569,
        "startChar": 4,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6ed18eb_44e235e9",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Nicolas, how do you want to handle this?\n\n(Or perhaps it\u0027s ok to just leave it like this, but Mingyao suggested that we \"just get it working\" and that you would have an idea how/if to generalize this cleanly).\n\nI guess right now LSE is the only one to run into this but in theory any other optimization should also treat constructorfence inputs as \"weak\" inputs that don\u0027t (by themselves) hold the input live.\n\n(The analogy to a strong reference/weak reference is perhaps apt here.)",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7cefe33_4f8b560f",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-06T18:08:04Z",
      "side": 1,
      "message": "So the handling here and above is not ideal imo. It creates inconsistencies in the graph. Once the input of the ContructorFence is removed from the graph what should be the expected result of getThisObject()? (as the fence survives this analysis).\n\nI don\u0027t have an immediate alternative proposal but I\u0027m thinking about.",
      "parentUuid": "e6ed18eb_44e235e9",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f16830ea_3e4ed2e1",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T18:25:27Z",
      "side": 1,
      "message": "\u003e So the handling here and above is not ideal imo.\n\nYes, please, suggest something cleaner! :)\n\n\u003e (as the fence survives this analysis).\n\nI\u0027m not sure if that can happen in this case?\n\nThe removal of the HNewInstance is also accompanied by the removal of the HConstructorFence (see RemoveAllFakeUses). In fact I actually tried avoiding this during development (to keep things simple) and it triggered a DCHECK failure if it tried to remove an instruction that was in use by another instruction.\n\n(Plus the new LSE2 tests explicitly makes sure the fence gets removed, but perhaps I misunderstood what you meant?)",
      "parentUuid": "d7cefe33_4f8b560f",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ba66f4e_200713f9",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-10T23:05:38Z",
      "side": 1,
      "message": "Ah, you\u0027re right. I didn\u0027t read RemoveAllFakeUses properly.\n\nI don\u0027t like the idea of Real/Fake uses. The semantics are questionable imo.\n\nHow about you just test here for HasConstructorFenceUses and RemoveContructorFenceUses? It would be pretty explicit about what the intention is here.\n\nWe can think about expanding the scope and generalize when we actually need to.",
      "parentUuid": "f16830ea_3e4ed2e1",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b98a3dc_3951b1b8",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Should I have those \"HasConstructorFencesUses / RemoveConstructorFenceUses\" in this file or in nodes.h ?",
      "parentUuid": "5ba66f4e_200713f9",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ffe2013_909745c4",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-10T23:41:07Z",
      "side": 1,
      "message": "Keep them here until you actually have other uses.",
      "parentUuid": "2b98a3dc_3951b1b8",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "056716d9_da56b70c",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ffe2013_909745c4",
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609c2abf_e815e5e8",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6507,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "drop",
      "range": {
        "startLine": 6507,
        "startChar": 49,
        "endLine": 6507,
        "endChar": 53
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f2b607d_fe4c58e2",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6507,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-06T18:08:04Z",
      "side": 1,
      "message": "remove the \"usually\" and mention all cases if there are others.",
      "range": {
        "startLine": 6507,
        "startChar": 20,
        "endLine": 6507,
        "endChar": 27
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d1484cb_10d13647",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6507,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-10T23:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f2b607d_fe4c58e2",
      "range": {
        "startLine": 6507,
        "startChar": 20,
        "endLine": 6507,
        "endChar": 27
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd269e3_aa7171cb",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6507,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Added extensive comments for this. Please take a look.",
      "parentUuid": "5d1484cb_10d13647",
      "range": {
        "startLine": 6507,
        "startChar": 20,
        "endLine": 6507,
        "endChar": 27
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdee581_6333d213",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6508,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "Not in the current code base, which only works for references, so I\u0027d rather you don\u0027t mention it.",
      "range": {
        "startLine": 6507,
        "startChar": 78,
        "endLine": 6508,
        "endChar": 68
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a2c52fa_7c5e392c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6508,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Sure, I can remove this line for now.\n\nCan you elaborate by \"which only works for references?\"",
      "parentUuid": "9bdee581_6333d213",
      "range": {
        "startLine": 6507,
        "startChar": 78,
        "endLine": 6508,
        "endChar": 68
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80015fb8_d8ece659",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6508,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-04-11T20:02:21Z",
      "side": 1,
      "message": "As I commented in another place, static initializer is protected by locking/waiting mechanism, which is stronger than fences. So no need to worry about \u003cclinit\u003e.",
      "parentUuid": "5a2c52fa_7c5e392c",
      "range": {
        "startLine": 6507,
        "startChar": 78,
        "endLine": 6508,
        "endChar": 68
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425cd590_486fd23e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 6508,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80015fb8_d8ece659",
      "range": {
        "startLine": 6507,
        "startChar": 78,
        "endLine": 6508,
        "endChar": 68
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eedf8092_62c91cd2",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T16:47:19Z",
      "side": 1,
      "message": "I\u0027d prefer if you would do this in a separate test, that would just focus on lse with memory barriers.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfbc276b_47ea114a",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T17:32:33Z",
      "side": 1,
      "message": "Sure, 530-checker-lse-barrier or what?",
      "parentUuid": "eedf8092_62c91cd2",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb163618_cc84bccf",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-04-12T20:21:14Z",
      "side": 1,
      "message": "Note that we could also introduce a gtest flavored test (viz. induction_var_test) to setup particular HIR and tests directly, and not always rely on checker tests.",
      "parentUuid": "eedf8092_62c91cd2",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c76307_8546cf99",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-06T18:08:04Z",
      "side": 1,
      "message": "pretty hard to read. consider adding new lines or wrap around /* */",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 153,
        "endChar": 28
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec142f7_22a692b9",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-06T18:25:27Z",
      "side": 1,
      "message": "Like this?\n \n  //// STUFF\n\n  /*\n  ////\n  ////  4 or 2 slashes here? does checker understand /* ?\n  ////\n  */\n\n  //// OTHER STUFF\n\n?",
      "parentUuid": "90c76307_8546cf99",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 153,
        "endChar": 28
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc08353d_c85a09a0",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-04-10T23:05:38Z",
      "side": 1,
      "message": "No strong preference. Anything that reads a bit better than parsing the number of \u0027/\u0027 to identify the comment is good.\n\nE.g I\u0027d put the TODO right before the method (after \"// Multiple... \"",
      "parentUuid": "6ec142f7_22a692b9",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 153,
        "endChar": 28
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a7efeea_78004ef1",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-11T23:57:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc08353d_c85a09a0",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 153,
        "endChar": 28
      },
      "revId": "d63cb3c35f45a195a519ee54317390cc5b6119bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}