{
  "comments": [
    {
      "key": {
        "uuid": "29a7d501_c74bff3a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "art/tools/checker/run_unit_tests.py",
      "range": {
        "startLine": 36,
        "startChar": 6,
        "endLine": 36,
        "endChar": 31
      },
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff2c60a_eb44f16e",
        "filename": "test/2231-checker-heap-poisoning/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "Nit: Remove empty line.",
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d01b6484_85526a5e",
        "filename": "tools/checker/match/file.py",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "I\u0027d replace this with \"this branch\" to make it easier to read.",
      "range": {
        "startLine": 46,
        "startChar": 58,
        "endLine": 46,
        "endChar": 62
      },
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "252213e1_338edad9",
        "filename": "tools/checker/match/file.py",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "\"pointed to\"?",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 60
      },
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82aa3389_154dcaeb",
        "filename": "tools/checker/match/file.py",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "I\u0027d replace this with:\n\n  `BranchTaken`, `BranchNotTaken`, `BranchNotTakenYet` are implemented as positive integers.\n  Negated values of `BranchTaken` and `BranchNotTaken` may be appear; `-BranchTaken` and\n  `-BranchNotTaken` have the same meaning as `BranchTaken` and `BranchNotTaken`\n  (respectively), but they indicate that we went past the ELSE branch.",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 58,
        "endChar": 46
      },
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3403c876_1ba5093d",
        "filename": "tools/checker/match/line.py",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-05-26T12:02:45Z",
      "side": 1,
      "message": "Style: Keep `import` statements sorted (within each `import` group).",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "802f800ebba0f3493ef3c405bc3569aa5445ce85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}