{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a74a40fa_4d7292ad",
        "filename": "compiler/optimizing/code_generator_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3683,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-11-06T14:36:21Z",
      "side": 1,
      "message": "I know that this was in the original CL (aosp/2779128) already, but couldn\u0027t we have a non-condition here too? Does baseline compiling somehow not allow that?",
      "range": {
        "startLine": 3683,
        "startChar": 6,
        "endLine": 3683,
        "endChar": 53
      },
      "revId": "d8e2cf92f09dd43bfb0dd84fd1c6ce47b4dac98d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "312718d9_761c1437",
        "filename": "compiler/optimizing/code_generator_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3683,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-11-06T14:44:33Z",
      "side": 1,
      "message": "The `if (IsBooleanValueOrMaterializedCondition(instruction-\u003eInputAt(0)))` condiion further above implies both `instruction-\u003eInputAt(0)-\u003eIsCondition()` and `!instruction-\u003eInputAt(0)-\u003eIsEmittedAtUseSite()`. We could move this `DCHECK()` earlier on all architectures.",
      "parentUuid": "a74a40fa_4d7292ad",
      "range": {
        "startLine": 3683,
        "startChar": 6,
        "endLine": 3683,
        "endChar": 53
      },
      "revId": "d8e2cf92f09dd43bfb0dd84fd1c6ce47b4dac98d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e675fe3_2120b44a",
        "filename": "compiler/optimizing/code_generator_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3683,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-11-06T14:52:06Z",
      "side": 1,
      "message": "I am not sure I follow. The code is:\n```\nbool IsBooleanValueOrMaterializedCondition(HInstruction* cond_input) {\n  return !cond_input-\u003eIsCondition() || !cond_input-\u003eIsEmittedAtUseSite();\n}\n```\nSource: https://cs.android.com/android/platform/superproject/main/+/main:art/compiler/optimizing/code_generator_utils.cc;l\u003d99-101;drc\u003d60c3258770b1ce3ce5bbdcff3c4a87c8f996b92f\n\nSo if `cond_input` is not a condition, it will return true due to `!cond_input-\u003eIsCondition()`, right?\n\n`IsBooleanValueOrMaterializedCondition ` returns true for either:\n* non-conditions, or\n* conditions not emitted at use site",
      "parentUuid": "312718d9_761c1437",
      "range": {
        "startLine": 3683,
        "startChar": 6,
        "endLine": 3683,
        "endChar": 53
      },
      "revId": "d8e2cf92f09dd43bfb0dd84fd1c6ce47b4dac98d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b061e8c3_f47a5d38",
        "filename": "compiler/optimizing/code_generator_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3683,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-11-06T14:57:14Z",
      "side": 1,
      "message": "Sorry, this time I was confused.\n\nI think this is indeed implied by the baseline compiler. The `HInstructionBuilder` creates `HCondition` followed by `HIf` for any `if*` dex instruction and there are no passes that can optimize that in the baseline compiler.",
      "parentUuid": "8e675fe3_2120b44a",
      "range": {
        "startLine": 3683,
        "startChar": 6,
        "endLine": 3683,
        "endChar": 53
      },
      "revId": "d8e2cf92f09dd43bfb0dd84fd1c6ce47b4dac98d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}