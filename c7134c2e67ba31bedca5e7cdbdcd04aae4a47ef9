{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "55fc46d4_07fa0471",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-26T08:11:43Z",
      "side": 1,
      "message": "We cannot do that for float/double because we could get the wrong result for zeros or NaNs.",
      "range": {
        "startLine": 1056,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 63
      },
      "revId": "c7134c2e67ba31bedca5e7cdbdcd04aae4a47ef9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34bda00d_44408a99",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-26T08:13:49Z",
      "side": 1,
      "message": "Maybe we should add tests for the FP case and use `Float.floatToRawIntBits()` to check results to distinguish between +0 and -0 and between different NaNs.",
      "parentUuid": "55fc46d4_07fa0471",
      "range": {
        "startLine": 1056,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 63
      },
      "revId": "c7134c2e67ba31bedca5e7cdbdcd04aae4a47ef9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "729a2983_c7200ac7",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 3
      },
      "lineNbr": 1057,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-09-29T12:38:51Z",
      "side": 1,
      "message": "Added CHECK to make sure we don\u0027t do the optimization for Float/Double. I tried creating a test using `floatToRawIntBits` but it ended up being trivially true, as both sides of the equality were the same code.",
      "parentUuid": "34bda00d_44408a99",
      "range": {
        "startLine": 1056,
        "startChar": 6,
        "endLine": 1057,
        "endChar": 63
      },
      "revId": "c7134c2e67ba31bedca5e7cdbdcd04aae4a47ef9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7ace6e7_eb79f5a0",
        "filename": "test/2266-checker-select-opt/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-26T08:11:43Z",
      "side": 1,
      "message": "Make this a new class under `458-checker-instruct-simplification`?",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 17
      },
      "revId": "c7134c2e67ba31bedca5e7cdbdcd04aae4a47ef9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e2e1686_0b016da6",
        "filename": "test/2266-checker-select-opt/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-09-29T12:38:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7ace6e7_eb79f5a0",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 17
      },
      "revId": "c7134c2e67ba31bedca5e7cdbdcd04aae4a47ef9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}