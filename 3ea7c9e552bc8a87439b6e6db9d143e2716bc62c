{
  "comments": [
    {
      "key": {
        "uuid": "837c7558_3d18a825",
        "filename": "test/004-ThreadStress/src/Main.java",
        "patchSetId": 8
      },
      "lineNbr": 682,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-06-27T18:08:39Z",
      "side": 1,
      "message": "Does this mean that the following code would not be equivalent (and not preallocate the strings)?\n\n\nstatic final String finishingWorkerMessage \u003d \"Finishing worker\\n\";\nstatic final String errnoExceptionName \u003d \"ErrnoException\";",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 682,
        "endChar": 5
      },
      "revId": "3ea7c9e552bc8a87439b6e6db9d143e2716bc62c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "837c7558_f8ae4e95",
        "filename": "test/004-ThreadStress/src/Main.java",
        "patchSetId": 8
      },
      "lineNbr": 682,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-06-27T18:21:47Z",
      "side": 1,
      "message": "That should be equivalent, I would think. Vladimir, are there weird inlining effects of constants at play here?",
      "parentUuid": "837c7558_3d18a825",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 682,
        "endChar": 5
      },
      "revId": "3ea7c9e552bc8a87439b6e6db9d143e2716bc62c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "400b5318_dbb1e7a4",
        "filename": "test/004-ThreadStress/src/Main.java",
        "patchSetId": 8
      },
      "lineNbr": 682,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-28T09:41:14Z",
      "side": 1,
      "message": "No it\u0027s not, you\u0027re forgetting the magic handling of String literals, including static final fields, in Java.\n\nThis way, we have an explicit Main.\u003cclinit\u003e() and Main.run() uses sget-object to retrieve the \"Finishing worker\\n\". With plain String literals, we would have an encoded_array_item referenced by the class_def_item.static_values_off instead of Main.clinit(), and the Main.run() would use const-string.\n\nNote that the const-string has a slow-path that first allocates the String and then interns it, so it could fail if the dex cache entry is empty. I don\u0027t want to rely on the EncodedStaticFieldValueIterator::ReadValueToField\u003c\u003e() to initialize the dex cache entry (even though it arguably does), so sget-object is preferable.",
      "parentUuid": "837c7558_f8ae4e95",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 682,
        "endChar": 5
      },
      "revId": "3ea7c9e552bc8a87439b6e6db9d143e2716bc62c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}