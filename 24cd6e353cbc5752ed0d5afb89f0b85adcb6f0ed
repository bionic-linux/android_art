{
  "comments": [
    {
      "key": {
        "uuid": "f7347b23_d4180af7",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-08-24T11:43:47Z",
      "side": 1,
      "message": "Can you add a comment to say the other inputs are to propagate type information for the reference types in the MethodType of the call site?",
      "range": {
        "startLine": 1092,
        "startChar": 2,
        "endLine": 1092,
        "endChar": 37
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec071b13_760dcb9f",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-08-24T13:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7347b23_d4180af7",
      "range": {
        "startLine": 1092,
        "startChar": 2,
        "endLine": 1092,
        "endChar": 37
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8db01b6c_f3e58d6f",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1106,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-08-24T12:02:38Z",
      "side": 1,
      "message": "Also `number_of_arguments \u003d\u003d 0u` for the time being. (Update when implementing for instance fields.)",
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8848c691_6dadf3cb",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1106,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-08-24T13:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8db01b6c_f3e58d6f",
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "702d7d02_270e6de8",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1106,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-08-24T13:47:34Z",
      "side": 1,
      "message": "number_of_arguments \u003d\u003d 1u, not 0. The first argument should be the varhandle object.",
      "parentUuid": "8848c691_6dadf3cb",
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2923ec74_f311aad8",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1113,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-08-24T11:43:47Z",
      "side": 1,
      "message": "Is there any advantage to special casing this? Why not iterate over the shorty and count the number of reference types, then add them below?",
      "range": {
        "startLine": 1105,
        "startChar": 0,
        "endLine": 1113,
        "endChar": 0
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c23427df_cf42a51b",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 1113,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-08-24T13:28:49Z",
      "side": 1,
      "message": "Right now, only VarHandle.get() is implemented and only for static field. Therefore, only the return type is checked, in case of a reference. We avoid adding a not needed ClassLoad.",
      "parentUuid": "2923ec74_f311aad8",
      "range": {
        "startLine": 1105,
        "startChar": 0,
        "endLine": 1113,
        "endChar": 0
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff96c8cb_49fa7dcd",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 3148,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-08-24T12:02:38Z",
      "side": 1,
      "message": "For primitive fields, the old comment about not needing the read barrier applies while for references the new comment applies. (Maybe the code should be duplicated in both branches to allow for different comments.)",
      "range": {
        "startLine": 3146,
        "startChar": 2,
        "endLine": 3148,
        "endChar": 38
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bef863a_2c9911cb",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 3148,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-08-24T13:28:49Z",
      "side": 1,
      "message": "I think that maybe it is better to just add both explanations here. Duplicating the code might be confusing.",
      "parentUuid": "ff96c8cb_49fa7dcd",
      "range": {
        "startLine": 3146,
        "startChar": 2,
        "endLine": 3148,
        "endChar": 38
      },
      "revId": "24cd6e353cbc5752ed0d5afb89f0b85adcb6f0ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}