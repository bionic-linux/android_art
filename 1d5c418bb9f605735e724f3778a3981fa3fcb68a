{
  "comments": [
    {
      "key": {
        "uuid": "c450e5a6_7fafcb1b",
        "filename": "compiler/dex/quick/gen_invoke.cc",
        "patchSetId": 4
      },
      "lineNbr": 533,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-06-30T04:32:06Z",
      "side": 1,
      "message": "General comment: please take a look into https://android-review.googlesource.com/#/c/99560/2/compiler/dex/quick/x86/target_x86.cc I think this simplifies a lot this utility. If we did a promotion we have already updated the ArgLocs with information about whether it is on promoted register or not. So I do not see the sense in looking into vmap table. We can simply use RegLocation information.",
      "range": {
        "startLine": 533,
        "startChar": 11,
        "endLine": 533,
        "endChar": 16
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "841c2dfc_fdc203cc",
        "filename": "compiler/dex/quick/gen_invoke.cc",
        "patchSetId": 4
      },
      "lineNbr": 533,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-30T05:21:42Z",
      "side": 1,
      "message": "You\u0027re probably right (didn\u0027t get a chance to look at that one closely), but it can be considered independently.",
      "parentUuid": "c450e5a6_7fafcb1b",
      "range": {
        "startLine": 533,
        "startChar": 11,
        "endLine": 533,
        "endChar": 16
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4c385c9_47a31027",
        "filename": "compiler/dex/quick/gen_invoke.cc",
        "patchSetId": 4
      },
      "lineNbr": 533,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "I took the code for ARM64 as it was easier than fixing what was there. But I agree with Bill: the 32b case here can be fixed in a separate CL. We should actually be able to take advantage that both 64b backends have an overloaded implementation...",
      "parentUuid": "841c2dfc_fdc203cc",
      "range": {
        "startLine": 533,
        "startChar": 11,
        "endLine": 533,
        "endChar": 16
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6421f930_dc7061f1",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1140,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-06-30T04:32:06Z",
      "side": 1,
      "message": "If we consider the long and int as different things and sort array then without taking into account we can meet the following case: let\u0027s we have 1 promoted register and v4 used as int 5 times and as long 5 times while v6 used as int 6 times. As a result we will promoted v6. however taking into account that core register for long and int is the same we could better benefit if we would promote v4. So I would consider add use_count to lower part anyway or handle this later as it is done in https://android-review.googlesource.com/#/c/99080/",
      "range": {
        "startLine": 1140,
        "startChar": 7,
        "endLine": 1140,
        "endChar": 71
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c450e5a6_1fbc8752",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1140,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-30T05:21:42Z",
      "side": 1,
      "message": "Yes, it would be better.  I\u0027ll leave it up to Andreas, but my inclination would be to patch it up later (keeping in mind that 32-bit targets would would need the high reg portion added to the next reg).",
      "parentUuid": "6421f930_dc7061f1",
      "range": {
        "startLine": 1140,
        "startChar": 7,
        "endLine": 1140,
        "endChar": 71
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4485d588_4681263b",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1140,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "I\u0027d like to get the CL in \"as is\" and then would be happy to accept patches.",
      "parentUuid": "c450e5a6_1fbc8752",
      "range": {
        "startLine": 1140,
        "startChar": 7,
        "endLine": 1140,
        "endChar": 71
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "841c2dfc_1d233711",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-06-30T04:32:06Z",
      "side": 1,
      "message": "\u0026\u0026?",
      "range": {
        "startLine": 1288,
        "startChar": 45,
        "endLine": 1288,
        "endChar": 46
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6421f930_bc6fad0c",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-30T05:21:42Z",
      "side": 1,
      "message": "Thanks - yes, it should be \u0026\u0026.",
      "parentUuid": "841c2dfc_1d233711",
      "range": {
        "startLine": 1288,
        "startChar": 45,
        "endLine": 1288,
        "endChar": 46
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84334d7e_36af3084",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-06-30T15:26:33Z",
      "side": 1,
      "message": "Please revert this part of patchset 3\u0027s state, x86_64 testing shows that it is not fully correct. Lets fix DCHECK issue in a separate CL.",
      "parentUuid": "6421f930_bc6fad0c",
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d07588_88535726",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-07-02T17:19:16Z",
      "side": 1,
      "message": "The DCHECK issue is adressed by Andreas\u0027s https://android-review.googlesource.com/#/c/99824/.\n\nPlease revert ralloc_util.cc to state of patchset 3 and merge the promotion patch. The changes between patchset 3 and 4 in ralloc_util.cc relate to 64-bit ref support in backend, please separate it into another CL.",
      "parentUuid": "84334d7e_36af3084",
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4c051c0_26b898b1",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "wide specialized to !kX86_64.",
      "parentUuid": "44d07588_88535726",
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6421f930_fc7525de",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1305,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-06-30T04:32:06Z",
      "side": 1,
      "message": "This code expects that long is always promoted to pair registers but I do not see this logic in AllocPreservedCoreReg",
      "range": {
        "startLine": 1305,
        "startChar": 14,
        "endLine": 1305,
        "endChar": 22
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4c051c0_06b59cb9",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 4
      },
      "lineNbr": 1305,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "Could you explain what you mean?",
      "parentUuid": "6421f930_fc7525de",
      "range": {
        "startLine": 1305,
        "startChar": 14,
        "endLine": 1305,
        "endChar": 22
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d07588_c84d4f82",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 1890,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-07-02T17:19:16Z",
      "side": 1,
      "message": "Please remove changes from FlushIns since they cause merge conflict with Simplify FlushIns patch.\n\nThe \"Simplify Flushins patch\" works correctly with patchset 3 of this CL.",
      "range": {
        "startLine": 1890,
        "startChar": 53,
        "endLine": 1890,
        "endChar": 56
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4c051c0_c6b264d4",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 1890,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "Merge conflict resolved by taking HEAD.",
      "parentUuid": "44d07588_c84d4f82",
      "range": {
        "startLine": 1890,
        "startChar": 53,
        "endLine": 1890,
        "endChar": 56
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d07588_28434b57",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 1922,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-07-02T17:19:16Z",
      "side": 1,
      "message": "Please remove changes from FlushIns since they cause merge conflict with Simplify FlushIns patch.\n\nThe \"Simplify Flushins patch\" works correctly with patchset 3 of this CL.",
      "range": {
        "startLine": 1922,
        "startChar": 29,
        "endLine": 1922,
        "endChar": 32
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4485d588_2684224c",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 1922,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-03T07:22:24Z",
      "side": 1,
      "message": "Merge conflicted resolved by taking HEAD.",
      "parentUuid": "44d07588_28434b57",
      "range": {
        "startLine": 1922,
        "startChar": 29,
        "endLine": 1922,
        "endChar": 32
      },
      "revId": "1d5c418bb9f605735e724f3778a3981fa3fcb68a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}