{
  "comments": [
    {
      "key": {
        "uuid": "f6195673_13ae2ca9",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-29T20:11:18Z",
      "side": 1,
      "message": "This isn\u0027t safe, is it? The parsing code is written in a way that assumes Usage terminates.",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 22
      },
      "revId": "b84b6ffb80cb0fada47f49ae9c1d444d2d0d446f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "968f39ad_fe82c195",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-10-29T21:41:08Z",
      "side": 1,
      "message": "You\u0027d rather LOG(FATAL)? And where is the code taking advantage that it terminates?",
      "parentUuid": "f6195673_13ae2ca9",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 22
      },
      "revId": "b84b6ffb80cb0fada47f49ae9c1d444d2d0d446f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562a227b_6ec0efa1",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-29T21:44:36Z",
      "side": 1,
      "message": "The one that is writing values into the options?\n\nThe style is:\n\n if (invalid case) {\n   Usage();\n }\n options :\u003d value\n\nThis only works because you assume Usage never returns. Otherwise you get *no* warning that your values are BS...",
      "parentUuid": "968f39ad_fe82c195",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 22
      },
      "revId": "b84b6ffb80cb0fada47f49ae9c1d444d2d0d446f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d63612de_327db097",
        "filename": "runtime/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-29T20:56:46Z",
      "side": 1,
      "message": "Thats a dangling pointer isn\u0027t it? I think the substr result goes out of scope at the end of the statement.",
      "range": {
        "startLine": 337,
        "startChar": 29,
        "endLine": 337,
        "endChar": 64
      },
      "revId": "b84b6ffb80cb0fada47f49ae9c1d444d2d0d446f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6399ed2_519034c2",
        "filename": "runtime/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-29T21:38:55Z",
      "side": 1,
      "message": "Nevermind, thought it was std::string",
      "parentUuid": "d63612de_327db097",
      "range": {
        "startLine": 337,
        "startChar": 29,
        "endLine": 337,
        "endChar": 64
      },
      "revId": "b84b6ffb80cb0fada47f49ae9c1d444d2d0d446f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}