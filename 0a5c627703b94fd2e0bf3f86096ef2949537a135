{
  "comments": [
    {
      "key": {
        "uuid": "2461e61f_b6e9e6f0",
        "filename": "runtime/base/stack_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "No, really? :-)",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_46088330",
        "filename": "runtime/base/stack_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "This won\u0027t work. :-(\n\nHowever, for you the default parameter for MakeInstance would work, as you have the templated type. Lucky you...",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a455d63a_d79a9cd5",
        "filename": "runtime/base/stack_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "Do we want to rely on luck?",
      "parentUuid": "6492fe15_46088330",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_1c8acc0e",
        "filename": "runtime/base/stack_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-03T15:54:27Z",
      "side": 1,
      "message": "This has nothing to do with relying on luck. He\u0027s in the lucky position that the type completely defines the storage size, and then the default parameter will work (we both verified that). I was just jealous, as the same is not possible for dynamically sized things like ShadowFrames.",
      "parentUuid": "a455d63a_d79a9cd5",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_8ee1cdba",
        "filename": "runtime/base/stack_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "Yeah, I\u0027m just going to omit this file from this CL, there is no test for it anyway because I didn\u0027t end up needing it. Sorry for adding it to the review.\n\nFWIW this templated version is not very useful either because the size should be dynamic. If the size is static then using alloca is fairly pointless.\n\nI\u0027ve been some deep thought how to cleanly and reusably handle dynamically-sized structs/classes and alloca and I will post something in later CLs.",
      "parentUuid": "6492fe15_1c8acc0e",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e486eed4_be139066",
        "filename": "runtime/lambda/art_lambda_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "Why not in an initializer list?",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 36,
        "endChar": 33
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_dc9a24d6",
        "filename": "runtime/lambda/art_lambda_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "Doesn\u0027t really matter to me, would you rather?\n\nThis is not part of the style right now so we should add that if you want this to always be part of the [member] initializer list.",
      "parentUuid": "e486eed4_be139066",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 36,
        "endChar": 33
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_71c4312b",
        "filename": "runtime/lambda/art_lambda_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6492fe15_dc9a24d6",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 36,
        "endChar": 33
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_e622ef7e",
        "filename": "runtime/lambda/art_lambda_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "Remove s.",
      "range": {
        "startLine": 43,
        "startChar": 29,
        "endLine": 43,
        "endChar": 30
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_31a6b98e",
        "filename": "runtime/lambda/art_lambda_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6492fe15_e622ef7e",
      "range": {
        "startLine": 43,
        "startChar": 29,
        "endLine": 43,
        "endChar": 30
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a40a365b_f2c6c6cf",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "Vertical whitespace?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 68
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e486eed4_cf2a5c41",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "Do you always want a blank line in between function definitions/declarations *even if* there\u0027s a comment in between?\n\nThis is not part of the style right now so we should add that.",
      "parentUuid": "a40a365b_f2c6c6cf",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 68
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8480d2c5_b9017b10",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "NumberOf",
      "range": {
        "startLine": 89,
        "startChar": 9,
        "endLine": 89,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64159e82_4b2399e7",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "NumberOfCapturedVariables ?",
      "parentUuid": "8480d2c5_b9017b10",
      "range": {
        "startLine": 89,
        "startChar": 9,
        "endLine": 89,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_e1040a22",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64159e82_4b2399e7",
      "range": {
        "startLine": 89,
        "startChar": 9,
        "endLine": 89,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d42ed5_b4df2e76",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "Explain why.",
      "range": {
        "startLine": 94,
        "startChar": 5,
        "endLine": 94,
        "endChar": 85
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e486eed4_4f4e4c37",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "to avoid the extra indirect load? it\u0027s on line 95",
      "parentUuid": "e4d42ed5_b4df2e76",
      "range": {
        "startLine": 94,
        "startChar": 5,
        "endLine": 94,
        "endChar": 85
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d42ed5_bac95591",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-07T09:11:11Z",
      "side": 1,
      "message": "Ah, yes, missed it.",
      "parentUuid": "e486eed4_4f4e4c37",
      "range": {
        "startLine": 94,
        "startChar": 5,
        "endLine": 94,
        "endChar": 85
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4dbaa04_93a79ef0",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "variables",
      "range": {
        "startLine": 100,
        "startChar": 42,
        "endLine": 100,
        "endChar": 46
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64159e82_3954b7c7",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4dbaa04_93a79ef0",
      "range": {
        "startLine": 100,
        "startChar": 42,
        "endLine": 100,
        "endChar": 46
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "247566b9_d68c422d",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "isn\u0027t that the definition of shorty?",
      "range": {
        "startLine": 102,
        "startChar": 50,
        "endLine": 102,
        "endChar": 88
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_0e94bd01",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "Yes it is, that\u0027s why it says \"e.g.\" as a quick example to remind them what a shorty is.\n\nWould you rather I not have an example here (I personally get lost when there\u0027s specially formatted strings without examples of how they look like)?",
      "parentUuid": "247566b9_d68c422d",
      "range": {
        "startLine": 102,
        "startChar": 50,
        "endLine": 102,
        "endChar": 88
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d42ed5_540cc2b6",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "who needs?",
      "range": {
        "startLine": 104,
        "startChar": 51,
        "endLine": 104,
        "endChar": 56
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_6108fa30",
        "filename": "runtime/lambda/art_lambda_method.h",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4d42ed5_540cc2b6",
      "range": {
        "startLine": 104,
        "startChar": 51,
        "endLine": 104,
        "endChar": 56
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a46956e6_7a6f55c7",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "nit: drop?",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_38bea8eb",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "(Done)\n\nPersonally I thought you would\u0027ve preferred this since it\u0027s more explicit. After all with a function call like \"GetUnsafeAtOffset\" it could return pretty much anything.",
      "parentUuid": "a46956e6_7a6f55c7",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4072a51_848bb654",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "Personally I dislike this. What does the style guide say?",
      "range": {
        "startLine": 78,
        "startChar": 6,
        "endLine": 78,
        "endChar": 41
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_879addab",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "This ends up generating pretty tight code, when I was debugging even in O2 most of these [unused] variables (and branches) were optimized out.\n\nThat being said, can you elaborate on what exactly you dislike so I can see how to fix it?",
      "parentUuid": "c4072a51_848bb654",
      "range": {
        "startLine": 78,
        "startChar": 6,
        "endLine": 78,
        "endChar": 41
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "247566b9_f6893e1a",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "drop?",
      "range": {
        "startLine": 140,
        "startChar": 9,
        "endLine": 140,
        "endChar": 29
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cce27b_7cf1d9a0",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "247566b9_f6893e1a",
      "range": {
        "startLine": 140,
        "startChar": 9,
        "endLine": 140,
        "endChar": 29
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64ecbece_56698abe",
        "filename": "runtime/lambda/closure.cc",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "LOG(FATAL) instead. Same below.",
      "range": {
        "startLine": 191,
        "startChar": 6,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4deb6f4_926f9a81",
        "filename": "runtime/lambda/closure.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "NumberOf",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_bd528a73",
        "filename": "runtime/lambda/closure.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4deb6f4_926f9a81",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4072a51_e4a442ed",
        "filename": "runtime/lambda/closure.h",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "Technically java/lang/Object",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_dc31c485",
        "filename": "runtime/lambda/closure.h",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "This was just referring to an arbitrary object, not to the specific one. Fix or leave it?",
      "parentUuid": "c4072a51_e4a442ed",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cce27b_3ce751e8",
        "filename": "runtime/lambda/closure.h",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6492fe15_dc31c485",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e486eed4_beeab01c",
        "filename": "runtime/lambda/closure_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "UNIMPLEMENTED(FATAL) is more intention-revealing...",
      "range": {
        "startLine": 33,
        "startChar": 58,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_d16ac5b6",
        "filename": "runtime/lambda/closure_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e486eed4_beeab01c",
      "range": {
        "startLine": 33,
        "startChar": 58,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4072a51_6467b25c",
        "filename": "runtime/lambda/closure_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T23:15:34Z",
      "side": 1,
      "message": "DCHECK_EQ, or probably !shorty.IsObject()",
      "range": {
        "startLine": 153,
        "startChar": 33,
        "endLine": 153,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cce27b_1c028d13",
        "filename": "runtime/lambda/closure_builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T00:29:27Z",
      "side": 1,
      "message": "changed as per 33",
      "parentUuid": "c4072a51_6467b25c",
      "range": {
        "startLine": 153,
        "startChar": 33,
        "endLine": 153,
        "endChar": 35
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4deb6f4_52c932e5",
        "filename": "runtime/lambda/shorty_field_type.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T14:57:09Z",
      "side": 1,
      "message": "Why do we need this when we have PrimitiveType?",
      "range": {
        "startLine": 44,
        "startChar": 7,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_2e453936",
        "filename": "runtime/lambda/shorty_field_type.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:10:03Z",
      "side": 1,
      "message": "TL;DR I wanted to keep the CL shorter to make it easier for reviewers\n\n--\nI need to refactor these together later (as on line 37)\n\nRight now the PrimitiveType assumes everything not a primitive is an object, and I just didn\u0027t want this CL to also have to refactor every other piece of art code where PrimitiveType was used because this is just the infrastructure side of the closures.\n\nAs for the rest of the functionality here, it\u0027s helpful to have it be part of the class instead of the rest of art code hardcoding the logic on what the traits of a type are.",
      "parentUuid": "a4deb6f4_52c932e5",
      "range": {
        "startLine": 44,
        "startChar": 7,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24bd66ca_d3cc94a3",
        "filename": "runtime/lambda/shorty_field_type.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-07T09:11:11Z",
      "side": 1,
      "message": "I understand it might be easier to introduce a new thing, but we will pay the price for it when refactoring two things that prove to work. I hope you prove me wrong when I say these refactorings get lost once we have a working system...",
      "parentUuid": "84529221_2e453936",
      "range": {
        "startLine": 44,
        "startChar": 7,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9420f4a_32a24e9e",
        "filename": "runtime/lambda/shorty_field_type.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-14T18:27:57Z",
      "side": 1,
      "message": "I\u0027m going to need to put together a spreadsheet of technical debt and refactoring [as a result of java 8 language support], I can add items like this to it. Then when there\u0027s time to do debt removal we have something concrete to look at so we don\u0027t forget about it.\n\nIf you have some other ideas how to handle it, it would be good to hear it as well. \n\nThe way I see it, we have this challenge of making code reviews go easy and smoothly for the reviewers, vs maintaining a clean code base. FWIW usually the approach for that is to create dependent multiple CLs that can be easily reviewed one after the other.\n\nSo I can fix this right away in an upcoming CL or just leave it until a later cleanup. I know I will need to use this in the new verifier code at some point, so it\u0027s possible the interface to this new type might change further.",
      "parentUuid": "24bd66ca_d3cc94a3",
      "range": {
        "startLine": 44,
        "startChar": 7,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "0a5c627703b94fd2e0bf3f86096ef2949537a135",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}