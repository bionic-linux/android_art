{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b927fe82_0285ee74",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-06-20T17:23:42Z",
      "side": 1,
      "message": "I would recommend just fixing the one lint issue in that test and removing the baseline instead of this.\n\nIt can be fixed by raising the min_sdk_version to 34 or by checking `Build.VERSION.SDK_INT` before using `isOptimized()`.",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6003beb3_f25cf8d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-21T12:33:21Z",
      "side": 1,
      "message": "I suspect the reason Roland did this was to unblock the regen in the child CLs without having to revert hunks in them manually. It\u0027s easy to miss as long as we have this special case, so even as a temporary measure this may be warranted.\n\nOf course it\u0027d be better to fix the linter issue. I see the API is actually in the ART module itself so the linter error is a false alarm, and it seems likely we\u0027ll hit it again when we test more of our own APIs. Is it possible to teach the linter that certain packages are in the same module and hence should be exempt from SDK version checks?",
      "parentUuid": "b927fe82_0285ee74",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc754066_9d1c0d3a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-06-21T16:39:49Z",
      "side": 1,
      "message": "\u003e I suspect the reason Roland did this was to unblock the regen in the child CLs without having to revert hunks in them manually. It\u0027s easy to miss as long as we have this special case, so even as a temporary measure this may be warranted.\n\nExactly. This change is orthogonal to the linter issue, which can be addressed separately.",
      "parentUuid": "6003beb3_f25cf8d9",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fb3bb2e_e276df25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-06-21T18:12:04Z",
      "side": 1,
      "message": "\u003e I see the API is actually in the ART module itself so the linter error is a false alarm, and it seems likely we\u0027ll hit it again when we test more of our own APIs. Is it possible to teach the linter that certain packages are in the same module and hence should be exempt from SDK version checks?\n\nWhat makes you think that it\u0027s a false alarm? The test is a regular `java_test` / `java_library`, there\u0027s nothing that inherently couples it to a specific version of ART. Presumably you\u0027re only actually running against a version of ART that was built from the same source tree, but if that\u0027s the case, why is `min_sdk_version` low? (31)",
      "parentUuid": "dc754066_9d1c0d3a",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84ad057e_b60529e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-23T23:10:05Z",
      "side": 1,
      "message": "Exactly, the tests generally assume they\u0027re tested against the module in the very same build (the exception is CTS).\n\n\u003e if that\u0027s the case, why is min_sdk_version low? (31)\n\nART is a Mainline module, so it and its tests must work on any platform that it\u0027s updatable on, which means SDK level 31.",
      "parentUuid": "6fb3bb2e_e276df25",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a4ef9ed_4a70c524",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2024-06-26T23:24:20Z",
      "side": 1,
      "message": "I see. I guess the problem is that the test is just a regular java_test with no way of communicating to the build system that it\u0027s tied to a much newer version of art than min_sdk_version would imply. I\u0027m not sure what would be a good solution for that; we\u0027d probably have to do something like make a wholistic \"test bundle\" that includes both the tests and the code under test.",
      "parentUuid": "84ad057e_b60529e4",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "288b70ec_acab4c85",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-07-01T13:32:37Z",
      "side": 1,
      "message": "I reckon the division is the same as the \"containers\" used for TS flag export etc. A solution that leverages that abstraction would be ideal, but if it requires a significant engineering effort then a way to just pass a package exclusion list to the linter may be good enough.",
      "parentUuid": "3a4ef9ed_4a70c524",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6c8cc12_46ad0a82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-07-18T14:47:38Z",
      "side": 1,
      "message": "Btw, this isn\u0027t restricted to tests - even in other Java code with older min_sdk_version it\u0027s safe for us to use newer features from the JDK since our module *is* the JDK. It recently popped up in PS7 here: https://r.android.com/c/3165502/7",
      "parentUuid": "288b70ec_acab4c85",
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d775868_4fa6cdd6",
        "filename": "test/utils/regen-test-files",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-21T12:33:21Z",
      "side": 1,
      "message": "What about passing in this whole block, so the argument can be used as a generic way to add properties?",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 521,
        "endChar": 13
      },
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "754046fc_5148a01d",
        "filename": "test/utils/regen-test-files",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-06-21T16:39:49Z",
      "side": 1,
      "message": "I amended this in PS2; let me know what you think.",
      "parentUuid": "6d775868_4fa6cdd6",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 521,
        "endChar": 13
      },
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e0dbaea_439c8027",
        "filename": "test/utils/regen-test-files",
        "patchSetId": 1
      },
      "lineNbr": 521,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-21T16:59:44Z",
      "side": 1,
      "message": "Looks good, thanks.",
      "parentUuid": "754046fc_5148a01d",
      "range": {
        "startLine": 518,
        "startChar": 0,
        "endLine": 521,
        "endChar": 13
      },
      "revId": "d4f13f9eb83f532fc5ecd417131b0e45e08c1cb6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}