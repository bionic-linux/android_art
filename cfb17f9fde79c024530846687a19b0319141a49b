{
  "comments": [
    {
      "key": {
        "uuid": "71bf1d96_c11137e3",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 286,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T16:06:16Z",
      "side": 1,
      "message": "nit: these should either be enum{} or static constexpr, we don\u0027t need these global variables in the .rodata",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b754de45_7016ada3",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 286,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2018-10-25T17:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71bf1d96_c11137e3",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fd7d1cb_d4df7d6a",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 288,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T16:06:16Z",
      "side": 1,
      "message": "Awesome, thanks, by the way just using this works:\n\n  enum {\n    ...\n  }",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8572999_c01d1def",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 293,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T17:11:37Z",
      "side": 1,
      "message": "// Invariants: \n // * Only Thread::Current() can call Thread::Park().\n // * Either the permit is available (kPermitAvailable) or there is no permit available (kNoPermitAvailable).\n // * Other park_state_ values are not allowed.\n\nAlso is it possible to make these an explicit DCHECK or would that be racey?",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97e742e3_f58d0bdc",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 293,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2018-10-25T17:29:26Z",
      "side": 1,
      "message": "Time wouldn\u0027t be racy, but it\u0027s not invalid to pass negative times into LockSupport.park(), so I don\u0027t think there\u0027s a reason to DCHECK here. Added the DCHECK for thread::current",
      "parentUuid": "b8572999_c01d1def",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71ebb1be_f11bc676",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 299,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T17:11:37Z",
      "side": 1,
      "message": "It seems this could be a bit more explicit:\n\n  int old_state \u003d fetch_add(1...)\n\n  if (old_state \u003d\u003d kNoPermit) {\n    // no permit was available. block thread until later.\n  } else {\n    // the fetch_add has consumed the permit. immediately return.\n    DCHECK_EQ(old_state, kPermitAvailable);\n  }",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f89e29_00a83c8a",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 299,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2018-10-25T17:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71ebb1be_f11bc676",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aec16a48_1fa9d44a",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 311,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T17:11:37Z",
      "side": 1,
      "message": "I think this can cause spurious wakeups right? We should document\n\n  // Note: futex can return early with spurious wakeup. This is allowed by LockSupport#park()",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db77a0c_627f1d17",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 311,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2018-10-25T17:29:26Z",
      "side": 1,
      "message": "Futex will not spuriously wake up since 2.6.22. The documentation about spurious wakeups is a recommendation that users of futex should be robust to spurious wakeups, because certain patterns that reuse addresses can cause wakes to happen in unexpected places.\n\nhttp://man7.org/linux/man-pages/man2/futex.2.html, search for \"spurious\"",
      "parentUuid": "aec16a48_1fa9d44a",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745cbb1c_b27a041d",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 346,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-25T17:11:37Z",
      "side": 1,
      "message": "nit: document allowed spurious wakeups behavior",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6472dcc9_bc5a62a2",
        "filename": "runtime/thread.cc",
        "patchSetId": 26
      },
      "lineNbr": 346,
      "author": {
        "id": 1059543
      },
      "writtenOn": "2018-10-25T17:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "745cbb1c_b27a041d",
      "revId": "cfb17f9fde79c024530846687a19b0319141a49b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}