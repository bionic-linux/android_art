{
  "comments": [
    {
      "key": {
        "uuid": "2344dcdb_7be68284",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "static constexpr ?",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 0
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ab85da1_bcd26be7",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "That is intentionally exported so libunwind can read it.",
      "parentUuid": "2344dcdb_7be68284",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 0
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd7d4326_d132febb",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "nit: add a comment",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 220,
        "endChar": 5
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e43e21e_0ea2c518",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd7d4326_d132febb",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 220,
        "endChar": 5
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e45f42d_fe2cdf77",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "could we have a better check? I guess this is really \"Is NativeInfo for JITted code\" ?",
      "range": {
        "startLine": 271,
        "startChar": 7,
        "endLine": 271,
        "endChar": 23
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "117cb771_4c054064",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "Renamed to free_entries_.\n\nThis a list of JITCodeEntries which have been deleted and can be reused.\n(it would be fine to free the memory, but technically we should recycle for the seqlock synchronization to be sound).",
      "parentUuid": "7e45f42d_fe2cdf77",
      "range": {
        "startLine": 271,
        "startChar": 7,
        "endLine": 271,
        "endChar": 23
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bf52f0_ab2d4219",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-03T18:05:42Z",
      "side": 1,
      "message": "Since you optimize ordering elsewhere, I\u0027d make this memory_order_relaxed.",
      "range": {
        "startLine": 303,
        "startChar": 31,
        "endLine": 303,
        "endChar": 33
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a41568ed_3fb87de8",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-03T18:43:56Z",
      "side": 1,
      "message": "I don\u0027t optimize it.  As a rule of thumb, I mention it elsewhere only if I matters.\nIn contrast to here, it does not really matter, and the default will do.",
      "parentUuid": "79bf52f0_ab2d4219",
      "range": {
        "startLine": 303,
        "startChar": 31,
        "endLine": 303,
        "endChar": 33
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a28e194a_a4ba10aa",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-04T18:26:04Z",
      "side": 1,
      "message": "The combination with the release operations below still strikes me as a bit odd, but I don\u0027t feel strongly about it.",
      "parentUuid": "a41568ed_3fb87de8",
      "range": {
        "startLine": 303,
        "startChar": 31,
        "endLine": 303,
        "endChar": 33
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae8f2ee5_4f168de3",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 303,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-08T21:58:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a28e194a_a4ba10aa",
      "range": {
        "startLine": 303,
        "startChar": 31,
        "endLine": 303,
        "endChar": 33
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aeaf371_540359b2",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-03T18:05:42Z",
      "side": 1,
      "message": "Looks redundant to me.",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 54
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bad7ef14_39904da3",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-03T18:43:56Z",
      "side": 1,
      "message": "I think it matters, as otherwise the fetch_add below can be reordered higher up in this method,\npossibly breaking the \"next_\" points to even seqlock invariant.",
      "parentUuid": "0aeaf371_540359b2",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 54
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7106b35_40d9f13d",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-04T18:26:04Z",
      "side": 1,
      "message": "Currently the fetch_add() immediately below is sequentially consistent, which includes release semantics.\n\nAssume it were relaxed. I still don\u0027t understand how moving it up would break anything. All you\u0027re doing is marking the data invalid a bit longer. In general, I would really like to see explicit fences accompanied by a comment explaining why they exist. For the one below, something like \"seqlock writer ordering\" seems fine. For this one, I don\u0027t know.\n\nIn general, I find the synchronization logic here rather hard to follow. Maybe that\u0027s unavoidable.",
      "parentUuid": "bad7ef14_39904da3",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 54
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be67e2ce_fef61a5f",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-08T21:58:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7106b35_40d9f13d",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 359,
        "endChar": 54
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29df1fc2_197ad002",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-03T18:05:42Z",
      "side": 1,
      "message": "memory_order_relaxed should be fine. The only required ordering is enforced by the fence below.",
      "range": {
        "startLine": 360,
        "startChar": 36,
        "endLine": 360,
        "endChar": 39
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeeeddf5_376cdfb8",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-03T18:43:56Z",
      "side": 1,
      "message": "Yeah, relaxed is fine as long as it is sandwiched between two fences.\n\nI am still preferring the default and relaxed might make it seem like it matters that it is relaxed.\n\nIn general, I don\u0027t think the performance between the variants matters here.",
      "parentUuid": "29df1fc2_197ad002",
      "range": {
        "startLine": 360,
        "startChar": 36,
        "endLine": 360,
        "endChar": 39
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89895432_1c5565d4",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-09-04T18:26:04Z",
      "side": 1,
      "message": "For loads, there is a large difference between the variants, maybe on the order of a factor of 10-50. This may not be performance critical enough to matter. But the mixture of fine tuned fences and \"just give me sequentially consistent ordering, I don\u0027t care\" looks odd to me.",
      "parentUuid": "aeeeddf5_376cdfb8",
      "range": {
        "startLine": 360,
        "startChar": 36,
        "endLine": 360,
        "endChar": 39
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7f47844_b3f18582",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-08T21:58:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89895432_1c5565d4",
      "range": {
        "startLine": 360,
        "startChar": 36,
        "endLine": 360,
        "endChar": 39
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f5dfc85_f6a75813",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "nor changed?",
      "range": {
        "startLine": 397,
        "startChar": 60,
        "endLine": 397,
        "endChar": 67
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af59886a_ab83427e",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 397,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "app_tail-\u003eprev and zygote_head-\u003enext are changed.",
      "parentUuid": "7f5dfc85_f6a75813",
      "range": {
        "startLine": 397,
        "startChar": 60,
        "endLine": 397,
        "endChar": 67
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4bcb04d_48adb2ae",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "an app",
      "range": {
        "startLine": 459,
        "startChar": 67,
        "endLine": 459,
        "endChar": 69
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3684f0af_96a5cdf8",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4bcb04d_48adb2ae",
      "range": {
        "startLine": 459,
        "startChar": 67,
        "endLine": 459,
        "endChar": 69
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6187f20f_26fe5d4f",
        "filename": "runtime/jit/debugger_interface.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "nit: add comments",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 65
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ab8113b_b0784bec",
        "filename": "runtime/jit/debugger_interface.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6187f20f_26fe5d4f",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 65
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482ee417_76803baf",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1161,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-30T12:26:35Z",
      "side": 1,
      "message": "Given those are the only callers, move the lock acquisition to the callees? (Also, given this is all pre/post fork, I think there\u0027s understanding that we wouldn\u0027t need to lock).",
      "range": {
        "startLine": 1149,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 28
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7811e143_42f77ff9",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 3
      },
      "lineNbr": 1161,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-09-02T09:37:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "482ee417_76803baf",
      "range": {
        "startLine": 1149,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 28
      },
      "revId": "f59d326d527183d6a309e9ffb6050ba916336f58",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}