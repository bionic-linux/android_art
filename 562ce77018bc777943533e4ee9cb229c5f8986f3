{
  "comments": [
    {
      "key": {
        "uuid": "cd73ca92_55262c69",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-07-29T11:15:42Z",
      "side": 1,
      "message": "Use CompareAndBranchIfNonZero() and relax the input location (don\u0027t force R0, R1).",
      "range": {
        "startLine": 241,
        "startChar": 7,
        "endLine": 241,
        "endChar": 11
      },
      "revId": "562ce77018bc777943533e4ee9cb229c5f8986f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d9472c2_1b2cdb49",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-29T11:20:04Z",
      "side": 1,
      "message": "Add a comment similar to the one from line 238 to explain why you\u0027re forcing (R0, R1) as input location.",
      "range": {
        "startLine": 262,
        "startChar": 2,
        "endLine": 262,
        "endChar": 64
      },
      "revId": "562ce77018bc777943533e4ee9cb229c5f8986f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d8962a8_bf159700",
        "filename": "disassembler/disassembler_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 1459,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-07-29T11:15:42Z",
      "side": 1,
      "message": "Why not 0xf0f0? What are the op3 !\u003d 0 instructions?",
      "range": {
        "startLine": 1459,
        "startChar": 23,
        "endLine": 1459,
        "endChar": 29
      },
      "revId": "562ce77018bc777943533e4ee9cb229c5f8986f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d9472c2_1b7bfb36",
        "filename": "test/082-inline-execute/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 1049,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-07-29T11:15:42Z",
      "side": 1,
      "message": "This will be cleaner if you change \"+\" to \"|\" and get rid of the Math.max().\nThe test above already covers numberOfLeadingZeros(2).",
      "range": {
        "startLine": 1049,
        "startChar": 66,
        "endLine": 1049,
        "endChar": 67
      },
      "revId": "562ce77018bc777943533e4ee9cb229c5f8986f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d657ec3_1aa93d13",
        "filename": "test/082-inline-execute/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 1051,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-07-29T11:15:42Z",
      "side": 1,
      "message": "This isn\u0027t actually testing numberOfLeadingZeros(0). Please add that back outside the loop.\n(Sorry for misleading you in my comment on PS1.)",
      "revId": "562ce77018bc777943533e4ee9cb229c5f8986f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}