{
  "comments": [
    {
      "key": {
        "uuid": "dfb999d9_5fe083de",
        "filename": "runtime/barrier.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-12-03T03:51:53Z",
      "side": 1,
      "message": "while (count_ !\u003d 0 \u0026\u0026 !timed_out) {\n?",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "8f6170505b7a8f4478535b5e91f7efb5d390752c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f47cdec_728dc08e",
        "filename": "runtime/barrier.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-03T22:24:51Z",
      "side": 1,
      "message": "Let\u0027s discuss this more tomorrow?\n\nI\u0027m wondering if we might want to somehow get rid of the reuse case as it sounds error-prone to use.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "8f6170505b7a8f4478535b5e91f7efb5d390752c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f4ed10c_015d0ec0",
        "filename": "runtime/barrier.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-04T00:57:30Z",
      "side": 1,
      "message": "In my mind the question is whether any existing clients violate the newly stated rules.  The problem is that the reuse case with only Pass() calls and a single Increment() seems entirely fine and appropriate for the context in which it\u0027s used.  Maybe that should be a separate interface for aesthetic reasons.  I wouldn\u0027t have written this this way to start with.  But I don\u0027t see a real argument that this is wrong.",
      "parentUuid": "7f47cdec_728dc08e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 25,
        "endChar": 85
      },
      "revId": "8f6170505b7a8f4478535b5e91f7efb5d390752c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfc5197a_330f689f",
        "filename": "runtime/barrier.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-12-03T03:51:53Z",
      "side": 1,
      "message": "move comment down to just before \"class Barrier {\\n\"...",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 27,
        "endChar": 39
      },
      "revId": "8f6170505b7a8f4478535b5e91f7efb5d390752c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f47cdec_6de0812d",
        "filename": "runtime/barrier_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-12-03T22:24:51Z",
      "side": 1,
      "message": "\"num_threads + 1\" (spaces around the + operator) ? \n\nWhy isn\u0027t this \"num_threads\" (why +1)?",
      "range": {
        "startLine": 64,
        "startChar": 18,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "8f6170505b7a8f4478535b5e91f7efb5d390752c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}