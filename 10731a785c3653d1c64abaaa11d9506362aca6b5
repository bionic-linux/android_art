{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b447aa45_a0dae834",
        "filename": "compiler/optimizing/intrinsics_riscv64.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-07-28T09:52:00Z",
      "side": 1,
      "message": "I wonder if we could define all instrinsics as unimplemented. We do have the capability to mark as unimplmented in other archs e.g. `UNIMPLEMENTED_INTRINSIC_LIST_ARM64`. This could make it so that we are able to recognize and compile with intrinsics in RISC-V without a `LOG(FATAL)` crash. If so, this method would change to:\n\n```\n#define OPTIMIZING_INTRINSICS(Name, IsStatic, NeedsEnvironmentOrCache, SideEffects, Exceptions, ...) \\\n  void Visit ## Name(HInvoke* invoke) override;\n  ART_INTRINSICS_LIST(OPTIMIZING_INTRINSICS)\n#undef OPTIMIZING_INTRINSICS\n```\n\nSimilarly below for `IntrinsicCodeGeneratorRISCV64`. We would `#define UNIMPLEMENTED_INTRINSIC_LIST_RISCV64` simply as all the names (possibly with a macro, or just hard-code it). \n\nThen in the .cc file we add:\n```\n#define MARK_UNIMPLEMENTED(Name) UNIMPLEMENTED_INTRINSIC(RISCV64, Name)\nUNIMPLEMENTED_INTRINSIC_LIST_RISCV64(MARK_UNIMPLEMENTED);\n#undef MARK_UNIMPLEMENTED\n```",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "10731a785c3653d1c64abaaa11d9506362aca6b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "802800d6_7f86d3cd",
        "filename": "compiler/optimizing/intrinsics_riscv64.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-07-28T12:30:03Z",
      "side": 1,
      "message": "I decided to leave creating the .cc file for later. (This is Lifang\u0027s patch with minor changes.)",
      "parentUuid": "b447aa45_a0dae834",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "10731a785c3653d1c64abaaa11d9506362aca6b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1d7f72b_9bbc717e",
        "filename": "compiler/optimizing/intrinsics_riscv64.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-07-28T12:55:11Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "802800d6_7f86d3cd",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 34
      },
      "revId": "10731a785c3653d1c64abaaa11d9506362aca6b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}