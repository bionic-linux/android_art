{
  "comments": [
    {
      "key": {
        "uuid": "5deee8dc_9906f6c7",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-12T10:56:52Z",
      "side": 1,
      "message": "Ah right. Instead, I think I\u0027d prefer just put a HThrow(HNullConstant), wdyt?",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 27
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94a2c1b8_841dfdd1",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-12T17:06:40Z",
      "side": 1,
      "message": "Ok, I will undo the requested goto and use a synthetic throw instead. That will minimize changes (well, at least the \n eventually observed changes, i have to undo the goto work again :-)",
      "parentUuid": "5deee8dc_9906f6c7",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 27
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5abc9315_44ada2e7",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-12T21:30:14Z",
      "side": 1,
      "message": "I implemented what you wanted, but noted the (now obvious) drawback that this creates actually assembly code for the synthetic throw at the end (including an ugly environment need). So I actually prefer the GOTO at the end (or making a throwing invoke a control flow statement).\n\nwdyt?",
      "parentUuid": "94a2c1b8_841dfdd1",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 27
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56cdd793_123b2f05",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-12T22:01:23Z",
      "side": 1,
      "message": "Oh indeed. Then I agree the Goto is better. Or special-case the code generator for HTrow (no strong prefer on both). But I\u0027d really not want to have HInvoke as a control flow :)",
      "parentUuid": "5abc9315_44ada2e7",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 27
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80b658c7_38c0160c",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-12T22:33:13Z",
      "side": 1,
      "message": "Ok let\u0027s do the Goto. I agree with the HInvoke decision, even though it was \"less code\".",
      "parentUuid": "56cdd793_123b2f05",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 27
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d5469b_d99efe6a",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-12T10:56:52Z",
      "side": 1,
      "message": "seems arbitrary? If you want to land this CL, could you follow-up with a CL that does it for instance calls too?",
      "range": {
        "startLine": 477,
        "startChar": 44,
        "endLine": 477,
        "endChar": 56
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8289fa3d_da7e2dee",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-12T21:33:43Z",
      "side": 1,
      "message": "Will do. Will also write new checker tests for that.",
      "parentUuid": "a1d5469b_d99efe6a",
      "range": {
        "startLine": 477,
        "startChar": 44,
        "endLine": 477,
        "endChar": 56
      },
      "revId": "4926b0eafb1810f6dc7a5001b1d095c13e0f3682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}