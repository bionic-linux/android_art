{
  "comments": [
    {
      "key": {
        "uuid": "a5104b96_32e4ce71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T02:48:53Z",
      "side": 1,
      "message": "BTW, did this portion (the dedicated_full_run thing) of the change have a  performance improvement? It\u0027s good in general to evaluate the benefit (eg speedup) against the cost (eg additional RAM/LOC/complexity).",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 7
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_008eaa68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Not sure, I presume it removed 1 compare and 1 conditional branch from each allocation. That should be a speedup, but it should also be hard to measure. Since its implemented, I propose we keep it. I think I have a way of reducing the complexity.",
      "parentUuid": "a5104b96_32e4ce71",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_e72aa2af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "My view leans toward that a speedup must be measurable by definition (that is, a non-measurable speedup isn\u0027t a speedup) just like Key Results must be measurable. Anyhow, yes, let\u0027s keep it.",
      "parentUuid": "85b427df_008eaa68",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65d01310_64e14437",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T02:48:53Z",
      "side": 1,
      "message": "Nice speedup.",
      "range": {
        "startLine": 45,
        "startChar": 14,
        "endLine": 45,
        "endChar": 16
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_59825340",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Is it possible to initialize dedicated_full_runs_ to point to dedicated_full_run_storage_ at this point?",
      "range": {
        "startLine": 45,
        "startChar": 47,
        "endLine": 45,
        "endChar": 54
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_6054c6fe",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_59825340",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_46455426",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Nice as it\u0027s now possible to see the bracket index in the lock names in the mutex dump.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 27
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_02094e47",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Agreed, this is mostly for figuring out which bracket locks are contending.",
      "parentUuid": "a5104b96_46455426",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_6a34b701",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "Right.",
      "parentUuid": "c5e8dfcd_02094e47",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_b96d47d5",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Move this to the end of Initialize() where its other fields are initialized?",
      "range": {
        "startLine": 99,
        "startChar": 2,
        "endLine": 99,
        "endChar": 46
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_6524dc38",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_b96d47d5",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_26781808",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 320,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Should this be kCheckZeroMemory (which is currently equivalent)?",
      "range": {
        "startLine": 320,
        "startChar": 8,
        "endLine": 320,
        "endChar": 21
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_1ebd2959",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 320,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_26781808",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_c5b76cc2",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Good point.",
      "range": {
        "startLine": 368,
        "startChar": 13,
        "endLine": 368,
        "endChar": 18
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_19fa9b58",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Note to self: now it returns the byte size instead of number of pages.",
      "range": {
        "startLine": 449,
        "startChar": 9,
        "endLine": 449,
        "endChar": 18
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_e6656059",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 475,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Nice that the debug build is probably somewhat faster.\n\nParanoid: DCHECK_EQ(total_bytes % sizeof(uword), 0)?",
      "range": {
        "startLine": 475,
        "startChar": 11,
        "endLine": 475,
        "endChar": 16
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_5ec7b1d8",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 475,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_e6656059",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_a316a5dc",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "This is probably intended to be (note the location of the parentheses): \n\nreinterpret_cast\u003cbyte*\u003e(new_run) + headerSizes[idx];",
      "range": {
        "startLine": 541,
        "startChar": 20,
        "endLine": 541,
        "endChar": 72
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_80d0fa31",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Nice catch.",
      "parentUuid": "85fd0775_a316a5dc",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_461554a0",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "numOfSlots[idx] and bracketSizes[idx] can be cached/hoisted out of the loop.",
      "range": {
        "startLine": 542,
        "startChar": 29,
        "endLine": 542,
        "endChar": 39
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_1ee44971",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 542,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_461554a0",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_c3ff6913",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I\u0027m not sure, but is prefetching beneficial for all the slots which can be up to \u003e 200, given the cost of this loop? Did you try limiting it to a fixed number?",
      "range": {
        "startLine": 543,
        "startChar": 8,
        "endLine": 543,
        "endChar": 26
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_043a3cba",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "It is certainly worth investigating this more.",
      "parentUuid": "85fd0775_c3ff6913",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_652f7cae",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 551,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T17:51:17Z",
      "side": 1,
      "message": "We rely on the zero\u0027ed header for some of the fields\u0027 initial value here. Can you add DCHECKs that check that the fields have zero initial values for the purpose of verification and documentation? For example,\n\nDCHECK(!new_run-\u003eIsThreadLocal());",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 551,
        "endChar": 4
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_2f2ab107",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 551,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5e8dfcd_652f7cae",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_432ff916",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "So, lower_bound() wasn\u0027t necessary, I take it.",
      "range": {
        "startLine": 561,
        "startChar": 18,
        "endLine": 561,
        "endChar": 23
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_c25686e3",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Its sorted by increasing order already.",
      "parentUuid": "85fd0775_432ff916",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_037df1c1",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Note to self: is it safe to pass in dedicated_full_run_ to MergeThreadLocalFreeBitMapToAllocBitMap()",
      "range": {
        "startLine": 599,
        "startChar": 28,
        "endLine": 599,
        "endChar": 67
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_60c84631",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "The free bitmap of the dedicated full run.",
      "parentUuid": "85fd0775_037df1c1",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a593eb68_6bd04131",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "This looks safe as the thread-local free bit map of the dedicated full run is always zero?",
      "parentUuid": "85b427df_60c84631",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_c283e23f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 605,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "This comment needs to be updated.",
      "range": {
        "startLine": 605,
        "startChar": 10,
        "endLine": 605,
        "endChar": 60
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_e139c2ef",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 605,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85cb4765_c283e23f",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_a0ca184e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 606,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "first_bitmap_idx_ is meant to be a vector index, not a slot index, as I understand. Why compare it to numOfSlots[idx]?\n\nEither case, why is this case? Because it was full? But it\u0027s all free now.\n\nWould it be the case regardless of what is_all_free_after_merge is?",
      "range": {
        "startLine": 606,
        "startChar": 10,
        "endLine": 606,
        "endChar": 74
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_c13cc6e2",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 606,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Stale check, updated.",
      "parentUuid": "85fd0775_a0ca184e",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_00b684e0",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 608,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Why set it to zero here? Isn\u0027t first_bitmap_idx_ already updated by MergeThreadLocalFreeBitMapToAllocBitMap()?",
      "range": {
        "startLine": 608,
        "startChar": 8,
        "endLine": 608,
        "endChar": 48
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_80cd5a42",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 608,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Stale code, deleted.",
      "parentUuid": "85fd0775_00b684e0",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_0087a44f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 623,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I think this code (lines 612-623) should be skipped if thread_local_run \u003d\u003d dedicated_full_run_ as, I think, it\u0027d be cleaner if we don\u0027t insert dedicated_full_run_ into the full_runs_ or update its is_thread_local_ field.",
      "range": {
        "startLine": 612,
        "startChar": 0,
        "endLine": 623,
        "endChar": 80
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_22a72a98",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 623,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_0087a44f",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_455fdc1c",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 630,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Thanks for adding IsThreadLocal() and SetIsThreadLocal().",
      "range": {
        "startLine": 630,
        "startChar": 26,
        "endLine": 630,
        "endChar": 42
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_d992c374",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 751,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Call ZeroHeader() above the MutexLock? Two other places where the same comment applies.",
      "range": {
        "startLine": 751,
        "startChar": 11,
        "endLine": 751,
        "endChar": 21
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_81d0fe31",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 751,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_d992c374",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_a5b42811",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 753,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "run is dead at this point. Get rid of line 753?",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 20
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_41c6f67e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 753,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85cb4765_a5b42811",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_45ad1cbd",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "For consistency, get rid of the \u0027_\u0027 here or add it to all the fields?",
      "range": {
        "startLine": 807,
        "startChar": 29,
        "endLine": 807,
        "endChar": 30
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_82b63ec8",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85cb4765_45ad1cbd",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_ac0ecb50",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "I don\u0027t see any change in this line.",
      "parentUuid": "c5e8dfcd_82b63ec8",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_3e03dd2e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "Can you remove the underscore before the equal sign?",
      "parentUuid": "6587332a_ac0ecb50",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_21e48a71",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 820,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T17:51:17Z",
      "side": 1,
      "message": "How about DCHECK\u0027ing that all the bits before first_bitmap_idx_ are all set here to verify that there\u0027s no slots \u0027leaked\u0027?",
      "range": {
        "startLine": 820,
        "startChar": 0,
        "endLine": 820,
        "endChar": 4
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_09f0956f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 820,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5e5abf4_21e48a71",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_0c2517ce",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 820,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "85b427df_09f0956f",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_17c6e47d",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 822,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I guess this is where a bound check was removed by masking the end of the alloc bit map, correct?",
      "range": {
        "startLine": 822,
        "startChar": 4,
        "endLine": 822,
        "endChar": 28
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_c198469a",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 822,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Yes, since the bits are always masked we don\u0027t need to worry about allocating there.",
      "parentUuid": "a5104b96_17c6e47d",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_374cc086",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 824,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Either just \"32\" or \"sizeof(*alloc_bitmap_ptr) * kBitsPerByte\"?",
      "range": {
        "startLine": 824,
        "startChar": 58,
        "endLine": 824,
        "endChar": 87
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_62c85231",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 824,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_374cc086",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_ac850780",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 838,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "num_vec?\n\nHoist this out of the loop?",
      "range": {
        "startLine": 838,
        "startChar": 17,
        "endLine": 838,
        "endChar": 26
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_a2e17aaf",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 838,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "I don\u0027t think we want to since the loop usually will return before going to the next bitmap vector.",
      "parentUuid": "a5104b96_ac850780",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a593eb68_0e898b16",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 838,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "c5e8dfcd_a2e17aaf",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_006cc445",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 841,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I think it\u0027s good idea to DCHECK that the run is actually full before returning here, in case there\u0027s a bug in first_bitmap_idx_.",
      "range": {
        "startLine": 841,
        "startChar": 6,
        "endLine": 841,
        "endChar": 12
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_211f2a4f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 841,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_006cc445",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_e3154a58",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "When there\u0027s no available slot, we are returning (nullptr) without incrementing first_bitmap_idx_. This means the first_bitmap_idx_ is left pointing the last vector, as opposed to the next (invalid) vector. And, next time AllocSlot() is called, it\u0027d have to search the last vector even if the run is full.\n\nIs this as intended?\n\nI guess how it should be because we removed the bound check above. Correct?",
      "range": {
        "startLine": 842,
        "startChar": 4,
        "endLine": 842,
        "endChar": 5
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_22f56a68",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Yes, the point of that is that the last bitmap word is still valid memory so we don\u0027t need to check that we are on a valid word before doing the ffs.",
      "parentUuid": "85fd0775_e3154a58",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_97793452",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 870,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Since we zero out the memory for each slot as it is freed, it may be worth experimenting with a hand-written C++ memory zero routine for a smaller size (eg \u003c 64 bytes), as opposed to always calling memset.\n\nLeave a TODO?",
      "range": {
        "startLine": 870,
        "startChar": 2,
        "endLine": 870,
        "endChar": 8
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_e15382f0",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 870,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_97793452",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_63c03a31",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 879,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Good refactoring.",
      "range": {
        "startLine": 879,
        "startChar": 19,
        "endLine": 879,
        "endChar": 38
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_4efe071c",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "DCHECK_GE?",
      "range": {
        "startLine": 980,
        "startChar": 2,
        "endLine": 980,
        "endChar": 10
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_4119964e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 980,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_4efe071c",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_23164ab1",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 982,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "DCHECK_NE?",
      "range": {
        "startLine": 982,
        "startChar": 2,
        "endLine": 982,
        "endChar": 10
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_610e9207",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 982,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_23164ab1",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_037dee3c",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 991,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "\u0027bits\u0027 -\u003e \u0027vector\u0027?",
      "range": {
        "startLine": 991,
        "startChar": 20,
        "endLine": 991,
        "endChar": 24
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_405ee259",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 991,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_037dee3c",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65d01310_81347a02",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1005,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I guess this was simplified due to the last vector mask.",
      "range": {
        "startLine": 1005,
        "startChar": 4,
        "endLine": 1005,
        "endChar": 6
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_a1e17aaf",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1005,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "65d01310_81347a02",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_f06416ed",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1127,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "I think this DCHECK should be kept.",
      "range": {
        "startLine": 1127,
        "startChar": 8,
        "endLine": 1127,
        "endChar": 17
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_9e112976",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1127,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "Can you add this back?",
      "parentUuid": "2581bb17_f06416ed",
      "range": {
        "startLine": 1127,
        "startChar": 8,
        "endLine": 1127,
        "endChar": 17
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_37596071",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "This DCHECK is redundant and can be removed.",
      "range": {
        "startLine": 1130,
        "startChar": 15,
        "endLine": 1130,
        "endChar": 47
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_25c1f465",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1130,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_37596071",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_4fc5413f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1137,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "Good one.",
      "range": {
        "startLine": 1137,
        "startChar": 8,
        "endLine": 1137,
        "endChar": 17
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_6fca0552",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1157,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "I think this should be kept.",
      "range": {
        "startLine": 1157,
        "startChar": 8,
        "endLine": 1157,
        "endChar": 17
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_be0eed50",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1157,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "Can you add this back?",
      "parentUuid": "6587332a_6fca0552",
      "range": {
        "startLine": 1157,
        "startChar": 8,
        "endLine": 1157,
        "endChar": 17
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_32d7ae5e",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1171,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Nice. This got rid of free_from_run.",
      "range": {
        "startLine": 1171,
        "startChar": 8,
        "endLine": 1171,
        "endChar": 16
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65d01310_21464e37",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1176,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Nice refactoring.",
      "range": {
        "startLine": 1176,
        "startChar": 4,
        "endLine": 1176,
        "endChar": 10
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65d01310_61405618",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1193,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Nice simplification.",
      "range": {
        "startLine": 1193,
        "startChar": 7,
        "endLine": 1193,
        "endChar": 10
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_3225eece",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1262,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "run is dead and this line can be removed?",
      "range": {
        "startLine": 1262,
        "startChar": 10,
        "endLine": 1262,
        "endChar": 24
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_6393f046",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1262,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_3225eece",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_88cd7b42",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1550,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "I don\u0027t think dedicated_full_run_ would show up here as it points to a statically allocated memory, separate from the space memory, and we can undo the change around here, right?",
      "range": {
        "startLine": 1550,
        "startChar": 26,
        "endLine": 1550,
        "endChar": 45
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_c149269b",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1550,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "It used to be allocated in the RosAlloc space, the check isn\u0027t necessary anymore. Deleted.",
      "parentUuid": "85cb4765_88cd7b42",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_a80f9fbe",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1600,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "So, thread_local_run could be nullptr? Not always pointing to dedicated_full_run_ if revoked?",
      "range": {
        "startLine": 1600,
        "startChar": 9,
        "endLine": 1600,
        "endChar": 25
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_035b14db",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1600,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Not anymore.",
      "parentUuid": "85cb4765_a80f9fbe",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_8829fb11",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1606,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Assuming it can be null, how about making each case explicit and get rid of the continue, as in:\n\nif (thread_local_run \u003d\u003d nullptr) {\n  thread-\u003eSetRosAllocRun(idx, dedicated_full_run_);\n} else if (thread_local_run \u003d\u003d dedicated_full_run) {\n  // nothing to do.\n} else {\n  thread-\u003eSetRosAllocRun(idx, dedicated_full_run_);\n  DCHECK_EQ(thread_local_run-\u003emagic_num_, kMagicNum);\n  ...\n}\n\n?",
      "range": {
        "startLine": 1606,
        "startChar": 8,
        "endLine": 1606,
        "endChar": 16
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_012b0eb5",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1606,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Can\u0027t be null anymore with new patchset.",
      "parentUuid": "85cb4765_8829fb11",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_9204a2e2",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1611,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Move this above line 1609, right after line 1608?",
      "range": {
        "startLine": 1611,
        "startChar": 6,
        "endLine": 1611,
        "endChar": 48
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_055158e8",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1611,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_9204a2e2",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_681677e0",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1631,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Similarly, thread_local_run is dead at this point and this line can be removed?",
      "range": {
        "startLine": 1631,
        "startChar": 8,
        "endLine": 1631,
        "endChar": 35
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_0054ea2f",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1631,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85cb4765_681677e0",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cb4765_088c0bdf",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "If we make dedicated_full_run_ as a size bracket idx 0, then how about asserting that the numOfSlots[0] is largest in the numOfSlots array so that its alloc bit map must be the largest? We rely on this fact.",
      "range": {
        "startLine": 1778,
        "startChar": 43,
        "endLine": 1778,
        "endChar": 44
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_650e9c07",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "I don\u0027t think it matters which size bracket we use.",
      "parentUuid": "85cb4765_088c0bdf",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_702e6682",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "I think it does in FillAllocBitMap() in the next line so it will fill a large enough alloc bit map to cover all the bracket sizes. In this case, since size bracket idx 0 happens to have the largest alloc bit map, it works.\n\nAlso the size_bracket_idx_ field and the filled alloc bit map must match as well because the dedicated full run is passed into a function where a normal run is expected. For example, in AllocFromRun().",
      "parentUuid": "c5e8dfcd_650e9c07",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_5e2fb1ad",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "Never mind. I figured this out. As long as AllocFromRun() and MergeThreadLocalFreeBitMapToAllocBitMap() read the size index form the run, it\u0027s fine.",
      "parentUuid": "2581bb17_702e6682",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_92794252",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1878,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Similarly, dedicated_full_run_ isn\u0027t part of the space memory and the page map. We can remove the change around here?",
      "range": {
        "startLine": 1878,
        "startChar": 28,
        "endLine": 1878,
        "endChar": 47
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_04f23c09",
        "filename": "runtime/gc/allocator/rosalloc.cc",
        "patchSetId": 2
      },
      "lineNbr": 1878,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5104b96_92794252",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_e0e540b2",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "How about:\n\n// The index of the first bitmap vector which may contain an available slot.",
      "range": {
        "startLine": 193,
        "startChar": 36,
        "endLine": 193,
        "endChar": 108
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_20d90802",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "It seems that \"first_bitmap_idx_\" could be interpreted to mean something else as it\u0027s taken literally. How about \"first_search_vec_idx_\" or something like that in the sense that we search for an free slot starting from that vector?",
      "range": {
        "startLine": 193,
        "startChar": 13,
        "endLine": 193,
        "endChar": 30
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_d00e4c52",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_20d90802",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_2ea8ffad",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_e0e540b2",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5137f9f_c7e780f6",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "\"per section\" -\u003e \"per run\"?",
      "range": {
        "startLine": 228,
        "startChar": 42,
        "endLine": 228,
        "endChar": 53
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_85772815",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5137f9f_c7e780f6",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_e311cd74",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "\"Words\" -\u003e \"Vectors\"? Let\u0027s call it a vector as technically necessarily uword !\u003d uint32_t and for terminology consistency.",
      "range": {
        "startLine": 229,
        "startChar": 11,
        "endLine": 229,
        "endChar": 30
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_04515ce8",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_e311cd74",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_ce34b767",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "GetLastBitMapLastVectorMask()?",
      "range": {
        "startLine": 262,
        "startChar": 18,
        "endLine": 262,
        "endChar": 33
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_45e9a048",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_ce34b767",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a593eb68_f4088e45",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "Right, no need for two Last\u0027s.",
      "parentUuid": "c5e8dfcd_45e9a048",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_2e72abf8",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Either lose \"with a specific value\" (the word \"Fill\" already implies what it does) or say \"Set all bits\"?",
      "range": {
        "startLine": 277,
        "startChar": 29,
        "endLine": 277,
        "endChar": 50
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_64c5c03f",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Stale comment, there used to be a parameter.",
      "parentUuid": "e516c38e_2e72abf8",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5104b96_03acee78",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "This is a page-sized memory. How about\n\nbyte dedicated_full_runs_storage_[kPageSize]\n\n?",
      "range": {
        "startLine": 472,
        "startChar": 16,
        "endLine": 472,
        "endChar": 43
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e8dfcd_6563fc20",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Needs to be static since we do ::Thread() before the RosAllocSpace is created.",
      "parentUuid": "a5104b96_03acee78",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_90075ae6",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "I didn\u0027t mean dropping static but using type byte instead of size_t.\n\n  static byte dedicated_full_runs_storage_[kPageSize];\n\nseemed simpler to have a page-sized memory, than\n\n  static size_t dedicated_full_runs_storage_[kPageSize/sizeof(size_t)];\n\nwith a division.",
      "parentUuid": "c5e8dfcd_6563fc20",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_de22c1bf",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "Any comment? This isn\u0027t a big deal.",
      "parentUuid": "2581bb17_90075ae6",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_f9f21f79",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 522,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "This should now be the number of bytes instead of pages.",
      "range": {
        "startLine": 522,
        "startChar": 5,
        "endLine": 522,
        "endChar": 39
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_c460548b",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 522,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_f9f21f79",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_2ebbcbd6",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 528,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Comment that it returns the bracket size?",
      "range": {
        "startLine": 528,
        "startChar": 2,
        "endLine": 528,
        "endChar": 8
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_241c9800",
        "filename": "runtime/gc/allocator/rosalloc.h",
        "patchSetId": 2
      },
      "lineNbr": 528,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e516c38e_2ebbcbd6",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5137f9f_0751981e",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 600,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "For clarification, is another way to put this that so that we won\u0027t incorrectly retain the thread-local run from the previous rosalloc space (which could be invalidated/deallocated) after setting up a new one?",
      "range": {
        "startLine": 599,
        "startChar": 70,
        "endLine": 600,
        "endChar": 62
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_4448c4e9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 600,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "This is not a normal case, the tests just do strange stuff by adding multiple RosAlloc spaces.",
      "parentUuid": "c5137f9f_0751981e",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_8fe8198c",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 600,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "If this only applies to space_test, is there a reason not to move it back to SpaceTest::AddSpace() where it was before? Or, does this have a value being here instead of there?",
      "parentUuid": "a5e5abf4_4448c4e9",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_1e4c5986",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 600,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T20:09:21Z",
      "side": 1,
      "message": "We talked about ways to simplify the AddSpace/RemoveSpace interface in person. Any comment? Do something about it now? Leave a TODO?",
      "parentUuid": "6587332a_8fe8198c",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_6b465566",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Same comment from another file: Setting up new thread local buffers by calling revoke upon a brand new rosalloc space seems unintuitive to me.",
      "range": {
        "startLine": 607,
        "startChar": 27,
        "endLine": 607,
        "endChar": 54
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_0e933b7a",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 607,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Deleted the revoke after, no longer necessary.",
      "parentUuid": "e516c38e_6b465566",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_cb8dc96d",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1470,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "It\u0027s not clear to me what this code want to do. Stepping back a bit, what does the (un)set_as_default param for AddSpace() and RemoveSpace() mean?\n\nWe\u0027d like to remove it from the continuous_spaces_ and alloc_spaces_ (presumably to avoid trimming as the comment says), but not clearing fields like main_space_, rosalloc_space_, dlmalloc_space_?\n\nCould there be a cleaner way?\n\nAnd what exactly does not work for debug builds?",
      "range": {
        "startLine": 1470,
        "startChar": 33,
        "endLine": 1470,
        "endChar": 38
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_ee01a7d0",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1470,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "The problem is that since the space is protected, when RosAlloc tries to trim it it attempts to read the magic number (only for debug builds). But since the protection is set to PROT_NONE it faults. This is fixed if you remove the space since it doesn\u0027t get trimmed. I think this is a long existing bug with background compaction + debug builds. I can\u0027t think of cleaner ways, let me know if you can.",
      "parentUuid": "e516c38e_cb8dc96d",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_2f480de9",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1470,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-25T04:48:29Z",
      "side": 1,
      "message": "OK. What\u0027s the reason not to pass false (meaning as non default) to RemoveSpace() here and AddSpace() in line 1479 below?",
      "parentUuid": "85b427df_ee01a7d0",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_324845e9",
        "filename": "runtime/gc/space/space_test.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Note to self: By passing true, AddSpace() does the revoke.",
      "range": {
        "startLine": 42,
        "startChar": 51,
        "endLine": 42,
        "endChar": 55
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_8ecaeb4e",
        "filename": "runtime/gc/space/space_test.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_324845e9",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_52786908",
        "filename": "runtime/gc/space/space_test.h",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Double semicolons.",
      "range": {
        "startLine": 150,
        "startChar": 40,
        "endLine": 150,
        "endChar": 41
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e5abf4_24ef3869",
        "filename": "runtime/gc/space/space_test.h",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85fd0775_52786908",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e516c38e_48527f9a",
        "filename": "runtime/runtime.cc",
        "patchSetId": 2
      },
      "lineNbr": 639,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Is this what the new thread had to do for the main thread? Same comment as the one in thread.cc.",
      "range": {
        "startLine": 639,
        "startChar": 9,
        "endLine": 639,
        "endChar": 33
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_cecb0351",
        "filename": "runtime/runtime.cc",
        "patchSetId": 2
      },
      "lineNbr": 639,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Deleted.",
      "parentUuid": "e516c38e_48527f9a",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85fd0775_72a12d96",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-24T01:58:42Z",
      "side": 1,
      "message": "Say why in the comment?\n\nIt seems unintuitive to need to call Revoke...() in a fresh thread?",
      "range": {
        "startLine": 347,
        "startChar": 4,
        "endLine": 347,
        "endChar": 5
      },
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b427df_6e9cb75f",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-24T22:40:04Z",
      "side": 1,
      "message": "Deleted.",
      "parentUuid": "85fd0775_72a12d96",
      "revId": "37a66295f67c26d80f996b29da85c14d27e40c14",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}