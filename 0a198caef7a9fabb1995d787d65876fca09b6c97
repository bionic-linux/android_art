{
  "comments": [
    {
      "key": {
        "uuid": "1fa5f182_c6556448",
        "filename": "build/Android.common_utils.mk",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T10:22:59Z",
      "side": 1,
      "message": "ART_... ?",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df027941_b4542e94",
        "filename": "build/Android.common_utils.mk",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T18:34:16Z",
      "side": 1,
      "message": "Sorry, I was following the style of Android.build.mk\n\nShould it be prefixed there with ART_ as well?",
      "parentUuid": "1fa5f182_c6556448",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f404975_40bc1092",
        "filename": "build/Android.common_utils.mk",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T18:41:10Z",
      "side": 1,
      "message": "What Android.build.mk ?\n\nThe name being pretty generic, it\u0027s prone to clashes with other .mk helpers.",
      "parentUuid": "df027941_b4542e94",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24c46ad1_a45be2fc",
        "filename": "build/Android.common_utils.mk",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "./build/Android.common.mk:17:ifndef ANDROID_COMMON_MK\n./build/Android.common_test.mk:17:ifndef ANDROID_COMMON_TEST_MK\n./build/Android.common_path.mk:17:ifndef ANDROID_COMMON_PATH_MK\n./build/Android.common_build.mk:17:ifndef ANDROID_COMMON_BUILD_MK",
      "parentUuid": "5f404975_40bc1092",
      "range": {
        "startLine": 17,
        "startChar": 7,
        "endLine": 17,
        "endChar": 30
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44c79ed5_850d02e0",
        "filename": "build/Android.common_utils.mk",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "do we need this? haven\u0027t seen its use. seems expensive to shell out for something like this.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 73
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24c46ad1_e455dac6",
        "filename": "build/Android.executable.mk",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "the tabs seem out of place here.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 110,
        "endChar": 6
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fa5f182_69d1e15c",
        "filename": "build/Android.executable.mk",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T10:22:59Z",
      "side": 1,
      "message": "Why is that called cmdline?",
      "range": {
        "startLine": 140,
        "startChar": 10,
        "endLine": 140,
        "endChar": 17
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff581d71_143b6cbd",
        "filename": "build/Android.executable.mk",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T18:34:16Z",
      "side": 1,
      "message": "Yes, good catch, I originally called this build-art-cmdline-executable but then noticed it would be more useful as a general-purpose executable builder function. Need to rename local vars to match.",
      "parentUuid": "1fa5f182_69d1e15c",
      "range": {
        "startLine": 140,
        "startChar": 10,
        "endLine": 140,
        "endChar": 17
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47b325e_22508ed3",
        "filename": "build/Android.executable.mk",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "unresolved?",
      "parentUuid": "ff581d71_143b6cbd",
      "range": {
        "startLine": 140,
        "startChar": 10,
        "endLine": 140,
        "endChar": 17
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f448158_8441b4da",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T10:22:59Z",
      "side": 1,
      "message": "Move it to art/tools?",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df027941_14989aff",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T18:34:16Z",
      "side": 1,
      "message": "I\u0027m not sure I understand.\n\nThe existing convention I tried my best to follow was:\n\n* each binary gets its own top level directory (dex2oat, patchoat, oatdump, and now imgdiag)\n* each test goes into the same directory as what its testing, with _test.cc as the file suffix\n\nCan you elaborate the ask please?",
      "parentUuid": "9f448158_8441b4da",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f404975_e0455c0f",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T18:41:10Z",
      "side": 1,
      "message": "Sure :)\n\nThe imgdiag is not something we are going to ship, so I find it cleaner to have it under a tools directory. (oatdump should somewhat also be there, but it\u0027s closely related to dex2oat, so....).",
      "parentUuid": "df027941_14989aff",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f692905_045fc02d",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T18:47:51Z",
      "side": 1,
      "message": "Actually I am more worried about the \"not something we are going to ship\". Since I haven\u0027t done anything special to the makefiles , it will always be built right now. \n\nIf this is a highly desirable goal then:\n\nHow do you recommend filtering it to not \"always ship\"? We could filter by target variant, or it could only build with NDEBUG\u003dfalse (but then that version will be slower since its less optimized). Or..?\n\n------\n\nAs for moving it under tools, that seems straight forward and happy to move imgdiag and oatdump into art/tools if nobody else has an objection with that.",
      "parentUuid": "5f404975_e0455c0f",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f404975_40e530b8",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T18:51:12Z",
      "side": 1,
      "message": "The tool can just be a build rule, that you invoke. Existing rules do not need to depend on it.",
      "parentUuid": "5f692905_045fc02d",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff581d71_b4b6005d",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T19:01:52Z",
      "side": 1,
      "message": "Then how are we to avoid bitrot of the tools?",
      "parentUuid": "5f404975_40e530b8",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f633129_56db327b",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T19:06:57Z",
      "side": 1,
      "message": "Not sure I follow. There are many other reasons for a tool to bitrot even if it builds. We should not force everyone to build all tools under the android tree.\n\nSo if you don\u0027t want the tool to bitrot, you can add a test that is part of our test infrastructure, and have make understand that for running the test, it needs to build the tool.",
      "parentUuid": "ff581d71_b4b6005d",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47b325e_82707a76",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "tools/ was meant for scripts. executables were meant to have their own Android.mk files. for now I think this should be symmetric with dex2oat and oatdump. we can move them later, seems unrelated to this change.\n\nall things should build with checkbuild, so they need to be visible to make. mm/mmm should build all optional things in a tree. people ARE supposed to build all things when making certain types of changes to prevent bitrot.",
      "parentUuid": "1f633129_56db327b",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_763870bf",
        "filename": "build/Android.gtest.mk",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-15T07:41:36Z",
      "side": 1,
      "message": "This wasn\u0027t about not making it visible by make. It was to avoid polluting the top-level dir with tools-like executables. But I wasn\u0027t aware that tools was originally meant for scripts not needing Makefiles.",
      "parentUuid": "e47b325e_82707a76",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fa5f182_a635c819",
        "filename": "imgdiag/imgdiag_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-26T10:22:59Z",
      "side": 1,
      "message": "2014",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44c79ed5_c517faeb",
        "filename": "imgdiag/imgdiag_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "not if this is substantially derived from another file.",
      "parentUuid": "1fa5f182_a635c819",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff581d71_602ca689",
        "filename": "imgdiag/imgdiag_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2014-11-26T00:36:37Z",
      "side": 1,
      "message": "This test is failing right now on host because we don\u0027t have permissions to read /proc/kpagestats but it passes fine on device (since it adb roots first).\n\nDo we want to petition the build team to add grant our tests extra permissions? Make this test device-only? Something else?",
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44c79ed5_25fd2e41",
        "filename": "imgdiag/imgdiag_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "you can\u0027t assume root on device. they run the gtests on userdebug builds.\n\nthis does seem to be significantly different than our other gtests in nature.",
      "parentUuid": "ff581d71_602ca689",
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44c79ed5_4504aab2",
        "filename": "oatdump/oatdump.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "|sort",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 26,
        "endChar": 14
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47b325e_42ccb245",
        "filename": "runtime/base/unix_file/fd_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "isn\u0027t this just a special case of the above now?",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 57
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47b325e_62d9b606",
        "filename": "runtime/base/unix_file/fd_file.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-12-13T01:15:44Z",
      "side": 1,
      "message": "add test to fd_file_test",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 77
      },
      "revId": "0a198caef7a9fabb1995d787d65876fca09b6c97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}