{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d356d542_8446836c",
        "filename": "runtime/read_barrier_config.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-04-27T11:36:40Z",
      "side": 1,
      "message": "The problem is that we can specify only one supported GC type. We should be able to have both `kUseReadBarrier` and `kUseUserfaultfd` set to true. (Maybe renamed as `kSupports*`.) And they should remain as `static constexpr`.\n\n`kUseReadBarrier` should define how we compile libart.so . If we support both CC GC, it should be `true` whether uffd GC is supported or not.\n\n`kEmitCompilerReadBarrier` should change to a compiler option and define whether we actually want to emit compiler barriers (`false` for uffd GC).",
      "revId": "873e7f34e77d2af89326496e7f1bfe9d7998a307",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30d2bd3_933db435",
        "filename": "runtime/read_barrier_config.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-25T19:29:19Z",
      "side": 1,
      "message": "Is this fully resolved?",
      "parentUuid": "d356d542_8446836c",
      "revId": "873e7f34e77d2af89326496e7f1bfe9d7998a307",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae6b8d69_a10460a1",
        "filename": "runtime/read_barrier_config.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-06-08T21:26:44Z",
      "side": 1,
      "message": "I\u0027d say so. Actually. Some suggestions are not doable because kUseReadBarrier is not only used for the compilation. There are tons of places in the runtime code where it is used in conditions. So it has to be turned into a static global.\n\nIn fact given that the choice of GC is now entirely in runtime (dictated by kernel as well as phenotype flag), I am not sure how can they be kept constexpr.",
      "parentUuid": "d30d2bd3_933db435",
      "revId": "873e7f34e77d2af89326496e7f1bfe9d7998a307",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae5a16e_ea0fbf78",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-04-25T13:52:36Z",
      "side": 1,
      "message": "Update comment?",
      "range": {
        "startLine": 201,
        "startChar": 54,
        "endLine": 202,
        "endChar": 18
      },
      "revId": "873e7f34e77d2af89326496e7f1bfe9d7998a307",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcda8065_66d42009",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-05-10T16:25:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eae5a16e_ea0fbf78",
      "range": {
        "startLine": 201,
        "startChar": 54,
        "endLine": 202,
        "endChar": 18
      },
      "revId": "873e7f34e77d2af89326496e7f1bfe9d7998a307",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}