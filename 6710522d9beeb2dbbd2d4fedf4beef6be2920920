{
  "comments": [
    {
      "key": {
        "uuid": "5e7f69e5_d7e6b34b",
        "filename": "openjdkjvmti/deopt_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 494,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T19:11:00Z",
      "side": 1,
      "message": "I don\u0027t think this is needed if we correctly implement locking like we did in my cl. See my comment in instrumentation.cc",
      "range": {
        "startLine": 494,
        "startChar": 0,
        "endLine": 494,
        "endChar": 55
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ca70cf6_c354a77c",
        "filename": "openjdkjvmti/deopt_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 494,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-27T20:30:36Z",
      "side": 1,
      "message": "Yes, adding an extra lock dedicated for the instrumentation stack would also prevent races. Though the downsides of an extra lock is more risks of lock issues, and also a proliferation of such locks, while the mutator lock can sometimes be good enough for some cases.\n\nIn this particular case, given this is for debuggable and we suspend all in other debugging scenarios, I\u0027d favor re-using abstractions we already have (the mutator lock, assuming it works) instead of adding another one.",
      "parentUuid": "5e7f69e5_d7e6b34b",
      "range": {
        "startLine": 494,
        "startChar": 0,
        "endLine": 494,
        "endChar": 55
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a823d8c5_3470282a",
        "filename": "openjdkjvmti/deopt_manager.cc",
        "patchSetId": 6
      },
      "lineNbr": 494,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T20:49:05Z",
      "side": 1,
      "message": "Ack I suppose. I tend to think we overuse the mutator-lock and should try to be a bit more explicit about what locks do. As is the mutator-lock both has explicit carve-outs and is used for a ton of random stuff, which seems like a bad combination.",
      "parentUuid": "9ca70cf6_c354a77c",
      "range": {
        "startLine": 494,
        "startChar": 0,
        "endLine": 494,
        "endChar": 55
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d0880b5_ec56d7cc",
        "filename": "runtime/debugger.cc",
        "patchSetId": 6
      },
      "lineNbr": 2893,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T19:11:00Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 2893,
        "startChar": 0,
        "endLine": 2893,
        "endChar": 52
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63dc3ddd_2ff5a6e2",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 6
      },
      "lineNbr": 825,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T19:11:00Z",
      "side": 1,
      "message": "Again see above.",
      "range": {
        "startLine": 825,
        "startChar": 0,
        "endLine": 825,
        "endChar": 54
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab8d1644_bcd7674c",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 6
      },
      "lineNbr": 825,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T20:49:05Z",
      "side": 1,
      "message": "Ack. Just worried.",
      "parentUuid": "63dc3ddd_2ff5a6e2",
      "range": {
        "startLine": 825,
        "startChar": 0,
        "endLine": 825,
        "endChar": 54
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e055ad22_938659eb",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T19:11:00Z",
      "side": 1,
      "message": "As I said above the thread-safety of this CL relies on this assertion actually being correct and I\u0027m not sure that is a safe assumption (even if all of our tests pass).",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b8441a_daa8816b",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-27T20:30:36Z",
      "side": 1,
      "message": "You mean the assertion that the lock is held when calling this method?\n\nWe\u0027d be in a pretty broken state in general if mutator locks weren\u0027t working. Which part makes you think here that they don\u0027t?",
      "parentUuid": "e055ad22_938659eb",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d3c1abf_c61fa3c9",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T20:49:05Z",
      "side": 1,
      "message": "It\u0027s not that I think the mutator-lock is broken it\u0027s just I\u0027m not sure the REQUIRED_SHARED annotations are worth very much. I\u0027ve seen several bugs where the annotation was just wrong and I\u0027m worried this might be one of those times.",
      "parentUuid": "d8b8441a_daa8816b",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7451c39f_2ac34b5c",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-27T21:02:34Z",
      "side": 1,
      "message": "So it\u0027s mostly a problem of confidence? And you\u0027d favor an implementation where locking an explicit lock is right next to the use of the data structure being protected (so it\u0027s obvious from the reader it\u0027s protected)?\n\nDoes adding assertions instead would mitigate these concerns? (ie adding AssertHeld close to the data structures)",
      "parentUuid": "7d3c1abf_c61fa3c9",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd643234_b4c88240",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-27T22:20:47Z",
      "side": 1,
      "message": "Basically.\n\nAdding assertions is nice but if the code isn\u0027t exercised by our (in places quite limited) testing they will just provide false assurance.\n\nThis CL is fixing a bug that hid undetected for years in our mistaken ideas of what the mutator-lock prevented. Relying on having it right this time seems a little undesirable.",
      "parentUuid": "7451c39f_2ac34b5c",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fb0109f_cfd36d31",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-28T09:35:10Z",
      "side": 1,
      "message": "The previous code was mistaken that it only needed to hold the reader lock to instrument the stack. That was the bug. Owning exclusively or adding a new lock solves it.\n\n(I\u0027ll also note that if we do indeed don\u0027t have coverage, then there\u0027s little confidence in any code we add)",
      "parentUuid": "cd643234_b4c88240",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67466b54_e53a0684",
        "filename": "runtime/thread.h",
        "patchSetId": 6
      },
      "lineNbr": 1108,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-28T18:03:29Z",
      "side": 1,
      "message": "Just putting my reservations out in the open. There is no reason a thread shouldn\u0027t be able to walk it\u0027s own stack without the mutator lock held and the only evidence this doesn\u0027t happen right now is the REQUIRES_SHARED annotation. I somewhat worry that eventually somebody will decide that they need this ability, look at the code and see only an assertion stopping them and remove it.\n\nAnyway what\u0027s here is fine I guess.",
      "parentUuid": "2fb0109f_cfd36d31",
      "range": {
        "startLine": 1108,
        "startChar": 6,
        "endLine": 1108,
        "endChar": 43
      },
      "revId": "6710522d9beeb2dbbd2d4fedf4beef6be2920920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}