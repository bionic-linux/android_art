{
  "comments": [
    {
      "key": {
        "uuid": "639dc16f_7a180d26",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 6108,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-06-23T23:29:37Z",
      "side": 1,
      "message": "Is Primitive::ComponentSizeShift(Primitive::kPrimNot) like the arm64 version better?",
      "range": {
        "startLine": 6108,
        "startChar": 29,
        "endLine": 6108,
        "endChar": 36
      },
      "revId": "bfea33585e229973f7887afbf51fe45c2ba41e91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3e3cd1d_6c699b0a",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 6108,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-06-24T10:59:33Z",
      "side": 1,
      "message": "art::Primitive::ComponentSizeShift does not seem to be used in the ARM code generator, so I have stuck to the style used in this file, which uses enum values from art::arm::ScaleFactor.",
      "parentUuid": "639dc16f_7a180d26",
      "range": {
        "startLine": 6108,
        "startChar": 29,
        "endLine": 6108,
        "endChar": 36
      },
      "revId": "bfea33585e229973f7887afbf51fe45c2ba41e91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "639dc16f_fa55ddb1",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4943,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-06-23T23:29:37Z",
      "side": 1,
      "message": "There is no TIMES_1 for arm64?",
      "range": {
        "startLine": 4943,
        "startChar": 27,
        "endLine": 4943,
        "endChar": 29
      },
      "revId": "bfea33585e229973f7887afbf51fe45c2ba41e91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3d45139_2de6ede0",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4943,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-06-24T10:59:33Z",
      "side": 1,
      "message": "No; ARM64 is the only back end where we do not have a ScaleFactor enum, probably because of VIXL, which provides more generic way to express load/stores, and uses Primitive::ComponentSizeShift instead.\n\nMaybe we could move other back ends from using ScaleFactor to using Primitive::ComponentSizeShift (in another CL)?",
      "parentUuid": "639dc16f_fa55ddb1",
      "range": {
        "startLine": 4943,
        "startChar": 27,
        "endLine": 4943,
        "endChar": 29
      },
      "revId": "bfea33585e229973f7887afbf51fe45c2ba41e91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "636ea17c_a922fda5",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4943,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-06-24T17:19:18Z",
      "side": 1,
      "message": "Maybe. Per-arch conventions sound fine.",
      "parentUuid": "e3d45139_2de6ede0",
      "range": {
        "startLine": 4943,
        "startChar": 27,
        "endLine": 4943,
        "endChar": 29
      },
      "revId": "bfea33585e229973f7887afbf51fe45c2ba41e91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}