{
  "comments": [
    {
      "key": {
        "uuid": "26b800d4_9caa294e",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-17T19:58:00Z",
      "side": 1,
      "message": "i think this should be\nDCHECK(type \u003d\u003d Primitive::kPrimNot || value-\u003eIsNullConstants())",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6b188f2_fd131f0b",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-17T21:03:42Z",
      "side": 1,
      "message": "Calin: I think this doesn\u0027t prevent an objet type being an IntConstant, does it?\n\nDavid: Maybe it would be easier to read if written:\n!(type \u003d\u003d Primitive::kPrimNot \u0026\u0026 value-\u003eIsIntConstant())\n\n?",
      "parentUuid": "26b800d4_9caa294e",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06af7c90_5b0df7bb",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-17T21:12:57Z",
      "side": 1,
      "message": "Sorry, I wanted to say, value-\u003eActAsNullConstant() which is true for NullConstants and 0-IntConstants.",
      "parentUuid": "e6b188f2_fd131f0b",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26b800d4_3c6afd9a",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-17T21:16:28Z",
      "side": 1,
      "message": "We\u0027re trying to get away from 0-Intconstants as null. I thing there are some places left (like comparing an object with null), but otherwise we should never see a 0-constant used in an object context.",
      "parentUuid": "06af7c90_5b0df7bb",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06af7c90_5b24172c",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-17T21:21:23Z",
      "side": 1,
      "message": "yea, I wasn\u0027t sure what\u0027s missing and this is why I suggested ActAsNullConstant().",
      "parentUuid": "26b800d4_3c6afd9a",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06af7c90_becb619d",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-03-18T09:03:00Z",
      "side": 1,
      "message": "The DCHECK was meant to check that null is not represented as an IntConstant at this point and yes, it does look confusing. If we have the ActAsNullConstant, I could just use that in the condition below and get rid of the DCHECK. It\u0027s not the codegen\u0027s job to verify these properties anyway (could we add it to the graph verifier?)",
      "parentUuid": "06af7c90_5b24172c",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 250,
        "endChar": 67
      },
      "revId": "522e2241f5b5f331d0aa2f8508f4c97973f7f012",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}