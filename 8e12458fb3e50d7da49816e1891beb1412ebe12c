{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6749cf97_26fc58f8",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2708,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-12-01T18:02:53Z",
      "side": 1,
      "message": "Should this be `DCHECK_IMPLIES(codegen_-\u003eEmitReadBarrier(), codegen_-\u003eEmitBakerReadBarrier());`?",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2708,
        "endChar": 3
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56bd026d_f14b2924",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2708,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-12-04T08:03:25Z",
      "side": 1,
      "message": "I\u0027m not removing the non-Baker RB yet. When I do, this shall be a reasonable way to do it here. But for now, this just says that we do not create intrinsic locations for non-Baker RB (in other words, we do not intrinsify).",
      "parentUuid": "6749cf97_26fc58f8",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2708,
        "endChar": 3
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08ab7eff_c7eee694",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2781,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-12-01T18:02:53Z",
      "side": 1,
      "message": "We poison `temp1`, and then exchange `temp1` and `field_address`. Do we want to unpoison `field_address` instead then?",
      "range": {
        "startLine": 2777,
        "startChar": 0,
        "endLine": 2781,
        "endChar": 26
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27496237_1fcc472e",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2781,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-12-04T08:03:25Z",
      "side": 1,
      "message": "We cannot unpoison the reference in memory. Some other thread could read that unpoisoned value and then \"unpoison\" it and crash when using that bad pointer.",
      "parentUuid": "08ab7eff_c7eee694",
      "range": {
        "startLine": 2777,
        "startChar": 0,
        "endLine": 2781,
        "endChar": 26
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c4206d6_547890c0",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2781,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-12-04T12:02:11Z",
      "side": 1,
      "message": "Am I understanding the (un)poisoning correctly?\n```\n// temp1 \u003d out\n      __ movl(temp1, out);\n// temp1 \u003d out_poison\n      __ PoisonHeapReference(temp1);\n// temp1 \u003d field_address; field_address \u003d out_poison (atomically)\n      __ xchgl(temp1, field_address);\n// temp1 \u003d field_address_unpoison\n      __ UnpoisonHeapReference(temp1);\n// out \u003d field_address_unpoison\n      __ movl(out, temp1);\n```",
      "parentUuid": "27496237_1fcc472e",
      "range": {
        "startLine": 2777,
        "startChar": 0,
        "endLine": 2781,
        "endChar": 26
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fac04457_74f7a910",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2781,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-12-04T13:12:50Z",
      "side": 1,
      "message": "Yes, that\u0027s right. We need to poison the new value, exchange it with the poisoned reference in memory and unpoison the retrieved reference.",
      "parentUuid": "4c4206d6_547890c0",
      "range": {
        "startLine": 2777,
        "startChar": 0,
        "endLine": 2781,
        "endChar": 26
      },
      "revId": "8e12458fb3e50d7da49816e1891beb1412ebe12c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}