{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da02dee5_4f75639a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T04:35:17Z",
      "side": 1,
      "message": "I tried switching the indicated pointer/reference typedefs to void (except for FilterIterator), and I got compile errors, because TransformIterator used std::iterator_traits, which didn\u0027t like the void types.\n\ne.g.:\n\n```\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:36:\nIn file included from art/libartbase/base/transform_array_ref.h:23:\nart/libartbase/base/transform_iterator.h:47:57: error: argument may not have \u0027void\u0027 type\n  using ResultType \u003d std::result_of_t\u003cFunction(InputType)\u003e;\n                                                        ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:130:68: note: in instantiation of template class \u0027art::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u0027 requested here\n    template \u003cclass _Up\u003e static true_type __test(__void_t\u003ctypename _Up::iterator_category\u003e* \u003d nullptr,\n                                                                   ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:136:40: note: while substituting explicitly-specified template arguments into function template \u0027__test\u0027 \n    static const bool value \u003d decltype(__test\u003c_Tp\u003e(0,0,0,0,0))::value;\n                                       ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:417:32: note: in instantiation of template class \u0027std::__has_iterator_typedefs\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    : __iterator_traits\u003c_Iter, __has_iterator_typedefs\u003c_Iter\u003e::value\u003e {\n                               ^\nart/libartbase/base/iteration_range.h:31:41: note: in instantiation of template class \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                                        ^\nart/compiler/optimizing/execution_subgraph.h:139:22: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    BitVecBlockRange Blocks() const {\n                     ^\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:31:\nart/libartbase/base/iteration_range.h:31:64: error: no type named \u0027difference_type\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\nart/compiler/optimizing/execution_subgraph.h:139:22: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    BitVecBlockRange Blocks() const {\n                     ^\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:31:\nart/libartbase/base/iteration_range.h:32:64: error: no type named \u0027value_type\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using value_type      \u003d typename std::iterator_traits\u003cIter\u003e::value_type;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\nart/libartbase/base/iteration_range.h:33:64: error: no type named \u0027pointer\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using pointer         \u003d typename std::iterator_traits\u003cIter\u003e::pointer;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\nart/libartbase/base/iteration_range.h:34:64: error: no type named \u0027reference\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using reference       \u003d typename std::iterator_traits\u003cIter\u003e::reference;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\n\n```\nI\u0027m trying to determine whether some of the indicated iterators can be switched to void. I could also just add the TODO comments to revisit it later.",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "570c6cc9_ad280d12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T04:52:59Z",
      "side": 1,
      "message": "It looks like this TransformIterator problem applies only to:\n\n - IndexIterator\n - CountIter\n - FilterIterator\n\nIn I589cc36a95e505c3c356ad245dd03286680aa4f7, I changed the indicated typedefs to void, except for these three iterator classes. For FilterIterator, I used the suggested `RealIter::{pointer,reference}`.",
      "parentUuid": "da02dee5_4f75639a",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe0eff4_0696b05f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2203,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "I don\u0027t think these two make sense, maybe they should be `void`. We should at least add a TODO.",
      "range": {
        "startLine": 2202,
        "startChar": 2,
        "endLine": 2203,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91814ac9_e2f13877",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2929,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2928,
        "startChar": 2,
        "endLine": 2929,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919dcea0_5e4d17dd",
        "filename": "libartbase/base/bit_vector.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 31
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0fc71d5_1e25d2c8",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 164,
        "startChar": 2,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "948c0554_105b149f",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 27
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97d29e06_7848eeb3",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto (though these could reasonably be defined as `RealIter::{pointer,reference}`)",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 257,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b786fd_00491b7e",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 346,
        "startChar": 2,
        "endLine": 347,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456c8b46_16d909ff",
        "filename": "libdexfile/dex/class_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 50,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a544b492_c5c85ec0",
        "filename": "libdexfile/dex/dex_instruction_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 66,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}