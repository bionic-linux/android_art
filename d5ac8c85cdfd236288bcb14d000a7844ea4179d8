{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da02dee5_4f75639a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T04:35:17Z",
      "side": 1,
      "message": "I tried switching the indicated pointer/reference typedefs to void (except for FilterIterator), and I got compile errors, because TransformIterator used std::iterator_traits, which didn\u0027t like the void types.\n\ne.g.:\n\n```\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:36:\nIn file included from art/libartbase/base/transform_array_ref.h:23:\nart/libartbase/base/transform_iterator.h:47:57: error: argument may not have \u0027void\u0027 type\n  using ResultType \u003d std::result_of_t\u003cFunction(InputType)\u003e;\n                                                        ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:130:68: note: in instantiation of template class \u0027art::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u0027 requested here\n    template \u003cclass _Up\u003e static true_type __test(__void_t\u003ctypename _Up::iterator_category\u003e* \u003d nullptr,\n                                                                   ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:136:40: note: while substituting explicitly-specified template arguments into function template \u0027__test\u0027 \n    static const bool value \u003d decltype(__test\u003c_Tp\u003e(0,0,0,0,0))::value;\n                                       ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:417:32: note: in instantiation of template class \u0027std::__has_iterator_typedefs\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    : __iterator_traits\u003c_Iter, __has_iterator_typedefs\u003c_Iter\u003e::value\u003e {\n                               ^\nart/libartbase/base/iteration_range.h:31:41: note: in instantiation of template class \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                                        ^\nart/compiler/optimizing/execution_subgraph.h:139:22: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    BitVecBlockRange Blocks() const {\n                     ^\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:31:\nart/libartbase/base/iteration_range.h:31:64: error: no type named \u0027difference_type\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\nart/compiler/optimizing/execution_subgraph.h:139:22: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    BitVecBlockRange Blocks() const {\n                     ^\nIn file included from art/compiler/optimizing/load_store_elimination.cc:17:\nIn file included from art/compiler/optimizing/load_store_elimination.h:21:\nIn file included from art/compiler/optimizing/optimization.h:22:\nIn file included from art/compiler/optimizing/nodes.h:31:\nart/libartbase/base/iteration_range.h:32:64: error: no type named \u0027value_type\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using value_type      \u003d typename std::iterator_traits\u003cIter\u003e::value_type;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\nart/libartbase/base/iteration_range.h:33:64: error: no type named \u0027pointer\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using pointer         \u003d typename std::iterator_traits\u003cIter\u003e::pointer;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\nart/libartbase/base/iteration_range.h:34:64: error: no type named \u0027reference\u0027 in \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027\n  using reference       \u003d typename std::iterator_traits\u003cIter\u003e::reference;\n                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\n\n```\nI\u0027m trying to determine whether some of the indicated iterators can be switched to void. I could also just add the TODO comments to revisit it later.",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "570c6cc9_ad280d12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T04:52:59Z",
      "side": 1,
      "message": "It looks like this TransformIterator problem applies only to:\n\n - IndexIterator\n - CountIter\n - FilterIterator\n\nIn I589cc36a95e505c3c356ad245dd03286680aa4f7, I changed the indicated typedefs to void, except for these three iterator classes. For FilterIterator, I used the suggested `RealIter::{pointer,reference}`.",
      "parentUuid": "da02dee5_4f75639a",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ea06755_18f6a8b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-08T07:26:06Z",
      "side": 1,
      "message": "Please resolve the comments with \"Done: https://android-review.googlesource.com/2746156\" where applicable.\n\nResolve the remaining comments (IndexIterator and CountIter) by pointing out an instantiation which would cause an error.\n\nThen submit this CL as is. Thanks!",
      "parentUuid": "570c6cc9_ad280d12",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51edb2dc_fc12fa38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "1ea06755_18f6a8b8",
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe0eff4_0696b05f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2203,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "I don\u0027t think these two make sense, maybe they should be `void`. We should at least add a TODO.",
      "range": {
        "startLine": 2202,
        "startChar": 2,
        "endLine": 2203,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b92da77_9a8cb8db",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2203,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "dbe0eff4_0696b05f",
      "range": {
        "startLine": 2202,
        "startChar": 2,
        "endLine": 2203,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91814ac9_e2f13877",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2929,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2928,
        "startChar": 2,
        "endLine": 2929,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6aaf4042_1fc8c92c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2929,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "91814ac9_e2f13877",
      "range": {
        "startLine": 2928,
        "startChar": 2,
        "endLine": 2929,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919dcea0_5e4d17dd",
        "filename": "libartbase/base/bit_vector.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 31
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01de8cd6_7645b731",
        "filename": "libartbase/base/bit_vector.h",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Changing the `reference` typedef to `void` broke the instantiation of `TransformIterator\u003cBitVector::IndexIterator, ...\u003e`, so leaving it as `uint32_t`.\n\n```\nart/libartbase/base/transform_iterator.h:47:57: error: argument may not have \u0027void\u0027 type\n  using ResultType \u003d std::result_of_t\u003cFunction(InputType)\u003e;\n                                                        ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:130:68: note: in instantiation of template class \u0027art::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u0027 requested here\n    template \u003cclass _Up\u003e static true_type __test(__void_t\u003ctypename _Up::iterator_category\u003e* \u003d nullptr,\n                                                                   ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:136:40: note: while substituting explicitly-specified template arguments into function template \u0027__test\u0027 \n    static const bool value \u003d decltype(__test\u003c_Tp\u003e(0,0,0,0,0))::value;\n                                       ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:417:32: note: in instantiation of template class \u0027std::__has_iterator_typedefs\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 request\ned here\n    : __iterator_traits\u003c_Iter, __has_iterator_typedefs\u003c_Iter\u003e::value\u003e {\n                               ^\nart/libartbase/base/iteration_range.h:31:41: note: in instantiation of template class \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                                        ^\nart/compiler/optimizing/execution_subgraph.h:139:22: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::BitVector::IndexIterator, art::BlockIdToBlockTransformer\u003e\u003e\u0027 requested here\n    BitVecBlockRange Blocks() const {\n                     ^\n```",
      "parentUuid": "919dcea0_5e4d17dd",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 31
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0fc71d5_1e25d2c8",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 164,
        "startChar": 2,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8060b4fc_d70e170c",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "a0fc71d5_1e25d2c8",
      "range": {
        "startLine": 164,
        "startChar": 2,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "948c0554_105b149f",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 27
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea1e585f_d85d96dc",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Changing these typedefs to `void` broke the instantiation of `TransformIterator\u003cCountIter, ...\u003e`, so leaving as size_t.\n\n```\nart/libartbase/base/transform_iterator.h:47:57: error: argument may not have \u0027void\u0027 type\n  using ResultType \u003d std::result_of_t\u003cFunction(InputType)\u003e;\n                                                        ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:130:68: note: in instantiation of template class \u0027art::TransformIterator\u003cart::CountIter, art::HEnvironment::EnvInputSelector\u003e\u0027 requested here\n    template \u003cclass _Up\u003e static true_type __test(__void_t\u003ctypename _Up::iterator_category\u003e* \u003d nullptr,\n                                                                   ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:136:40: note: while substituting explicitly-specified template arguments into function template \u0027__test\u0027 \n    static const bool value \u003d decltype(__test\u003c_Tp\u003e(0,0,0,0,0))::value;\n                                       ^\nprebuilts/clang/host/linux-x86/clang-r498229/include/c++/v1/__iterator/iterator_traits.h:417:32: note: in instantiation of template class \u0027std::__has_iterator_typedefs\u003cart::TransformIterator\u003cart::CountIter, art::HEnvironment::EnvInputSelector\u003e\u003e\u0027 requested here\n    : __iterator_traits\u003c_Iter, __has_iterator_typedefs\u003c_Iter\u003e::value\u003e {\n                               ^\nart/libartbase/base/iteration_range.h:31:41: note: in instantiation of template class \u0027std::iterator_traits\u003cart::TransformIterator\u003cart::CountIter, art::HEnvironment::EnvInputSelector\u003e\u003e\u0027 requested here\n  using difference_type \u003d typename std::iterator_traits\u003cIter\u003e::difference_type;\n                                        ^\nart/compiler/optimizing/nodes.h:2173:37: note: in instantiation of template class \u0027art::IterationRange\u003cart::TransformIterator\u003cart::CountIter, art::HEnvironment::EnvInputSelector\u003e\u003e\u0027 requested here\n  IterationRange\u003cHConstEnvInputRef\u003e GetEnvInputs() const {\n                                    ^\n```",
      "parentUuid": "948c0554_105b149f",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 27
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97d29e06_7848eeb3",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto (though these could reasonably be defined as `RealIter::{pointer,reference}`)",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 257,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f2f5f87_1953067e",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156\n\n(Changing these typedefs to void broke the instantiation of `TransformIterator\u003cFilterIterator, ...\u003e`, so use `RealIter::{pointer,reference}` instead.)\n\n```\nart/libartbase/base/transform_iterator.h:47:57: error: argument may not have \u0027void\u0027 type\n  using ResultType \u003d std::result_of_t\u003cFunction(InputType)\u003e;\n                                                        ^\nart/libartbase/base/transform_iterator.h:164:29: note: in instantiation of template class \u0027art::TransformIterator\u003cart::FilterIterator\u003cstd::__wrap_iter\u003cconst art::DexFile *const *\u003e, (lambda at art/runtime/native/java_lang_VMClassLoader.cc:142:31)\u003e, (lambda at art/runtime/native/java_lang_VMClassLoader.cc:159:23)\u003e\u0027 requested here\n  return MakeIterationRange(MakeTransformIterator(range.begin(), f),\n                            ^\nart/runtime/native/java_lang_VMClassLoader.cc:164:7: note: in instantiation of function template specialization \u0027art::MakeTransformRange\u003cart::IterationRange\u003cart::FilterIterator\u003cstd::__wrap_iter\u003cconst art::DexFile *const *\u003e, (lambda at art/runtime/native/java_lang_VMClassLoader.cc:142:31)\u003e\u003e, (lambda at art/runtime/native/java_lang_VMClassLoader.cc:159:23)\u003e\u0027 requested here\n      MakeTransformRange(Filter(path, dchecked_is_base_dex), get_location)));\n      ^\n```",
      "parentUuid": "97d29e06_7848eeb3",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 257,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b786fd_00491b7e",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 346,
        "startChar": 2,
        "endLine": 347,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1391d74_f0d33c53",
        "filename": "libartbase/base/stl_util.h",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "29b786fd_00491b7e",
      "range": {
        "startLine": 346,
        "startChar": 2,
        "endLine": 347,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456c8b46_16d909ff",
        "filename": "libdexfile/dex/class_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 50,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3671750e_e2d6b5e5",
        "filename": "libdexfile/dex/class_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "456c8b46_16d909ff",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 50,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a544b492_c5c85ec0",
        "filename": "libdexfile/dex/dex_instruction_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-04T09:33:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 66,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e920e328_c96e7dce",
        "filename": "libdexfile/dex/dex_instruction_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2023-09-08T23:53:29Z",
      "side": 1,
      "message": "Done: https://android-review.googlesource.com/2746156",
      "parentUuid": "a544b492_c5c85ec0",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 66,
        "endChar": 32
      },
      "revId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "AIDL-API-Review",
        "description": {
          "value": "Submit requirement for the AIDL-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(.*/)?aidl_api/.*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:AIDL-API-Review AND -label:AIDL-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(.*/)?aidl_api/.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(.*/)?aidl_api/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:AIDL-API-Review AND -label:AIDL-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "API-Review",
        "description": {
          "value": "Submit requirement for the API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\") AND -(project:platform/system/libvintf AND file:\"^xsd/\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:API-Review\u003dMAX AND -label:API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\") AND -(project:platform/system/libvintf AND file:\"^xsd/\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\"","project:device/generic/vulkan-cereal","project:platform/external/qemu","project:platform/hardware/interfaces","project:toolchain/go","project:platform/prebuilts/go/darwin-x86","project:platform/prebuilts/go/linux-x86","project:platform/system/tools/xsdc","project:platform/external/gfxstream-protocols","project:platform/system/libvintf","file:\"^xsd/\"","project:platform/frameworks/av","file:\".*/xmlparser/.*\"","project:platform/external/icu","file:\".*android_icu4j/api/legacy_platform/.*\"","project:platform/tools/base","file:\".*build-system/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:API-Review=MAX AND -label:API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Build-Team-Review",
        "description": {
          "value": "Build team review is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Build-Team-Review\u003dMAX AND -label:Build-Team-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"Import translations.\"","message:\"DO NOT MERGE ANYWHERE\"","branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Build-Team-Review=MAX AND -label:Build-Team-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the Code-Review requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Code-Review\u003dMIN AND (-is:android-cherry-pick_exemptedusers AND label:Code-Review\u003dMAX,user\u003dnon_uploader OR (is:android-cherry-pick_exemptedusers AND label:Code-Review\u003dMAX,count\u003e\u003d2) OR (label:Code-Review\u003dMAX AND (label:Exempt\u003d+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Code-Review=MIN AND (-is:android-cherry-pick_exemptedusers AND label:Code-Review=MAX,user=non_uploader OR (is:android-cherry-pick_exemptedusers AND label:Code-Review=MAX,count>=2) OR (label:Code-Review=MAX AND (label:Exempt=+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN","is:android-cherry-pick_exemptedusers","is:android-cherry-pick_exemptedusers","label:Code-Review=MAX,count>=2","label:Exempt=+1","uploader:1474732","project:platform/developers/docs","project:platform/frameworks/support"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers"]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "DrNo-Review",
        "description": {
          "value": "Submit requirement for the DrNo-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi OR branch:refs/heads/emu-32-dev OR branch:refs/heads/emu-33-dev OR (branch:refs/heads/main AND (project:device/google/redbull))"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:DrNo-Review\u003dMAX AND -label:DrNo-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi OR branch:refs/heads/emu-32-dev OR branch:refs/heads/emu-33-dev OR (branch:refs/heads/main AND (project:device/google/redbull))"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["branch:refs/heads/main"],"failingAtoms":["branch:refs/heads/oreo-cts-dev","branch:refs/heads/oreo-mr1-cts-dev","branch:refs/heads/oreo-vts-dev","branch:refs/heads/oreo-mr1-vts-dev","branch:refs/heads/nougat-cts-dev","branch:refs/heads/nougat-mr1-cts-dev","branch:refs/heads/pie-cts-dev","branch:refs/heads/pie-vts-dev","branch:refs/heads/android10-tests-dev","branch:refs/heads/android11-tests-dev","branch:refs/heads/android12-tests-dev","branch:refs/heads/android12L-tests-dev","branch:refs/heads/android13-tests-dev","branch:^refs/heads/.*-gsi","branch:refs/heads/emu-32-dev","branch:refs/heads/emu-33-dev","project:device/google/redbull"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:DrNo-Review=MAX AND -label:DrNo-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Lint",
        "description": {
          "value": "Submit requirement for the Lint requirement"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Lint\u003dMIN AND (label:Lint\u003d+2 OR -label:Lint\u003d-1)"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Lint=MIN AND (label:Lint=+2 OR -label:Lint=-1)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Lint=MIN","label:Lint=+2","label:Lint=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "NDK-API-Review",
        "description": {
          "value": "Submit requirement for the NDK-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^.*\\\\.map\\\\.txt$\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:NDK-API-Review\u003dMAX AND -label:NDK-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^.*\\\\.map\\\\.txt$\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^.*\\\\.map\\\\.txt$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:NDK-API-Review=MAX AND -label:NDK-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Open-Source-Licensing",
        "description": {
          "value": "Submit requirement for the Open-Source-Licensing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Open-Source-Licensing\u003d0 OR (-label:Open-Source-Licensing\u003dMIN AND ((label:Open-Source-Licensing\u003dMAX AND label:Open-Source-Licensing\u003d-1) OR -label:Open-Source-Licensing\u003d-1))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Open-Source-Licensing=0 OR (-label:Open-Source-Licensing=MIN AND ((label:Open-Source-Licensing=MAX AND label:Open-Source-Licensing=-1) OR -label:Open-Source-Licensing=-1))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Open-Source-Licensing=0","label:Open-Source-Licensing=MIN","label:Open-Source-Licensing=MAX","label:Open-Source-Licensing=-1","label:Open-Source-Licensing=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Presubmit-Verified",
        "description": {
          "value": "Submit requirement for the Presubmit-Verified requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Presubmit-Verified\u003d-2 AND (label:Bypass-Presubmit\u003d+1 OR label:Presubmit-Verified-Together\u003d+1 OR (-label:Presubmit-Verified\u003d-1 AND (label:Presubmit-Verified\u003d+2 OR label:Presubmit-Verified\u003d+1)))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bypass-Presubmit\u003d+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override\u003d+1 AND is:pure-revert AND -label:Presubmit-Verified\u003d-2)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Presubmit-Verified=-2 AND (label:Bypass-Presubmit=+1 OR label:Presubmit-Verified-Together=+1 OR (-label:Presubmit-Verified=-1 AND (label:Presubmit-Verified=+2 OR label:Presubmit-Verified=+1)))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Presubmit-Verified-Together=+1"],"failingAtoms":["label:Presubmit-Verified=-2","label:Bypass-Presubmit=+1","label:Presubmit-Verified=-1","label:Presubmit-Verified=+2","label:Presubmit-Verified=+1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bypass-Presubmit=+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override=+1 AND is:pure-revert AND -label:Presubmit-Verified=-2)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bypass-Presubmit=+2","is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1","is:pure-revert","label:Presubmit-Verified=-2"]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Qualcomm-Review",
        "description": {
          "value": "Submit requirement for the Qualcomm-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Qualcomm-Review\u003dMAX AND -label:Qualcomm-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\"","project:\"^.*/vendor/(qcom|bsp).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Qualcomm-Review=MAX AND -label:Qualcomm-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d5ac8c85cdfd236288bcb14d000a7844ea4179d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}