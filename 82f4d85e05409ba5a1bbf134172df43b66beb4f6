{
  "comments": [
    {
      "key": {
        "uuid": "18cebfae_39c5d2a1",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-17T11:27:46Z",
      "side": 1,
      "message": "Isn\u0027t it a \"ForSure\" instead of a \"Maybe\"? nit: rename to EnsureSwitchInterpreter or something similar?",
      "range": {
        "startLine": 540,
        "startChar": 10,
        "endLine": 540,
        "endChar": 32
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ac85a06_4c72a245",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-17T11:39:36Z",
      "side": 1,
      "message": "It is \"maybe\".  For example, here, it is likely we have already force C++ interpreter because debugger is attached.  This just adds second reason.",
      "parentUuid": "18cebfae_39c5d2a1",
      "range": {
        "startLine": 540,
        "startChar": 10,
        "endLine": 540,
        "endChar": 32
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d535979_14b3fb3a",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-17T12:03:27Z",
      "side": 1,
      "message": "Yeah, I understand the state may be that it\u0027s already in the slow interpreter. But when reading \"MaybeSwitch\" I don\u0027t read \"Please ensure we are running the slow interpreter\". Here it is the case that we want to force the interpreter.",
      "parentUuid": "2ac85a06_4c72a245",
      "range": {
        "startLine": 540,
        "startChar": 10,
        "endLine": 540,
        "endChar": 32
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "112b045e_e95027ac",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-17T12:12:07Z",
      "side": 1,
      "message": "Well, I added the check to all the relevant state changes, including disabling.  So it possible to go back to mterp if debugger is detached for example.\n\nShould I make it one-way?  Once we switch to C++ we never go back?",
      "parentUuid": "2d535979_14b3fb3a",
      "range": {
        "startLine": 540,
        "startChar": 10,
        "endLine": 540,
        "endChar": 32
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0664f5d5_9d9a601f",
        "filename": "runtime/interpreter/mterp/mterp.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-17T11:27:46Z",
      "side": 1,
      "message": "We\u0027ve taken the approach of doing best effort when non-debuggable, and being accurate when debuggable. That means that ideally, we could have an mterp version that doesn\u0027t check CanUseMterp in the thread (as we discussed yesterday).\n\nIs the TLS check negligible compared to having two mterp versions?",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7ea240f_ba3096f8",
        "filename": "runtime/interpreter/mterp/mterp.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-17T11:39:36Z",
      "side": 1,
      "message": "I think the check close to negligible, and I would like to avoid having two versions of mterp if I can help it.\n\nMore importantly, Vladimir pointed out to me that we need *some* check either way to handle exceptions.  So at the very minimum, we need one conditional branch after the invoke.  This check can be likely folded into it.\n\nAlternative line of thinking would be to just never enter mterp in debuggable apk... Why enter it if we are likely to just exit it as soon as possible.",
      "parentUuid": "0664f5d5_9d9a601f",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d20245a7_3d7a088a",
        "filename": "runtime/interpreter/mterp/mterp.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-17T12:03:27Z",
      "side": 1,
      "message": "Right, we could create artificial exceptions (like we do for full frame deopt) to only do one check after an invoke. Is that in the plan?\n\nThere are performance concerns if we\u0027re stuck with the switch interpreter in debuggable. We\u0027re already lowering down the performance by having the compiler compile in debuggable mode, so if we can avoid taking another hit, that would be good.",
      "parentUuid": "a7ea240f_ba3096f8",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a255751d_8c9d1f75",
        "filename": "runtime/interpreter/mterp/mterp.cc",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-17T12:12:07Z",
      "side": 1,
      "message": "Yes, something like that.  I am thinking \"invoke returns bool\".  If True, all is good and ideal.  If False, something unusual is going on, so check for exceptions, interpreter switch, anything else...\n\nThe switch interpreter is unavoidable in debuggable, no?  Or can we run mterp for methods without breakpoints for example?\n\nHaving said that, I would like to see how much slower switch intepreter is at some point, and if it can be easily optimized.",
      "parentUuid": "d20245a7_3d7a088a",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 169,
        "endChar": 39
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bfe9d3_1d995cda",
        "filename": "runtime/thread.h",
        "patchSetId": 1
      },
      "lineNbr": 1322,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-10-17T11:27:46Z",
      "side": 1,
      "message": "whenever there is an event that ...",
      "range": {
        "startLine": 1322,
        "startChar": 25,
        "endLine": 1322,
        "endChar": 31
      },
      "revId": "82f4d85e05409ba5a1bbf134172df43b66beb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}