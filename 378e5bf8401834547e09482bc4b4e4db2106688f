{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d359c05_fc6c121c",
        "filename": "libartbase/base/bit_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-10-13T19:19:31Z",
      "side": 1,
      "message": "Is this required? Elsewhere in the runtime we don\u0027t.",
      "range": {
        "startLine": 180,
        "startChar": 5,
        "endLine": 180,
        "endChar": 14
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb2e485_8b0f7a01",
        "filename": "libartbase/base/bit_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-13T19:23:22Z",
      "side": 1,
      "message": "\u0027constexpr\u0027 if was a relatively recent addition. I was curious too, so looking it up, and found an interesting article:\nhttps://stackoverflow.com/questions/53809853/if-vs-if-constexpr-inside-constexpr-function\n\nIt seems like it may evaluate the expression before deducing the type of the function if constexpr is used, but it shouldn\u0027t be needed in that case.\n\nThat being said, I think being explicit about this is good in general.",
      "parentUuid": "5d359c05_fc6c121c",
      "range": {
        "startLine": 180,
        "startChar": 5,
        "endLine": 180,
        "endChar": 14
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba05ce57_0056407d",
        "filename": "libartbase/base/bit_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-10-27T14:37:51Z",
      "side": 1,
      "message": "I\u0027m keeping this as is for now as the version with `constexpr` was approved with Code-Review+2 earlier. The approval flag was cleared due to an update following changes in another patch.\n\nThe `constexpr` was initially added as an additional step to ensure the conditional statement is optimized out, however given that it only depends on template parameter I\u0027d certainly expect compiler to optimize this anyway.",
      "parentUuid": "6fb2e485_8b0f7a01",
      "range": {
        "startLine": 180,
        "startChar": 5,
        "endLine": 180,
        "endChar": 14
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32155773_78c16556",
        "filename": "libartbase/base/bit_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-11-10T23:53:35Z",
      "side": 1,
      "message": "I think the constexpr is just noise here, and I would prefer to see it without that. IIUC, this is intended to be used in cases in which the then and else branches don\u0027t return the same type, so type checking would fail without the constexpr. In the bad old days, you could probably do this with template specialization. Since both branches have the same type, I don\u0027t see a point. We already know that the conditional will be evaluated at compile time.\n\n(Unfortunately, none of the WG21 papers introducing this seem to have a clear statement of the rationale. And I wasn\u0027t in the room for the discussions. The best I could find is wg21.link/n3329, which is significantly different from the final approved version.)\n\nThis is admittedly not of high importance. But please don\u0027t go through and start adding these.",
      "parentUuid": "ba05ce57_0056407d",
      "range": {
        "startLine": 180,
        "startChar": 5,
        "endLine": 180,
        "endChar": 14
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed24a3fe_0a401962",
        "filename": "libartbase/base/bit_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-11-13T12:18:39Z",
      "side": 1,
      "message": "Thank you for the comprehensive feedback, Hans. I agree it should be removed in this case and generally shouldn\u0027t be used unnecessarily.",
      "parentUuid": "32155773_78c16556",
      "range": {
        "startLine": 180,
        "startChar": 5,
        "endLine": 180,
        "endChar": 14
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa9c54f_85ae9e90",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-05T01:18:46Z",
      "side": 1,
      "message": "not 64K, ya?",
      "range": {
        "startLine": 48,
        "startChar": 39,
        "endLine": 48,
        "endChar": 44
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03980022_fb9b21cc",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2023-10-05T02:41:16Z",
      "side": 1,
      "message": "I think 16k is ok here, since we control updates of art unlike the app ecosystem",
      "parentUuid": "3aa9c54f_85ae9e90",
      "range": {
        "startLine": 48,
        "startChar": 39,
        "endLine": 48,
        "endChar": 44
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3180b7f8_5bfaa75e",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-05T20:20:59Z",
      "side": 1,
      "message": "Yeah, I agree it\u0027s okay. I\u0027m curious if there is a reason, or only goal now is 16K, but yeah it\u0027s okay.",
      "parentUuid": "03980022_fb9b21cc",
      "range": {
        "startLine": 48,
        "startChar": 39,
        "endLine": 48,
        "endChar": 44
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b423576_31c7cd59",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-13T19:23:58Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3180b7f8_5bfaa75e",
      "range": {
        "startLine": 48,
        "startChar": 39,
        "endLine": 48,
        "endChar": 44
      },
      "revId": "378e5bf8401834547e09482bc4b4e4db2106688f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}