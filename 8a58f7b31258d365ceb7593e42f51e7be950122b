{
  "comments": [
    {
      "key": {
        "uuid": "06a21cbf_66040a15",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 33,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-19T11:28:39Z",
      "side": 1,
      "message": "Google C++ style generally discourages streams.\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Streams\n\nFor any non-android, including here also unnecessarily expands what the compiler has to parse.",
      "range": {
        "startLine": 33,
        "startChar": 10,
        "endLine": 33,
        "endChar": 17
      },
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86fc4cc6_b813415a",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 33,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-19T16:06:13Z",
      "side": 1,
      "message": "Simon: Welcome to Android, where Google style is contended.\n\nDimitry, sstream is perfectly fine. Alternatively use a std::string and +, as you\u0027re only appending strings.",
      "parentUuid": "06a21cbf_66040a15",
      "range": {
        "startLine": 33,
        "startChar": 10,
        "endLine": 33,
        "endChar": 17
      },
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e640a8d5_c2a5e47f",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 33,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-19T21:02:49Z",
      "side": 1,
      "message": "I see other instances of stringstream usages in art.. keeping stringstream.",
      "parentUuid": "86fc4cc6_b813415a",
      "range": {
        "startLine": 33,
        "startChar": 10,
        "endLine": 33,
        "endChar": 17
      },
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a21cbf_2625e2a2",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 66,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-19T11:28:39Z",
      "side": 1,
      "message": "Maybe factor the three lines above into, say, jstringToCstring(), and use both here and at 71 below.",
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86fc4cc6_58b20dd9",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 66,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-19T16:06:13Z",
      "side": 1,
      "message": "Dimitry: It\u0027s fine the way it is if you don\u0027t want to rewrite.\n\nThe more interesting point is what you want to do with the pending null-pointer exception...\n\n\nSimon: This requires changes that aren\u0027t as simple as moving those lines out. ScopedUtfChars exists to release the char buffer - it doesn\u0027t make a copy itself. As such, you\u0027d have to translate everything to std::string all the time, incurring copies. Dimitry is a low-level guy and likes performance.",
      "parentUuid": "06a21cbf_2625e2a2",
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a21cbf_a618d276",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-19T11:28:39Z",
      "side": 1,
      "message": "Probably worth commenting this.  It will look obscure to anyone not familiar with its genesis.",
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06a21cbf_668f6afb",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2015-03-19T11:59:31Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "06a21cbf_a618d276",
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2620002d_1c3a5998",
        "filename": "runtime/native/java_lang_Runtime.cc",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-19T21:02:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06a21cbf_668f6afb",
      "revId": "8a58f7b31258d365ceb7593e42f51e7be950122b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}