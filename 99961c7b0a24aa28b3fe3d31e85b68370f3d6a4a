{
  "comments": [
    {
      "key": {
        "uuid": "ee4c2816_5b40e332",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-04-06T10:50:32Z",
      "side": 1,
      "message": "This is quite ugly. I think we should instead strengthen the ownership of all slow paths, changing the SlowPathCode to DeletableArenaObject\u003c\u003e and the CodeGenerator::slow_paths_ to ArenaVector\u003cstd::unique_ptr\u003cSlowPathCode\u003e\u003e.",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e525cad_dc34edda",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-06T11:34:44Z",
      "side": 1,
      "message": "Right.  If so, I guess we should also remove (or amend) the following comment before the definition of art::DeletableArenaObject in runtime/base/arena_object.h:\n\n  // Currently this is used by the quick compiler for debug reference counting arena allocations.\n\n?",
      "parentUuid": "ee4c2816_5b40e332",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e525cad_3cf391fc",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-04-06T14:52:47Z",
      "side": 1,
      "message": "Absolutely.",
      "parentUuid": "0e525cad_dc34edda",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1af804_b7f02843",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-04-07T12:35:39Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "ee4c2816_5b40e332",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1af804_57f66c3e",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-04-07T12:35:39Z",
      "side": 1,
      "message": "Removed the \u0027quick\u0027 part of comment since it has been removed.",
      "parentUuid": "0e525cad_dc34edda",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e525cad_fc07693c",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-04-06T10:50:32Z",
      "side": 1,
      "message": "Try to change the block_labels_ to ArenaVector\u003cvixl::Label\u003e instead and circumvent the Codegenerator::CommonInitializeLabels\u003c\u003e(), doing a simple resize().",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1af804_f70f8013",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-04-07T12:35:39Z",
      "side": 1,
      "message": "Using a vector does not compile because the copy constructor for Labels is disabled and we don\u0027t have a move constructor.\n\nI am pushing a patch to VIXL internally to add a move constructor, which fixes the issue here. I\u0027ll add a TODO to use a vector here once it is available (in the soon to be released next version of VIXL).",
      "parentUuid": "0e525cad_fc07693c",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e31b481_d9bab7e4",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-04-07T13:02:43Z",
      "side": 1,
      "message": "I just realised that what I implemented would break the veneer pool. Allowing copying/moving labels is not as simple as a trivial move constructor, so it may not come in the next VIXL release.",
      "parentUuid": "6e1af804_f70f8013",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1af804_da35c12d",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-04-07T13:05:19Z",
      "side": 1,
      "message": "What about ArenaDeque\u003c\u003e then? That should not require copy constructor.",
      "parentUuid": "4e31b481_d9bab7e4",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e1af804_9a18a9bf",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-04-07T13:49:55Z",
      "side": 1,
      "message": "I didn\u0027t use it because it does not provide access to the underlying storage. (Taking the address of the first element would be too hacky in my opinion.)\n\nHowever I\u0027ll try using it and changing `GetLabelOf()`.",
      "parentUuid": "6e1af804_da35c12d",
      "revId": "99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}