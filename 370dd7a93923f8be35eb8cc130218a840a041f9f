{
  "comments": [
    {
      "key": {
        "uuid": "0ee6a5ff_64222094",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2939,
      "author": {
        "id": 1013855
      },
      "writtenOn": "2015-01-08T19:51:56Z",
      "side": 1,
      "message": "Although this is implicit (as in it will throw exception via the fault), it is not really how it is supposed to work by design. If the fault would happen on the object access, you wouldn\u0027t need the extra test instruction. With this approach, you have just one less instruction than before (no branch) which I don\u0027t think would really give you any wins.\n\nAnyway, to be fair, I get why you implemented it this way, which is because you need to satisfy the null check semantics of the null check node at the correct point. But this makes me wonder whether it is even worth it having implicit checks in the first place... I don\u0027t think you\u0027re really going to get a benefit in performance.",
      "range": {
        "startLine": 2939,
        "startChar": 5,
        "endLine": 2939,
        "endChar": 56
      },
      "revId": "370dd7a93923f8be35eb8cc130218a840a041f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}