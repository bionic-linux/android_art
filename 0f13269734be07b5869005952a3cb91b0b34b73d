{
  "comments": [
    {
      "key": {
        "uuid": "fab36f6d_9329592d",
        "filename": "test/031-class-attributes/expected.txt",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-12-13T19:51:16Z",
      "side": 0,
      "message": "Is there any reason not to simply compile this test with 1.8 and avoid changing expected.txt?",
      "revId": "0f13269734be07b5869005952a3cb91b0b34b73d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bddbcf5a_efaee975",
        "filename": "test/031-class-attributes/expected.txt",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2017-12-13T23:12:32Z",
      "side": 0,
      "message": "Do you mean (a) Compiling with -target 1.8, or (b) compiling with OpenJDK 8 javac?\n\nI believe that (a) wouldn\u0027t fix it.\n\n(b) is not generally supported by our build toolchain, and we will want to get rid of OpenJDK 8 eventually, so making this work would both be a little messy and short-lived / more technical debt for the next person to eventually clean up.\n\nIdeally this test could accept either value (0 or 8) here but it looks like that\u0027s not possible.\n\nI plan to make this part of the change part of the same CL topic that changes the default toolchain. How does that sound?",
      "parentUuid": "fab36f6d_9329592d",
      "revId": "0f13269734be07b5869005952a3cb91b0b34b73d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a23fe23d_2ba24a5a",
        "filename": "test/031-class-attributes/expected.txt",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-12-14T00:00:30Z",
      "side": 0,
      "message": "Does using -source 1.8 -target 1.8 not fix it?",
      "parentUuid": "bddbcf5a_efaee975",
      "revId": "0f13269734be07b5869005952a3cb91b0b34b73d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5b6239_b672f927",
        "filename": "test/031-class-attributes/expected.txt",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2017-12-14T16:18:29Z",
      "side": 0,
      "message": "I don\u0027t think that this behavior of OpenJDK 9 javac depends on -source or -target, but I\u0027m not certain.\n\nFurther, the default -source and -target *is* 1.8 for now (even after the switch to OpenJDK 9), so if art/test/run-test respects that then it will have been passed during the failed run. I haven\u0027t been able to confirm whether this is happening because I haven\u0027t gotten run-test to log the javac invocation (even when I ran it with --dev); I may have been missing something obvious since I\u0027m unfamiliar with the art test scripts.\n\nIn case I\u0027m missing something obvious and you know how to fix it, do you wanna try yourself? You can get the environment under which the test is failing by exporting:\n\nexport EXPERIMENTAL_USE_OPENJDK9\u003d1.8\n\nand then re-running lunch.\n\nI\u0027ve moved the change to this particular test into a follow-up CL so that this CL doesn\u0027t need to wait for the OpenJDK 9 switch.",
      "parentUuid": "a23fe23d_2ba24a5a",
      "revId": "0f13269734be07b5869005952a3cb91b0b34b73d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}