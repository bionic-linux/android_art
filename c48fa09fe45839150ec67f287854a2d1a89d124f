{
  "comments": [
    {
      "key": {
        "uuid": "02354d7d_dbf534f3",
        "filename": "runtime/gc/accounting/read_barrier_table.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-25T01:05:57Z",
      "side": 1,
      "message": "What is the reason we need two constants instead of just using the same one both places?",
      "range": {
        "startLine": 83,
        "startChar": 26,
        "endLine": 83,
        "endChar": 37
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "672b7b34_3e6d6f31",
        "filename": "runtime/gc/accounting/read_barrier_table.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-02-25T02:39:00Z",
      "side": 1,
      "message": "Header file circular dependency.",
      "parentUuid": "02354d7d_dbf534f3",
      "range": {
        "startLine": 83,
        "startChar": 26,
        "endLine": 83,
        "endChar": 37
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e24ed37_4d7eb0bf",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3541,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-25T01:05:57Z",
      "side": 1,
      "message": "This seems like it will increase ram usage, can you just pass it down from run-test as a flag so that only the test gets the behavior?",
      "range": {
        "startLine": 3541,
        "startChar": 46,
        "endLine": 3541,
        "endChar": 72
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e3f452d_93bb28de",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3541,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-02-25T02:39:00Z",
      "side": 1,
      "message": "kExtraHeapGrowthMultiplier was previously added to foreground_heap_growth_multiplier_ so no change here.\n\nIf you mean the background case, I think if we could, it\u0027d be better to avoid the 154-gc-loop failure situation without setting anything special just for the test. I could alternatively bump the min free by some amount  like 256k for the CC case so that the impact is only on a smaller heap size. Would that work?",
      "parentUuid": "9e24ed37_4d7eb0bf",
      "range": {
        "startLine": 3541,
        "startChar": 46,
        "endLine": 3541,
        "endChar": 72
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da6e08e_038158be",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3541,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-25T03:09:47Z",
      "side": 1,
      "message": "Yes, I meant background case. You could just do it for all the tests or just change 154-gc-loop to be less strict.",
      "parentUuid": "9e3f452d_93bb28de",
      "range": {
        "startLine": 3541,
        "startChar": 46,
        "endLine": 3541,
        "endChar": 72
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43176ed_aa419538",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3541,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-02-25T03:26:58Z",
      "side": 1,
      "message": "Yeah, I also thought of weakening 154-gc-loop a bit because either way we\u0027d be assuming that by changing it for the test, we won\u0027t expect the 154-gc-loop-like situation in production.",
      "parentUuid": "2da6e08e_038158be",
      "range": {
        "startLine": 3541,
        "startChar": 46,
        "endLine": 3541,
        "endChar": 72
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e61869d_65ee6804",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3541,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-02-28T00:27:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a43176ed_aa419538",
      "range": {
        "startLine": 3541,
        "startChar": 46,
        "endLine": 3541,
        "endChar": 72
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "205a0709_52af674e",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3556,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-25T01:05:57Z",
      "side": 1,
      "message": "Delete?",
      "range": {
        "startLine": 3555,
        "startChar": 2,
        "endLine": 3556,
        "endChar": 3
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18e3d74e_3676c880",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 3556,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-02-25T02:39:00Z",
      "side": 1,
      "message": "Deleted in PS2.",
      "parentUuid": "205a0709_52af674e",
      "range": {
        "startLine": 3555,
        "startChar": 2,
        "endLine": 3556,
        "endChar": 3
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab5b00f4_15bfd14b",
        "filename": "runtime/gc/space/region_space.h",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-25T01:05:57Z",
      "side": 1,
      "message": "The other spaces use ContinuousSpace::end_ for this, maybe it would be more consistent to do the same thing instead of adding a new variable. But I\u0027m fine with the current CL.",
      "range": {
        "startLine": 559,
        "startChar": 9,
        "endLine": 559,
        "endChar": 37
      },
      "revId": "c48fa09fe45839150ec67f287854a2d1a89d124f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}