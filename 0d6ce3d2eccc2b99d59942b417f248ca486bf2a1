{
  "comments": [
    {
      "key": {
        "uuid": "0b49377c_831d3e01",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 710,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2015-01-15T17:55:56Z",
      "side": 1,
      "message": "const",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb71dfc8_fc7cc5a2",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 710,
      "author": {
        "id": 1015518
      },
      "writtenOn": "2015-01-16T06:03:32Z",
      "side": 1,
      "message": "Thanks for your suggestion. I will fix it in the next patch set.",
      "parentUuid": "0b49377c_831d3e01",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abdbcb04_337592e8",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 760,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-01-16T00:21:15Z",
      "side": 1,
      "message": "I think this should be declared inside of the loop.",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb71dfc8_1c3df9df",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 760,
      "author": {
        "id": 1015518
      },
      "writtenOn": "2015-01-16T06:03:32Z",
      "side": 1,
      "message": "OK. I will change it in the next patch set.",
      "parentUuid": "abdbcb04_337592e8",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bcfdb48_aceb6380",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 767,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-01-16T00:21:15Z",
      "side": 1,
      "message": "Missing space between if and (, this shouldn\u0027t pass cpplint. How did you test it?",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbbf1f8b_495f41e7",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 767,
      "author": {
        "id": 1015518
      },
      "writtenOn": "2015-01-16T06:03:32Z",
      "side": 1,
      "message": "I will fix it. It seems the mistake I made in coding. Actually I tested this patch and passed ART unit tests and also our QA test internally. I am also a little bit curious how it passed cpplint tool.",
      "parentUuid": "2bcfdb48_aceb6380",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bc55323_11140ee8",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-01-16T00:21:15Z",
      "side": 1,
      "message": "I think this is only sound if paused \u003d\u003d true since there could be races where we clear a card without having processed the related object (due to writes reordering).",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb71dfc8_9c302906",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1015518
      },
      "writtenOn": "2015-01-16T06:03:32Z",
      "side": 1,
      "message": "Yes. I agree with you. I described that the clear is done in pause phase in the commit message. In pause phase, dirty card scanning is parallel by dividing into several card segments for different threads. Also, no need atomic operation to avoid race condition. Therefore, the clear operation overhead is very minor. The benefit is worthwhile to do this to reduce marking time. In concurrent phase, on the one hand, there could be races; On the other hand, the dirty cards in concurrent phase is newly generated, because previous dirty cards are already cleared in pause phase of last GC cycle. The philosophy here is the fewer dirty cards, the less time of dirty cards scanning. This will in turn bring fewer dirty cards in concurrent phase because mutators are now concurrently accessing the objects on the heap.",
      "parentUuid": "6bc55323_11140ee8",
      "revId": "0d6ce3d2eccc2b99d59942b417f248ca486bf2a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}