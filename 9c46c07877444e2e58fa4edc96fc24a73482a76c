{
  "comments": [
    {
      "key": {
        "uuid": "e4e6f977_5b0dde74",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 90,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-29T10:48:11Z",
      "side": 1,
      "message": "and?",
      "range": {
        "startLine": 90,
        "startChar": 64,
        "endLine": 90,
        "endChar": 66
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffc101e3_aae08ff7",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 90,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-06-29T16:46:12Z",
      "side": 1,
      "message": "Right; actually \"nor\" seems better.\n\nAlso, thanks for pointing this out, I realized I forgot to keep x20 in callee_saved_core_registers when we\u0027re not emitting Baker read barriers!",
      "parentUuid": "e4e6f977_5b0dde74",
      "range": {
        "startLine": 90,
        "startChar": 64,
        "endLine": 90,
        "endChar": 66
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c2cd5cc_30858bea",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-29T10:48:11Z",
      "side": 1,
      "message": "Why? If you return to Java, you want that register updated.",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f1b493b_4fca5e4d",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-06-29T16:46:12Z",
      "side": 1,
      "message": "I think Igor\u0027s point (see https://android-review.googlesource.com/#/c/395176/9/compiler/utils/arm64/jni_macro_assembler_arm64.cc@778) was that the MR refresh would not be needed if we could guarantee that we never go into a suspend check during the JNI transition (I\u0027m not sure that\u0027s possible though).",
      "parentUuid": "1c2cd5cc_30858bea",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f048eaa0_b3968136",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-29T17:04:54Z",
      "side": 1,
      "message": "The load of MR is always redundant in the cases that the suspend is not taken.",
      "parentUuid": "7f1b493b_4fca5e4d",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad42a975_b7fde8fd",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-30T10:22:38Z",
      "side": 1,
      "message": "OK, let\u0027s measure that in a follow-up CL.",
      "parentUuid": "f048eaa0_b3968136",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "090fa27e_d70235da",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-30T16:49:17Z",
      "side": 1,
      "message": "Hmm, actually I think we don\u0027t need to do this at all if it\u0027s @CriticalNative because it can\u0027t possibly suspend and as long as MR is a native-callee-save-register.\n\nCan you make it conditional Roland (and have an assert that it\u0027s native-callee-save)?\n\n\n    RemoveFrame(size_t frame_size,\n                ArrayRef\u003c...\u003e callee_save_regs,\n                bool may_suspend) {\n\n          CHECK(is_native_callee_save(MR));\n          .....\n          if (may_suspend) { __Ldr(MR); } // refresh GC marking register\n    }\n\n\n    jni_compiler:\n     \n    RemoveFrame(frame_size, regs, !is_critical_native /* may_suspend */ );\n\n----------\n\nFor other cases not worth doing anything right now, maybe if we inline JniMethodStart/End in the future or to return if it suspended.",
      "parentUuid": "ad42a975_b7fde8fd",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39273ba7_ed0e403e",
        "filename": "compiler/utils/arm64/jni_macro_assembler_arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 777,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-07-05T16:12:52Z",
      "side": 1,
      "message": "Done in https://android-review.googlesource.com/#/c/429009/.",
      "parentUuid": "090fa27e_d70235da",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 777,
        "endChar": 49
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "683a628a_80886223",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-29T10:48:11Z",
      "side": 1,
      "message": "Are we winning anything by special casing here (and below)?",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11cca2c5_301b178a",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-06-29T16:46:12Z",
      "side": 1,
      "message": "I haven\u0027t measured it. I can split the CL and move that change (and other similar changes below) to another patch to check whether it\u0027s relevant, performance-wise.",
      "parentUuid": "683a628a_80886223",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11173acb_18a0ed47",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-30T10:22:38Z",
      "side": 1,
      "message": "I think I\u0027d prefer one common thing for now with a comment on each place you found could be updated. Sounds good for another change that measures the difference.",
      "parentUuid": "11cca2c5_301b178a",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7372d673_021bd74e",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-07-05T16:12:52Z",
      "side": 1,
      "message": "Okay, I\u0027ll move this hunk (and other similar ones) to another CL.",
      "parentUuid": "11173acb_18a0ed47",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35b76319_221885b3",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-07-06T13:09:22Z",
      "side": 1,
      "message": "Done in PS15; these hunks have been moved into this new CL: https://android-review.googlesource.com/#/c/430319/.",
      "parentUuid": "7372d673_021bd74e",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81aa648b_cc35d4f8",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 751,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-29T10:48:11Z",
      "side": 1,
      "message": "Why do you need this one?",
      "range": {
        "startLine": 751,
        "startChar": 4,
        "endLine": 751,
        "endChar": 28
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "861b1364_6821f55d",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 11
      },
      "lineNbr": 751,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-06-29T16:46:12Z",
      "side": 1,
      "message": "This one is indeed superfluous. I removed it in PS12 and fixed the saving/restoring of X20 as well.",
      "parentUuid": "81aa648b_cc35d4f8",
      "range": {
        "startLine": 751,
        "startChar": 4,
        "endLine": 751,
        "endChar": 28
      },
      "revId": "9c46c07877444e2e58fa4edc96fc24a73482a76c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}