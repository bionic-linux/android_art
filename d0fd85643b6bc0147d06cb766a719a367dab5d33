{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3f9c2a_1af5e9d1",
        "filename": "libnativebridge/include/nativebridge/native_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "Do we need a separate type for FastNative, or is it the same ABI as CriticalNative? It would help to document it here.",
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb4ff06_f8a809be",
        "filename": "libnativebridge/include/nativebridge/native_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "signature",
      "range": {
        "startLine": 409,
        "startChar": 14,
        "endLine": 409,
        "endChar": 22
      },
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a2b1f19_81785e31",
        "filename": "libnativebridge/include/nativebridge/native_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 419,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "drop",
      "range": {
        "startLine": 418,
        "startChar": 0,
        "endLine": 419,
        "endChar": 75
      },
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3f8ecb3_6c9d998d",
        "filename": "libnativebridge/include/nativebridge/native_bridge.h",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "`getTrampoline2` sounds a bit cryptic for long living external facing API, I\u0027d suggest something like `getTrampolineWithJNICallType`",
      "range": {
        "startLine": 420,
        "startChar": 10,
        "endLine": 420,
        "endChar": 24
      },
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777937b9_af326142",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 3
      },
      "lineNbr": 586,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "Is this special case really needed? We are falling back to getTrampoline() below anyway.",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 586,
        "endChar": 3
      },
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf02f30d_c85b1d61",
        "filename": "libnativebridge/tests/NativeBridge7CriticalNative_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2023-08-04T02:25:00Z",
      "side": 1,
      "message": "It seems like we need to call ResetTrampolinCalledState() here, so that the next checks are not influenced by the previous calls.",
      "revId": "d0fd85643b6bc0147d06cb766a719a367dab5d33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}