{
  "comments": [
    {
      "key": {
        "uuid": "c4ef2afe_ee6423e9",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-09-11T01:21:49Z",
      "side": 1,
      "message": "2015",
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24c9e69c_f006795b",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Isn\u0027t it cleaner to have two constructors?\n\nThough I guess your usage is targeted towards having a unified get-or-insert for both cases.",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 31,
        "endChar": 3
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4c34e74_bbd46a25",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Is that a standard term? I haven\u0027t heard it in this context, but I also haven\u0027t kept up with the field. To me, \"direct_use_only\" seems more descriptive.",
      "range": {
        "startLine": 57,
        "startChar": 11,
        "endLine": 57,
        "endChar": 24
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_f080e633",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "I assume that includes the constructor, so you only see that for inlined constructors?",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 46
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64cf5e9f_a6ba0643",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "ref_ is ambiguous.\n\nYou might want to note here that this is zero for arrays (so they are all equivalent, and somewhat synonymous with Object).\n\nAnd you should note that this is the declaring class of the field being accessed, otherwise.\n\n(I want to point out there are issues here, considering inlining and the consistency of indices. Resolving )",
      "range": {
        "startLine": 108,
        "startChar": 45,
        "endLine": 108,
        "endChar": 51
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44fdfae7_a585a442",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "class_def_index only works for resolved classes.\n\nEven then, if you want to stay with an index, maybe prefer the type index. It\u0027s easy to go from the field index to the type index, so you don\u0027t have to cache it in the HInstruction (so no changes to nodes.h and builder.cc).",
      "range": {
        "startLine": 108,
        "startChar": 2,
        "endLine": 108,
        "endChar": 26
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_c493af95",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Rename. This should be declaring_class_def_index.",
      "range": {
        "startLine": 108,
        "startChar": 10,
        "endLine": 108,
        "endChar": 26
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c1426c_179a0bae",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Space.",
      "range": {
        "startLine": 111,
        "startChar": 28,
        "endLine": 111,
        "endChar": 29
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_9072c222",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "DCHECK for the equals case.",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 20
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d4522f_d1aee3ff",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "You should profile this. I wonder if a map is an acceptable space-time tradeoff here.",
      "range": {
        "startLine": 201,
        "startChar": 2,
        "endLine": 209,
        "endChar": 3
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4ef2afe_ce971f80",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Indentation, plus line-break style.",
      "range": {
        "startLine": 296,
        "startChar": 36,
        "endLine": 296,
        "endChar": 44
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c1426c_9a75220e",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 339,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "You could disambiguate this (if it\u0027s similar to \"singleton\"). Negative component type, for example.",
      "range": {
        "startLine": 339,
        "startChar": 40,
        "endLine": 339,
        "endChar": 41
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4c34e74_9beac6e2",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 370,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "Prefer ATTRIBUTE_UNUSED.",
      "range": {
        "startLine": 370,
        "startChar": 4,
        "endLine": 370,
        "endChar": 10
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4ef2afe_6ea953c4",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-11T04:47:02Z",
      "side": 1,
      "message": "As in the in-person discussion, this needs to be investigated. I don\u0027t think this is true, you may only not eliminate over monitor-enter and monitor-exit, separately, IMHO.",
      "range": {
        "startLine": 527,
        "startChar": 41,
        "endLine": 527,
        "endChar": 67
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c1426c_ba8906ae",
        "filename": "compiler/optimizing/load_store_elimination.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-09-11T01:21:49Z",
      "side": 1,
      "message": "2015",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c1426c_fa665eb0",
        "filename": "test/023-many-interfaces/build",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-09-11T01:21:49Z",
      "side": 1,
      "message": "why is this file here?",
      "range": {
        "startLine": 3,
        "startChar": 38,
        "endLine": 3,
        "endChar": 44
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4c34e74_9852cca7",
        "filename": "test/303-verification-stress/build",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-09-11T01:21:49Z",
      "side": 1,
      "message": "why is this file here?",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "fb2de7c6adaf325886436050e4de387b4118029d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}