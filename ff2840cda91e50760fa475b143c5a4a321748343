{
  "comments": [
    {
      "key": {
        "uuid": "0b7a6a68_f69d8010",
        "filename": "runtime/verifier/reg_type-inl.h",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-14T15:51:52Z",
      "side": 1,
      "message": "Add a comment why it can be null.",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 34
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_5590ec4b",
        "filename": "runtime/verifier/reg_type-inl.h",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-09-15T08:54:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b7a6a68_f69d8010",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 34
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b5c6205_f867311b",
        "filename": "runtime/verifier/reg_type.cc",
        "patchSetId": 15
      },
      "lineNbr": 710,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-14T15:51:52Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 32
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_3593705b",
        "filename": "runtime/verifier/reg_type.cc",
        "patchSetId": 15
      },
      "lineNbr": 710,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-09-15T08:54:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b5c6205_f867311b",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 32
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_98ed59bb",
        "filename": "runtime/verifier/verifier_deps.cc",
        "patchSetId": 15
      },
      "lineNbr": 207,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-15T10:14:55Z",
      "side": 1,
      "message": "What happens to the tests below if the classes are not resolved? Do they still make sense? Should you just return instead with a comment that the verified method will be marked \"verify-at-runtime\"?",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 78
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_d86c3135",
        "filename": "runtime/verifier/verifier_deps.cc",
        "patchSetId": 15
      },
      "lineNbr": 207,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-09-15T12:12:08Z",
      "side": 1,
      "message": "The tests below are all fine:\n - IsObjectClass \u003d (GetSuperclass() \u003d\u003d nullptr)\n - IsInterface - from access flags\n - IsArrayClass - (GetComponentType() \u003d\u003d nullptr)\n - IsAssignableFrom - uses IsSubClass and Implements, both should be okay\n\nEither way, testing for IsResolved, as we found some time ago, is non-deterministic. So we should record these dependencies.",
      "parentUuid": "eb76f682_98ed59bb",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 78
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_9849d9bb",
        "filename": "runtime/verifier/verifier_deps.cc",
        "patchSetId": 15
      },
      "lineNbr": 207,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-15T12:39:03Z",
      "side": 1,
      "message": "OK, please add all of this as comments in the file.",
      "parentUuid": "eb76f682_d86c3135",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 78
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb76f682_7826bdd6",
        "filename": "runtime/verifier/verifier_deps.cc",
        "patchSetId": 15
      },
      "lineNbr": 207,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-09-15T15:18:39Z",
      "side": 1,
      "message": "So here\u0027s the deal...\n\nWhat we really need is a guarantee that `destination` and `source` did not have any linkage issues. If a class had at any point the status \"resolved\", that holds.\n\nNow that is fine for both callers of AddAssignability but didn\u0027t use to hold for the optimization. So what I\u0027ve done is test for IsResolved and optimize if it is.\n\nI\u0027ve added a gtest that tests both situations (when we can / cannot optimize).\n\nAlso added comments in here.",
      "parentUuid": "eb76f682_9849d9bb",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 78
      },
      "revId": "ff2840cda91e50760fa475b143c5a4a321748343",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}