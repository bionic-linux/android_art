{
  "comments": [
    {
      "key": {
        "uuid": "19fc4d17_dd33d80f",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "stack_map.sp_mask shall not change, so the copying done in Dedup() is unnecessary.",
      "range": {
        "startLine": 221,
        "startChar": 54,
        "endLine": 221,
        "endChar": 92
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c4d2645_76c917a5",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "This can be asserted using std::is_pod\u003c\u003e.",
      "range": {
        "startLine": 160,
        "startChar": 20,
        "endLine": 160,
        "endChar": 23
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baa7cf62_1beda053",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 175,
        "startChar": 62,
        "endLine": 175,
        "endChar": 82
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "993ee48f_98a9b864",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "Remove or use a more generic term instead of \"vector\".",
      "range": {
        "startLine": 181,
        "startChar": 33,
        "endLine": 181,
        "endChar": 46
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "337c9c65_b9bdcd74",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "std::equal(values, values + count, rows_.begin() + index, [](const T\u0026 lhs, const T\u0026 rhs) { return memcmp(\u0026lhs, \u0026rhs, sizeof(T)) \u003d\u003d 0; })",
      "range": {
        "startLine": 191,
        "startChar": 37,
        "endLine": 191,
        "endChar": 70
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a52d3c24_95486464",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "rows_.insert(rows_.end(), values, values + count);",
      "range": {
        "startLine": 198,
        "startChar": 4,
        "endLine": 198,
        "endChar": 65
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1581a0e_ba27b7f4",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "And why is this public? (If it\u0027s used only in one place you can consider explicitly inlining.)",
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "613ce50b_ea2375e9",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "This decays to uint32_t* column_bits. If you want to enforce the size, add a reference:\n\n  uint32_t (\u0026column_bits)[kNumColumns]\n\nYou can check that the following program compiles without errors:\n\n  int foo(int arr[8]) {}\n  int main() {\n    int x[2];\n    foo(x);\n  }\n\nAlso note that we (I?) still prefer pointers for /*out*/ parameters (please annotate).",
      "range": {
        "startLine": 223,
        "startChar": 15,
        "endLine": 223,
        "endChar": 48
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f9ffe25_fc036889",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "This probably does not do what you think it does. Please initialize using std::fill_n().",
      "range": {
        "startLine": 224,
        "startChar": 43,
        "endLine": 224,
        "endChar": 47
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5467b1a9_f1824369",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "ditto. Though you could just leave this uninitialized and call Measure unconditionally below.",
      "range": {
        "startLine": 242,
        "startChar": 37,
        "endLine": 242,
        "endChar": 42
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3843b06_9b166e02",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "I\u0027d prefer 0u or static_cast\u003cuint32_t\u003e(0). Note that std::accumulate shall really use the type deduced here for the sum.",
      "range": {
        "startLine": 252,
        "startChar": 80,
        "endLine": 252,
        "endChar": 81
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa8f1cb8_1463a670",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "Move into the `if (size !\u003d 0)` block?",
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea56808_48da157a",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 341,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "Move into the `if (size() !\u003d 0)` block?",
      "range": {
        "startLine": 333,
        "startChar": 0,
        "endLine": 341,
        "endChar": 0
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32611ff9_a2a46294",
        "filename": "libartbase/base/bit_table.h",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "0u? And since you\u0027re initializing everything else explicitly in the constructor, why not initialize it there?",
      "range": {
        "startLine": 365,
        "startChar": 25,
        "endLine": 365,
        "endChar": 26
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4061ee49_a4cb8c81",
        "filename": "libartbase/base/bit_table_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "It would be good to also test hash conflicts.",
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a5446e6_a732a8c1",
        "filename": "libartbase/base/bit_table_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "POPCOUNT(value)? Whenever you add a zero bit, the value does not change; whenever you add a one bit, the value changes.",
      "range": {
        "startLine": 179,
        "startChar": 12,
        "endLine": 179,
        "endChar": 15
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f003fb04_17f645bc",
        "filename": "runtime/stack_map.h",
        "patchSetId": 1
      },
      "lineNbr": 804,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-24T12:42:22Z",
      "side": 1,
      "message": "Split this bit to a separate CL? (That way you can report the impact separately from the other changes.)",
      "range": {
        "startLine": 802,
        "startChar": 0,
        "endLine": 804,
        "endChar": 0
      },
      "revId": "9f2b45bcfd8d84e9b678e670cd4c8d4abb1c44a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}