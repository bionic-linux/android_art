{
  "comments": [
    {
      "key": {
        "uuid": "9273e45b_55a8f119",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 2955,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-04T16:52:01Z",
      "side": 1,
      "message": "The current threshold value is randomly picked up. It\u0027s a subject for the discussion. Processing an array of such a size takes ~40 microseconds on Cortex-A53.",
      "range": {
        "startLine": 2955,
        "startChar": 0,
        "endLine": 2955,
        "endChar": 63
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d5aafad_a24453df",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 2993,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-04T17:37:57Z",
      "side": 1,
      "message": "two more spaces",
      "range": {
        "startLine": 2993,
        "startChar": 2,
        "endLine": 2993,
        "endChar": 4
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16c12efb_46e4a5ac",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 2993,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d5aafad_a24453df",
      "range": {
        "startLine": 2993,
        "startChar": 2,
        "endLine": 2993,
        "endChar": 4
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3273f8f_0209edcd",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3034,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-04T17:37:57Z",
      "side": 1,
      "message": "Or SUSB+B.LO? (Are there some micro-architectural optimizations on this pattern? Or are both patterns supposed to yield the same performance?)",
      "range": {
        "startLine": 3030,
        "startChar": 0,
        "endLine": 3034,
        "endChar": 0
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c8864d_a10c3b73",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3034,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-04T23:04:22Z",
      "side": 1,
      "message": "As it\u0027s come from the initial variant of the code I kept it.\nAccording to the optimization guide both have the same performance. I checked they do.\nI\u0027ll change to use SUBS+B.LO here and SUBS+B.HS below.",
      "parentUuid": "c3273f8f_0209edcd",
      "range": {
        "startLine": 3030,
        "startChar": 0,
        "endLine": 3034,
        "endChar": 0
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "110be9cf_f9fe287b",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3034,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75c8864d_a10c3b73",
      "range": {
        "startLine": 3030,
        "startChar": 0,
        "endLine": 3034,
        "endChar": 0
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "222c7efc_e4312433",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-04T17:37:57Z",
      "side": 1,
      "message": "Add a comment that this may be unaligned. (I assume this is deliberate, avoiding code bloat for initial peeling.)",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116cc9e7_17dfb095",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-04T23:04:22Z",
      "side": 1,
      "message": "Yes, there will be a one-clock penalty in case of an unaligned load.\nI don\u0027t think this will be often.\nI am going to benchmark the performance difference in these cases.",
      "parentUuid": "222c7efc_e4312433",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4421fe49_144975f9",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-05T14:55:52Z",
      "side": 1,
      "message": "I was mistaken. This is not a rare situation. I ran a benchmark when an array pointer is made aligned before the main loop.\nThe improvements are on little CPUs:\n\narray size | Cortex-A53 | Cortex-A55\n------------------------------------\n128        | 1.8%       | -1.9%\n256        | 8.3%       | 6.8%\n512        | 13.2%      | 12.7%\n1024       | 16.3%      | 16.1%\n2048       | 18.1%      | 18%\n4096       | 19%        | 18.9%\n8192       | 19.5%      | 19.5%\n16384      | 19.7%      | 19.7%\n32768      | 20.3%      | 19.8%\n65536      | 19.7%      | 21%\n\nIn all cases data was processed from the zero offset.\n\nI\u0027ll submit the new patchset soon.",
      "parentUuid": "116cc9e7_17dfb095",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f378790a_d519c114",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-05T15:16:57Z",
      "side": 1,
      "message": "Byte array data still starts at 12 bytes from the 8-byte aligned start of the object, right?",
      "parentUuid": "116cc9e7_17dfb095",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dfa1c12_79115870",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-05T21:34:13Z",
      "side": 1,
      "message": "\u003e Byte array data still starts at 12 bytes\n\u003e from the 8-byte aligned start of the object, right?\n\nYes, I see 12 is added in the generated code.",
      "parentUuid": "f378790a_d519c114",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af7dadea_29a0803c",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 3037,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3dfa1c12_79115870",
      "range": {
        "startLine": 3037,
        "startChar": 2,
        "endLine": 3037,
        "endChar": 56
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a05af89f_62b04838",
        "filename": "runtime/image.cc",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-04T17:37:57Z",
      "side": 1,
      "message": "Remove (to keep the line length \u003c\u003d 100)",
      "range": {
        "startLine": 32,
        "startChar": 74,
        "endLine": 32,
        "endChar": 80
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "500db520_75e7b9ad",
        "filename": "runtime/image.cc",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a05af89f_62b04838",
      "range": {
        "startLine": 32,
        "startChar": 74,
        "endLine": 32,
        "endChar": 80
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3eb67e73_d323f48e",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-05T15:16:57Z",
      "side": 1,
      "message": "Maybe \"AIOOBE\"?",
      "range": {
        "startLine": 186,
        "startChar": 45,
        "endLine": 186,
        "endChar": 57
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51aa232b_0a4d3d6a",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3eb67e73_d323f48e",
      "range": {
        "startLine": 186,
        "startChar": 45,
        "endLine": 186,
        "endChar": 57
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7ad67ab_020f2daf",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-05T15:16:57Z",
      "side": 1,
      "message": "Fits into the previous line.",
      "range": {
        "startLine": 187,
        "startChar": 6,
        "endLine": 187,
        "endChar": 16
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01d95a76_9dd5ca83",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7ad67ab_020f2daf",
      "range": {
        "startLine": 187,
        "startChar": 6,
        "endLine": 187,
        "endChar": 16
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84a859cc_970d44cd",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-05T15:16:57Z",
      "side": 1,
      "message": "Using local CRC32 object is inconsistent with the other functions. I think it would be better to get rid of the static field `crc32` and allocate new instances instead of resetting a shared one.",
      "range": {
        "startLine": 218,
        "startChar": 4,
        "endLine": 218,
        "endChar": 30
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a921652_dc689f07",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84a859cc_970d44cd",
      "range": {
        "startLine": 218,
        "startChar": 4,
        "endLine": 218,
        "endChar": 30
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44b46a46_9de842b6",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-12-05T15:16:57Z",
      "side": 1,
      "message": "Align arguments?",
      "range": {
        "startLine": 245,
        "startChar": 8,
        "endLine": 245,
        "endChar": 9
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95573bd1_ca16dd52",
        "filename": "test/580-crc32/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1308278
      },
      "writtenOn": "2018-12-06T11:05:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44b46a46_9de842b6",
      "range": {
        "startLine": 245,
        "startChar": 8,
        "endLine": 245,
        "endChar": 9
      },
      "revId": "33d0c3f05e9b0d10d29dc6c7c4ed222d5c72632d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}