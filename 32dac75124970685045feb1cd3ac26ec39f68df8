{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa1afd4_4e62ba11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-18T17:49:21Z",
      "side": 1,
      "message": "Correct. The prebuilts interfere with the source build (even if they aren\u0027t stale, if I remember correctly).\n\nI\u0027d like to refresh myself on the status and how this will work. I see the prebuilt SDKs use\n\n```\n    use_source_config_var: {\n        config_namespace: \"art_module\",\n        var_name: \"source_build\",\n    },\n```\n\nwhich now means they\u0027re never enabled in ordinary builds? In any cases where do get enabled, how do we deal with the sources? I\u0027m thinking e.g. of partners integrating preload zips. (Happy with a pointer to some doc so you don\u0027t need to rehash stuff for me.)",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e819abce_40de1250",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-18T19:33:00Z",
      "side": 1,
      "message": "\u003e which now means they\u0027re never enabled in ordinary builds?\n\nCorrect, the current plan for trunk stable main development is to always use the source apis to prevent staleness issues like b/315974566\n\n\u003e In any cases where do get enabled, how do we deal with the sources?\n\nCorrect, partners will likely need to enable the module sdk. I believe they should not run into any issues since the sources of `art/` is not on the critical path of `droid`. partners likely never run `checkbuild`.\n\nfwiw, I ran the following command in `partner-v-aml-prebuilt-dev` to approximate a minimal `checkbuild`, and got an error both before/after this CL\n```\n$ mmma art\n[ 48% 12912/26548] //prebuilts/module_sdk/art/current/sdk:prebuilt_apache-xml for prebuilts                                                                                                                                                                                     \nFAILED: out/soong/.intermediates/prebuilts/module_sdk/art/current/sdk/prebuilt_apache-xml/android_common/combined/apache-xml.jar                                                                                                                                                \nout/host/linux-x86/bin/merge_zips --ignore-duplicates -j -stripFile module-info.class out/soong/.intermediates/prebuilts/module_sdk/art/current/sdk/prebuilt_apache-xml/android_common/combined/apache-xml.jar prebuilts/module_sdk/art/current/sdk/java_boot_libs/snapshot/jars/are/invalid/apache-xml.jar\nmerge_zips.go:784: prebuilts/module_sdk/art/current/sdk/java_boot_libs/snapshot/jars/are/invalid/apache-xml.jar: zip: not a valid zip file\n```\n\nThe following command OTOH works both before/after this CL***\n```\n$ SOONG_SKIP_APPSET_SDK_CHECK\u003dtrue m \n# SOONG_SKIP_APPSET_SDK_CHECK is also used by our postsubmit partner CI targets\n```\n\nMartin, would you have a specific workflow/build command in mind that needs to be tested?\n\n\n----------------------------------------------------\n*** for the most part. I had to add the following to [allowed-deps.txt](https://paste.googleplex.com/5108343646978048) since the source aosp apex is no longer disabled and has its deps rewritten to the prebuilt module sdk",
      "parentUuid": "4fa1afd4_4e62ba11",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bf0f1b5_d5354c84",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-19T15:45:13Z",
      "side": 1,
      "message": "Thank you, sounds good. As long as there aren\u0027t graph inconsistencies that make Soong error out.\n\nOne thing that may be worth checking in a build that uses prebuilts is that both the module and the host-exports SDK are prebuilt. E.g. these two commands should both find a path:\n\n```\n$ env NINJA_ARGS\u003d\"-t path com.google.android.art vendor/unbundled_google/modules/ArtGooglePrebuilt/com.google.android.art.apks\" m nothing\n$ env NINJA_ARGS\u003d\"-t path dex2oat-host prebuilts/module_sdk/art/current/host-exports/x86_64/bin/dex2oat64\" m nothing\n```\n\nIt\u0027s interesting in a situation where `next` is on prebuilts (which it currently isn\u0027t, but I noticed `ap2a` is) with otherwise source SDKs.\n\n\u003e merge_zips.go:784: prebuilts/module_sdk/art/current/sdk/java_boot_libs/snapshot/jars/are/invalid/apache-xml.jar: zip: not a valid zip file\n\nIIRC that\u0027s a sign of a bootclasspath fragment inconsistency. paulduffin@ would know better.",
      "parentUuid": "e819abce_40de1250",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34425dc5_301ef045",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-19T17:32:51Z",
      "side": 1,
      "message": "```\n$ env NINJA_ARGS\u003d\"-t path com.google.android.art vendor/unbundled_google/modules/ArtGooglePrebuilt/com.google.android.art.apks\" m nothing\n```\nI have verified that the above command returns a path in v partner worksapce\n\n```\n$ env NINJA_ARGS\u003d\"-t path dex2oat-host prebuilts/module_sdk/art/current/host-exports/x86_64/bin/dex2oat64\" m nothing\n```\n\nInterestingly, we do not have a gsi product in that workspace with x86_64 (we have an arm and arm64). So I ran the above command in `main` with some local modifications to select prebuilts, and have verified that a path is reported to the prebuilt host tool\n```\n# modify trunk_staging.scl in `vendor/google/release` and set `value(\"RELEASE_APEX_CONTRIBUTIONS_ART\", \"art.google.contributions.prebuilt\")`\n$ lunch cf_x86_64_phone-trunk_staging-nothing\n$ env NINJA_ARGS\u003d\"-t path dex2oat-host prebuilts/module_sdk/art/current/host-exports/x86_64/bin/dex2oat64\" m nothing\n# path is reported\n```",
      "parentUuid": "3bf0f1b5_d5354c84",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94b583e2_a74d1299",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-19T18:08:36Z",
      "side": 1,
      "message": "\u003e Interestingly, we do not have a gsi product in that workspace with x86_64 (we have an arm and arm64). \n\nI think my previous comment does not make much sense, since we are trying to identify the path to a host tool and not a device tool. So `gsi_partner_arm` is also a legit produdct to run this test on. \n\nI have verified that there is a path to the prebuilt host tool even after this change\n```\n# v aml workspace\n$ lunch gsi_partner_arm-ap31-userdebug\n$ env NINJA_ARGS\u003d\"-t path dex2oat-host prebuilts/module_sdk/art/current/host-exports/x86_64/bin/dex2oat64\" m nothing\n# path is reported\n```",
      "parentUuid": "34425dc5_301ef045",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1274fa64_8fdd5f06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-19T18:15:32Z",
      "side": 1,
      "message": "Great, thanks Spandan.",
      "parentUuid": "94b583e2_a74d1299",
      "range": {
        "startLine": 10,
        "startChar": 9,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e429c87_fb8448b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-18T17:49:21Z",
      "side": 1,
      "message": "Typo: \"APEX\"",
      "range": {
        "startLine": 15,
        "startChar": 39,
        "endLine": 15,
        "endChar": 42
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c6c1a29_0fd7555b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-18T19:33:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e429c87_fb8448b4",
      "range": {
        "startLine": 15,
        "startChar": 39,
        "endLine": 15,
        "endChar": 42
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f6b2b76_41960e96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-17T17:57:48Z",
      "side": 1,
      "message": "Martin, I would like to delete the disable mechanism in art/ to help me with some cleanup in make/soong. WDYT about this idea?",
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdb99b5e_b8dfb398",
        "filename": "build/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-18T17:49:21Z",
      "side": 1,
      "message": "These defaults ought to be removed altogether, but I think it\u0027s fair for you to leave that to us. Still, can you please file a ticket about it (ART Mainline component) and add a TODO comment here?",
      "range": {
        "startLine": 370,
        "startChar": 0,
        "endLine": 432,
        "endChar": 1
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2993c239_16cd7075",
        "filename": "build/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-18T19:33:00Z",
      "side": 1,
      "message": "Would we still need the defaults to disable art soong modules based on os (e.g. windows, darwin)?",
      "parentUuid": "cdb99b5e_b8dfb398",
      "range": {
        "startLine": 370,
        "startChar": 0,
        "endLine": 432,
        "endChar": 1
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd4783c0_55a86c94",
        "filename": "build/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-19T15:45:13Z",
      "side": 1,
      "message": "No, these defaults shouldn\u0027t have any effect in that regard. There\u0027s just windows in them, and that\u0027s only because of how Soong overrides flags (cf the comment on line 385-386).",
      "parentUuid": "2993c239_16cd7075",
      "range": {
        "startLine": 370,
        "startChar": 0,
        "endLine": 432,
        "endChar": 1
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b785982f_9fd541da",
        "filename": "build/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1878380
      },
      "writtenOn": "2024-04-19T17:32:51Z",
      "side": 1,
      "message": "Acknowledged, I have filed b/335854415 and have a left a TODO comment in this .bp file",
      "parentUuid": "cd4783c0_55a86c94",
      "range": {
        "startLine": 370,
        "startChar": 0,
        "endLine": 432,
        "endChar": 1
      },
      "revId": "32dac75124970685045feb1cd3ac26ec39f68df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}