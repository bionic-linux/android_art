{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c5fd5e_9bd5b7e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-08-22T09:57:59Z",
      "side": 1,
      "message": "Hi Rashid, thank you for the contribution!\n\nThis issue has been fixed on the package manager side in the latest Android version (Android 16) by commit https://android.googlesource.com/platform/frameworks/base/+/cbd2f357c2186c00232e393b986ac3585c6222f5.\n\nYour change will be useful only if an OEM preloads a recent Mainline train that contains it onto an Android 15 (which doesn\u0027t have the commit package manager above), but as of today, major OEMs have already released their Android 15 release, so if I understand it correctly, the number of OEMs who will find this change useful is very limited.\n\nI agree with your analysis and your change, and I appreciate that, but please let us know if there is still a need to merge this change given the package manager commit above.",
      "revId": "3dfcf4ffb1697e38193cf751a851e858de3ae50b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a016cf3c_71820849",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2001312
      },
      "writtenOn": "2024-08-22T14:32:17Z",
      "side": 1,
      "message": "Hi, thanks for the detailed response.\n\nThe PackageManager commit you pointed out addresses the issue this CL attempted to resolve so there\u0027s no need to merge my CL and I\u0027ll abandon it. I do have a question about the \"app downgrading\" implementation. What seems to me to be downgrading happens only when bg-dexopt takes place and \"inactive\" packages get dexopted with the configured inactive compiler filter. That change, however, seems to also make it so that in the case of an OTA, for example, \"inactive\" packages won\u0027t get dexopted again. Is that the intended behavior? I can see how that makes sense but I\u0027m curious if that is intended or not.",
      "parentUuid": "e3c5fd5e_9bd5b7e2",
      "revId": "3dfcf4ffb1697e38193cf751a851e858de3ae50b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e402394a_db694b81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-08-22T15:27:20Z",
      "side": 1,
      "message": "That\u0027s a good question. In short, it\u0027s the intended behavior.\n\nThe filtering on the default packages is mainly for bg-dexopt, to avoid storage thrashing. During bg-dexopt, if we applied a condition on the filtering, to make it only filter out inactive apps when the storage is not low, then the following thrashing would occur:\n\n1. The free space is low.\n2. A bg-dexopt run downgrades inactive apps and hence makes the free space not low.\n3. Another bg-dexopt run dexopts all apps, including inactive apps, which makes the free space low again.\n4. 2 and 3 can repeat forever and the outcome will never converge.\n\nTherefore, when implementing app downgrading, unconditionally filtering out inactive apps for bg-dexopt is a must.\n\nThis has a potential side-effect for OTA, but the side-effect is almost none in practice:\n\n1. For existing apps, they have been dexopted before (on the first boot or later), so they will be in the \"verify\" state after an OTA even if they are not dexopted again (note that vdex files are usable across OTAs).\n\n2. For apps newly introduced by the OTA, so the last active time will be the package scanning time (https://android.googlesource.com/platform/frameworks/base/+/cbd2f357c2186c00232e393b986ac3585c6222f5), so they will be dexopted on the first boot after the OTA.\n\nWe could limit the filtering to bg-dexopt, but given that there is almost no side-effect on OTA, we chose avoid an extra condition for simplicity.",
      "parentUuid": "a016cf3c_71820849",
      "revId": "3dfcf4ffb1697e38193cf751a851e858de3ae50b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6aa26518_97aeec30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2001312
      },
      "writtenOn": "2024-08-22T15:52:06Z",
      "side": 1,
      "message": "That makes sense, thanks. Abandoning this CL.",
      "parentUuid": "e402394a_db694b81",
      "revId": "3dfcf4ffb1697e38193cf751a851e858de3ae50b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17d0647f_982c5357",
        "filename": "libartservice/service/java/com/android/server/art/ArtManagerLocal.java",
        "patchSetId": 1
      },
      "lineNbr": 1296,
      "author": {
        "id": 2001312
      },
      "writtenOn": "2024-08-22T02:32:20Z",
      "side": 1,
      "message": "Based on my understanding of the purpose of the app downgrading feature I wonder if we need to expand this to include REASON_BOOT_AFTER_OTA and REASON_PRE_REBOOT_DEXOPT as it seems like if the updates contain new apps currently those will be treated as \"inactive\" and not dexopted as a result of the filtering in the default case below.",
      "revId": "3dfcf4ffb1697e38193cf751a851e858de3ae50b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}