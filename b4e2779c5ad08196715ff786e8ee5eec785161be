{
  "comments": [
    {
      "key": {
        "uuid": "7580cec4_000b474b",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-10-25T23:08:45Z",
      "side": 1,
      "message": "I believe the intent was to reserve space for argument words in the callee save frame, however, given the Method* is at the bottom this looks broken. Should we move the Method* to be at offset 24 with space for a0 to a3 below. This would also require adjusting the callee save frame sizes. I think there\u0027s inherently a collision between the Method* and a0 as things are.",
      "range": {
        "startLine": 109,
        "startChar": 44,
        "endLine": 109,
        "endChar": 73
      },
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55e7e2a_b44d0d05",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1003299
      },
      "writtenOn": "2014-10-25T23:51:14Z",
      "side": 1,
      "message": "I agree. Does moving Method* require changing architecture independent code?",
      "parentUuid": "7580cec4_000b474b",
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7580cec4_130de354",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-10-27T15:39:23Z",
      "side": 1,
      "message": "The callee save layouts are all architecture dependent. They are declared in runtime.cc. There was an attempt to fold the outgoings are into the frame set up that this change causes to mean we have two areas in the stack reserved for outgoing arguments. My preference is for one, but perhaps that should be clean-up work.",
      "parentUuid": "f55e7e2a_b44d0d05",
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5d6dada_25e1c6a8",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-10-25T23:08:45Z",
      "side": 1,
      "message": "Having the SETUP_REFS_ONLY.. include argument space would mean we could avoid these operations.",
      "range": {
        "startLine": 555,
        "startChar": 4,
        "endLine": 556,
        "endChar": 24
      },
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55e7e2a_d45081a0",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 1003299
      },
      "writtenOn": "2014-10-25T23:51:14Z",
      "side": 1,
      "message": "I was worry about the $a0 slot (Method*) being cobbler. Also, the SP was being passed into the function in the previous version of this file.",
      "parentUuid": "d5d6dada_25e1c6a8",
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7580cec4_333fbfe0",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-10-27T15:39:23Z",
      "side": 1,
      "message": "Agreed, we\u0027ve cleaned it up now so that the called function isn\u0027t initialzing state in the caller. There\u0027s still little bits of assembly to tidy like this.",
      "parentUuid": "f55e7e2a_d45081a0",
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95e0e2b0_f85365aa",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 900,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-10-25T23:08:45Z",
      "side": 1,
      "message": "Remove the TODO? Also, need to add kMips in compiler_driver.cc to the list of architectures supporting generic JNI.",
      "range": {
        "startLine": 900,
        "startChar": 0,
        "endLine": 900,
        "endChar": 38
      },
      "revId": "b4e2779c5ad08196715ff786e8ee5eec785161be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}