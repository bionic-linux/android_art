{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46655082_91d4cf3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Please also update the comment in `art/runtime/exec_utils.h` on `struct ExecResult` and the comment in `art/odrefresh/odr_metrics_record.h` on `kExecResultNotRun` with the new location of the enum.",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "923fa5b9_5b28e69a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-17T15:09:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46655082_91d4cf3d",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49ec20d4_662f7a36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86cccf7f_f8ee017a",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1185,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Sorry, I just realized that this doesn\u0027t work. When the native method returns `NonFatal`, it\u0027s turned into a `ServiceSpecificException` on the Java side and caught in the `catch` block, where there is no access to `_aidl_return`.\n\nYou may consider returning `ScopedAStatus::ok()` and adding one more field to `ArtdDexoptResult` to hold the error message. On the Java side, treat the result with an error message in the same way as a `ServiceSpecificException` (log an error and set the status to `DEXOPT_FAILED`).",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1185,
        "endChar": 39
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "448ca651_5d7e2767",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1185,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "I removed the three fields from the AIDL response and included them in the error message when failing - assuming that if we end up in the happy case on the Java side we report `status\u003dEXITED`, `exitCode\u003d0` and `signal\u003d0`.",
      "parentUuid": "86cccf7f_f8ee017a",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1185,
        "endChar": 39
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19498fea_d6deff16",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1185,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-16T10:14:09Z",
      "side": 1,
      "message": "LGTM.",
      "parentUuid": "448ca651_5d7e2767",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1185,
        "endChar": 39
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c5ebf80_052a6e36",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1195,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "It looks like the behavior has changed. Please keep the same behavior as before.",
      "range": {
        "startLine": 1192,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 3
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75c42fe9_1744d0c0",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1195,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "I think the behavior is roughly the same as before - the only bit that has changed is merging the cases when `!result.ok()` and `result.value() !\u003d 0`, but in both cases we were returning a `NonFatal` and so we are doing in the new version of this code, would you agree?",
      "parentUuid": "5c5ebf80_052a6e36",
      "range": {
        "startLine": 1192,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 3
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8cf296c_4211e089",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1195,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-16T10:14:09Z",
      "side": 1,
      "message": "1. If dex2oat was terminated by a signal:\n\n  Before: Does not log \"dex2oat returned code \u003ccode\u003e\".\n\n  After: Logs \"dex2oat returned code \u003ccode\u003e\".\n  \n  This will be confusing because dex2oat didn\u0027t actually return any code.\n\n2. If dex2oat exited with a non-zero code:\n\n  Before: Returns \"dex2oat returned an unexpected code: \u003ccode\u003e\".\n  \n  After: Returns \"Failed to run dex2oat: \u003cmessage\u003e\".\n  \n  This is problematic because there isn\u0027t an error message in this case. Besides, it will also be confusing because dex2oat actually exited, meaning it was not failed to run.\n  \nI suggest exactly keeping the behavior (no logging in case 1 and no \"Failed to run dex2oat\" in case 2), and only appending `[status\u003d{},exit_code\u003d{},signal\u003d{}]` in both cases.",
      "parentUuid": "75c42fe9_1744d0c0",
      "range": {
        "startLine": 1192,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 3
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b0f0167_e51cd2f4",
        "filename": "artd/artd.cc",
        "patchSetId": 6
      },
      "lineNbr": 1195,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-17T15:09:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8cf296c_4211e089",
      "range": {
        "startLine": 1192,
        "startChar": 0,
        "endLine": 1195,
        "endChar": 3
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da685a72_49b85d48",
        "filename": "artd/artd_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 319,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "`exit_code` is not an interesting field to test when `status` is not `kExited` (it should always be -1). You probably want to change `MOCK_METHOD(Result\u003cint\u003e, DoExecAndReturnCode, ...)` to something like `MOCK_METHOD(ExecResult, DoExecAndReturnResult, ...)`. Then you can return an `ExecResult` with a signal in a test and check that the aidl return value contains the right signal number.\n\nTo avoid repeating the verbose `{.status \u003d ExecResult::kExited, .exit_code \u003d 0}` everywhere, you can create a helper function to return it.",
      "range": {
        "startLine": 319,
        "startChar": 44,
        "endLine": 319,
        "endChar": 73
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b0d482f_df1c4377",
        "filename": "artd/artd_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 319,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Given that the AIDL result no longer contains the status/exit code/signal, I have changed the case where `code.ok()` is false to have status `kSignaled` and signal `SIGKILL`.",
      "parentUuid": "da685a72_49b85d48",
      "range": {
        "startLine": 319,
        "startChar": 44,
        "endLine": 319,
        "endChar": 73
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16d298af_251a257e",
        "filename": "artd/artd_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 319,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T10:24:20Z",
      "side": 1,
      "message": "LGTM.",
      "parentUuid": "4b0d482f_df1c4377",
      "range": {
        "startLine": 319,
        "startChar": 44,
        "endLine": 319,
        "endChar": 73
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542a93aa_f6d13d3b",
        "filename": "artd/artd_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 1121,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "constexpr int kExitCode",
      "range": {
        "startLine": 1121,
        "startChar": 2,
        "endLine": 1121,
        "endChar": 14
      },
      "fixSuggestions": [
        {
          "fixId": "8fc9237a_86edf817",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "artd/artd_test.cc",
              "range": {
                "startLine": 1121,
                "startChar": 0,
                "endLine": 1122,
                "endChar": 0
              },
              "replacement": "  constexpr int kExitCode \u003d 1;\n"
            },
            {
              "path": "artd/artd_test.cc",
              "range": {
                "startLine": 1126,
                "startChar": 0,
                "endLine": 1127,
                "endChar": 0
              },
              "replacement": "                      Return(kExitCode)));\n"
            },
            {
              "path": "artd/artd_test.cc",
              "range": {
                "startLine": 1129,
                "startChar": 0,
                "endLine": 1130,
                "endChar": 0
              },
              "replacement": "                   Field(\u0026ArtdDexoptResult::exitCode, kExitCode),\n"
            }
          ]
        }
      ],
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a85001b_d92c9731",
        "filename": "artd/artd_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 1121,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "542a93aa_f6d13d3b",
      "range": {
        "startLine": 1121,
        "startChar": 2,
        "endLine": 1121,
        "endChar": 14
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b7c2462_957b41d0",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "I think it will be better to define a enum on the AIDL side to hold this value, and do the native enum -\u003e AIDL enum -\u003e proto enum conversion, but that\u0027s probably too much code.\n\nThat\u0027s said, I\u0027m fine with this field being a plain int for now. Please add a comment that this field holds a value of the `ExecResultStatus` enum and is for stats reporting only, since we just pass it to statsd in Java and don\u0027t interpret it ourselves. If we ever want to interpret it, we should define a proper enum instead.",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27c1303e_7df25d91",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "This comment is now obsolete, as the new PS removed these three fields from the AIDL message.",
      "parentUuid": "7b7c2462_957b41d0",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6df6838_cbceed61",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-16T10:14:09Z",
      "side": 1,
      "message": "Please add a comment about the parsable part in the non-fatal error message, including the format, the purpose, and that the status field is not interpretable.",
      "parentUuid": "27c1303e_7df25d91",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f48917a_97e3282a",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T10:24:20Z",
      "side": 1,
      "message": "I thought about this again. Actually, the statsd enum is accessible in Java, right? In this case, it is interpretable. You can say the value of the status field is one of the values in the status enum.",
      "parentUuid": "e6df6838_cbceed61",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a6cf30_54c480a3",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-18T12:50:42Z",
      "side": 1,
      "message": "I imagine this comment would now apply to the `result_info` string in `art/artd.cc`, right?",
      "parentUuid": "7f48917a_97e3282a",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41fd471e_f5b8d533",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T13:14:01Z",
      "side": 1,
      "message": "That\u0027s right. The comment would now apply to the string. It should still be written in the aidl file, as it\u0027s where the contract is defined.",
      "parentUuid": "78a6cf30_54c480a3",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce52b475_36f30c0b",
        "filename": "artd/binder/com/android/server/art/ArtdDexoptResult.aidl",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-18T14:50:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41fd471e_f5b8d533",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912ce781_7b3d64a1",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "It looks inefficient to create a ThreadPoolExecutor for every Dexopter instance. Can we put a ThreadPoolExecutor in a common place to share it among all Dexopter instances?",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 56
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f85553b4_acc9a6c6",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "I created an instance of ThreadPoolExecutor in ArtManagerLocal and propagated it through all methods that needed it - let me know whether this is the most appropriate place to put it.",
      "parentUuid": "912ce781_7b3d64a1",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 56
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a436f3d_58aa3343",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-17T15:09:06Z",
      "side": 1,
      "message": "Moved the ThreadPoolExecutor inside the Injector as stated in another comment.",
      "parentUuid": "f85553b4_acc9a6c6",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 81,
        "endChar": 56
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ae9a97a_a6f30a0f",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Please add argument comments.",
      "range": {
        "startLine": 91,
        "startChar": 43,
        "endLine": 91,
        "endChar": 98
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cb50e2b_6e118aff",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Please call `allowsCoreThreadTimeOut` to allow the thread to be recycled. ([Example](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java;l\u003d122;drc\u003d6979528e6e74677ca39932ce2712cce8e5ca32c2))",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a9fb39d_367b8f88",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cb50e2b_6e118aff",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b4410a_3e2f097b",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ae9a97a_a6f30a0f",
      "range": {
        "startLine": 91,
        "startChar": 43,
        "endLine": 91,
        "endChar": 98
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "480d4177_bf20940c",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Is it possible to report a different ExecResultStatus value when dex2oat is cancelled?",
      "range": {
        "startLine": 279,
        "startChar": 33,
        "endLine": 279,
        "endChar": 55
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c05c45f1_1ff2451f",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Shall we reuse `EXEC_RESULT_STATUS_NOT_RUN` for this purpose, or would it be better to add a new value to the `ExecResultStatus` enum?",
      "parentUuid": "480d4177_bf20940c",
      "range": {
        "startLine": 279,
        "startChar": 33,
        "endLine": 279,
        "endChar": 55
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fd96486_95dfaf7c",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-16T10:14:09Z",
      "side": 1,
      "message": "It\u0027s better to add a new value.",
      "parentUuid": "c05c45f1_1ff2451f",
      "range": {
        "startLine": 279,
        "startChar": 33,
        "endLine": 279,
        "endChar": 55
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6ae9bcb_4808556f",
        "filename": "libartservice/service/java/com/android/server/art/Dexopter.java",
        "patchSetId": 6
      },
      "lineNbr": 279,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-17T15:09:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fd96486_95dfaf7c",
      "range": {
        "startLine": 279,
        "startChar": 33,
        "endLine": 279,
        "endChar": 55
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebe6b303_6c0ca788",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Please add @NonNull or @Nullable annotations to object parameters.",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c821c1a_60038dfa",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebe6b303_6c0ca788",
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcdee696_0408b8a7",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "If you make this class something like `Dex2oatStatsReporter` and only expose a public static method that reports the stats (no `Runnable` interface), you will be able to use a lambda to call the method in `mExecutor.execute`, and you won\u0027t need all those class member fields.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 51
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "679dee30_fceca947",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "I had gone with the Runnable interface rather than the lambda solution because variables used in lambdas need to be \"effectively final\" and many of these arguments aren\u0027t (because they are initialised to 0 before the try-catch-finally block and reassigned inside it) - I made the change anyway to discuss which solution we like better by seeing how it fits in the code.",
      "parentUuid": "bcdee696_0408b8a7",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 51
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "964dad69_f6582529",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T10:24:20Z",
      "side": 1,
      "message": "Looks like it\u0027s not too much of a pain now.",
      "parentUuid": "679dee30_fceca947",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 51
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e026a9ae_89c86461",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "[These](https://cs.android.com/android/platform/superproject/main/+/main:art/libartbase/base/compiler_filter.h;l\u003d34;drc\u003d6f6758f5d8516f9193459d6019e5dfb9fa762746) are all the compiler filters we support. Others like \"error\", \"run-from-apk\", etc. are not.",
      "range": {
        "startLine": 71,
        "startChar": 12,
        "endLine": 103,
        "endChar": 99
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e077c11_e511d556",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e026a9ae_89c86461",
      "range": {
        "startLine": 71,
        "startChar": 12,
        "endLine": 103,
        "endChar": 99
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5826692_0ee84366",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Use constant strings from [ReasonMapping](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/ReasonMapping.java;l\u003d46;drc\u003d6f6758f5d8516f9193459d6019e5dfb9fa762746)?\n\nThose are the canonical reasons for dex2oat. Others like \"error\", \"vdex\", etc. are not.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 166,
        "endChar": 99
      },
      "fixSuggestions": [
        {
          "fixId": "f2da84fb_4b2b8dc9",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 23,
                "startChar": 0,
                "endLine": 23,
                "endChar": 0
              },
              "replacement": "import com.android.server.art.ArtMetricsLogger.ReasonMapping;\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 109,
                "startChar": 0,
                "endLine": 110,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.ERROR -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 111,
                "startChar": 0,
                "endLine": 112,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.FIRST_BOOT -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 114,
                "startChar": 0,
                "endLine": 115,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.BOOT_AFTER_OTA -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 117,
                "startChar": 0,
                "endLine": 118,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.POST_BOOT -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 120,
                "startChar": 0,
                "endLine": 121,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 123,
                "startChar": 0,
                "endLine": 124,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_FAST -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 126,
                "startChar": 0,
                "endLine": 127,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_BULK -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 129,
                "startChar": 0,
                "endLine": 130,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_BULK_SECONDARY -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 132,
                "startChar": 0,
                "endLine": 133,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_BULK_DOWNGRADED -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 135,
                "startChar": 0,
                "endLine": 136,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_BULK_SECONDARY_DOWNGRADED -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 138,
                "startChar": 0,
                "endLine": 139,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.BG_DEXOPT -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 141,
                "startChar": 0,
                "endLine": 142,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.AB_OTA -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 144,
                "startChar": 0,
                "endLine": 145,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INACTIVE -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 147,
                "startChar": 0,
                "endLine": 148,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.SHARED -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 150,
                "startChar": 0,
                "endLine": 151,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.INSTALL_WITH_DEX_METADATA -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 153,
                "startChar": 0,
                "endLine": 154,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.PREBUILT -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 156,
                "startChar": 0,
                "endLine": 157,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.CMDLINE -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 159,
                "startChar": 0,
                "endLine": 160,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.VDEX -\u003e\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
              "range": {
                "startLine": 161,
                "startChar": 0,
                "endLine": 162,
                "endChar": 0
              },
              "replacement": "            case ReasonMapping.BOOT_AFTER_MAINLINE_UPDATE -\u003e\n"
            }
          ]
        }
      ],
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c238d63_3c1ec315",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5826692_0ee84366",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 166,
        "endChar": 99
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312e2bec_f2f51cbc",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 197,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Is it possible to put these two cases into one statement?",
      "range": {
        "startLine": 194,
        "startChar": 12,
        "endLine": 197,
        "endChar": 100
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30348958_3eb935cd",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 197,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "We can do that by reverting back to the pre-Java 17 switch statement - for the Java 17 switch statement with return we could delete the `DexMetadata.TYPE_UNKNOWN` case and let the `default` case handle it, but the `cpplint` complains about not all values for `DexMetadata.Type` being handled.",
      "parentUuid": "312e2bec_f2f51cbc",
      "range": {
        "startLine": 194,
        "startChar": 12,
        "endLine": 197,
        "endChar": 100
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8da51c07_f609fcd3",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 197,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T10:24:20Z",
      "side": 1,
      "message": "Ah, okay, don\u0027t bother then.",
      "parentUuid": "30348958_3eb935cd",
      "range": {
        "startLine": 194,
        "startChar": 12,
        "endLine": 197,
        "endChar": 100
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0adf031e_ff066bf9",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "Will this be a good place to use Guarded Patterns? https://medium.com/@javatechie/the-evolution-of-switch-statement-from-java-7-to-java-17-4b5eee8d29b7#:~:text\u003dinteger%20%E2%80%9D%20is%20returned%20.-,Gaurded%20Patterns,-%3A",
      "range": {
        "startLine": 202,
        "startChar": 8,
        "endLine": 210,
        "endChar": 0
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28f92023_581e06b9",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "Apparently pattern matching is not enabled in Java 17:\n```\nart/libartservice/service/java/com/android/server/art/ReportMetricsTask.java:175: error: patterns in switch statements are not supported in -source 17\n            case PrimaryDexUtils.PrimaryDexInfo primaryDexInfo -\u003e primaryDexInfo.splitName() \u003d\u003d null\n```",
      "parentUuid": "0adf031e_ff066bf9",
      "range": {
        "startLine": 202,
        "startChar": 8,
        "endLine": 210,
        "endChar": 0
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77834262_640ee8c5",
        "filename": "libartservice/service/java/com/android/server/art/ReportMetricsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 210,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-18T10:24:20Z",
      "side": 1,
      "message": "Got it.",
      "parentUuid": "28f92023_581e06b9",
      "range": {
        "startLine": 202,
        "startChar": 8,
        "endLine": 210,
        "endChar": 0
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39229888_9110aa98",
        "filename": "libartservice/service/java/com/android/server/art/model/DexMetadata.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-09-10T15:44:35Z",
      "side": 1,
      "message": "The class is not an API. Do you need this line?\n\nHere and below.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 76
      },
      "fixSuggestions": [
        {
          "fixId": "5d919e04_3771af35",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/model/DexMetadata.java",
              "range": {
                "startLine": 26,
                "startChar": 0,
                "endLine": 27,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f3f7591_543fe15e",
        "filename": "libartservice/service/java/com/android/server/art/model/DexMetadata.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-09-12T17:04:09Z",
      "side": 1,
      "message": "You are right, they are not needed - I had added them as I was seeing errors in compilation in previous iterations for this class, but then the class changed but the @SuppressLint stayed.",
      "parentUuid": "39229888_9110aa98",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 76
      },
      "revId": "2960d590eafe21ae6ffcbfc388758c10a0de1645",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}