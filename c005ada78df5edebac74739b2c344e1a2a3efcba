{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4c9a6a08_8fae7420",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 0,
      "message": "Why is this dropped?",
      "range": {
        "startLine": 57,
        "startChar": 57,
        "endLine": 57,
        "endChar": 59
      },
      "revId": "c005ada78df5edebac74739b2c344e1a2a3efcba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7382505d_b0455dbd",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 14
      },
      "lineNbr": 90,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 0,
      "message": "The point with this was to ensure either all or none are set. I still think that\u0027s a good invariant.",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 90,
        "endChar": 21
      },
      "revId": "c005ada78df5edebac74739b2c344e1a2a3efcba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89035060_e1a410c3",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 0,
      "message": "Can we please keep this fatal error? It provides a useful invariant for callers, and in case they really do want to only opportunistically load the library they can call TryLoadLibdexfileExternal first. And more importantly, it provides a lot better error message than ADexFile_Error_toString(ADEXFILE_ERROR_MISSING_LIBRARY).",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 44
      },
      "revId": "c005ada78df5edebac74739b2c344e1a2a3efcba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18ba9dd6_b14ba2db",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T21:09:41Z",
      "side": 0,
      "message": "Hmmm... I am not sure I want to FATAL crash the process by default.\nI would rather return error, and let the caller FATAL crash if desired.",
      "parentUuid": "89035060_e1a410c3",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 44
      },
      "revId": "c005ada78df5edebac74739b2c344e1a2a3efcba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ff9171c_baace1e4",
        "filename": "libdexfile/external/dex_file_supp.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T21:32:00Z",
      "side": 0,
      "message": "We know de-facto by now that this doesn\u0027t cause any spurious aborts - this is the kind of thing that can be disruptive to introduce but useful when already present. I\u0027ve mentioned several benefits with this - what would be the win with dropping it? I don\u0027t see any objective argument.\n\nAnd to emphasize, getting a good message that includes the dlerror() is really valuable to debug library loading issues. I\u0027m strongly opposed to regressing on that.",
      "parentUuid": "18ba9dd6_b14ba2db",
      "range": {
        "startLine": 102,
        "startChar": 4,
        "endLine": 102,
        "endChar": 44
      },
      "revId": "c005ada78df5edebac74739b2c344e1a2a3efcba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}