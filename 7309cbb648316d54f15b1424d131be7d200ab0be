{
  "comments": [
    {
      "key": {
        "uuid": "438406cc_e2dd06e5",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 489,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-26T12:58:02Z",
      "side": 1,
      "message": "I don\u0027t know what reg codes are expected. Be careful that the VIXL register codes are different from the ART arm64 codes.\n\nSee `VIXLRegCodeFromART()` and its counterpart in `compiler/optimizing/common_arm64.h`.\n\nI suspect SP and ZR registers are not expected here. If that is the case we can do without conversion, but a DCHECK will catch any future errors and inform copy-pasters.",
      "range": {
        "startLine": 489,
        "startChar": 33,
        "endLine": 489,
        "endChar": 43
      },
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438406cc_c22b2226",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 489,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-03-26T13:57:23Z",
      "side": 1,
      "message": "Done. DCHECK added.  SP and ZR registers are indeed not expected anyway.",
      "parentUuid": "438406cc_e2dd06e5",
      "range": {
        "startLine": 489,
        "startChar": 33,
        "endLine": 489,
        "endChar": 43
      },
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43116641_e37e402b",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 498,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-26T12:58:02Z",
      "side": 1,
      "message": "I suggest using Peek/PokeCPURegList. These helpers guarantee that the higher indexed registers are stored at higher memory addresses.\n\nSomething like:\n\n__ PokeCPURegList(registers, offset);\nwhile (registers.IsEmpty()) {\n  const CPURegister\u0026 reg \u003d registers.PopLowestIndex();\n  GetAssembler()-\u003ecfi().RelOffset(DWARFReg(reg, offset));\n  offset +\u003d size;\n}",
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438406cc_2278ce40",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 498,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-03-26T13:57:23Z",
      "side": 1,
      "message": "That would generate the cfi at the wrong locations.  The cfi needs to be generated just after the corresponding stp.\nIt is not big deal either way, but I am trying to be precise with the generated cfi.",
      "parentUuid": "43116641_e37e402b",
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438406cc_c28fa2a6",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 498,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-26T14:33:20Z",
      "side": 1,
      "message": "Nit: Generally we use `__` for (macro)assembly. Here preferred usage here would be `GetVIXLAssembler()-\u003eStackPointer()`.",
      "range": {
        "startLine": 498,
        "startChar": 34,
        "endLine": 498,
        "endChar": 51
      },
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23147232_427e08e0",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 498,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-26T14:33:20Z",
      "side": 1,
      "message": "Ok I was worried this was the case.",
      "parentUuid": "438406cc_2278ce40",
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43116641_c38b3cb3",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 515,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-26T12:58:02Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438406cc_427dd22f",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 515,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-03-26T13:57:23Z",
      "side": 1,
      "message": "Ditto",
      "parentUuid": "43116641_c38b3cb3",
      "revId": "7309cbb648316d54f15b1424d131be7d200ab0be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}