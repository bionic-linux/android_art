{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ab779b_9ffdde2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "Is that WAI or just a temporary limitation?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90437b90_60600d5e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "This is WAI. I don\u0027t know if the mainline engprod or atest team have any plans for removing bracket syntax. @kunniu@google.com, @yuexima@google.com if they have extra info. @rpl@google.com prob also have context. This step should be automated, and atest should understand the mainline module even if this is not specified in test mapping IMHO.\n\nBracket triggers 2 things for coverage in atest: atest will install the mainline module to the device, in this case a coverage instrumented art module. Secondly, when generating coverage reports, the whole ART module source code will be used to, otherwise, only the test dependencies will show up in the report list, see https://b.corp.google.com/issues/352560488#comment21.",
      "parentUuid": "b1ab779b_9ffdde2b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2af7f6af_362fed17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T12:04:04Z",
      "side": 1,
      "message": "Thanks, yes I understand why the bracket syntax is useful. What I was wondering about is the need to reflect every `atest` invocation we may need with a stanza in a `TEST_MAPPING` file. Can\u0027t atest be made able to carry out the test run based on the command line invocation alone?",
      "parentUuid": "90437b90_60600d5e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85950913_7e903c72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-11-01T12:39:31Z",
      "side": 1,
      "message": "I suggest looking at the `art-mainline-presubmit` test group, which does not require the bracket syntax.",
      "parentUuid": "2af7f6af_362fed17",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f94fc404_a2817713",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T17:16:01Z",
      "side": 1,
      "message": "\u003e Can\u0027t atest be made able to carry out the test run based on the command line invocation alone?\n\nI agree it is clumsy. I don\u0027t have a whole picture of how much the work it is. But from @kunniu@google.com to fully remove the bracket depends on the Test Config simplification project which doesn\u0027t have a concrete timeline. I can ask around and dig into atest logic to understand more.\n\n\u003e I suggest looking at the art-mainline-presubmit test group, which does not require the bracket syntax.\n\nWhat\u0027s the difference between `mainline-presubmit` and `art-mainline-presubmit`?",
      "parentUuid": "85950913_7e903c72",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7197aad_d7371fa4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T17:47:02Z",
      "side": 1,
      "message": "\u003e depends on the Test Config simplification project which doesn\u0027t have a concrete timeline.\n\nRight, that\u0027s what I meant with \"temporary\" - for now(*) we need to put these stanzas in some TEST_MAPPING file to allow the bracket syntax to work on the atest command line. Fair enough.\n\n\u003e What\u0027s the difference between mainline-presubmit and art-mainline-presubmit?\n\n`art-mainline-presubmit` is the module specific group that\u0027s replacing `mainline-presubmit` and doesn\u0027t use the bracket syntax. But given the goal here is to enable the bracket syntax on the atest command line rather than actually running anything in presubmit, it\u0027s probably not applicable.\n\n*) I.e. until some unspecified point in the future, which can be arbitrarily far away.",
      "parentUuid": "f94fc404_a2817713",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bc2ef64_87ac60c7",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "This test is for libcore. Can it go into `libcore/TEST_MAPPING` instead?\n\nAlso, this file is autogenerated, so any changes in it need to into `art/test/utils/regen-test-files`.",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1dc8d8_ab0c5787",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "Gotcha, thanks!",
      "parentUuid": "8bc2ef64_87ac60c7",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca98382_e18a4bef",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T12:04:04Z",
      "side": 1,
      "message": "I still wonder, why not put it in `libcore/TEST_MAPPING` instead? Even though there\u0027s no effect on presubmits, that\u0027s the code base the test belongs to, and it\u0027d avoid adding special cases to the regen script. (Both `art/` and `libcore/` are core components of the ART module.)",
      "parentUuid": "af1dc8d8_ab0c5787",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ca8ea1c_4400cde3",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-11-01T12:39:31Z",
      "side": 1,
      "message": "As Martin said, the right place to add these these tests module to the `mainline-presubmit` test group of a `TEST_MAPPING` file is probably under `libcore/`. As a matter of fact, these test modules are [already present in some test groups of `TEST_MAPPING` files under `libcore/`](https://cs.android.com/search?q\u003dfile:TEST_MAPPING%20CtsLibcoreTestCases%7CCtsLibcoreOjTestCases\u0026sq\u003d\u0026ss\u003dandroid%2Fplatform%2Fsuperproject%2Fmain).\n\nAdditionally, the last time we discussed the possibility to run these test modules in their entirety during presubmits with the Android Test Core team, [their long run times were deemed as an issue](https://b.corp.google.com/issues/254276384#comment1).\n\nIs this change motivated by the project to enable ART Module code (line) coverage presubmits on code under `art/` using Libcore tests? If so, we should check whether those tests actually provide meaningful line coverage of ART source code, which is unclear to me.",
      "parentUuid": "fca98382_e18a4bef",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd807367_2a7614b4",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T16:59:20Z",
      "side": 1,
      "message": "\u003e Is this change motivated by the project to enable ART Module code (line) coverage presubmits on code under art/ using Libcore tests?\n\nNo, this change is to automate the atest workflow with ART module. Like I wrote in the description. This has nothing to do with presubmit. Like I said in the description, this shouldn\u0027t impact presubmit IIUC: This change shouldn\u0027t affect the mainline presubmit runs since the mainline-presubmit tag is deprecated: https://buganizer.corp.google.com/issues/368079676#comment4",
      "parentUuid": "1ca8ea1c_4400cde3",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2a14339_d72d7797",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T17:47:02Z",
      "side": 1,
      "message": "Thanks for the clarification.\n\nMy question about moving this to [`libcore/TEST_MAPPING`](https://cs.android.com/android/platform/superproject/main/+/main:libcore/TEST_MAPPING) remains though. That\u0027d be a better place if possible.",
      "parentUuid": "dd807367_2a7614b4",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c060f7f5_94ddb3cc",
        "filename": "build/flags/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "Is this change related?",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5fbe511_803bf106",
        "filename": "build/flags/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "No. I will remove the change.",
      "parentUuid": "c060f7f5_94ddb3cc",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}