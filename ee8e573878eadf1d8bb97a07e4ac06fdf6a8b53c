{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ab779b_9ffdde2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "Is that WAI or just a temporary limitation?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90437b90_60600d5e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "This is WAI. I don\u0027t know if the mainline engprod or atest team have any plans for removing bracket syntax. @kunniu@google.com, @yuexima@google.com if they have extra info. @rpl@google.com prob also have context. This step should be automated, and atest should understand the mainline module even if this is not specified in test mapping IMHO.\n\nBracket triggers 2 things for coverage in atest: atest will install the mainline module to the device, in this case a coverage instrumented art module. Secondly, when generating coverage reports, the whole ART module source code will be used to, otherwise, only the test dependencies will show up in the report list, see https://b.corp.google.com/issues/352560488#comment21.",
      "parentUuid": "b1ab779b_9ffdde2b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2af7f6af_362fed17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T12:04:04Z",
      "side": 1,
      "message": "Thanks, yes I understand why the bracket syntax is useful. What I was wondering about is the need to reflect every `atest` invocation we may need with a stanza in a `TEST_MAPPING` file. Can\u0027t atest be made able to carry out the test run based on the command line invocation alone?",
      "parentUuid": "90437b90_60600d5e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bc2ef64_87ac60c7",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "This test is for libcore. Can it go into `libcore/TEST_MAPPING` instead?\n\nAlso, this file is autogenerated, so any changes in it need to into `art/test/utils/regen-test-files`.",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1dc8d8_ab0c5787",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "Gotcha, thanks!",
      "parentUuid": "8bc2ef64_87ac60c7",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca98382_e18a4bef",
        "filename": "TEST_MAPPING",
        "patchSetId": 3
      },
      "lineNbr": 2955,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-01T12:04:04Z",
      "side": 1,
      "message": "I still wonder, why not put it in `libcore/TEST_MAPPING` instead? Even though there\u0027s no effect on presubmits, that\u0027s the code base the test belongs to, and it\u0027d avoid adding special cases to the regen script. (Both `art/` and `libcore/` are core components of the ART module.)",
      "parentUuid": "af1dc8d8_ab0c5787",
      "range": {
        "startLine": 2955,
        "startChar": 6,
        "endLine": 2955,
        "endChar": 57
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c060f7f5_94ddb3cc",
        "filename": "build/flags/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-10-30T11:48:20Z",
      "side": 1,
      "message": "Is this change related?",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5fbe511_803bf106",
        "filename": "build/flags/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1884480
      },
      "writtenOn": "2024-11-01T05:14:49Z",
      "side": 1,
      "message": "No. I will remove the change.",
      "parentUuid": "c060f7f5_94ddb3cc",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 43
      },
      "revId": "ee8e573878eadf1d8bb97a07e4ac06fdf6a8b53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}