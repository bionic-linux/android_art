{
  "comments": [
    {
      "key": {
        "uuid": "83fb5e85_6c795b7d",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2237,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-03-31T08:00:37Z",
      "side": 1,
      "message": "It looks like this is already implemented in\n./compiler/dex/quick/x86/int_x86.cc.\n\nMaybe we can share the code?\nAt some point we will want to do that for other archs.",
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_5f313b1f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2238,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "can this be used for longs as well? We currently don\u0027t. Looks sensible to add support but we can do it in a follow CL. For now, add a TODO.",
      "range": {
        "startLine": 2238,
        "startChar": 21,
        "endLine": 2238,
        "endChar": 28
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_00cb569e",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2320,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "add a dcheck in the beginning as documentation that this applies when the second arg is a constant.",
      "range": {
        "startLine": 2320,
        "startChar": 12,
        "endLine": 2320,
        "endChar": 32
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_1f12d38f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2322,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "DCHECK",
      "range": {
        "startLine": 2322,
        "startChar": 2,
        "endLine": 2322,
        "endChar": 7
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3a94260_ae9276d1",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2338,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "__ testl(i1, i1)",
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3ae3665_acca87c5",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2350,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "__ xorl(o, o)",
      "range": {
        "startLine": 2350,
        "startChar": 9,
        "endLine": 2350,
        "endChar": 13
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_40171e7f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2352,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "why not\n\nif (instruction-\u003eIsRem()) {\n  __ movl(o, Immediate(0));\n} else {\n  __ movl(o, i1);\n  if (imm \u003d\u003d -1) {\n     __ negl(o);\n  }\n}\n?\n     -",
      "range": {
        "startLine": 2324,
        "startChar": 2,
        "endLine": 2352,
        "endChar": 3
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3f1d6a3_2ebaa704",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "I think you can handle this case without a cmp. I don\u0027t see how this is special.",
      "range": {
        "startLine": 2371,
        "startChar": 2,
        "endLine": 2371,
        "endChar": 15
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3a94260_0e962ac9",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2372,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "__ testl(i1, i1)",
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3b7bab3_f0da96ea",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2375,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "xorl(o, o)",
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_5f47fb7f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2383,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "hmm, does this produce the right result if the left side is negative?",
      "range": {
        "startLine": 2372,
        "startChar": 0,
        "endLine": 2383,
        "endChar": 33
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_a0d7e242",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2416,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "the if is not needed here. else seems to be enough. right?",
      "range": {
        "startLine": 2416,
        "startChar": 15,
        "endLine": 2416,
        "endChar": 17
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_fff827c0",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2417,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "for this branch: I think this is long enough to deserve a separate function. e.g. GenerateDivRemWithGenericConstant, or other suitable name",
      "range": {
        "startLine": 2417,
        "startChar": 10,
        "endLine": 2417,
        "endChar": 23
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_e0fbaaba",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2433,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "you should put this as close as possible to the condition.",
      "range": {
        "startLine": 2433,
        "startChar": 10,
        "endLine": 2433,
        "endChar": 39
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3ae3665_8ce6ab58",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2443,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "tstl(i1, i1)",
      "range": {
        "startLine": 2443,
        "startChar": 13,
        "endLine": 2443,
        "endChar": 17
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3a94260_ee506e66",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2446,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "xorl(res, res)",
      "range": {
        "startLine": 2446,
        "startChar": 13,
        "endLine": 2446,
        "endChar": 17
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3a94260_31c4ab90",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2543,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "Do we need to have a fixed EBX, or is any register okay?",
      "range": {
        "startLine": 2543,
        "startChar": 54,
        "endLine": 2543,
        "endChar": 57
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_7f0d176c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2543,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-03-30T17:43:37Z",
      "side": 1,
      "message": "is EBX mandatory for any reasons? If yes, document why, if not, use RequireRegister. Same for the rem.",
      "range": {
        "startLine": 2543,
        "startChar": 54,
        "endLine": 2543,
        "endChar": 57
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3b7bab3_b0e41ea9",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2614,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-03-30T17:33:25Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2614,
        "startChar": 54,
        "endLine": 2614,
        "endChar": 57
      },
      "revId": "cbcd46f1130db23b2a7427f7b99a07e89c0c3af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}