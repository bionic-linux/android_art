{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f9a1df1_0a0f7607",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-15T11:04:59Z",
      "side": 1,
      "message": "Is that the underlying allocator for `dlopen`? Are we sure that dlopen never tags .text and other sections?",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 22
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e50fe4f_111f77d3",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-06-15T11:31:08Z",
      "side": 1,
      "message": "That is the top-level allocator we use for JIT, with the underlying memory being mmaped.  The argument here that neither of those causes tagging.\n\nSeparately, I presume `dlopen`ed code doesn\u0027t get tagged.\n\nFinally, the malloced code in the test was tagged, but that path is removed in this CL, making the untag here redundant.",
      "parentUuid": "9f9a1df1_0a0f7607",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 22
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "579989d7_fb0757db",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-06-15T18:09:02Z",
      "side": 1,
      "message": "Yes, dlopened code gets file-backed memory mapped. File backed memory doesn\u0027t support MTE. We also don\u0027t instrument it with HWASan.",
      "parentUuid": "1e50fe4f_111f77d3",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 22
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f7ac1d_77437bc7",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-16T07:06:48Z",
      "side": 1,
      "message": "Should we actually mention memmap() in addition (or instead of) mspace_memalign?",
      "parentUuid": "579989d7_fb0757db",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 22
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a7fdd1e_edc81b22",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 123,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-15T11:04:59Z",
      "side": 1,
      "message": "`UINT64_C(1)`",
      "range": {
        "startLine": 123,
        "startChar": 70,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "771e3f92_077b1241",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 123,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-06-15T11:31:08Z",
      "side": 1,
      "message": "Oh, I have not seen that before.  I assume Florian just copy-pasted my old code.",
      "parentUuid": "8a7fdd1e_edc81b22",
      "range": {
        "startLine": 123,
        "startChar": 70,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99960294_49223ba8",
        "filename": "runtime/oat_quick_method_header.h",
        "patchSetId": 7
      },
      "lineNbr": 123,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-06-15T18:09:02Z",
      "side": 1,
      "message": "Done. And yes, this is indeed copy-pasted from the old memory_tool.h.",
      "parentUuid": "771e3f92_077b1241",
      "range": {
        "startLine": 123,
        "startChar": 70,
        "endLine": 123,
        "endChar": 74
      },
      "revId": "6c83d32c0d01d8821af186724b43077bb6bdcf9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}