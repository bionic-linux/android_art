{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d6b34ae2_d1681167",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-17T13:35:30Z",
      "side": 1,
      "message": "PTAL. Thanks!",
      "revId": "3609aac3b04ae7726c4353f70a294122d117790d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7758728_fe7640cf",
        "filename": "runtime/entrypoints/quick/quick_alloc_entrypoints.cc",
        "patchSetId": 17
      },
      "lineNbr": 77,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-17T13:35:30Z",
      "side": 1,
      "message": "Here and in the rest of the places, we could just trigger a deoptimize right here but in some of these runtime functions I guess the stack isn\u0027t set up for walking. For ex this check here could fail: https://cs.android.com/android/platform/superproject/+/master:art/runtime/stack.cc;l\u003d884; \n\nI don\u0027t think there is anything too difficult, and I also wanted to keep it consistent with the existing behaviour. We do a similar thing in QuickToInterpreterBridge.",
      "revId": "3609aac3b04ae7726c4353f70a294122d117790d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a025e204_963659bb",
        "filename": "runtime/thread.cc",
        "patchSetId": 17
      },
      "lineNbr": 3702,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-17T13:35:30Z",
      "side": 1,
      "message": "I am not entirely sure why we haven\u0027t seen any problems with this earlier. Maybe because we always do full fragment deopts and ArtMethod::Invoke clears this in DeoptimizeWithDeoptimizeException. If we happen to do a partial fragment we enter QuickToInterpreterBridge which doesn\u0027t clear this exception. That could cause problems when we start executing interpreter code and interpreter tries to handle it as a regular exception.",
      "revId": "3609aac3b04ae7726c4353f70a294122d117790d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}