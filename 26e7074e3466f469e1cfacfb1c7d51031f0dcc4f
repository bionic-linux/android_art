{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "451ae231_db3e67fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2022-01-13T02:05:01Z",
      "side": 1,
      "message": "This is something that could quite easily break the userdebug debug-anything behavior which (due to it\u0027s userdebug dependency) isn\u0027t tested very well. I\u0027d make sure that you can still JDWP to random processes and everything still seems to work before merging this.",
      "revId": "26e7074e3466f469e1cfacfb1c7d51031f0dcc4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942aef81_8751187c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-01-13T10:16:20Z",
      "side": 1,
      "message": "Thanks Alex! I will tried it with jdb + debuggable youtube app. I haven\u0027t tested by setting breakpoints. I will try that too. I will try to test it on non-debuggable apps too. Apart from breakpoints are there any other features that I should test? \n\nDo you think running jvmti tests in art would catch if anything is broken? If those aren\u0027t sufficient do you think we can somehow add more tests (even if it is outside of art) so that we can catch any regressions. I am planning to do few more changes around this area and want to make sure I don\u0027t break anything.\n\nThis CL by itself shouldn\u0027t break things much because we force interpreter when we enable any feature that needs interpreter. The one thing that breaks though is setting breakpoints (and possibly other features) in non-debuggable apps due to inlining. I will update the CL to fix that.",
      "parentUuid": "451ae231_db3e67fd",
      "revId": "26e7074e3466f469e1cfacfb1c7d51031f0dcc4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e82eb13_69223a7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2022-01-13T17:33:20Z",
      "side": 1,
      "message": "Trying with a non-debuggable app running on a userdebug phone is something you should definitely do. Also try attaching to system_server on a userdebug device. \n\nBreakpoints, stepping, and locals are the main things I\u0027d test.\n\nI tried to make the JVMTI tests cover as much as I could but I\u0027m not 100% confident it would catch this sort of thing. Since the interaction between userdebug and the zygote isn\u0027t really something we have a good way to test without setting it up directly in the test case (there\u0027s no mode switch like jit-on-first-use for it). The fact that userdebug+non-debuggable is purely best-effort and is not expected to always implement JVMTI correctly (eg inlined+in-progress methods might skip breakpoints, locals aren\u0027t always accessible, etc) makes it even more challenging (note that all of these things do usually work). IIRC I did that with a few tests so there is at least a minimal sanity check but it\u0027s far from perfect.\n\nHonestly I think this is mostly fine but be sure to keep an eye on the bug tracker. When I was doing the debugger JVMTI rewrite it took several attempts to get it to stick as system-server people kept hitting weird edge-cases which is how there ended up being 3 very similar checks all right next to one another.",
      "parentUuid": "942aef81_8751187c",
      "revId": "26e7074e3466f469e1cfacfb1c7d51031f0dcc4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79fa3915_700b4dd1",
        "filename": "openjdkjvmti/deopt_manager.cc",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-01-13T10:26:04Z",
      "side": 1,
      "message": "One line.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "26e7074e3466f469e1cfacfb1c7d51031f0dcc4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fc08cb0_7c617794",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 3
      },
      "lineNbr": 293,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-01-13T10:26:04Z",
      "side": 1,
      "message": "Unrelated (here and other archs) ?",
      "revId": "26e7074e3466f469e1cfacfb1c7d51031f0dcc4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}