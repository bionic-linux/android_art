{
  "comments": [
    {
      "key": {
        "uuid": "1709fc9d_5dfc8e89",
        "filename": "runtime/base/systrace.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-12-06T22:33:32Z",
      "side": 1,
      "message": "c_str strikes again\n\nit could take any type that can be output to ostream\n\n  if(ATRACE_ENABLED()) {\n    std::stringstream ss;\n    ss \u003c\u003c fn();\n    ATRACE_BEGIN(ss.str().c_str());\n  }",
      "revId": "e8896959f2a87cbbd2177af7ac97d2617e10d1ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f6e96a8_a35345aa",
        "filename": "runtime/base/systrace.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-12-06T22:33:32Z",
      "side": 1,
      "message": "This is more like an expr.\n\nAlso if we\u0027re just going to use it like an fprintf like in your example, it should probably be like SCOPED_TRACE_FMT(fmtstr, ...) PrintStringf(fmtstr, ...)",
      "range": {
        "startLine": 47,
        "startChar": 21,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "e8896959f2a87cbbd2177af7ac97d2617e10d1ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}