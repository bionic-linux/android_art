{
  "comments": [
    {
      "key": {
        "uuid": "63e409ed_393f414e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-09-14T16:09:39Z",
      "side": 1,
      "message": "Having the table for the classpath will speed up compilation for apks using it :) (e.g. gms modules). Multidex should have 0 benefit from it since the classpath table should be empty. I guess the speed up you report is because RecordClassStatus in the driver will update compiled_classes_.\n\nUpdate the comment to make it clear which part drives the improvement.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 18
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d6ae3d_c1d92ec3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-15T11:57:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63e409ed_393f414e",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 18
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91d5cc82_824dcc46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:04:10Z",
      "side": 1,
      "message": "Do we need a new test to cover this change, or is the existing test suite enough?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 13
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20a0892f_179090b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-15T11:57:14Z",
      "side": 1,
      "message": "go/lem is half covering for it. I\u0027ll think about a new gtest once FB on go/lem is fixed.",
      "parentUuid": "91d5cc82_824dcc46",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 13
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd21260b_89a24d8b",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 2903,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Note for later refactoring: ClassReference should be turned into a proper data structure (like DexFileReference, instead of being an std::pair.",
      "range": {
        "startLine": 2903,
        "startChar": 53,
        "endLine": 2903,
        "endChar": 67
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacac3ff_1aeef352",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 2906,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Note for later refactoring: Make DexFileReference directly constructible from a ClassReference.",
      "range": {
        "startLine": 2906,
        "startChar": 27,
        "endLine": 2906,
        "endChar": 43
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "868decc8_6e72b6fc",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 5
      },
      "lineNbr": 3075,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Refactor this logic (also used in CompilerDriver::SetDexFilesForOatFile) in its own method?",
      "range": {
        "startLine": 3071,
        "startChar": 0,
        "endLine": 3075,
        "endChar": 3
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba922092_8832b293",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Document this new method.",
      "range": {
        "startLine": 109,
        "startChar": 7,
        "endLine": 109,
        "endChar": 27
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f6c36ee_e80f4cf8",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-15T11:57:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba922092_8832b293",
      "range": {
        "startLine": 109,
        "startChar": 7,
        "endLine": 109,
        "endChar": 27
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9263b2bf_dfbebba1",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 490,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Move that line before line 492?",
      "range": {
        "startLine": 490,
        "startChar": 2,
        "endLine": 490,
        "endChar": 81
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34faf067_d12809b3",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 490,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-15T11:57:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9263b2bf_dfbebba1",
      "range": {
        "startLine": 490,
        "startChar": 2,
        "endLine": 490,
        "endChar": 81
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3ed04aa_aebb7b16",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 493,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Document this new member.",
      "range": {
        "startLine": 493,
        "startChar": 18,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6837f18d_0b9b34a8",
        "filename": "compiler/driver/compiler_driver.h",
        "patchSetId": 5
      },
      "lineNbr": 493,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-15T11:57:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3ed04aa_aebb7b16",
      "range": {
        "startLine": 493,
        "startChar": 18,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1a24b6_beb34391",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 5
      },
      "lineNbr": 1868,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-14T10:00:12Z",
      "side": 1,
      "message": "Note for later refactoring: Every time I\u0027m seeing this method (and similarly named ones in art::CompilerOptions and art::CompilerCallbacks) I have to check its definition to make sure it means \"Are we compiling a boot image?\". Should we rename it as `IsCompilingBootImage` for the sake of disambiguation?",
      "range": {
        "startLine": 1868,
        "startChar": 9,
        "endLine": 1868,
        "endChar": 20
      },
      "revId": "1837b1115f1fbea3de9f7ea9dfee7534e691ce29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}