{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3b6361ea_f3eaf3ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-18T21:06:32Z",
      "side": 1,
      "message": "I\u0027ve looked at all of PS8 now. A few more comments.",
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "991ed63f_69b0337a",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 8
      },
      "lineNbr": 354,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-18T21:06:32Z",
      "side": 1,
      "message": "It feels odd to me to have to invoke these as static member functions of MemMap, when thee semantics really have nothing to do with MemMap. Can we leave them as stand-alone functions, probably friends of MemMap, even if the implementation relies on MemMap stuff?\n\nI have a little of that concern with getPageSize, too. But that seems a bit more related, and I can live with it as is.",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 354,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98f4bde1_23dbb8d3",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 8
      },
      "lineNbr": 354,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-12-19T20:05:25Z",
      "side": 1,
      "message": "This part of the change is now reverted - the functions indeed don\u0027t have to be member functions, as the MemMap::GetPageSize is available to any function.\n\nThe page size itself could be extracted into a separate class e.g. PageSize if preferable, however to avoid adding calls to PageSize::Init in those places where MemMap::Init is currently called, it might still be optimal to invoke the PageSize::Init from MemMap::Init (MemMap::Init is dependent on the page size value)",
      "parentUuid": "991ed63f_69b0337a",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 354,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45a87bb9_6ca11d84",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 8
      },
      "lineNbr": 354,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-20T20:42:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "98f4bde1_23dbb8d3",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 354,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b44fc462_a3de914d",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 8
      },
      "lineNbr": 1018,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-18T21:06:32Z",
      "side": 1,
      "message": "I guess all uses of these are in the CMC collector, and hence Java heap-related? If so, this seems fine. I worry about moving such things for implementation convenience reasons.",
      "range": {
        "startLine": 1018,
        "startChar": 2,
        "endLine": 1018,
        "endChar": 51
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3558db86_1e01395d",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 8
      },
      "lineNbr": 1018,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-12-19T20:05:25Z",
      "side": 1,
      "message": "I believe so - they\u0027re used only in MarkCompact in runtime/gc/collector/mark_compact.cc and GcVisitedArenaPool in runtime/base/gc_visited_arena_pool.cc where the latter also appears to be a part of the userfaultfd GC implementation.",
      "parentUuid": "b44fc462_a3de914d",
      "range": {
        "startLine": 1018,
        "startChar": 2,
        "endLine": 1018,
        "endChar": 51
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e775384a_f8362055",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 8
      },
      "lineNbr": 1018,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-20T20:42:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3558db86_1e01395d",
      "range": {
        "startLine": 1018,
        "startChar": 2,
        "endLine": 1018,
        "endChar": 51
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca469b52_ca466958",
        "filename": "runtime/jni/local_reference_table.h",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-18T21:06:32Z",
      "side": 1,
      "message": "This only seem to be called from member functions? Can we use num_lrt_slots instead?\n\nI found this code syntactically hard to read, in part because of our well-established, though perhaps  unfortunate, convention of not indenting preprocessor commands. If you do have to leave this, please either remove the define and instead copy the expression, or put spaces around the function definition, whichever you prefer.",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4f7aa4f_f2601eec",
        "filename": "runtime/jni/local_reference_table.h",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-12-19T20:05:25Z",
      "side": 1,
      "message": "The only function which couldn\u0027t access the `num_lrt_slots_` was the static `GetIndex` function. I changed it, so it is now a usual member function and can access the `num_lrt_slots_`. This allowed to remove the `ComputeNumLrtSlots` function. I also removed the macro and copied the expression for `num_lrt_slots_` initialization - while this results in a slight code duplication, it is more readable and hopefully easy to maintain as the two expressions are located very near to each other.",
      "parentUuid": "ca469b52_ca466958",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "976fea72_226aa848",
        "filename": "runtime/jni/local_reference_table.h",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-20T20:42:04Z",
      "side": 1,
      "message": "Works for me. I think this is much easier to read.",
      "parentUuid": "d4f7aa4f_f2601eec",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 234,
        "endChar": 3
      },
      "revId": "050517434f7d5565c8a479d24a0961ca73a00925",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}