{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1fce1230_1dfac2f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-09-28T14:31:27Z",
      "side": 1,
      "message": "We cannot fix R at this point, which will abort if a boot classpath class fails to verify. That could make a case for keeping the current behavior in order to find any issue quicker.\n\nOn the other hand, mainline should test the same level between master and R devices, so I\u0027m tempted to let this \"fix\" in. WDYT?",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d78040c_3f56a686",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-09-28T15:02:36Z",
      "side": 1,
      "message": "Looking at the bug b/155852343 that was the reason to add hard failure, it\u0027s complex and not related to Mainline, so I\u0027m in favor of keeping the current behavior if it helps finding such things.\n\nCan you explain in more detail why with Mainline BCP classes can hard fail verification, and before Mainline they couldn\u0027t? How likely is that? That info may also be useful in the commit message.",
      "parentUuid": "1fce1230_1dfac2f1",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0ca11f_a3640ed7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-09-28T15:12:15Z",
      "side": 1,
      "message": "Ah, I had to refresh my mind on b/155852343, totally forgot about that one. I think that just ends up being an accident. Down the line, the issue would have been found, and it has through other means in the bug (failing checking that there is no exception pending).\n\nMainline BCP classes can have code that works / verifies on a certain dessert X, but that doesn\u0027t on Y (see b/195608856 for an example). That\u0027s OK as long as on Y the code does not execute.\n\nThe problem with the code in jit.cc is that it will try to verify *all* classes, even the ones which are not supposed to run. So we should accept such failures.",
      "parentUuid": "3d78040c_3f56a686",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bbdc97f_02767e7d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-09-28T15:32:41Z",
      "side": 1,
      "message": "I see. But then I don\u0027t understand what choice we have other than to merge this patch. Make it conditional depending on the platform version and turn on only for S and higher?",
      "parentUuid": "aa0ca11f_a3640ed7",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40c0b486_c7fa4004",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-09-28T17:41:45Z",
      "side": 1,
      "message": "We can say we never want these hard failures to happen and module teams need to workaround it (they already will need to workaround it for R).\n\nConditional on the platform doesn\u0027t apply here as we cannot update ART on R.",
      "parentUuid": "2bbdc97f_02767e7d",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76e0af68_6ee0ad60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-09-29T12:30:54Z",
      "side": 1,
      "message": "Since we don\u0027t know ahead of time about which classes that are supposed to run, it seems reasonable enough to accept the failures here.",
      "parentUuid": "40c0b486_c7fa4004",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "790b16e4_b32ad899",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-09-29T12:53:58Z",
      "side": 1,
      "message": "TBH I don\u0027t have a strong opinion. I generally agree with Orion, but for more input we can also wait a few days for vmarko@, maybe he will recall a good reason to not relax this yet.",
      "parentUuid": "76e0af68_6ee0ad60",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a78e260_a67ccde3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-10-06T07:29:19Z",
      "side": 1,
      "message": "Historically, there has been strong desire to avoid hard failures in the BCP. It was originally enforced by dex2oat when building the boot image when it was monolithic and contained the entire BCP. I think there is still value in this requirement and I remember some discussions about having an on-device test for this before rebooting for ART Module update.",
      "parentUuid": "790b16e4_b32ad899",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b27ffc88_f178c305",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-07T12:38:59Z",
      "side": 1,
      "message": "Yes, but that was before realizing what can constitute a hard failure. Imagine this scenario, which happened in production:\n\nNew code in T, not executed in S (but still shipping on S through a mainline update), relies on the fact a class that was present in S moved from \u0027final\u0027 to \u0027non-final\u0027. When verifying on S, this could lead to hard failures. But given the class is not supposed to execute, that\u0027s OK.",
      "parentUuid": "3a78e260_a67ccde3",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aeb10d5_8b80e777",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-10-07T12:44:22Z",
      "side": 1,
      "message": "Please add that scenario to the commit message.\n\nI assume there are more common hard failures than a final class changing to non-final.",
      "parentUuid": "b27ffc88_f178c305",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7e4383_2d2e2a03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-07T12:54:05Z",
      "side": 1,
      "message": "Done for the commit message.\n\nAnd yes, I used that as an example, but there could be other, more subtle cases.",
      "parentUuid": "9aeb10d5_8b80e777",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62bdf408_abd1a782",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-10-07T13:11:30Z",
      "side": 1,
      "message": "Note: Final superclass results in `VerifyError` thrown by the `ClassLinker` during the linking stage, without involving the verifier.",
      "parentUuid": "ce7e4383_2d2e2a03",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b349baff_9a0c369e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-07T13:14:49Z",
      "side": 1,
      "message": "Indeed, and that \"failure\" is being ignored here line 912, which is sort of inconsistent if we hard fail in the verifier for other reasons.",
      "parentUuid": "62bdf408_abd1a782",
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a2d870_b18aa39f",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 916,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-09-29T12:30:54Z",
      "side": 1,
      "message": "Only increment if there\u0027s no hard failure to keep L926 accurate.",
      "range": {
        "startLine": 916,
        "startChar": 10,
        "endLine": 916,
        "endChar": 27
      },
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "264c1a29_068f175c",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 916,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-09-29T12:38:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40a2d870_b18aa39f",
      "range": {
        "startLine": 916,
        "startChar": 10,
        "endLine": 916,
        "endChar": 27
      },
      "revId": "5280ab15fd9301c2dfbab7e9aea06697ac93530d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}