{
  "comments": [
    {
      "key": {
        "uuid": "16c50ace_e46b1a88",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 4781,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "DCHECK that the iface is an interface",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16c50ace_6480ca64",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 4808,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "Not sure if having this return a bool makes sense anymore, it\u0027s more of a tri-state.\n\n  a) default method was found, returned in *out-default\n  b) the method is actually abstract\n  c) default conflict\n\nand should probably look as such, for example:\n\n  enum DefaultMethodSearchResult {\n    kDefaultFound,\n    kDefaultMaskedByAbstract,\n    kDefaultConflict\n  }\n\nWe can then mention that out_default_method is only set for kDefaultFound.\n\nCurrently it\u0027s very subtle because we have to switch on both the bool and then again on out_default_method.",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d4867d_279ffad2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 4860,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "interface method",
      "range": {
        "startLine": 4860,
        "startChar": 68,
        "endLine": 4860,
        "endChar": 77
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_c8354f86",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5140,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 5140,
        "startChar": 43,
        "endLine": 5140,
        "endChar": 75
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6d7f27c_4a3833aa",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5141,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "Is the list of same name and signatures always unique here? If it\u0027s not unique, then this finds the *first* samename\n\n-\u003e FindFirstSameNameAndSignature",
      "range": {
        "startLine": 5141,
        "startChar": 80,
        "endLine": 5141,
        "endChar": 84
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a6b626_2e7d07c5",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5186,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "rename to imt_conflict_method so we don\u0027t confuse this with default conflicts",
      "range": {
        "startLine": 5186,
        "startChar": 19,
        "endLine": 5186,
        "endChar": 34
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d4867d_070d96bd",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5353,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "// Don\u0027t look for a default implementation when the supermethod is implemented directly by a class\n//\n// See if we can use...",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6d7f27c_4a42f3ec",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5380,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "// Default method conflict",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6d7f27c_0ae63b45",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5384,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "reuse",
      "range": {
        "startLine": 5384,
        "startChar": 22,
        "endLine": 5384,
        "endChar": 25
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369daed4_0dbbf101",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5402,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "// Found a default method",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7689e6a7_5f872bf4",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5419,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "else /*current_method \u003d\u003d nullptr*/ { // Abstract method masks all defaults\n  if (vtable_impl-\u003eIsAbstract() \u0026\u0026\n      !vtable_impl-\u003eIsDefaultConflicting()) {\n    ...\n  }\n  // else don\u0027t need do anything\n}",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d4867d_0ade3b2c",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5601,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "Why do we need this? Why did we even put it into default_conflict_methods?",
      "range": {
        "startLine": 5598,
        "startChar": 12,
        "endLine": 5601,
        "endChar": 11
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a6b626_ee213f91",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 19
      },
      "lineNbr": 5602,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "// Normal default method (changed from an older default or an older abstract interface method)",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_cbfb89a1",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 19
      },
      "lineNbr": 248,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "nit: /*referer*/",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6d7f27c_2a6cdf4d",
        "filename": "runtime/modifiers.h",
        "patchSetId": 19
      },
      "lineNbr": 54,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "Used to figure out at runtime if invoking this method will throw an exception (e.g. NME or AME)",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6da7ea7_4c65efed",
        "filename": "test/968-default-partial-compilation-generated/util-src/generate_java.py",
        "patchSetId": 19
      },
      "lineNbr": 46,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "nit: public method need a comment",
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369daed4_50ff5282",
        "filename": "test/968-default-partial-compilation-generated/util-src/generate_smali.py",
        "patchSetId": 19
      },
      "lineNbr": 543,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-10T00:53:15Z",
      "side": 1,
      "message": "nit: two spaces",
      "range": {
        "startLine": 543,
        "startChar": 39,
        "endLine": 543,
        "endChar": 41
      },
      "revId": "c2ad243594fcede80ddecb1a55aab0cceb396805",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}