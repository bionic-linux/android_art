{
  "comments": [
    {
      "key": {
        "uuid": "d8fb8a32_feab815e",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "Too many temps may cause unnecessary spills, this can be done easily with 3 temps with some reuse.",
      "range": {
        "startLine": 865,
        "startChar": 0,
        "endLine": 870,
        "endChar": 51
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1840c241_903d7499",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 872,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "Why R0?",
      "range": {
        "startLine": 872,
        "startChar": 47,
        "endLine": 872,
        "endChar": 49
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8f4ce42_3f7b2772",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 906,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "Is there an explicit null check for the invoke? It could be an implicit check on this LDR but it needs to be moved before the \"argument\u003d\u003dnull\" check above.",
      "range": {
        "startLine": 906,
        "startChar": 2,
        "endLine": 906,
        "endChar": 33
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f28255_c050de56",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 907,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "Don\u0027t use implicit class_offset\u003d\u003d0, make it explicit.",
      "range": {
        "startLine": 907,
        "startChar": 19,
        "endLine": 907,
        "endChar": 36
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f28255_2062ea36",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "The string length is 32-bit.",
      "range": {
        "startLine": 914,
        "startChar": 5,
        "endLine": 914,
        "endChar": 9
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1840c241_1052a4e0",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 4
      },
      "lineNbr": 933,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-07-07T11:37:03Z",
      "side": 1,
      "message": "Compare 2 characters at a time, please.\n\nThanks to value_offset%4\u003d\u003d0, we can start comparing characters two at a time without any hassle. And thanks to kObjectAlignment%4\u003d\u003d0 all strings with an odd length will be zero-padded, so we can use 32-bit comparison even for the last character. (Use static_assert or DCHECK for those assumptions.)",
      "range": {
        "startLine": 933,
        "startChar": 2,
        "endLine": 933,
        "endChar": 51
      },
      "revId": "bd824548c571a9fc51ee0bf1b6fe3c38742163a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}