{
  "comments": [
    {
      "key": {
        "uuid": "187c3a4c_c8ad8a8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-14T09:09:02Z",
      "side": 1,
      "message": "Hi Xueliang,\n\nThe latest patch set has passed all presubmit tests and the new VIXL simulator tests (28% coverage), so this CL is close to be merged. Can you check that my changes didn\u0027t break things on ARM side? In particular, I removed SIMULATOR_TARGET_OUT and replaced it with ANDROID_PRODUCT_OUT that I think is always set with `source build/envsetup.sh`. But this may affect your workflow.\n\nThe summary of other changes I did on top of your PS3 (you can see it by choosing \"PS3\" instead of \"Base\" in Gerrit diff UI):\n\n- For interpreter-only mode, set native entrypoints only if running under simulator, otherwise interpreter tests fail (in runtime/class_linker.cc)\n- Disable codegen gtest under emulator, as the emulator requires started runtime and gtests run without runtime (in compiler/optimizing/codegen_test_utils.h)\n- Rearranged Android.bp files to avoid collision in debug and non-debug libraries, added missing include directory\n- Added simulator libs in build/apex/art_apex_test.py (script that checks APEX contents)\n- Fixed some debug checks (in runtime/entrypoints_order_test.cc)\n- Changed SIMULATOR_TARGET_OUT to ANDROID_PRODUCT_OUT\n- Disabled more run-tests, as they now hit illegal instruction\n- Use boot.art instead of core.art\n\nLet me know if PS11 works for you.\n",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "911c7153_5d28df15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1096678
      },
      "writtenOn": "2020-07-14T14:10:43Z",
      "side": 1,
      "message": "Hi Ulya,\nYour changes look good to me. PS11 works on my side (with the same 28% passrate).\nUsing ANDROID_PRODUCT_OUT is OK, however I found I need to use a slightly different boot.art path to make it work (see my comment in run-test).\n\nOverall, I think this CL is more polished, it\u0027ll be great to see this feature land in ART.\n\nThanks\nXueliang",
      "parentUuid": "187c3a4c_c8ad8a8f",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9350138f_6e4cecb1",
        "filename": "compiler/optimizing/codegen_test_utils.h",
        "patchSetId": 11
      },
      "lineNbr": 226,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "Why are the quick entrypoints needed?  In particular, shouldn\u0027t they be need if and only if they are needed without the simulator anyway?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65360124_9c4b0645",
        "filename": "compiler/optimizing/codegen_test_utils.h",
        "patchSetId": 11
      },
      "lineNbr": 226,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-15T12:46:26Z",
      "side": 1,
      "message": "Quick entrypoints are needed to run any instructions under simulator. This is how the simulator works: it runs instructions and then jumps to ART code to check if pTestSuspend is set (see VisitUnconditionalBranchToRegister implementation in art/simulator/code_simulator_arm64.cc). When running under simulator, quick entrypoints are initialized specifically for the simulator, even if not needed for a normal run (see Thread::InitTlsEntryPoints() in art/runtime/thread.cc).\n\nMechanically removing the \"runtime exists\" precondition causes a DCHECK failure in `m test-art-host-gtest-art_compiler_tests64` (in case you want to reproduce and play with it):\n\n  code_simulator_arm64.cc:102: Check failed: qpoints_ !\u003d nullptr\n\nThe check fails because quick entrypoints are initialized when the runtime is started, and it has not started in this case. The relevant part of stacktrace is:\n\n \u003d\u003e art::arm64::CustomSimulator::VisitUnconditionalBranchToRegister\n    vixl::aarch64::Decoder::VisitUnconditionalBranchToRegister\n    vixl::aarch64::Simulator::ExecuteInstruction\n    vixl::aarch64::Simulator::Run()\n    ...",
      "parentUuid": "9350138f_6e4cecb1",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d3f8c8_fbaa8a13",
        "filename": "runtime/art_method.cc",
        "patchSetId": 11
      },
      "lineNbr": 376,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "Can we also add condition so that this code is compiled only on host builds?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d87c64ca_ba2a65f4",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 11
      },
      "lineNbr": 2193,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "Why JNI stub?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac9dfb17_80a3725a",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 11
      },
      "lineNbr": 2193,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-15T12:46:26Z",
      "side": 1,
      "message": "I think it\u0027s related to my above comment about the need for quick entrypoints when running under simulator. Mechanically removing this condition results in failed run-tests under simulator.",
      "parentUuid": "d87c64ca_ba2a65f4",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cab0787_573adb9a",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 11
      },
      "lineNbr": 396,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "Why add the options that do not work?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b477049_72f660a2",
        "filename": "runtime/runtime.h",
        "patchSetId": 11
      },
      "lineNbr": 467,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "What is the difference between 2) and 3) ?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed5263d6_b7d061aa",
        "filename": "simulator/Android.bp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-07-14T17:33:33Z",
      "side": 1,
      "message": "Is the simulator shipped in the apex?",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb8b869_3e5da18e",
        "filename": "simulator/Android.bp",
        "patchSetId": 11
      },
      "lineNbr": 61,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-15T12:46:26Z",
      "side": 1,
      "message": "Good question, I don\u0027t see why it should be. I removed it in PS13, locally all the tests pass, let\u0027s see if treehugger passes.",
      "parentUuid": "ed5263d6_b7d061aa",
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20e10e72_494023fe",
        "filename": "test/README.simulator.md",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 1096678
      },
      "writtenOn": "2020-07-14T14:10:43Z",
      "side": 1,
      "message": "Nit: I think the \u0027--optimizing\u0027 option can be added here, to avoid running the tests in intrp and jit which the simualtor mode doesn\u0027t support.\n\n  ./art/test.py --simulate-arm64 --run-test --optimizing",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38ab0adc_789efbe1",
        "filename": "test/README.simulator.md",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-14T16:19:44Z",
      "side": 1,
      "message": "Done, thanks.",
      "parentUuid": "20e10e72_494023fe",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "330bc417_93c8a9ca",
        "filename": "test/run-test",
        "patchSetId": 11
      },
      "lineNbr": 687,
      "author": {
        "id": 1096678
      },
      "writtenOn": "2020-07-14T14:10:43Z",
      "side": 1,
      "message": "I\u0027ve tested, using ANDROID_PRODUCT_OUT is OK. However the boot.art path that works in my env is:\n\n   \"${ANDROID_PRODUCT_OUT}/system/apex/com.android.art.testing/javalib/boot.art\"\n                          ^^^^^^^^\n\nBy the way, I found when ART/dex2oat cannot find the correct boot image given by --boot, the error message is very confusing and hard to link to incorrect path error. I think maybe this can be improved in other CLs. For example, here is the message I got:\n\n  dex2oatd64 E 07-14 14:50:44 12659 12659 image_space.cc:3703] Could not create image space with image file \u0027/data/workspace/linaro/out/target/product/armv8/incorrect_path/system/apex/com.android.art.testing/javalib/boot.art\u0027. Attempting to fall back to imageless running. Error was: Cannot compile image to /tmp/xueliang/test-12313/dalvik-cache/arm64/data@workspace@linaro@out@target@product@armv8@incorrect_path@system@apex@com.android.art.testing@javalib@boot.art: Image compilation disabled.\n  dex2oatd64 F 07-14 14:50:44 12659 12659 image_writer.cc:3644] Check failed: compiler_options.IsBootImage() \u003d\u003d boot_image_begin_ \u003d\u003d 0u (compiler_options.IsBootImage()\u003d0, boot_image_begin_ \u003d\u003d 0u\u003d1)",
      "range": {
        "startLine": 687,
        "startChar": 26,
        "endLine": 687,
        "endChar": 96
      },
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a4838c5_f6dba699",
        "filename": "test/run-test",
        "patchSetId": 11
      },
      "lineNbr": 687,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-07-14T16:19:44Z",
      "side": 1,
      "message": "I changed to ${ANDROID_PRODUCT_OUT}/system/apex/com.android.art.testing/javalib/boot.art in PS12. I\u0027m not sure why you don\u0027t have the path without \"system\" (could be related to using flattened APEX), but the path with \"system\" works in both cases.\n\nAs for the cryptic error message, I agree (everyone is puzzled when seeing this for the first time). I think it\u0027s related to the workflow we used to have a while ago, with a boot image in dalvik cache. I filed a bug (b/161235967) for it.",
      "parentUuid": "330bc417_93c8a9ca",
      "range": {
        "startLine": 687,
        "startChar": 26,
        "endLine": 687,
        "endChar": 96
      },
      "revId": "20d23f8d1a551d5f2bb4e773f7a4154590ac65a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}