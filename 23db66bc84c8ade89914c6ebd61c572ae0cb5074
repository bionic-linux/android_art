{
  "comments": [
    {
      "key": {
        "uuid": "2a9aa3ee_a58ca423",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 1061,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-01-08T23:06:09Z",
      "side": 1,
      "message": "Thinking about this more carefully, and doing some more reading, I\u0027m no longer convinced this suffices.  The spec (B2.10.1) says:\n\nThe corresponding Store-Exclusive instruction succeeds in writing back to memory address x only if no other\nobserver, process, or thread has performed a more recent store to address x. The Store-Exclusive instruction\nreturns a status bit that indicates whether the memory write succeeded.\n\nAssume X and Y are initially zero, and we have two threads, each of which sets one variable to 1 using CAS, and reads the other, i.e.\n\nThread 1:\nCAS(X, 0, 1);\nr1 \u003d Y;\n\nThread 2:\nCAS(Y, 0, 1);\nr2 \u003d X;\n\nBased on the above, I think that with just the ishld barrier, the four loads from both threads can complete in order and in parallel with each other, and then the store-exclusive instruction can complete.  This results in r1 \u003d r2 \u003d 0, which should not be allowed.  (It doesn\u0027t matter whether the final load was volatile, since that would only result in another barrier at the end.)\n\nThis involves only reordering of the final load with the store-exclusive (allowed by ishld), and an observation, but not modification, of the CAS location by another thread between the load exclusive and store exclusive.  By the above paragraph that also appears to be allowed.\n\nUnfortunately, I think the final barrier needs to stay the way it was.  Sorry about the earlier claim to the contrary.",
      "range": {
        "startLine": 1057,
        "startChar": 1,
        "endLine": 1061,
        "endChar": 3
      },
      "revId": "23db66bc84c8ade89914c6ebd61c572ae0cb5074",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}