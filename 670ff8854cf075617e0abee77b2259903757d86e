{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb587ae_aa68a73a",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-21T08:27:04Z",
      "side": 1,
      "message": "Write permission are no longer there in dual view mode with this patch, so this comment is not up-to-date with the code as far as I understand. Was the removal of the workaround intended?",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92b8b27f_7b350a12",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-21T08:35:26Z",
      "side": 1,
      "message": "Which workaround are you referring to? Is that the flushing lines 402-419 (which is still there?)",
      "parentUuid": "6fb587ae_aa68a73a",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a4c36e_674e5771",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-21T08:59:09Z",
      "side": 1,
      "message": "The WA was merged in 2016, long before the dual view mode introduced:\n\nOriginal workaround: https://android-review.googlesource.com/c/platform/art/+/304947\nComments update: https://android-review.googlesource.com/c/platform/art/+/336745\n\nIf I understand it correctly, that kernel bug requires to have W permissions for the pages you are flushing. But in dual view mode the lines 409-411 are doing an invalidate on the pages which are RX.",
      "parentUuid": "92b8b27f_7b350a12",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b5bac26_7b9daaff",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-21T09:10:05Z",
      "side": 1,
      "message": "Are you suggesting we could write:\n\nif (HasDualCodeMapping()) {\n  // Flush non-exectuable mapping\n} else {\n  // Flush executable mapping\n}\n\n?",
      "parentUuid": "f5a4c36e_674e5771",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a011f4ea_461b10f7",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-22T12:13:28Z",
      "side": 1,
      "message": "I)\n\nActually no, for the dual-mapped mode we would need two flushes, as the cache maintenance operations are done on virtual addresses. Here is a quote from Mark Rutland, our kernel expert:\n\n\"In ARMV8, we still have VIPT (Virtually Indexed, Physically taged) I-caches, which require maintenance at the target VA. In Linux the userspace needs to do the I-cache maintenance at the VA to be executed from; The prior D-cache maintenance can happen at either VA. I$ maintenance at the RW VA is not guaranteed to knock out VIPT entires for the RX VA.\"\n\nMore info:\nhttps://developer.arm.com/documentation/den0024/a/Caches/Cache-terminology/Cache-tags-and-Physical-Addresses\n\"D4.4.7 About cache maintenance in AArch64 state\" of ARM ARM: https://developer.arm.com/documentation/ddi0487/latest/\n\nII)\n\nTo implement a workaround for the Qualcomm kernel bug, we\u0027d need to have the pages with Writeable for __builtin___clear_cache (FlushCpuCaches) - for both virtual mappings of the physical memory.\n\n  bool cache_flush_success \u003d true;\n  if (HasDualCodeMapping()) {\n    // Flush d-cache for the non-executable mapping.\n    // This is already writeable.\n    cache_flush_success \u003d FlushCpuCaches(w_memory, w_memory + total_size);\n  }\n\n  // Invalidate i-cache for the executable mapping.\n  if (cache_flush_success) {\n    // This region is RX, but to address a Qualcomm kernel bug we need W access.\n    MakeTheRegionWriteable(x_memory);\n    cache_flush_success \u003d FlushCpuCaches(x_memory, x_memory + total_size);\n    MakeTheRegionNonWriteable(x_memory);\n  }\n  \nIII) \n\nBut this workaround is only need for the legacy devices which are affected by the bug (I assume Nexus 6P, this is what a corresponding comment says).",
      "parentUuid": "2b5bac26_7b9daaff",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2e98a7b_12996ce2",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-06-22T14:22:30Z",
      "side": 1,
      "message": "I) We have two flushes for dual mapped already see lines 402-411.\n\nII) The ScopedCodeCacheWrite at the top of the function should have this covered: \n\nhttps://cs.android.com/android/platform/superproject/+/master:art/runtime/jit/jit_scoped_code_cache_write.h;drc\u003dmaster;l\u003d36\n\nThe documentation could be clearer here.\n\nIII) Ack. JFYI, we also have workarounds for badly behaved __builtin__clear_cache behaviour in FlushCpuCaches:\n\nhttps://cs.android.com/android/platform/superproject/+/master:art/libartbase/base/utils.cc;drc\u003d60117aeeffda3d01a5314984694ae3d6d4588fc1;l\u003d108\n\nhttps://lore.kernel.org/patchwork/patch/1135988/",
      "parentUuid": "a011f4ea_461b10f7",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab7d652f_7bc9ee92",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-22T15:13:39Z",
      "side": 1,
      "message": "I) Sorry, I know that, I was just addressing Nicolas comments in paragraph I); I assumed he was suggesting to have only one code flush for the dual view mode.\n\nII) This is exactly the point of my original thought: after this patch that scope effectively does nothing for the dual view mode:\n\n   if (kIsDebugBuild || !region.HasDualCodeMapping()) {\n     // do the permissions flip.\n   }\n   \nIII) I suppose the idea whether the workaround is still needed (whether it was fixed in the kernel) is a bit separate one. I will take a closer look into the links and research the topic (e.g. the ART fix for __build_clear_cache is arm32 only; I don\u0027t know whether it addresses the same issue there).",
      "parentUuid": "a2e98a7b_12996ce2",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1883a7cc_c0616ea4",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-06-22T16:55:49Z",
      "side": 1,
      "message": "Thanks Artem\n\nDual view is the common case today. Dual view depends on memfd_create() which appeared in 3.17.  Android R required \u003e4.14 (https://source.android.com/devices/architecture/kernel/android-common). AFAIK, we don\u0027t have any open code cache issues and haven\u0027t seen any for a while (except for device bring up misconfigurations).\n\n5X / 6P shipped with a 3.10.x kernel. We still have lab test devices labelled as bullhead (5X) so the toggling W likely stops issues there while these devices still test newer ART builds in chroot. Otherwise, we probably don\u0027t need to extend W toggling to dual view.",
      "parentUuid": "ab7d652f_7bc9ee92",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b08362ec_49afb358",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-23T12:28:45Z",
      "side": 1,
      "message": "So about \"II) To implement a workaround for the Qualcomm kernel bug, we\u0027d need to have the pages with Writeable for __builtin___clear_cache (FlushCpuCaches) \"\n\nThe fact we haven\u0027t seen any issues after removing the toggling of the \u0027W\u0027 bit can indicate the bug has been fixed in all places we run, do you agree?",
      "parentUuid": "1883a7cc_c0616ea4",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c51b785_2111c219",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-06-23T12:40:04Z",
      "side": 1,
      "message": "Looking at http://go/art-buildbot the columns labelled as bullhead appear to run on walleye. If we don\u0027t have any 5X/6P in the test infra, we don\u0027t need ScopedCodeCacheWrite any more. We still have Fugu on an old kernel, but that\u0027s not affected by the bug.",
      "parentUuid": "b08362ec_49afb358",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a7b5b6f_29e95eca",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-23T12:44:01Z",
      "side": 1,
      "message": "Yes, that column name is outdated, and I believe we\u0027ve replaced all devices with Pixex2 or pixel3a devices.",
      "parentUuid": "2c51b785_2111c219",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}