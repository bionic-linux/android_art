{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb587ae_aa68a73a",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-21T08:27:04Z",
      "side": 1,
      "message": "Write permission are no longer there in dual view mode with this patch, so this comment is not up-to-date with the code as far as I understand. Was the removal of the workaround intended?",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92b8b27f_7b350a12",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-21T08:35:26Z",
      "side": 1,
      "message": "Which workaround are you referring to? Is that the flushing lines 402-419 (which is still there?)",
      "parentUuid": "6fb587ae_aa68a73a",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a4c36e_674e5771",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-21T08:59:09Z",
      "side": 1,
      "message": "The WA was merged in 2016, long before the dual view mode introduced:\n\nOriginal workaround: https://android-review.googlesource.com/c/platform/art/+/304947\nComments update: https://android-review.googlesource.com/c/platform/art/+/336745\n\nIf I understand it correctly, that kernel bug requires to have W permissions for the pages you are flushing. But in dual view mode the lines 409-411 are doing an invalidate on the pages which are RX.",
      "parentUuid": "92b8b27f_7b350a12",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b5bac26_7b9daaff",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-21T09:10:05Z",
      "side": 1,
      "message": "Are you suggesting we could write:\n\nif (HasDualCodeMapping()) {\n  // Flush non-exectuable mapping\n} else {\n  // Flush executable mapping\n}\n\n?",
      "parentUuid": "f5a4c36e_674e5771",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a011f4ea_461b10f7",
        "filename": "runtime/jit/jit_memory_region.cc",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2021-06-22T12:13:28Z",
      "side": 1,
      "message": "I)\n\nActually no, for the dual-mapped mode we would need two flushes, as the cache maintenance operations are done on virtual addresses. Here is a quote from Mark Rutland, our kernel expert:\n\n\"In ARMV8, we still have VIPT (Virtually Indexed, Physically taged) I-caches, which require maintenance at the target VA. In Linux the userspace needs to do the I-cache maintenance at the VA to be executed from; The prior D-cache maintenance can happen at either VA. I$ maintenance at the RW VA is not guaranteed to knock out VIPT entires for the RX VA.\"\n\nMore info:\nhttps://developer.arm.com/documentation/den0024/a/Caches/Cache-terminology/Cache-tags-and-Physical-Addresses\n\"D4.4.7 About cache maintenance in AArch64 state\" of ARM ARM: https://developer.arm.com/documentation/ddi0487/latest/\n\nII)\n\nTo implement a workaround for the Qualcomm kernel bug, we\u0027d need to have the pages with Writeable for __builtin___clear_cache (FlushCpuCaches) - for both virtual mappings of the physical memory.\n\n  bool cache_flush_success \u003d true;\n  if (HasDualCodeMapping()) {\n    // Flush d-cache for the non-executable mapping.\n    // This is already writeable.\n    cache_flush_success \u003d FlushCpuCaches(w_memory, w_memory + total_size);\n  }\n\n  // Invalidate i-cache for the executable mapping.\n  if (cache_flush_success) {\n    // This region is RX, but to address a Qualcomm kernel bug we need W access.\n    MakeTheRegionWriteable(x_memory);\n    cache_flush_success \u003d FlushCpuCaches(x_memory, x_memory + total_size);\n    MakeTheRegionNonWriteable(x_memory);\n  }\n  \nIII) \n\nBut this workaround is only need for the legacy devices which are affected by the bug (I assume Nexus 6P, this is what a corresponding comment says).",
      "parentUuid": "2b5bac26_7b9daaff",
      "range": {
        "startLine": 396,
        "startChar": 16,
        "endLine": 397,
        "endChar": 76
      },
      "revId": "670ff8854cf075617e0abee77b2259903757d86e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}