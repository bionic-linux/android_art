{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9476eb97_b845631f",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 8284,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-10-21T08:19:45Z",
      "side": 1,
      "message": "Move this inside the `DCHECK()`.",
      "range": {
        "startLine": 8284,
        "startChar": 36,
        "endLine": 8284,
        "endChar": 92
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27f26c71_5f6091a2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 8284,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-10-21T08:37:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9476eb97_b845631f",
      "range": {
        "startLine": 8284,
        "startChar": 36,
        "endLine": 8284,
        "endChar": 92
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2285a10c_2beda43c",
        "filename": "test/844-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-10-21T08:19:45Z",
      "side": 1,
      "message": "The test seems too complicated. Why not\n\n    public interface Itf {\n      public int foo();\n    }\n    public abstract class Super {\n      // In src/:\n      // public int foo() {...}\n      // In src2/:\n      abstract int foo();\n    }\n    public class Bar extends Super implements Itf {}\n\n    Itf asItf \u003d new Bar();\n    asItf.foo();\n\n?\n\nOr do we actually want to test both cases because one is an `invoke-interface` and the other is `invoke-super`?",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "509ac280_73865886",
        "filename": "test/844-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-10-21T08:37:07Z",
      "side": 1,
      "message": "Yes, you need the invokesuper on an interface method to hit the DCHECK.",
      "parentUuid": "2285a10c_2beda43c",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2fa370_6845dfe4",
        "filename": "test/844-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-10-21T12:14:44Z",
      "side": 1,
      "message": "No, you do not. You can hit it with invoke-interface, see https://android-review.googlesource.com/2265148 .",
      "parentUuid": "509ac280_73865886",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70680c0f_c5d67015",
        "filename": "test/844-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-10-21T14:07:00Z",
      "side": 1,
      "message": "Ack - I still think it\u0027s worth having both tests, so can you submit your test CL after this one?",
      "parentUuid": "ff2fa370_6845dfe4",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be2c800a_51996caa",
        "filename": "test/844-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-10-24T09:58:13Z",
      "side": 1,
      "message": "I\u0027m not sure that\u0027s the best approach.\n\nLooking at `Class::FindVirtualMethodForInterfaceSuper()` and how it\u0027s called on the referenced class by `FindMethodToCall()`, namely on `Itf.class` in this test, I think it shall find the abstract `Itf.foo()`. And then the `ArtMethod::ThrowInvocationTimeError()` finds the `Bar.foo()` instead.\n\nSo, your test is actually testing something that still remains broken because the `ArtMethod::ThrowInvocationTimeError()` does not get enough information to determine the right method. (Try to change `Bar.foo()` to a concrete method and see the IAE.)\n\nIn the end, I think the fixes in this CL should be submitted together with my simple test. And your test should be submitted with an additional fix that shall pass more information to `ArtMethod::ThrowInvocationTimeError()`.",
      "parentUuid": "70680c0f_c5d67015",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "9043396ecadebf763d3b477e9874095d30cfef8c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}