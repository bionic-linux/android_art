{
  "comments": [
    {
      "key": {
        "uuid": "ed96f54d_eac17047",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 1
      },
      "lineNbr": 1750,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "That\u0027s done in an existing separate heap traversal to update object references? All of that happens with the world stopped, so we don\u0027t have to worry about intermediate states where both exist?\n\nNot requesting a change here; just making sure I understand.",
      "range": {
        "startLine": 1750,
        "startChar": 7,
        "endLine": 1750,
        "endChar": 57
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d424183_adb79062",
        "filename": "openjdkjvmti/ti_redefine.cc",
        "patchSetId": 1
      },
      "lineNbr": 1750,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "correct.",
      "parentUuid": "ed96f54d_eac17047",
      "range": {
        "startLine": 1750,
        "startChar": 7,
        "endLine": 1750,
        "endChar": 57
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d644458_82acebad",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "Not your change, but does this make sense to you? The parameter is called kIsInstrumented. More importantly, why doesn\u0027t this just pass down kInstrumented?",
      "range": {
        "startLine": 205,
        "startChar": 25,
        "endLine": 205,
        "endChar": 46
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a3058b5_11de4a6f",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "yes. As the comment says we might have suspended and now be instrumented. We just pass in \u0027true\u0027 since it\u0027s a safe default.",
      "parentUuid": "6d644458_82acebad",
      "range": {
        "startLine": 205,
        "startChar": 25,
        "endLine": 205,
        "endChar": 46
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88eab792_7ae62493",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T21:39:50Z",
      "side": 1,
      "message": "OK. Thanks.",
      "parentUuid": "8a3058b5_11de4a6f",
      "range": {
        "startLine": 205,
        "startChar": 25,
        "endLine": 205,
        "endChar": 46
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b85fbf5_9ac90915",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "The comment now seems pointless.",
      "range": {
        "startLine": 206,
        "startChar": 24,
        "endLine": 206,
        "endChar": 42
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f51de84_dd7e3fa5",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b85fbf5_9ac90915",
      "range": {
        "startLine": 206,
        "startChar": 24,
        "endLine": 206,
        "endChar": 42
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44e4f614_1aaf9bb7",
        "filename": "runtime/mirror/class-alloc-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "Is there a reason to change the interface here? kCheckAddFinalizer seems to now be used only in a DCHECK, and could possibly be dropped. kAddFinalizer now seems to do what kCheckAddFinalizer used to do. It\u0027s better typed, but the resulting code is messier. The only real change is that the original DCHECK is no longer valid? Unless I\u0027m missing something, I\u0027d be strongly inclined to just drop the DCHECK.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 90
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ce3504_91b1a5f1",
        "filename": "runtime/mirror/class-alloc-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "The DCHECK is still valid. It\u0027s only in really exceptional circumstances that we want to allocate a finalizable object with creating a finalizer-reference. I think keeping the DCHECK is useful.\n\nI will admit that changing the meaning of kCheckAddFinalizer to mean \u0027perform a DCHECK\u0027 instead of \u0027assume-false\u0027 is a bit surprising but I think it\u0027s more sensible in the end.",
      "parentUuid": "44e4f614_1aaf9bb7",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 90
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f78adf7_051bbeb1",
        "filename": "runtime/mirror/class-alloc-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T21:39:50Z",
      "side": 1,
      "message": "I agree it\u0027s a trade-off between simpler code and the added DCHECK. I\u0027d lean the other way, but I\u0027m OK either way.",
      "parentUuid": "f3ce3504_91b1a5f1",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 90
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a479892_108b6c9e",
        "filename": "test/2006-virtual-structural-finalizing/src-art/art/Test2006.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "Should probably do something. See b/71392225 .",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 56,
        "endChar": 8
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6ddeb5b_1e62236d",
        "filename": "test/2006-virtual-structural-finalizing/src-art/art/Test2006.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a479892_108b6c9e",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 56,
        "endChar": 8
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d6bdaed_ef9b4477",
        "filename": "test/2007-virtual-structural-finalizable/src-art/art/Test2007.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "Longer term, is there some way we can arrange to build these as part of the tests? I know we do this in quite a few places, but it seems less than ideal, in several respects.",
      "range": {
        "startLine": 58,
        "startChar": 1,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "843b2525_4c141c21",
        "filename": "test/2007-virtual-structural-finalizable/src-art/art/Test2007.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "yeah this is the sort of thing where it\u0027s never really worth the time it would take to do.",
      "parentUuid": "4d6bdaed_ef9b4477",
      "range": {
        "startLine": 58,
        "startChar": 1,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3328bfe5_8a8263c4",
        "filename": "test/2007-virtual-structural-finalizable/src-art/art/Test2007.java",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T00:31:51Z",
      "side": 1,
      "message": "Why is this needed? We waited for the finalizer we care about. The shutdown process should wait for the finalizer thread to exit.",
      "range": {
        "startLine": 118,
        "startChar": 1,
        "endLine": 119,
        "endChar": 23
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51b891d6_90e99057",
        "filename": "test/2007-virtual-structural-finalizable/src-art/art/Test2007.java",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-03T18:31:58Z",
      "side": 1,
      "message": "this is mostly put in because initially we would do the finalizer twice.\n\nI couldn\u0027t think of any good way to test for that so I just had it sleep for 2 seconds while trying to exhaust memory to make it more likely to trigger.",
      "parentUuid": "3328bfe5_8a8263c4",
      "range": {
        "startLine": 118,
        "startChar": 1,
        "endLine": 119,
        "endChar": 23
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dce4c03_04b1ab8d",
        "filename": "test/2007-virtual-structural-finalizable/src-art/art/Test2007.java",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-01-03T21:39:50Z",
      "side": 1,
      "message": "The normal way to do that is\n\nRuntime.getRuntime().gc(); System.runFinalization()\n\nThat\u0027s probably worth fixing to speed up the test.",
      "parentUuid": "51b891d6_90e99057",
      "range": {
        "startLine": 118,
        "startChar": 1,
        "endLine": 119,
        "endChar": 23
      },
      "revId": "6917ed5a72ef5646bf77554d4ff0848ab676c38b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}