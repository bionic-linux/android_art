{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e96cc0_f089dfee",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 2084,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-04T13:20:25Z",
      "side": 1,
      "message": "Is there a benefit to doing this versus an arena vector? We have to do a `auto* vregs \u003d reinterpret_cast\u003cHUserRecord\u003cHEnvironment*\u003e*\u003e(this + 1);` below and it is less intuitive than having a `vregs_` field.\nI\u0027d think that two allocations (one for `HEnvironment`, and the other for the `vregs`) should result in the same code. The only difference is that they wouldn\u0027t be guaranteed to be contiguous but that should be fine I\u0027d think.",
      "range": {
        "startLine": 2082,
        "startChar": 0,
        "endLine": 2084,
        "endChar": 94
      },
      "revId": "6c0f5be5b42b8e9c97b79e5c3994310df6697ddb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4606d54_6675ddc6",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 2084,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-10-04T13:59:53Z",
      "side": 1,
      "message": "`ArenaVector\u003c\u003e` is 4 pointers. That adds up to a lot of memory and that\u0027s what I\u0027m reducing with this CL.\n\nWe could have a plain `HUserRecord\u003cHEnvironment*\u003e*` in addition to the `number_of_vregs_` and construct the `ArrayRe\u003c\u003e` from these two, but I\u0027d rather avoid allocating memory for that pointer.",
      "parentUuid": "b8e96cc0_f089dfee",
      "range": {
        "startLine": 2082,
        "startChar": 0,
        "endLine": 2084,
        "endChar": 94
      },
      "revId": "6c0f5be5b42b8e9c97b79e5c3994310df6697ddb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}