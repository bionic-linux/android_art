{
  "comments": [
    {
      "key": {
        "uuid": "a41eb557_4e37570a",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 18
      },
      "lineNbr": 965,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-08-12T22:03:38Z",
      "side": 1,
      "message": "So could you make this a helper in DexFile ?",
      "range": {
        "startLine": 965,
        "startChar": 15,
        "endLine": 965,
        "endChar": 78
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446259ef_6967c546",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 18
      },
      "lineNbr": 965,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-08-13T11:20:51Z",
      "side": 1,
      "message": "Does this logic belong to the DexFile? The DexFile is really the same if the inode is the same (or the memory address is the same for memory-based DexFiles). And yet, for the compiler even that may not be enough.",
      "parentUuid": "a41eb557_4e37570a",
      "range": {
        "startLine": 965,
        "startChar": 15,
        "endLine": 965,
        "endChar": 78
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64111d42_293c19ea",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 18
      },
      "lineNbr": 1029,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-08-12T22:03:38Z",
      "side": 1,
      "message": "How about we move all this logic to CodeGenerator? And just pass method_ptr/code_ptr to HInvokeStaticOrDirect. This would also nicely move all the new enums intriduced in nodes.h to CodeGenerator.\n\nCompile-time point in case: there\u0027s no need to do all this logic if the invoke is actually dead code. I know the compiler driver is also doing it, but that\u0027s also something I\u0027d like to see cleaned up.",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 3
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240ba519_9857f5a0",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 18
      },
      "lineNbr": 1029,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-13T10:56:47Z",
      "side": 1,
      "message": "Sounds like a good suggestion to me.",
      "parentUuid": "64111d42_293c19ea",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 3
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240ba519_d8a68d44",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 18
      },
      "lineNbr": 1029,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-08-13T11:20:51Z",
      "side": 1,
      "message": "Let\u0027s leave this to a refactoring CL, it will need a lot of thought.",
      "parentUuid": "240ba519_9857f5a0",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 3
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64367de0_fbaf0367",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 18
      },
      "lineNbr": 368,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-08-12T22:03:38Z",
      "side": 1,
      "message": "Because Label is not used by vixl, we are templatizing the CommonGetLabel method in this file. Could we do the same here?",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 368,
        "endChar": 4
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a47a35a8_74c52807",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 18
      },
      "lineNbr": 368,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-08-13T11:20:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64367de0_fbaf0367",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 368,
        "endChar": 4
      },
      "revId": "1c5f859a77096b61a2d61c8729eea6146f1c1e13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}