{
  "comments": [
    {
      "key": {
        "uuid": "ae4a16ec_ed491dac",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 580,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-08T10:00:49Z",
      "side": 1,
      "message": "This seems weak. I think we should not calculate the IMT index for abstract non-interface classes. Or does that speed up the linking?",
      "range": {
        "startLine": 580,
        "startChar": 6,
        "endLine": 580,
        "endChar": 18
      },
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8514ed1a_a1d1df92",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 584,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-08T10:00:49Z",
      "side": 1,
      "message": "Should we also store the IMT index for default methods? (We could then re-parse the class data to find the dex code item offset when creating a \"copied\" method.)",
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b51b34d0_b6397ccb",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 584,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-08T10:10:06Z",
      "side": 1,
      "message": "I don\u0027t want to complicate the pre-conditions too much.\nThe IsAbstract is easily accessible from the access flags.",
      "parentUuid": "8514ed1a_a1d1df92",
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4460c4ca_09dda285",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 584,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-08T10:42:51Z",
      "side": 1,
      "message": "I would not worry about preconditions. You could even abstract them away by introducing ShouldHaveImtIndex().",
      "parentUuid": "b51b34d0_b6397ccb",
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e0fb5e1_5c7edbc0",
        "filename": "runtime/art_method.h",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-11-07T22:49:43Z",
      "side": 1,
      "message": "Why this change? This looks pretty terrible :-) Can you explain?",
      "range": {
        "startLine": 381,
        "startChar": 21,
        "endLine": 381,
        "endChar": 48
      },
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26bf06aa_eefcc48f",
        "filename": "runtime/art_method.h",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-08T10:00:49Z",
      "side": 1,
      "message": "I\u0027d prefer 2 separate methods that DCHECK() preconditions, i.e. check access flags and declaring class type.",
      "parentUuid": "4e0fb5e1_5c7edbc0",
      "range": {
        "startLine": 381,
        "startChar": 21,
        "endLine": 381,
        "endChar": 48
      },
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33a65a7c_01b47c43",
        "filename": "runtime/art_method.h",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-08T10:10:06Z",
      "side": 1,
      "message": "I did that to start with, but didn\u0027t like the complexity it pushed to the callers.\nTwo methods that are no-op for the wrong preconditions?",
      "parentUuid": "26bf06aa_eefcc48f",
      "range": {
        "startLine": 381,
        "startChar": 21,
        "endLine": 381,
        "endChar": 48
      },
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5422ce5f_43208710",
        "filename": "runtime/art_method.h",
        "patchSetId": 2
      },
      "lineNbr": 381,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-08T10:42:51Z",
      "side": 1,
      "message": "There are only 2 callers and I\u0027d consider it better to have both do this:\n\n  if (klass-\u003eIsInterface() \u0026\u0026 method-\u003eIsAbstract()) {\n    method-\u003eSetImtIndex(ImTable::GetImtIndex(method));\n  } else {\n    method-\u003eSetCodeItemOffset(...);\n  }\n\nThe condition actually depends on answers to my other comments.",
      "parentUuid": "33a65a7c_01b47c43",
      "range": {
        "startLine": 381,
        "startChar": 21,
        "endLine": 381,
        "endChar": 48
      },
      "revId": "9cee5020b045c23cb259e353e1d876728d9b005b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}