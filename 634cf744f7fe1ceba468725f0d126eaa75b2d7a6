{
  "comments": [
    {
      "key": {
        "uuid": "13b81f6f_53639844",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-13T17:03:03Z",
      "side": 1,
      "message": "Should you have an \"else busy-wait\" here?",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 19
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f746a04b_a3e8a884",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-10-13T17:07:41Z",
      "side": 1,
      "message": "no the original caller will try again.\n\nLook down at line 187.",
      "parentUuid": "13b81f6f_53639844",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 19
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f8e553_9627fd95",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-13T17:10:44Z",
      "side": 1,
      "message": "But that means you\u0027re not guaranteed to test what you want to test - stopping a thread in a recursive call.",
      "parentUuid": "f746a04b_a3e8a884",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 19
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f1e88e1_5c3a5811",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-10-13T17:15:36Z",
      "side": 1,
      "message": "I mean it\u0027s not any worse than the old one was meant to be. Both either get the throw in a recursive call (Good) or during the loop when we run out of stack space.\n\nI really don\u0027t think it is possible to guarantee that we throw during recursion without having infinite stack space.\n\nThis version just quits after 50 frames since a SOE being thrown concurrently can interact with catch-handlers in a complicated and difficult to control way.",
      "parentUuid": "05f8e553_9627fd95",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 19
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af318d5_64f0294d",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-13T17:46:37Z",
      "side": 1,
      "message": "A busy-loop in the 50th frame (checking a volatile) would guarantee you\u0027re in a recursion. :-)\n\nAnyways, I\u0027ll leave this up to you.",
      "parentUuid": "0f1e88e1_5c3a5811",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 177,
        "endChar": 19
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebed4e40_9ec8ee89",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-13T17:10:44Z",
      "side": 1,
      "message": "Why not make this consistent?",
      "range": {
        "startLine": 220,
        "startChar": 10,
        "endLine": 220,
        "endChar": 38
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cf4f572_d4f649ef",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-10-13T17:15:36Z",
      "side": 1,
      "message": "I could. That one doesn\u0027t have any problems since the SOE cannot be thrown concurrently with the other Error though.",
      "parentUuid": "ebed4e40_9ec8ee89",
      "range": {
        "startLine": 220,
        "startChar": 10,
        "endLine": 220,
        "endChar": 38
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54df48e0_6bc3e4b8",
        "filename": "test/1934-jvmti-signal-thread/src/art/Test1934.java",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-13T17:46:37Z",
      "side": 1,
      "message": "Unless the scheduler screws you and the thread runs away before the interrupt can be sent. Plus: readability/maintainability.",
      "parentUuid": "3cf4f572_d4f649ef",
      "range": {
        "startLine": 220,
        "startChar": 10,
        "endLine": 220,
        "endChar": 38
      },
      "revId": "634cf744f7fe1ceba468725f0d126eaa75b2d7a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}