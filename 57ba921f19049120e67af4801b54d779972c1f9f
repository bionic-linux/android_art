{
  "comments": [
    {
      "key": {
        "uuid": "d6fd5a62_99fa7122",
        "filename": "compiler/dex/inline_method_analyser.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "nit: use ++matcher-\u003einstruction_ to avoid the copy",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bd6d2d4_b2900867",
        "filename": "compiler/dex/inline_method_analyser.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fd5a62_99fa7122",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0437adc2_d6f9cd62",
        "filename": "compiler/dex/inline_method_analyser.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "nit: use ++matcher-\u003einstruction_ to avoid the copy",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170e5cdb_e5192ceb",
        "filename": "compiler/dex/inline_method_analyser.cc",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0437adc2_d6f9cd62",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75a2aa62_a29ccd37",
        "filename": "dexlayout/dex_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "nit: this could be better with a helper \n\n   MakeIterationRange\u003cDexInstructionIterator\u003e(code-\u003eInsns(), code-\u003eInsnsSize())",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79303ce1_3556d2ca",
        "filename": "dexlayout/dex_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75a2aa62_a29ccd37",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f16a53d7_ba268064",
        "filename": "dexlayout/dex_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-09-25T18:04:04Z",
      "side": 1,
      "message": "How confident are you?  A LOG_FATAL?\nIn the next file you have an fprintf.  Something similar?",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 193,
        "endChar": 42
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b1d9739_daf2d923",
        "filename": "dexlayout/dex_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "I\u0027ll add a check, it should cause infinite loops in many places in ART.",
      "parentUuid": "f16a53d7_ba268064",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 193,
        "endChar": 42
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "769b7515_47f3159f",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "nit: shouldn\u0027t there be a space here \n\n    { x, y } ?",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "163fe7ba_bcd3f1f7",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 299,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "769b7515_47f3159f",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "399efbd2_e03a620c",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "Needs to be DefaultConstructible.",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b8cc14c_64e5e304",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "399efbd2_e03a620c",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcf0d101_7cb4c5a1",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "This is missing the new singular iterator requirement added in C++ for a ForwardIterator.\n\n  DexInstructionIterator blank{};\n  \n  for (auto it \u003d range.begin(); it !\u003d range.end(); ++it) {\n     assert(blank \u003d\u003d it);\n  }\n\nhttp://en.cppreference.com/w/cpp/concept/ForwardIterator#Singular_iterators",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e35b618_509c4b06",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "That seems like it would add overhead for no real benefit, why should we allow it?",
      "parentUuid": "bcf0d101_7cb4c5a1",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2823a639_a05061f6",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T22:02:09Z",
      "side": 1,
      "message": "Then don\u0027t say it\u0027s a forward_iterator, which you declared it on line 27? It has to adhere to the requirements.\n\nThat being said, it doesn\u0027t add any memory requirements, and you can trust the C++ compiler to optimize the performance because *every single forward iterator will have to have the extra check*.",
      "parentUuid": "9e35b618_509c4b06",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67cb926_2d91a95f",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T22:22:35Z",
      "side": 1,
      "message": "Added the check",
      "parentUuid": "2823a639_a05061f6",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6128329e_985265c1",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-28T13:11:23Z",
      "side": 1,
      "message": "Igor, you seem to have misread the standard.\n\n  DexInstructionIterator blank{};\n  for (auto it \u003d range.begin(); it !\u003d range.end(); ++it) {\n     if (blank \u003d\u003d it) {...}  // UNSPECIFIED, `it` was not value-initialized.\n  }\n  // Equal to all other value-initialized `DexInstructionIterator`s:\n  DexInstructionIterator blank2{};\n  assert(blank \u003d\u003d blank2);\n  DexInstructionIterator blank3{};\n  assert(blank \u003d\u003d blank3);\n\nCleanup CL: https://android-review.googlesource.com/497110 .",
      "parentUuid": "a67cb926_2d91a95f",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3b9aa6d_301aa5bd",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-28T14:51:14Z",
      "side": 1,
      "message": "Yes, that makes more sense. Good catch!",
      "parentUuid": "6128329e_985265c1",
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c11d7d22_7a3b4886",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T17:55:24Z",
      "side": 1,
      "message": "nit: It\u0027s a bit strange to have this on here, why not just add it to Instruction?\n\nRight now you have to write code with for-iterator loops just to access this. It would be much cleaner to always use the \"for (Instruction : range) { ...}\" syntax .\n\n    for (Instruction\u0026 inst : range) {\n        uint32_t dex_pc \u003d inst.GetDexPC(range.begin());\n    }\n\n----------\n\nMaybe the other option is to iterate over DexPcWithInstruction which could contain both the instruction and the dex pc.\n\n   for (DexPcWithInstruction inst : range) {\n       uint32_t dex_pc \u003d inst-\u003eGetPc();\n       Instruction* inst \u003d inst-\u003eGetInst();\n   }\n\nsomething along those lines?",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afe7a143_fb46ec99",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-09-25T18:04:04Z",
      "side": 1,
      "message": "+1 to that.",
      "parentUuid": "c11d7d22_7a3b4886",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b95a7321_2e28428f",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-09-25T21:50:26Z",
      "side": 1,
      "message": "Good question, #2 seems good. Can I just do it in a follow up?",
      "parentUuid": "c11d7d22_7a3b4886",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfbbbb9e_39cca1b1",
        "filename": "runtime/dex_instruction_iterator.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-25T22:02:09Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "b95a7321_2e28428f",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 73,
        "endChar": 3
      },
      "revId": "57ba921f19049120e67af4801b54d779972c1f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}