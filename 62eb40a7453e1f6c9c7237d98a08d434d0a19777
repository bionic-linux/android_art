{
  "comments": [
    {
      "key": {
        "uuid": "dde20da3_ecb11de7",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 3188,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T12:43:31Z",
      "side": 1,
      "message": "Unnecessary as arguments can\u0027t be void (?).",
      "range": {
        "startLine": 3188,
        "startChar": 13,
        "endLine": 3188,
        "endChar": 51
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83a831fb_55ae0f60",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 3188,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-18T13:59:41Z",
      "side": 1,
      "message": "I was thinking about null, but I confused things. My bad",
      "parentUuid": "dde20da3_ecb11de7",
      "range": {
        "startLine": 3188,
        "startChar": 13,
        "endLine": 3188,
        "endChar": 51
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1caac72_0d18edf0",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 3194,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T12:43:31Z",
      "side": 1,
      "message": "This comment matches the API docs, but the check doesn\u0027t use DataType::IsIntegralType()?\n\nIf we only do this for int types in the CL, that\u0027s okay, but please update the commit message and add a todo here.\n\nNB the case of bool is called out in the API docs, e.g.:\nhttps://docs.oracle.com/javase/9/docs/api/java/lang/invoke/VarHandle.html#getAndBitwiseOr-java.lang.Object...-",
      "range": {
        "startLine": 3194,
        "startChar": 8,
        "endLine": 3194,
        "endChar": 45
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ecf58c6_d67f03a0",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 3194,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-18T13:59:41Z",
      "side": 1,
      "message": "I misinterpreted what \"integral type\" means, I thought it is only kInt32. I added the rest",
      "parentUuid": "f1caac72_0d18edf0",
      "range": {
        "startLine": 3194,
        "startChar": 8,
        "endLine": 3194,
        "endChar": 45
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960f07e0_b870c314",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4019,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T15:00:49Z",
      "side": 1,
      "message": "Nit: end sentences in comments with a full stop. (Several more below).",
      "range": {
        "startLine": 4019,
        "startChar": 6,
        "endLine": 4019,
        "endChar": 18
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b0d526d_169e5b54",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4019,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-20T09:17:14Z",
      "side": 1,
      "message": "I removed this comment. I extended the GenerateVarHandleGetAndBitwiseOp to work with other primitives than kInt32, so this no longer applies",
      "parentUuid": "960f07e0_b870c314",
      "range": {
        "startLine": 4019,
        "startChar": 6,
        "endLine": 4019,
        "endChar": 18
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc89060c_6a3cb6c0",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4036,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T15:00:49Z",
      "side": 1,
      "message": "MoveFromMemory to move the number of bytes required. Reading beyond necessary can have problems, e.g. the read may cross a page boundary and the next page may not be accessible so triggers a segfault.",
      "range": {
        "startLine": 4036,
        "startChar": 5,
        "endLine": 4036,
        "endChar": 9
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "630eae6b_225b0935",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4036,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-20T09:17:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc89060c_6a3cb6c0",
      "range": {
        "startLine": 4036,
        "startChar": 5,
        "endLine": 4036,
        "endChar": 9
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acb0728a_445841fc",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4037,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T15:00:49Z",
      "side": 1,
      "message": "Does this need to be in the loop?",
      "range": {
        "startLine": 4037,
        "startChar": 2,
        "endLine": 4037,
        "endChar": 82
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68b438b5_3a7d81c8",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4037,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-18T15:06:48Z",
      "side": 1,
      "message": "Yes, because temp will be updated with the operation\u0027s result. So we need to get the value again",
      "parentUuid": "acb0728a_445841fc",
      "range": {
        "startLine": 4037,
        "startChar": 2,
        "endLine": 4037,
        "endChar": 82
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f5aa4bb_7af80d6d",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4037,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-20T09:17:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68b438b5_3a7d81c8",
      "range": {
        "startLine": 4037,
        "startChar": 2,
        "endLine": 4037,
        "endChar": 82
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ddcf6b_88a6b82d",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4040,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T15:00:49Z",
      "side": 1,
      "message": "another",
      "range": {
        "startLine": 4040,
        "startChar": 28,
        "endLine": 4040,
        "endChar": 33
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8230f889_3fd2d725",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4040,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-18T15:00:49Z",
      "side": 1,
      "message": "\"so try again.\"",
      "range": {
        "startLine": 4040,
        "startChar": 59,
        "endLine": 4040,
        "endChar": 99
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fd4fb38_55ad7ece",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4040,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-20T09:17:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8230f889_3fd2d725",
      "range": {
        "startLine": 4040,
        "startChar": 59,
        "endLine": 4040,
        "endChar": 99
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7de7479_39c7292f",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 4040,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-20T09:17:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18ddcf6b_88a6b82d",
      "range": {
        "startLine": 4040,
        "startChar": 28,
        "endLine": 4040,
        "endChar": 33
      },
      "revId": "62eb40a7453e1f6c9c7237d98a08d434d0a19777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}