{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ed34ccf4_e6e9a342",
        "filename": "runtime/base/timing_logger.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-03-02T03:08:41Z",
      "side": 1,
      "message": "I would be very tempted to say that CumulativeTime instances are identified by the address of the name, not the characters in the name. That would probably make the vector implementation faster than a hash table in practice. It also violates some coding recommendations. Your call.\n\nI suspect the string comparison time isn\u0027t immediately significant, but it might conceivably get there eventually.",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 56,
        "endChar": 82
      },
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dc68add_662c2f9d",
        "filename": "runtime/base/timing_logger.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-03-02T06:05:27Z",
      "side": 1,
      "message": "My thinking while implementing this was that in all the `ScopedTiming` usage from where we gather CumulativeLogger data, labels are part of the code and hence always have unique address. In fact, if we were to identify based on the characters in the label, then there is a chance that we may end up merging two separate scopes into one, if their labels are identical.",
      "parentUuid": "ed34ccf4_e6e9a342",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 56,
        "endChar": 82
      },
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "393ac6b0_3ca3a8b0",
        "filename": "runtime/base/timing_logger.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-03-02T16:21:19Z",
      "side": 1,
      "message": "Actually, I missed that you were already doing that. Good, but I think it\u0027s worth a coomment on operator\u003c that it just compares addresses. It also needs to be std::less instead of \u003c. Pointer \u003c is not guaranteed to work across separately allocated objects.",
      "parentUuid": "3dc68add_662c2f9d",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 56,
        "endChar": 82
      },
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55a6c5df_bd22ab36",
        "filename": "runtime/base/timing_logger.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-03-02T17:31:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "393ac6b0_3ca3a8b0",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 56,
        "endChar": 82
      },
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "551abc90_52892f21",
        "filename": "runtime/base/timing_logger.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-03-02T03:08:41Z",
      "side": 1,
      "message": "GUARDED_BY? Also the other fields?\n\nPreexisting, so not essential to fix here.",
      "range": {
        "startLine": 82,
        "startChar": 11,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "445cfaed_e4e1f815",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2021-03-01T22:21:10Z",
      "side": 1,
      "message": "Is this line needed? I didn\u0027t see an obvious use of it, but I probably missed it.",
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d46e3a3_8d251915",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-03-02T03:06:44Z",
      "side": 1,
      "message": "It actually caused compilation issues. Earlier, due to timing_logger.h heap.h was inclcluding histogram.h, but not anymore. So had to include it now.",
      "parentUuid": "445cfaed_e4e1f815",
      "revId": "694565ed3878b9f1cd70c70a9bd4bf450f09b679",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}