{
  "comments": [
    {
      "key": {
        "uuid": "6d598ccf_77bd9e4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-20T13:01:05Z",
      "side": 1,
      "message": "atest --host art_libdexfile_support_static_tests art_libdexfile_support_tests",
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5e70d5_0a62efb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-20T17:03:36Z",
      "side": 1,
      "message": "(can we get that kind of knowledge into TEST_MAPPING files, so outsiders don\u0027t need to know which tests to run? in this particular case, it might be worth having changes to this code run the unwinder tests and vice versa too.)",
      "parentUuid": "6d598ccf_77bd9e4e",
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26f62490_f818b857",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-20T12:51:11Z",
      "side": 1,
      "message": "Please make this constructor explicit.",
      "range": {
        "startLine": 128,
        "startChar": 1,
        "endLine": 128,
        "endChar": 4
      },
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "366d2e45_b5f45796",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-20T12:51:11Z",
      "side": 1,
      "message": "Isn\u0027t it better to let this take a unique_ptr and consume it? I suppose this variant is a bit more convenient if the caller isn\u0027t using ownership opinionated abstractions, but that shouldn\u0027t be encouraged.",
      "range": {
        "startLine": 128,
        "startChar": 10,
        "endLine": 128,
        "endChar": 18
      },
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2265f3b_572ecddc",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-03-20T23:47:20Z",
      "side": 1,
      "message": "Added.",
      "parentUuid": "26f62490_f818b857",
      "range": {
        "startLine": 128,
        "startChar": 1,
        "endLine": 128,
        "endChar": 4
      },
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85a8b762_43cb5e93",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-03-20T23:47:20Z",
      "side": 1,
      "message": "Added a unique_ptr version and destroys the pointer so it can\u0027t be used afterwards.\n\nAnd I left the original.",
      "parentUuid": "366d2e45_b5f45796",
      "range": {
        "startLine": 128,
        "startChar": 10,
        "endLine": 128,
        "endChar": 18
      },
      "revId": "653c815aa4ad99a6341ea297211dd4cc39218c78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}