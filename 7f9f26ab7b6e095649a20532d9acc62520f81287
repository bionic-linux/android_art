{
  "comments": [
    {
      "key": {
        "uuid": "63d70dfc_28c8f517",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 3711,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-26T12:19:17Z",
      "side": 1,
      "message": "So the async field is only there to know how we got the exception?\n\nHave you thought about keeping that knowledge in jvmti? It seems ART changes would be minimal if it didn\u0027t have to know the difference.",
      "range": {
        "startLine": 3704,
        "startChar": 0,
        "endLine": 3711,
        "endChar": 38
      },
      "revId": "7f9f26ab7b6e095649a20532d9acc62520f81287",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dadc7ed_9c1e45d4",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 3711,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-09-26T15:08:25Z",
      "side": 1,
      "message": "Then you\u0027d need a callback at every point ObserveAsyncException is called to actually install the exception. That seems a good bit worse (I don\u0027t see any meaningful difference of storing a flag vs storing the exception).",
      "parentUuid": "63d70dfc_28c8f517",
      "range": {
        "startLine": 3704,
        "startChar": 0,
        "endLine": 3711,
        "endChar": 38
      },
      "revId": "7f9f26ab7b6e095649a20532d9acc62520f81287",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4e3782_14fafa7e",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 3711,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-09-26T16:06:50Z",
      "side": 1,
      "message": "There is a lot of code that assumes that all exceptions are sent synchronously (most notably the verifier). Trying to remove that assumption would be extremely difficult. By doing things this way we let the async exception be seen like synchronous exception by only throwing them at specific times.",
      "parentUuid": "8dadc7ed_9c1e45d4",
      "range": {
        "startLine": 3704,
        "startChar": 0,
        "endLine": 3711,
        "endChar": 38
      },
      "revId": "7f9f26ab7b6e095649a20532d9acc62520f81287",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "934cac50_a4604a46",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 3711,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-09-26T16:38:59Z",
      "side": 1,
      "message": "OK. My suggestion was to make those async exceptions not first class, and only jvmti-related. But what you are saying is that lots of places in the runtime need to be aware of it?",
      "parentUuid": "ba4e3782_14fafa7e",
      "range": {
        "startLine": 3704,
        "startChar": 0,
        "endLine": 3711,
        "endChar": 38
      },
      "revId": "7f9f26ab7b6e095649a20532d9acc62520f81287",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72f2c027_36414938",
        "filename": "runtime/thread.cc",
        "patchSetId": 3
      },
      "lineNbr": 3711,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-09-26T16:43:24Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "934cac50_a4604a46",
      "range": {
        "startLine": 3704,
        "startChar": 0,
        "endLine": 3711,
        "endChar": 38
      },
      "revId": "7f9f26ab7b6e095649a20532d9acc62520f81287",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}