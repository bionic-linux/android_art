{
  "comments": [
    {
      "key": {
        "uuid": "c4cd45a8_1d37d7d1",
        "filename": "compiler/dex/quick/gen_common.cc",
        "patchSetId": 2
      },
      "lineNbr": 757,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Thanks - this has potential to cause problems in the future, and should be revisited.  Could you add \"FIXME: \" to your //pGetXXXStatis comment above.  Also, in the non is_long_or_double case let\u0027s handle kRefRegs, so instead do:\nRegLocation rl_result \u003d GetReturn(rl_dest.ref ? kRefReg : kCoreReg);",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_a74d7282",
        "filename": "compiler/dex/quick/gen_invoke.cc",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "For this and other reasons, TargetReg() needs changing throughout.  The TargetReg() cleanup will happen in another CL as part of the 64bit work.  It\u0027s fine to do this now to get you going, but note that the code will change.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_e7748aab",
        "filename": "compiler/dex/quick/mips/int_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Let\u0027s avoid having commented out code.  Delete the DCHECK (which looks wrong to me anyway - you certainly could have a const index, but backends are under no obligation to take advantage of that information.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84e50d1e_dbd83f8b",
        "filename": "compiler/dex/quick/mips/int_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 564,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Same - delete.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4cd45a8_bd6c638a",
        "filename": "compiler/dex/quick/mips/mips_lir.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "What\u0027s the FR_BIT?  Also, in general we prefer to avoid conditional compilation.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_47c0de5e",
        "filename": "compiler/dex/quick/mips/mips_lir.h",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "A recent change widened the def/use masks, so you should now have enough space to use fp regs 16 through 31 (though I\u0027d get things running as-is first before adding them).",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84e50d1e_db539f25",
        "filename": "compiler/dex/quick/mips/target_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Delete invalid DCHECK.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_87b5d6d4",
        "filename": "compiler/dex/quick/mips/utility_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Let\u0027s minimize the amount of manual bit-twiddling to do a register conversion.  Introduce a function (local to MipsMir2Lir) that does this.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4cd45a8_7d136bec",
        "filename": "compiler/dex/quick/mips/utility_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "as above - use a helper function.  The register encodings aren\u0027t changing as much lately has they were earlier, but they might need to change again.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_a79fb24e",
        "filename": "compiler/dex/quick/mips/utility_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 594,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "again, helper function.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca118f_223a70e0",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 2
      },
      "lineNbr": 1141,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-25T22:40:05Z",
      "side": 1,
      "message": "Once the compiler is working, Mips should not be special-cased here - otherwise you\u0027ll miss out on ART_SMALL_MODE.  If we don\u0027t yet have a kMips64, go ahead and add it and use that here and allow 32-bit Mips to join x86, x86_64, arm and arm64 in the final else clause.",
      "revId": "5c04b2732f38947c143ca25a1812a08f0e347e22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}