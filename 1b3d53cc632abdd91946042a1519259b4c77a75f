{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "084993c7_da769b73",
        "filename": "libnativeloader/test/loadlibrarytest_data_app_manifest.xml",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-11-24T13:36:01Z",
      "side": 1,
      "message": "I\u0027m a bit confused by these names. Are libfoo.oem1 and libfoo.oem2 two different libraries? If so, can we give them more distinctive names (e.g., libbaz.oem)?",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 30,
        "endChar": 86
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f6ee641_72eeef7c",
        "filename": "libnativeloader/test/loadlibrarytest_data_app_manifest.xml",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-11-25T01:19:55Z",
      "side": 1,
      "message": "Yes, they\u0027re different. This is inherited from the old manual test script, and I suspect the intention was to test the same \"base names\" for different OEMs (since the OEM suffixes for essentially all intents and purposes are part of the library name it hardly matters in practice though).\n\nIn any case, I\u0027ve replaced \"foo\" and \"bar\" with somewhat more descriptive names.",
      "parentUuid": "084993c7_da769b73",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 30,
        "endChar": 86
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ebfac0a_54667dd1",
        "filename": "libnativeloader/test/loadlibrarytest_data_app_manifest.xml",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-11-25T12:46:20Z",
      "side": 1,
      "message": "This is still confusing. Which are different libraries and which are duplicates of the same library? I suggest to only use numbers for duplicates.",
      "parentUuid": "7f6ee641_72eeef7c",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 30,
        "endChar": 86
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96f17a66_04f26cdb",
        "filename": "libnativeloader/test/loadlibrarytest_data_app_manifest.xml",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-11-25T13:23:29Z",
      "side": 1,
      "message": "All libraries are different, there are no duplicates (that they\u0027re copied from the same build artifact is just a convenience). The hack with the integer suffixes is because it\u0027s hard to unload libraries between the tests.\n\nIs it the use of the same stem for both numbered and unnumbered libraries that bothers you? I thought it\u0027d be useful that the stem reflects the purpose of the library, i.e. that it\u0027s an extended public library in this case.",
      "parentUuid": "7ebfac0a_54667dd1",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 30,
        "endChar": 86
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61946cc0_64395a6f",
        "filename": "libnativeloader/test/src/android/test/app/VendorAppTest.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-11-24T13:36:01Z",
      "side": 1,
      "message": "Why can\u0027t an app on /vendor load a public library on /system, but an app on /data can?",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 87,
        "endChar": 78
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70544fc9_6112bbee",
        "filename": "libnativeloader/test/src/android/test/app/VendorAppTest.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-11-25T01:19:55Z",
      "side": 1,
      "message": "It\u0027d be a layering violation. Concretely, with GSI the system partition can get updated while vendor isn\u0027t, which may break GSI tests. https://cs.android.com/android/platform/superproject/+/master:art/libnativeloader/library_namespaces.cpp;l\u003d316-320;drc\u003de5f1d635677b297ca422fb981124fffa9386872c",
      "parentUuid": "61946cc0_64395a6f",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 87,
        "endChar": 78
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32521dc4_5bacda4e",
        "filename": "libnativeloader/test/src/android/test/app/VendorAppTest.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-11-25T12:46:20Z",
      "side": 1,
      "message": "I\u0027m not sure what \"public library\" means. Aren\u0027t public libraries supposed to have stable APIs? If not, why can an app on /data load them? I think apps on /data should have the same problem as apps on /vendor do.",
      "parentUuid": "70544fc9_6112bbee",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 87,
        "endChar": 78
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0de2fdb_b2266cf8",
        "filename": "libnativeloader/test/src/android/test/app/VendorAppTest.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-11-25T13:23:29Z",
      "side": 1,
      "message": "\u003e Aren\u0027t public libraries supposed to have stable APIs?\n\nI\u0027m not too acquainted with the API stability guarantees for extended public libs, but from an Android point of view they aren\u0027t stable by definition since they\u0027re OEM specific.\n\n\u003e I think apps on /data should have the same problem as apps on /vendor do.\n\nThe difference is that the apps in /vendor aren\u0027t updatable. Also, I\u0027d think that the only apps on /data that matters for tests are the ones that the tests themselves install.\n\nIn any case, this is intended behaviour that was added by Treble team I believe, and it\u0027s not something I\u0027ve changed in this CL.",
      "parentUuid": "32521dc4_5bacda4e",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 87,
        "endChar": 78
      },
      "revId": "1b3d53cc632abdd91946042a1519259b4c77a75f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}