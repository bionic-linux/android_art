{
  "comments": [
    {
      "key": {
        "uuid": "45f10369_c7d105b4",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-03T20:33:49Z",
      "side": 1,
      "message": "nit: maybe (NAME) and (EXPR) just to be safe?",
      "range": {
        "startLine": 48,
        "startChar": 52,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1b18ae5_82938e94",
        "filename": "runtime/arch/arch_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-05T21:16:44Z",
      "side": 1,
      "message": "Done (in the next CL)",
      "parentUuid": "45f10369_c7d105b4",
      "range": {
        "startLine": 48,
        "startChar": 52,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ae654f4_a29d7a3e",
        "filename": "tools/cpp-define-generator/asm_defines.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T23:26:32Z",
      "side": 1,
      "message": "Curious, what is the \"AsmDefineHelperFor()\" ? To make it easier to inspect the -S ?",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec147a73_80fc24fb",
        "filename": "tools/cpp-define-generator/asm_defines.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T23:43:30Z",
      "side": 1,
      "message": "asm volatiale must be inside a function.\nThat could be achieved various ways, I preferred this approach.",
      "parentUuid": "4ae654f4_a29d7a3e",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb8c43fa_6d7ce599",
        "filename": "tools/cpp-define-generator/asm_defines.cc",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T23:51:43Z",
      "side": 1,
      "message": "I think it\u0027s fine with this approach, might want to add a comment to explain why since it\u0027s not obvious? I think -S readability is a good reason if that applies.",
      "parentUuid": "ec147a73_80fc24fb",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "056b3a67_d34106c0",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-03T20:33:49Z",
      "side": 1,
      "message": "If it\u0027s not too much trouble, can we add a unit test? This would show the example expected input and expected output.",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3440efd7_b17d1c0d",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-05T21:16:44Z",
      "side": 1,
      "message": "I added sample of the expected input and output as comment.\n\nI am not quite sure how to easily add unit test for python script.\n\nIn any case, the value of all the defines is tested in arch_test.",
      "parentUuid": "056b3a67_d34106c0",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9c6e39e_97e82112",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-05T21:36:18Z",
      "side": 1,
      "message": "Here\u0027s an example:\n\nhttps://cs.corp.google.com/android/system/core/adb/Android.bp?rcl\u003ddd589355c1a3ad64cf1f0f9ebceea3f441d44a72\u0026l\u003d459",
      "parentUuid": "3440efd7_b17d1c0d",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc31c155_f5c9452a",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T16:17:04Z",
      "side": 1,
      "message": "Hmmm.... I tried, I am still failing to figure out how to run such test.",
      "parentUuid": "d9c6e39e_97e82112",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2b58052_7dc840f7",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T16:54:02Z",
      "side": 1,
      "message": "its just build+run. the build target makes a self-contained par file\n\n  $\u003e make adb_integration_test_adb\n  $\u003e out/path/to/file/adb_integration_test_adb.par\n\nIf you mean for running your own code, you just call unittest.main and it magically executes all the unittest functions. Just look at art/tools/checker/run_unit_tests.py , you can ask dbrazdil since he wrote it.",
      "parentUuid": "dc31c155_f5c9452a",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d3359dc_7d3778d6",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T18:09:19Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "d2b58052_7dc840f7",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679c735f_fe9b1aea",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T23:50:29Z",
      "side": 1,
      "message": "Yeah, it should be deterministic.\n\nUsually in python scripts something is added to a regular map and then later it\u0027s sorted, but nothing was being added in map in this case. So it\u0027s non-obvious why sorted was needed.\n\nI think the final take-away is that we can guess the compiler might introduce non-determinism, we should add something similar to this as a comment:\n\n   # In case the C++ compiler decides to reorder the AsmDefinesFor_${name} functions,\n   # we don\u0027t want the order of the .h file to change from one compilation to another.\n   # Sorting ensures non-determinism of the #defines.\n\n(Its also good to know why we think its deterministic/non-deterministic since that can often imply a dataflow problem upstream)",
      "parentUuid": "7d3359dc_7d3778d6",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6fd03fc_b0089286",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-03T20:33:49Z",
      "side": 1,
      "message": "nit: Please add description of what this does and a usage example?",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e71004c_dc26893b",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-05T21:16:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fd03fc_b0089286",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d787c05_0fb7b328",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-03T20:33:49Z",
      "side": 1,
      "message": "If it\u0027s not too much trouble, what about using argparse to properly parse arguments?",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d127c1f_cd3c0186",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-05T21:16:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d787c05_0fb7b328",
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a091718d_4d1d2c0c",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-03T20:33:49Z",
      "side": 1,
      "message": "nit: Add comment why you want to sort it? Wouldn\u0027t this mean it would be alphabetical now instead of retaining order from the .def files (which seems more desirable)?",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c9c4936_4c0660f1",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-05T21:16:44Z",
      "side": 1,
      "message": "It is #defines ... the order does not matter.\nI sorted them to make manual diffing easier.\nIt should also help recompilations for things that depend on the output header.",
      "parentUuid": "a091718d_4d1d2c0c",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8c8f26c_86833fdf",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-05T21:36:18Z",
      "side": 1,
      "message": "What do you mean the order does not matter? I\u0027d expect it to logically follow the same order as the .def files, is that not the case?",
      "parentUuid": "4c9c4936_4c0660f1",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "765a002a_a55004a6",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T16:17:04Z",
      "side": 1,
      "message": "I mean, it will compile and work as expected regardless of the order of generated defines.\nSo given that, I prefer when tools produce deterministic output.",
      "parentUuid": "a8c8f26c_86833fdf",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4242165_fbc1db4f",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T16:54:02Z",
      "side": 1,
      "message": "100% agree the tool should have deterministic output.\n\nCan you please elaborate what would make it non-deterministic without the sorted?",
      "parentUuid": "765a002a_a55004a6",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae75c03f_6cc81289",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T18:09:19Z",
      "side": 1,
      "message": "Well, I can think of three things here:\n1) Refactoring the code (which was my primary motivation)\n2) I don\u0027t think the generated assembly by compiler has guaranteed order\n3) I am not sure if the regex findall has guaranteed order\n\nTo be fair, it might be deterministic as is.  It just just force of habit to ensure it.  And it was faster to type sorted() than research the guaranteed of the components.",
      "parentUuid": "f4242165_fbc1db4f",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dad41f0_96ae3bc1",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-10-11T23:26:32Z",
      "side": 1,
      "message": "1) That seems non-deterministic to me. If the code isn\u0027t refactored, order doesn\u0027t change :).\n\n2) Hmm, with the change of it to add the function wrapped, I might be inclined to agree. But I think without the function it would just be non-reorderable (the volatile blocks itself can\u0027t be reordered w.r.t to other volatile blocks).\n\n3) Yes, it should be guaranteed. It\u0027s left-to-right as far as I know.",
      "parentUuid": "ae75c03f_6cc81289",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a799f8e_7889b2ac",
        "filename": "tools/cpp-define-generator/make_header.py",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-11T23:43:30Z",
      "side": 1,
      "message": "It makes me feel little happier to have it sorted - determinism habits.\nNo hard feelings though.  I am happy to remove it if you feel strongly.",
      "parentUuid": "4dad41f0_96ae3bc1",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 36
      },
      "revId": "359e187e731413a893d53c8a5172a2a4c3032e65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}