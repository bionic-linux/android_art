{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9657ac09_7927dd4d",
        "filename": "build/flags/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-09T15:32:14Z",
      "side": 1,
      "message": "What do we lose by setting this to \"none\"?\n\nCould you please add an exportable flag and see if the platform can read it?",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e6eaa69_93b44be3",
        "filename": "build/flags/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-10T10:27:29Z",
      "side": 1,
      "message": "According to go/android-flag-containers#exported-mode, I think that the platform needs to use a new separate `java_aconfig_library` with `mode: \"exported\",`? That new `java_aconfig_library` can be compiled with `core_current`  / `current` because it\u0027s not used by ART / libcore.",
      "parentUuid": "9657ac09_7927dd4d",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73402321_f6b145f4",
        "filename": "build/flags/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-10T10:42:27Z",
      "side": 1,
      "message": "Cool!",
      "parentUuid": "9e6eaa69_93b44be3",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81009c07_93154d61",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-09T15:32:14Z",
      "side": 1,
      "message": "I know the flags are now in bootclasspath, but I\u0027d like to keep the flag lib in `static_libs` to allow r8 shrinking. Is it possible?",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77740acd_c1accdec",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-10T10:27:29Z",
      "side": 1,
      "message": "But wouldn\u0027t it result in duplicate `Flags` class definitions if the class definition exists in both bootclasspath and service-art? \n\nWhat r8 shrinking do you expect ? I have a look at the generated service-art .dexjar file before this change. If I add a usage of a flag, the generated service-art .dexjar still invokes `Flags.m202409Ramp()` instead of `return true` or `return false` directly. I am not sure if R8 shrinking is enabled correctly, e.g. `-userdebug` build though.\n```\n02d7e0:                                        |[02d7e0] com.android.server.art.Utils.isM202409RampEnabled:()Z\n02d7f0: 7100 7600 0000                         |0000: invoke-static {}, Lcom/android/art/flags/Flags;.m202409Ramp:()Z // method@0076\n02d7f6: 1200                                   |0003: const/4 v0, #int 0 // #0\n02d7f8: 0f00                                   |0004: return v0\n```",
      "parentUuid": "81009c07_93154d61",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a405bea6_36e47ef5",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-10T10:42:27Z",
      "side": 1,
      "message": "I\u0027m not sure why there is still `invoke-static`, but it looks like the method returns a constant?\n\nIf I write\n\n```\nif (Flags.m202409Ramp()) {\n  // Do foo...\n} else {\n  // Do bar...\n}\n```\n\nWill r8 keep only one branch?",
      "parentUuid": "77740acd_c1accdec",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fede43f_195a5005",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-10T13:38:59Z",
      "side": 1,
      "message": "Ah. Interesting. Before this change, R8 removes the branch, and generates the following dex codes, but still invoke-static `m202409Ramp()`, because R8 seems to think that it has a side effect.\n\n```\n02e114: 7100 7600 0000                         |0000: invoke-static {}, Lcom/android/art/flags/Flags;.m202409Ramp:()Z // method@0076\n02e11a: 1a00 d801                              |0003: const-string v0, \"123\" // string@01d8\n02e11e: 1a01 d901                              |0005: const-string v1, \"456\" // string@01d9\n02e122: 7120 6600 1000                         |0007: invoke-static {v0, v1}, Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I // method@0066\n02e128: 0e00                                   |000a: return-void\n```\n\nAfter this change, it keeps the branching.\n\nHowever, I have a new patch set, which make R8 remove the branching even if it uses put the aconfig-lib into `libs`, not `static-libs`. But it requires a change in `frameworks/libs/modules-utils/java/aconfig_proguard.flags`. I think that we should track this optimization separately. I will upload the patchset for reference.",
      "parentUuid": "a405bea6_36e47ef5",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34ff7891_dca25c49",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-10T13:46:44Z",
      "side": 1,
      "message": "Thanks for checking. Is it okay to keep duplicate `Flags` class definitions, as long as they are exactly the same?",
      "parentUuid": "7fede43f_195a5005",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc73058_1963f625",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-10T13:57:23Z",
      "side": 1,
      "message": "Um. It may cause other problems, e.g. CTS failures, but not 100% sure.\n\n Why do you want the duplicate Flags class definitions in service-art? For elimination of branchs , we can definitely look for a solution, e.g. we can add  the extra rule that we need into `art/libartservice/service/proguard.flags`.\n \nIf you really want, we can also consider repackaging / jarjar the java_aconfig_library, and leave one copy in different package name in `service-art`, and it will avoid duplicate class definitions.",
      "parentUuid": "34ff7891_dca25c49",
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5970bd5_5c108134",
        "filename": "libartservice/service/java/com/android/server/art/Utils.java",
        "patchSetId": 4
      },
      "lineNbr": 570,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-07-09T15:32:14Z",
      "side": 1,
      "message": "Thanks for checking that it works. I think we can remove this now.",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 570,
        "endChar": 5
      },
      "fixSuggestions": [
        {
          "fixId": "20b0bd78_dea3d3d8",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/Utils.java",
              "range": {
                "startLine": 44,
                "startChar": 0,
                "endLine": 45,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "libartservice/service/java/com/android/server/art/Utils.java",
              "range": {
                "startLine": 567,
                "startChar": 0,
                "endLine": 571,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4811914d_d1674813",
        "filename": "libartservice/service/java/com/android/server/art/Utils.java",
        "patchSetId": 4
      },
      "lineNbr": 570,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2024-07-10T10:27:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5970bd5_5c108134",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 570,
        "endChar": 5
      },
      "revId": "e81db12a8937b324ed744a2363d32faf4c3e4f6a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}