{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cafe3f2f_5bbcc7b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-16T19:00:16Z",
      "side": 1,
      "message": "PTAL",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "631cd679_306b92cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-16T23:39:46Z",
      "side": 1,
      "message": "PTAL",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ea508bc_cc1d58d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2021-04-19T19:46:13Z",
      "side": 1,
      "message": "Thanks for all the hard work here (and sorry that we didn\u0027t catch the issues on an earlier CL). This looks much better now.\n\nAlso appreciate the stress testing of our API guidelines doc. They got a lot of new clarifying content thanks to this discussion ðŸ˜Š The next one should be a lot easier for everyone thanks to that.",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cf133f2_3866645b",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 14
      },
      "lineNbr": 193,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Typo: \"open\"",
      "range": {
        "startLine": 193,
        "startChar": 27,
        "endLine": 193,
        "endChar": 32
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7e0c8ea_32603dc9",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 14
      },
      "lineNbr": 193,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cf133f2_3866645b",
      "range": {
        "startLine": 193,
        "startChar": 27,
        "endLine": 193,
        "endChar": 32
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c90b8a47_974639b4",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 14
      },
      "lineNbr": 300,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "\"Dex file is invalid\" is more precise.",
      "range": {
        "startLine": 300,
        "startChar": 45,
        "endLine": 300,
        "endChar": 66
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36ff1fc5_f01ee329",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 14
      },
      "lineNbr": 300,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c90b8a47_974639b4",
      "range": {
        "startLine": 300,
        "startChar": 45,
        "endLine": 300,
        "endChar": 66
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17b89415_c7d56c2b",
        "filename": "libdexfile/external/dex_file_ext_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Also used in dex_file_supp_test.cc, so can we have it in a common header?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 59,
        "endChar": 2
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3a453ff_3ae91c80",
        "filename": "libdexfile/external/dex_file_ext_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17b89415_c7d56c2b",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 59,
        "endChar": 2
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b9608b9_96f97bf8",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Just call GetTestDexData?",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 31
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc83ff77_f2b747e7",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 57,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "I wanted to keep the success test self-contained.  There is already plenty of \"copy-paste\" in this file.",
      "parentUuid": "3b9608b9_96f97bf8",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 31
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfbaea48_abe84826",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Please test the methods in the Error struct in at least one of these tests.",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0867a6b_f98dc36e",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfbaea48_abe84826",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38dd3633_29a2032d",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "This tests DEX internals rather than the C++ API, so it looks better suited to be at a lower level, i.e. in dex_file_ext_test.cc.",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 129,
        "endChar": 1
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f98decb_f100901f",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "It is at the lower level too.  I would like to keep the copy here as well.",
      "parentUuid": "38dd3633_29a2032d",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 129,
        "endChar": 1
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e743ab7_fe7f0ce9",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-20T17:22:30Z",
      "side": 1,
      "message": "Right, so it is. Then I don\u0027t see the point duplicating it here, but very well, it\u0027s not worth blocking on.",
      "parentUuid": "6f98decb_f100901f",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 129,
        "endChar": 1
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f901158_02ed5467",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 118,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Assuming there is no other way to get an ADexFile_Method instance, I think this is more precise (here and below):\n\n\"Returned data is only valid during the callback call that provided the `self` instance.\"",
      "range": {
        "startLine": 118,
        "startChar": 3,
        "endLine": 118,
        "endChar": 56
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72cd6037_1665fdd0",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 118,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T21:09:41Z",
      "side": 1,
      "message": "The user could try to call findMethodAtOffset from forEachMethod callback.\nIt is crazy, but it possible.",
      "parentUuid": "1f901158_02ed5467",
      "range": {
        "startLine": 118,
        "startChar": 3,
        "endLine": 118,
        "endChar": 56
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "968b995b_277722e8",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 118,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72cd6037_1665fdd0",
      "range": {
        "startLine": 118,
        "startChar": 3,
        "endLine": 118,
        "endChar": 56
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5a1d753_bdaf54e8",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2021-04-19T19:46:13Z",
      "side": 1,
      "message": "(follow up fine here since we can change docs any time)\n\nHow are these (and the three below) encoded? Are they UTF-8? ASCII?\n\nI\u0027m also a little confused by \"must be copied immediately\". Is that actually \"will become invalid when the ADexFile_Method is destroyed\"?",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a07fc86f_7794f668",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T20:29:27Z",
      "side": 1,
      "message": "They use the encoding defined in the DEX spec, which is \"almost UTF8\".  Should I just say \"see DEX spec?\"?  \n\nRight, for the qualified name, the implementation is that there is \"temporary string\" on the ADexFile instance which gets reused (because we had long debates about alloc/free costs in the team, and this approach needs no alloc/free).\n\nThe other two are actually pointers into the Dex file, so could be kept, but I didn\u0027t want to promise that will be always the case in the API.\n\nThe effect now is that, qualified name is valid until next qualified name getter, and the other two are always valid.\n\nWhat I wanted to say in the doc though is that we promise the bare minimum. If you call\nforEachMethod(...{\n f \u003d getFooName()\n // f is valid here\n b \u003d getBarName()\n // f is no longer valid here\n})\n// both f and b are no longer valid after the callback.\n\n// Returned data must be copied immediately by the user\n// (before another API call on the ADexFile_Method and before the end of callback).",
      "parentUuid": "b5a1d753_bdaf54e8",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b17b3b4f_dcaf9f3a",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2021-04-19T21:20:23Z",
      "side": 1,
      "message": "Yeah, \"See the DEX spec for encoding information.\" would be enough of a hint to the caller (and probably a link)",
      "parentUuid": "a07fc86f_7794f668",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d306b69_0e0a4311",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T18:15:19Z",
      "side": 1,
      "message": "Done.  Could I get NDK+1 bump please?",
      "parentUuid": "b17b3b4f_dcaf9f3a",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f17be2e4_cc753842",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 122,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Should it say \"only\" here?",
      "range": {
        "startLine": 122,
        "startChar": 11,
        "endLine": 122,
        "endChar": 45
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7009a2d6_de54984d",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 14
      },
      "lineNbr": 122,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f17be2e4_cc753842",
      "range": {
        "startLine": 122,
        "startChar": 11,
        "endLine": 122,
        "endChar": 45
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2d503a3_a0f8ae1d",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Should have a longer name since it leaks into client code.",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70abd8a5_5d43c204",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2d503a3_a0f8ae1d",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "117b60e4_93be09ad",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "These were static members in the private section of DexFile to avoid external visibility. Why change that?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd14d01f_c9de7eea",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T21:09:41Z",
      "side": 1,
      "message": "I don\u0027t see harm it letting the users call the C methods directly.\n\nI also wanted to keep the C++ really as minimal as possible.",
      "parentUuid": "117b60e4_93be09ad",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fb8b875_2cbd8a06",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "I am still tempted to intentionally expose the C API as the globals",
      "parentUuid": "cd14d01f_c9de7eea",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc441b8e_ece10a91",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-20T17:22:30Z",
      "side": 1,
      "message": "I think it\u0027s better to hide, with the reasoning that if it isn\u0027t needed then there\u0027s no reason to expose. Maybe a future version can dispense with the dynamic loading, or perhaps use some linker trick to avoid the variables.\n\nBut I suppose it\u0027s a bit of a judgement call, so I\u0027m not blocking on it.",
      "parentUuid": "3fb8b875_2cbd8a06",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b614fb3_1d74eba0",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "This should be TryLoadLibdexfile now.",
      "range": {
        "startLine": 51,
        "startChar": 5,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30b3169d_e8b29b4a",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b614fb3_1d74eba0",
      "range": {
        "startLine": 51,
        "startChar": 5,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5566d0eb_adcd3574",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Make the class final since you\u0027re making the destructor non-virtual.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be9848ef_8d048684",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "\"class\" here since this has an owned pointer. http://go/cstyle#Structs_vs._Classes",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ddd5d8e_3c1979ff",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done.\n\nYou keep quoting google style docs... but to my knowledge those don\u0027t really apply to Android.\n\nGiven choice, we can still opt to follow them, but sometimes the Android style is contradictory to Google style in the first place.",
      "parentUuid": "be9848ef_8d048684",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8bcdbf9_69787203",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done (made it virtual)",
      "parentUuid": "5566d0eb_adcd3574",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89856b4b_23d910eb",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-20T17:22:30Z",
      "side": 1,
      "message": "I like referring to style guides to avoid arbitrary choices and cut down on discussion. (I apply it to myself too - if there\u0027s something I personally don\u0027t quite like, but cannot find support for in a style guide, I generally refrain from commenting on it, unless I think it\u0027s objectively questionable in some way.)\n\nAs for what applies here, there\u0027s go/art-style-guide that I\u0027ve gathered should apply to all ART code, and it falls back to the Google style guide. In other parts of Android I don\u0027t know if there\u0027s any official guidance, but it\u0027s still Google after all so I think go/cstyle has influence.\n\nThen of course any style guide is just a guide - if some other convention is clear from context then that should usually take precedence (as many style guides point out themselves).",
      "parentUuid": "8ddd5d8e_3c1979ff",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "487dedc7_bc52c44b",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T17:37:24Z",
      "side": 1,
      "message": "Yes.  I agree with all of above.  I was just highlighting that the guide is non-binding for us.  Still good idea to know it of course.",
      "parentUuid": "89856b4b_23d910eb",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12c69250_c14cccf4",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 80,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "We could store the location and let this return an std::string message that includes it, given that we still have the location in Create. The benefit (and the reason location was an argument in the first place) is that callers are less likely to log or propagate errors that leaves out that often very useful info.",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15fa13b5_ec30fc89",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 80,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T21:09:41Z",
      "side": 1,
      "message": "By definition the caller of the Create method has the location argument.\nSo the caller can compose the error message as they see fit.\nBut again, I want to keep the C++ API 1:1 to the C API",
      "parentUuid": "12c69250_c14cccf4",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6596cfcd_e165e93f",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 80,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "15fa13b5_ec30fc89",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ff54f65_1bb2178d",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 83,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Avoid implicit conversion operators: http://go/cstyle#Implicit_Conversions\n\n\"bool ok()\" is what\u0027s used for a similar purpose in Result\u003c\u003e objects: https://cs.android.com/android/platform/superproject/+/master:system/libbase/include/android-base/expected.h;l\u003d334;drc\u003dmaster (Although it ought to be \"Ok\" here to comply with method naming conventions.)",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 19
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd153ed2_36cd6467",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 83,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ff54f65_1bb2178d",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 19
      },
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15c284f0_4e654e71",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "const",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dc2d8d5_26de915f",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15c284f0_4e654e71",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc24f950_ecd9767b",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-20T17:22:30Z",
      "side": 1,
      "message": "I thought it\u0027d be fine to keep direct access to the field even when it\u0027s const, but ok.",
      "parentUuid": "2dc2d8d5_26de915f",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f1a4f39_682d44ab",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "So now we\u0027re paying the cost of quite a lot of access function calls in the callback here. Is that of no concern? From the other discussion I thought John opened for versioned structs as an option.\n\n+Yabin, note this is primarily affecting simpleperf that used to use GetAllMethodInfos.",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bbf98be_d2ad07bd",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-19T21:09:41Z",
      "side": 1,
      "message": "It is a concern, but not as big one as the string alloc/free debate.\n\nIt is intentional concession to the NDK guidelines.",
      "parentUuid": "7f1a4f39_682d44ab",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9498ab44_de5a0ae1",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1bbf98be_d2ad07bd",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45416663_761b5203",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-20T17:22:30Z",
      "side": 1,
      "message": "Ok. Personally I don\u0027t have much of a sense of the regression we\u0027re talking about here.",
      "parentUuid": "9498ab44_de5a0ae1",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ac2368b_087d9981",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 116,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T17:37:24Z",
      "side": 1,
      "message": "I am hoping that the extra function calls can get lost in the \"pretty printing cost\".",
      "parentUuid": "45416663_761b5203",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93e51464_92cd3646",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 123,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-19T20:31:20Z",
      "side": 1,
      "message": "Please make private. There\u0027s also no reason to keep the initialisation when you\u0027re removing the move constructor.",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "866efdc7_696846e8",
        "filename": "libdexfile/external/include/art_api/dex_file_support.h",
        "patchSetId": 14
      },
      "lineNbr": 123,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-20T12:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93e51464_92cd3646",
      "revId": "4803bed79501eb25abd0e176d8f14cf06e66a5a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}