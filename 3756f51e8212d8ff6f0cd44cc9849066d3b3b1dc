{
  "comments": [
    {
      "key": {
        "uuid": "b977f3bf_dd321fa3",
        "filename": "compiler/optimizing/locations.h",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-08-05T18:25:49Z",
      "side": 1,
      "message": "For which one do you need this? Why are the specific ones below not enough?",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 656,
        "endChar": 37
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b977f3bf_fd8b5b19",
        "filename": "compiler/optimizing/locations.h",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-05T18:29:35Z",
      "side": 1,
      "message": "This is to be able to access private members from static functions in RegisterAllocatorTest; the macros below only give friendship to the code inside TEST_F() {...} blocks.\nShould I add a comment, or is there a better way to handle this?",
      "parentUuid": "b977f3bf_dd321fa3",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 656,
        "endChar": 37
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b977f3bf_e82b9be6",
        "filename": "compiler/optimizing/locations.h",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-08-05T18:32:29Z",
      "side": 1,
      "message": "But then the below ones should be removed.",
      "parentUuid": "b977f3bf_fd8b5b19",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 656,
        "endChar": 37
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b977f3bf_4ef65792",
        "filename": "compiler/optimizing/locations.h",
        "patchSetId": 2
      },
      "lineNbr": 656,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-05T20:35:09Z",
      "side": 1,
      "message": "Right, good point. Done.",
      "parentUuid": "b977f3bf_e82b9be6",
      "range": {
        "startLine": 656,
        "startChar": 2,
        "endLine": 656,
        "endChar": 37
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b977f3bf_9d7a674f",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-08-05T18:25:49Z",
      "side": 1,
      "message": "Not common style to do this without braces.\n\nIt would also be easier to distinguish failures if you used two explicit TEST_Fs.",
      "range": {
        "startLine": 183,
        "startChar": 2,
        "endLine": 183,
        "endChar": 54
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b977f3bf_e8b87bc3",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-05T18:29:35Z",
      "side": 1,
      "message": "Good point regarding two explicit TEST_Fs, I\u0027ll do that.",
      "parentUuid": "b977f3bf_9d7a674f",
      "range": {
        "startLine": 183,
        "startChar": 2,
        "endLine": 183,
        "endChar": 54
      },
      "revId": "3756f51e8212d8ff6f0cd44cc9849066d3b3b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}