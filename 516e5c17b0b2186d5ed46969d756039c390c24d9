{
  "comments": [
    {
      "key": {
        "uuid": "79bfe48c_d5573f38",
        "filename": "compiler/dex/quick/x86/codegen_x86.h",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-12T18:36:14Z",
      "side": 1,
      "message": "7?",
      "range": {
        "startLine": 98,
        "startChar": 60,
        "endLine": 98,
        "endChar": 61
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bfe48c_6848f676",
        "filename": "compiler/dex/quick/x86/codegen_x86.h",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "Copied from my generic check. Should of course be changed.",
      "parentUuid": "79bfe48c_d5573f38",
      "range": {
        "startLine": 98,
        "startChar": 60,
        "endLine": 98,
        "endChar": 61
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_e7d41dcf",
        "filename": "compiler/dex/quick/x86/codegen_x86.h",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "Just like this one should be smaller.",
      "range": {
        "startLine": 99,
        "startChar": 57,
        "endLine": 99,
        "endChar": 63
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9a7f088_2a567b92",
        "filename": "compiler/dex/quick/x86/codegen_x86.h",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-12T18:36:14Z",
      "side": 1,
      "message": "it\u0027d be nice if MakeRegPair guarded against SP being part of the pair",
      "range": {
        "startLine": 101,
        "startChar": 27,
        "endLine": 101,
        "endChar": 38
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9a7f088_aa058b78",
        "filename": "compiler/dex/quick/x86/codegen_x86.h",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "MakeRegPair doesn\u0027t have access to the definitions of what SP is. So the DCHECK above is as good as it gets.",
      "parentUuid": "d9a7f088_2a567b92",
      "range": {
        "startLine": 101,
        "startChar": 27,
        "endLine": 101,
        "endChar": 38
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bfe48c_d52e5fc0",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-12T18:36:14Z",
      "side": 1,
      "message": "CHECK(!target64) ? assertions are more powerful than comments.",
      "range": {
        "startLine": 199,
        "startChar": 50,
        "endLine": 199,
        "endChar": 57
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bfe48c_c81b228d",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "That\u0027s not how it works. This is a \"helper\" to the \"general\" TargetReg, which just gives a known size (as TargetReg(symbolic_reg) isn\u0027t specified strongly enough). What should be DCHECK-ed is whether we always return 32b, but that will be noticed in the caller.",
      "parentUuid": "79bfe48c_d52e5fc0",
      "range": {
        "startLine": 199,
        "startChar": 50,
        "endLine": 199,
        "endChar": 57
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_e7689dbd",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-07-12T15:15:54Z",
      "side": 1,
      "message": "Does anyone reference this for x86?",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 208,
        "endChar": 65
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bfe48c_b5316b23",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-12T18:36:14Z",
      "side": 1,
      "message": "Not that I\u0027m aware of. It\u0027d be quick to experiment with making this invalid too.",
      "parentUuid": "1980a8c3_e7689dbd",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 208,
        "endChar": 65
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_67c9ed36",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "Yes, someone does. With my rewrite (that assumes TargetReg32 returns a 32b register) I got a FATAL. I think it\u0027s some generic offset code somewhere.",
      "parentUuid": "79bfe48c_b5316b23",
      "range": {
        "startLine": 207,
        "startChar": 51,
        "endLine": 208,
        "endChar": 65
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_0704b9e4",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-07-12T18:36:14Z",
      "side": 1,
      "message": "5?",
      "range": {
        "startLine": 214,
        "startChar": 37,
        "endLine": 214,
        "endChar": 38
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1980a8c3_c7d7a1d1",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-07-12T20:26:19Z",
      "side": 1,
      "message": "Common code for x86 and x86-64. Intel chose to use InvalidReg instead of a FATAL here...",
      "parentUuid": "1980a8c3_0704b9e4",
      "range": {
        "startLine": 214,
        "startChar": 37,
        "endLine": 214,
        "endChar": 38
      },
      "revId": "516e5c17b0b2186d5ed46969d756039c390c24d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}