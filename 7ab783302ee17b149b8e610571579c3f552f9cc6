{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b3db5a1_e99d065c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-10-16T12:49:08Z",
      "side": 1,
      "message": "Is there a way to test this? Java tests similar to hotness counters, or using `true_count` and `false_count` could good ideas https://android-review.git.corp.google.com/c/platform/art/+/2779128/8/compiler/optimizing/graph_visualizer.cc",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "464266a7_16a3a951",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-10-16T15:32:57Z",
      "side": 1,
      "message": "Good idea! Done.",
      "parentUuid": "2b3db5a1_e99d065c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39e15d03_6bdcac25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-10-16T12:14:41Z",
      "side": 1,
      "message": "Thanks Santiago, PTAL.",
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9707d488_6242d40e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 3528,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-10-16T12:49:08Z",
      "side": 1,
      "message": "If we are going 0 to 0xffff wouldn\u0027t these need to start at `0`?",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3528,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f6b7169_2f1dab54",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 3528,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-10-16T15:32:57Z",
      "side": 1,
      "message": "No, a value of 0 means branch not taken. So I\u0027m making the default here as both targets always taken.",
      "parentUuid": "9707d488_6242d40e",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3528,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a1524ed_c441a9c5",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 3528,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-10-16T15:42:57Z",
      "side": 1,
      "message": "If we start at `0xffff` and we increase by `1` every time we take a branch, wouldn\u0027t be off by one? e.g. if we take it one time, we go to `0`.",
      "parentUuid": "9f6b7169_2f1dab54",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3528,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "260aec8b_93bdc40b",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 3528,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2023-10-16T15:53:05Z",
      "side": 1,
      "message": "These are the counts that will be used by the compiler for generating better code  If we set both of them to 0, compiler thinks they are never taken. These counters would be read from the profiling info that was collected from the baseline code. Maybe we could rename them to avoid confusion but not sure what\u0027s a good name here. \n\nThe counters that are incremented are a part of the ProfilingInfo object which is initialized to 0 using memset in the ProfilingInfo constructor (see profiling_info.cc).",
      "parentUuid": "3a1524ed_c441a9c5",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3528,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8bb4a10_777e5fb3",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 3528,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-10-16T15:55:48Z",
      "side": 1,
      "message": "Ah, they are initialized to `0` somewhere else. They are initialized to `max` here but it could potentially be any non-zero number.",
      "parentUuid": "260aec8b_93bdc40b",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3528,
        "endChar": 58
      },
      "revId": "7ab783302ee17b149b8e610571579c3f552f9cc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}