{
  "comments": [
    {
      "key": {
        "uuid": "f5975e5c_22302e09",
        "filename": "compiler/compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-10-31T10:34:18Z",
      "side": 1,
      "message": "I know you just moved this around but it worths explaining more about why a quarter. Looks pretty magic. If the not-overflow guarantee is the only rationale for it then just say so.",
      "range": {
        "startLine": 87,
        "startChar": 85,
        "endLine": 87,
        "endChar": 92
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a166bc_6092b262",
        "filename": "compiler/compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-31T10:36:12Z",
      "side": 1,
      "message": "This is plain heuristic. Bill may have some history.",
      "parentUuid": "f5975e5c_22302e09",
      "range": {
        "startLine": 87,
        "startChar": 85,
        "endLine": 87,
        "endChar": 92
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a166bc_406e8e9d",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2014-10-31T12:17:47Z",
      "side": 1,
      "message": "directly",
      "range": {
        "startLine": 276,
        "startChar": 17,
        "endLine": 276,
        "endChar": 25
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a166bc_40f56e61",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-31T12:22:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5a166bc_406e8e9d",
      "range": {
        "startLine": 276,
        "startChar": 17,
        "endLine": 276,
        "endChar": 25
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5975e5c_e26ec6f0",
        "filename": "test/418-const-string/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-10-31T10:34:18Z",
      "side": 1,
      "message": "is it \"may\" or \"will\"? For testing we should try to know for sure.",
      "range": {
        "startLine": 19,
        "startChar": 19,
        "endLine": 19,
        "endChar": 22
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a166bc_408fae34",
        "filename": "test/418-const-string/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-31T10:36:12Z",
      "side": 1,
      "message": "You never know what the compiler will end up doing. In 6 months from now, will we have made it so that there is no slow path anymore? Can be.",
      "parentUuid": "f5975e5c_e26ec6f0",
      "range": {
        "startLine": 19,
        "startChar": 19,
        "endLine": 19,
        "endChar": 22
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d59c1a86_01fd2a7f",
        "filename": "test/418-const-string/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2014-10-31T12:17:47Z",
      "side": 1,
      "message": "As this test contains a single literal string, I suppose dx translates this line into a const-string Dex instruction.  What about exercising const-string/jumbo as well, by either creating a lot of literal strings (more than 2^16 I suppose) or using Smali?",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5975e5c_62ee36c7",
        "filename": "test/418-const-string/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-10-31T12:22:10Z",
      "side": 1,
      "message": "The const-string-jumbo case is covered in the test 056-const-string-jumbo.",
      "parentUuid": "d59c1a86_01fd2a7f",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5975e5c_02a2ca8f",
        "filename": "test/418-const-string/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2014-10-31T12:25:07Z",
      "side": 1,
      "message": "Oh, right.",
      "parentUuid": "f5975e5c_62ee36c7",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "20be14da017f5d7e77beb1c4c855a589caa3256b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}