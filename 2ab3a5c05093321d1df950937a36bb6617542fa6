{
  "comments": [
    {
      "key": {
        "uuid": "72b77fb5_8c6e2adb",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-26T20:23:07Z",
      "side": 1,
      "message": "Have you considered templatizing over the opcode? That could allow you to share the preamble and get rid of the macro. Maybe something like (CRTP as partial specialization isn\u0027t allowed for functions, so I don\u0027t know how to share the base code otherwise):\n\n template \u003cbool ac, bool ta, typename T\u003e\n struct HandlerBase {\n   void Handle() {\n     PREAMBLE code\n     static_cast\u003cT*\u003e(this)-\u003eHandleInst();\n   }\n };\n \n template \u003cbool ac, bool ta, Opcode op\u003e\n struct InstructionHandler : public HandlerBase\u003cInstructionHandler\u003cac, ta, op\u003e\u003e {\n   void HandleFoo();\n };\n\n template \u003c\u003e void InstructionHandler\u003cac, ta, ADD\u003e::HandleFoo() {\n   ...\n }\n\n switch (opcode):\n   case ADD:\n     InstructionHandler\u003cac,ta,ADD\u003e handler;\n     handler.Handle();",
      "range": {
        "startLine": 274,
        "startChar": 0,
        "endLine": 275,
        "endChar": 26
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01607817_49fad2ba",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-26T20:23:07Z",
      "side": 1,
      "message": "Add a comment on the method names (style).",
      "range": {
        "startLine": 277,
        "startChar": 21,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea120e64_b85352c0",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T17:35:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01607817_49fad2ba",
      "range": {
        "startLine": 277,
        "startChar": 21,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a83b1866_dd7e73fb",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2705,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-26T20:23:07Z",
      "side": 1,
      "message": "UNDEF all macros.",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2705,
        "endChar": 2
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbda66f0_06738df7",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2705,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T15:02:51Z",
      "side": 1,
      "message": "Which ones?  I know some of the old marcos were undefed, but\n1) I didn\u0027t affect that in this CL\n2) The macros don\u0027t leak out really\n3) I want to kill the macros in followup CLs.",
      "parentUuid": "a83b1866_dd7e73fb",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2705,
        "endChar": 2
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e86732b_d8c15daf",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2705,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-29T15:09:06Z",
      "side": 1,
      "message": "You move the use cases, you can have stricter macro lifetimes now.",
      "parentUuid": "dbda66f0_06738df7",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2705,
        "endChar": 2
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "065781fd_0feba010",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2705,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T15:16:17Z",
      "side": 1,
      "message": "It still feels like \"additional fix of code I didn\u0027t touch\" but sure... I can bundle that in...",
      "parentUuid": "5e86732b_d8c15daf",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2705,
        "endChar": 2
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa86ae2f_64025aec",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2705,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T17:35:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "065781fd_0feba010",
      "range": {
        "startLine": 2705,
        "startChar": 0,
        "endLine": 2705,
        "endChar": 2
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385aefb9_721d82e1",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T15:02:51Z",
      "side": 1,
      "message": "There is a lot of further cleanup that is possible, but I want to keep that for followup CLs.\n\nIn the case of preamble, I was just planing to turn the macro into member function and do handler.Preamble(); here.",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e327b65_315854f2",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-29T15:09:06Z",
      "side": 1,
      "message": "See my comment above. This should be explained somewhere, as it\u0027s important to understand your eventual design goal, and how a single handler fits there.\n\n(E.g., not sure how handler.Preamble() as a single function distinguishes that one result-register case, an \"if\" in that function?)",
      "parentUuid": "385aefb9_721d82e1",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a35101_e2da0461",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T15:16:17Z",
      "side": 1,
      "message": "I suppose maybe I can include that in this CL as well then.\n\nYeah, \"if\" or conditional should be enough to handle the one odd case.\n\n(I don\u0027t like we have to special case it, and I don\u0027t like the whole result handling, but again, that is cleanup for different CL)",
      "parentUuid": "2e327b65_315854f2",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c2af244_c4d76b07",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T17:35:15Z",
      "side": 1,
      "message": "I spoke too soon.  It is non-trivial due to \"return\" vs \"break\" control-flow.  I will do it as proper separate CL.",
      "parentUuid": "84a35101_e2da0461",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d293aa6_4f94199a",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-29T18:00:24Z",
      "side": 1,
      "message": "The point I wanted to make is: this CL is technically humongous, because you\u0027re moving a lot of code. If it\u0027s gonna be factored differently eventually because that\u0027s easier to maintain that needs to be explained/discussed now. Not saying you should merge things.",
      "parentUuid": "7c2af244_c4d76b07",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c266b542_ffe0d23b",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-29T18:33:26Z",
      "side": 1,
      "message": "Ah, sure.  I added couple of TODO, which describe the main next steps.  Is the enough?\n\nAlso, I forgot to say... this CL is much reasonable to read if you ignore whitespace in gerrit.",
      "parentUuid": "1d293aa6_4f94199a",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb72b869_f27c0cec",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-31T18:01:49Z",
      "side": 1,
      "message": "I added follow up CLs to show at least some of the things I want to do next (remove the large macros, and fix the pathological build time).  I agree that without that this CL was somewhat theoretical... (and without the CLs it would be speculative discussion still)",
      "parentUuid": "c266b542_ffe0d23b",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60caf7a1_76d7b0cb",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 2743,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-10-31T19:55:07Z",
      "side": 1,
      "message": "Thanks. Looks alright to me (though I still prefer templates ;-) ).\n\nWhat the CL needs is performance evaluation (especially for debug builds). I\u0027m wondering whether we need a REALLY_ALWAYS_INLINE, to keep debug builds viable.",
      "parentUuid": "bb72b869_f27c0cec",
      "range": {
        "startLine": 2743,
        "startChar": 8,
        "endLine": 2743,
        "endChar": 30
      },
      "revId": "2ab3a5c05093321d1df950937a36bb6617542fa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}