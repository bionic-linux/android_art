{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d591476_63a22cb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-16T16:54:27Z",
      "side": 1,
      "message": "Please review. The 3 Presubmit failures are the same error and seem unrelated to the change.",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaad2886_2d5a2d80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-16T18:00:58Z",
      "side": 1,
      "message": "I believe the original reason to add the 5s delay was to take care of case where user is switching between 2 (or more) apps back and forth. That issue can still arise with this CL, right?\n\nIs it not possible to pass on a signal from the framework whether the app is getting frozen?",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0b85f95_e258e24c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-16T18:17:36Z",
      "side": 1,
      "message": "I have already updated the frameworks to signal here for jank non-perceptible (update state) only when the app is transitioning into cached mode which is when the GC should start happening so that it finishes before the app gets frozen. So the framework will give the correct signal and ART will simply execute the GC.",
      "parentUuid": "aaad2886_2d5a2d80",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99bf60b9_de95c524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-16T19:07:17Z",
      "side": 1,
      "message": "ok so does that mean that now when an app is in background it is still considered jank-perceptible? I\u0027m assuming we don\u0027t freeze apps immediately when they go to background.\n\nI ask this because there are other places as well where we do things differently based on this signal.",
      "parentUuid": "d0b85f95_e258e24c",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bffacb88_413c224c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-16T19:07:17Z",
      "side": 1,
      "message": "LGTM, but Hans has recently worked more closely on this front, so I\u0027ll like to have his +2.",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef3546bb_9d6cd014",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-16T19:40:39Z",
      "side": 1,
      "message": "Hans, please take a look.",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b14ba1a9_4aa688f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-16T19:40:39Z",
      "side": 1,
      "message": "Only in cached state an app is considered non-jank perceptible and it can only transition into frozen state from cached state.\n\nMy understanding from others is that this signal is no longer used in other cases and I have seen no other code using it currently.",
      "parentUuid": "99bf60b9_de95c524",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec6b5807_6a951ede",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-03-16T22:37:48Z",
      "side": 1,
      "message": "So when does an app transition to cached state? If I switch back to a previously cached app, does the first one immediately go into jank-imperceptible state, or is there a delay? It seems to me that something should provide a delay; we don\u0027t want the GC to trigger just as another app is starting.\n\nI\u0027m also concerned about whether there is a frameworks version dependency here. If we change who adds the delay, won\u0027t this \"break\" when the ART module is updated on an old release? (\"Break\" here would mean something performance-suboptimal would happen, not that it crashes.)",
      "parentUuid": "b14ba1a9_4aa688f2",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "082c4966_d1db4965",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-17T00:01:36Z",
      "side": 1,
      "message": "We need to differentiate 2 things, what the frameworks does and what ART does. The frameworks is responsible for the app life cycle and hence will transition the app into cached state when it should be. GC should not be triggered after a delay when we don\u0027t know the state of the app at that time instead it should be triggered on a clear signal from the frameworks which is what we are doing here.\n\nAs for performance-suboptimal on old releases due to the framework changes, it is already suboptimal to issue a GC based on the 5s delay currently and changes have been happening in the framework including to this signal previously changing its delay. We are mindful to make sure nothing breaks but in terms of old release performance it is already suboptimal.",
      "parentUuid": "ec6b5807_6a951ede",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "941307fd_5d3cd894",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-17T00:21:49Z",
      "side": 1,
      "message": "Just to clarify, the suboptimal behavior that you are referring to is possibly because of the disparity due to the recent changes in frameworks that you referred to. Originally, the delay made perfect sense. It increases the likelihood of the app staying in background. Given this, I share the concern regarding ART module releases that Hans brought up.\n\nI agree with the first paragraph. But the changes in frameworks are very recent (your CL is merged 3 days ago).",
      "parentUuid": "082c4966_d1db4965",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b6d63d_98f815a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-17T00:58:08Z",
      "side": 1,
      "message": "No, I am not talking about my recent frameworks change, that is part of the solution to improve transitional GC (refer to the proposal in the bug). The suboptimal behavior is the original state, the 5s is just a guess that doesn\u0027t correlate to anything, and the frameworks changes that I am referring to have been happening for a long time, e.g. there was another 5s frameworks delay that was removed. So in older releases from performance perspective it is already suboptimal.",
      "parentUuid": "941307fd_5d3cd894",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abe7a613_ac109eb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-03-17T22:53:57Z",
      "side": 1,
      "message": "It seems to me that the core problem here is that we have an @SystemApi call, namely VMRuntime.updateProcessState(), whose semantics are seriously underdefined. \"Jank perceptible\" does not have an established definition in the Android lifecycle that I\u0027m aware of. Could you please fix that, by adding a comment in either VMRuntime.java or process_state.h? If the semantics changed over time, so that we have to deal with multiple versions in ART, we need that documented as well.\n\nOne thing that seems particularly critical here is whether updateProcessState is called around the onPause() or onStop() call, or significantly later. The current documentation, if anything, implies the former. In that case, I would think it\u0027s important that we have a delay, at least until after those methods stop running, since they may allocate. And we want to guard against immediate resumption, as Lokesh said. if this actually reflects a different, later transition, the API needs to specify that.",
      "parentUuid": "45b6d63d_98f815a0",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b48ed9d_83838e8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017430
      },
      "writtenOn": "2023-03-17T22:58:31Z",
      "side": 1,
      "message": "the flow is\n\n1. app A is top-app, user leaves app A\n2. app A gets onStop, still oom_adj 0 until it\u0027s done with onStop or onStop times out\n3. app A becomes previous app, oom_adj 700\n4. user runs a second app, app A is demoted from previous to cached, oom_adj 900\n5. app A receives setProcessState(cached) from system_server, triggering the JANK_IMPERCEPTIBLE change here\n\nthis is as good of a signal for \"the app is actually in the background not doing anything\" as we have.",
      "parentUuid": "abe7a613_ac109eb9",
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec14f961_a387f46f",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-16T18:00:58Z",
      "side": 1,
      "message": "I believe this and preceding comment should also be removed given their usage is removed. Please double check though.",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 187,
        "endChar": 57
      },
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bb0444b_5f5fd016",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-03-16T18:17:36Z",
      "side": 1,
      "message": "I checked this already and the usage is actually not removed and that\u0027s why I changed the comment and left the flag to clarify the usage. You can still stress the GC using this flag since it bypasses the heap threshold condition.",
      "parentUuid": "ec14f961_a387f46f",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 187,
        "endChar": 57
      },
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9530d29_87d46880",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-16T19:07:17Z",
      "side": 1,
      "message": "thanks for conforming.",
      "parentUuid": "0bb0444b_5f5fd016",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 187,
        "endChar": 57
      },
      "revId": "75506322180973b49a3266c2ae82724721a89704",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}