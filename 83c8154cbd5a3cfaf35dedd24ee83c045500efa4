{
  "comments": [
    {
      "key": {
        "uuid": "2771fe1c_0d76f9b9",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2375,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-20T14:02:41Z",
      "side": 1,
      "message": "method",
      "range": {
        "startLine": 2375,
        "startChar": 22,
        "endLine": 2375,
        "endChar": 31
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_f6422f24",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2016-01-20T01:01:42Z",
      "side": 1,
      "message": "Does some compiler define this?  Or is this just wishful thinking?",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676db610_dabd8cd3",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-20T03:14:57Z",
      "side": 1,
      "message": "Yes, wishful thinking. :-)\n\nMore seriously, I did not really know what to do here, so was hoping for some feedback on the matter. I can also leave it at simply false....",
      "parentUuid": "07495aa4_f6422f24",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274e5eac_aec32e62",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2016-01-20T03:56:23Z",
      "side": 1,
      "message": "You can just leave it as is but add a comment, or do what prefers_locked_add does and just default to false.\n\nI would tend to leave as is with a comment.",
      "parentUuid": "676db610_dabd8cd3",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "076cfa46_57279ca1",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-20T12:03:18Z",
      "side": 1,
      "message": "I agree with Mark.  Unless we have evidence that `__POPCNT__` works as expected on GCC and Clang, we should default `has_POPCNT` to `false` on x86.",
      "parentUuid": "274e5eac_aec32e62",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47efd232_63eb9608",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-21T04:13:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "274e5eac_aec32e62",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4718b22c_7eb7a59f",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-21T04:13:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "076cfa46_57279ca1",
      "range": {
        "startLine": 152,
        "startChar": 8,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4768b202_80828524",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-19T23:22:42Z",
      "side": 1,
      "message": "actually, now that this is a feature, it becomes much harder to test with a checker. \n\nit would be nice if the checker could include features as I sketch in this TODO\n\nany other ideas for this?",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a77deeee_b15b82d6",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-20T12:03:18Z",
      "side": 1,
      "message": "Maybe file a bug for a Checker feature request (and add its number to this TODO)?",
      "parentUuid": "4768b202_80828524",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8780ea14_ed67e162",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-20T14:02:41Z",
      "side": 1,
      "message": "I think that\u0027s overkill for checker.\n\nWhat\u0027s the plan for testing the generated code then? Can\u0027t we assume all the platforms we use have the feature?",
      "parentUuid": "a77deeee_b15b82d6",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_99931cd4",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2016-01-20T14:16:32Z",
      "side": 1,
      "message": "In theory, some machines may not have it.  In practice, most (if not all) processors after 2010 probably have it.  I don\u0027t really know how to answer this question.",
      "parentUuid": "8780ea14_ed67e162",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34068e0b_7c97796f",
        "filename": "test/564-checker-bitcount/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-21T04:13:39Z",
      "side": 1,
      "message": "Not an easy way out I am afraid. I filed the feature request and added the bug # here.",
      "parentUuid": "07495aa4_99931cd4",
      "range": {
        "startLine": 19,
        "startChar": 11,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "83c8154cbd5a3cfaf35dedd24ee83c045500efa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}