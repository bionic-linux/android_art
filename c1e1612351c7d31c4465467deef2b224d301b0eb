{
  "comments": [
    {
      "key": {
        "uuid": "00889ea9_34001e61",
        "filename": "runtime/gc/space/image_space.cc",
        "patchSetId": 5
      },
      "lineNbr": 2432,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-03-13T07:28:41Z",
      "side": 1,
      "message": "You need to run a checkpoint between this and the madvise(), otherwise another thread can use an already retrieved pointer to the metadata after the madvise().\n\nI think we should move the ClearPreResolvedString() call to a separate loop in the Runtime::NotifyStartupCompleted(). ImageSpace should not request checkpoints.",
      "range": {
        "startLine": 2432,
        "startChar": 24,
        "endLine": 2432,
        "endChar": 47
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b7fd735_cfb7a6b1",
        "filename": "runtime/gc/space/image_space.cc",
        "patchSetId": 5
      },
      "lineNbr": 2432,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2019-03-13T19:00:48Z",
      "side": 1,
      "message": "Can we consider doing that in another CL? I believe the current code is correct in the case where there is racy reads with the madvise. In the case where a null is read, the null check will call it fall back to the other dex cache.",
      "parentUuid": "00889ea9_34001e61",
      "range": {
        "startLine": 2432,
        "startChar": 24,
        "endLine": 2432,
        "endChar": 47
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f62df4de_8b5e268b",
        "filename": "runtime/gc/space/image_space.cc",
        "patchSetId": 5
      },
      "lineNbr": 2432,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-03-14T09:29:20Z",
      "side": 1,
      "message": "No, it\u0027s not correct. Thread 1 reads both NumPreResolvedStrings() and GetPreResolvedStrings(), then Thread 2 clears them and madvise()s away the memory and then Thread 1 tries to read that memory. As I said before, this is broken for --image-format\u003duncompressed, and working in a weird way for --image-format\u003dlz4/lz4hc.",
      "parentUuid": "9b7fd735_cfb7a6b1",
      "range": {
        "startLine": 2432,
        "startChar": 24,
        "endLine": 2432,
        "endChar": 47
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b58b60ef_a955f748",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-03-13T07:28:41Z",
      "side": 1,
      "message": "This check is unnecessary now, just rely on \"preresolved_strings !\u003d nullptr\". However, that will make the `DCHECK_EQ(num_preresolved_strings, GetDexFile()-\u003eNumStringIds());` racy, so we should remove that as well.\n\n(But if you don\u0027t mind the tiny performance hit, you can keep it as is, it\u0027s functionally correct.)",
      "range": {
        "startLine": 88,
        "startChar": 2,
        "endLine": 88,
        "endChar": 38
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "871e5f61_ea632a8c",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2019-03-13T19:00:48Z",
      "side": 1,
      "message": "The redundant check is to deal with the writes reordering for clearing the cache causing the DCHECK to fail. I\u0027ll change it in a follow up?",
      "parentUuid": "b58b60ef_a955f748",
      "range": {
        "startLine": 88,
        "startChar": 2,
        "endLine": 88,
        "endChar": 38
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a7b9f5_9430a7d2",
        "filename": "test/1003-metadata-section-strings/build",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-03-13T07:28:41Z",
      "side": 1,
      "message": "Either construct the entire profile here, or move this to the `profile` file.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99c890a8_074ad5bc",
        "filename": "test/1003-metadata-section-strings/build",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2019-03-13T19:00:48Z",
      "side": 1,
      "message": "Sorry, this is stale code. I\u0027ll remove it.",
      "parentUuid": "12a7b9f5_9430a7d2",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b35aba78_a0cdbdad",
        "filename": "test/1003-metadata-section-strings/build",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-03-13T07:28:41Z",
      "side": 1,
      "message": "cat \u003e${other_file} \u003c\u003cEOF\n...\nEOF\n\nMakes the java code easier to read as it removes the clutter from each line.\nSame below.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e96d6f02_06ca57ba",
        "filename": "test/1003-metadata-section-strings/build",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2019-03-13T19:00:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b35aba78_a0cdbdad",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "c1e1612351c7d31c4465467deef2b224d301b0eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}