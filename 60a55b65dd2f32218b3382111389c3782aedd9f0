{
  "comments": [
    {
      "key": {
        "uuid": "cdf3c519_d87c1570",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 3
      },
      "lineNbr": 655,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "You could add another attribute to the visualizer and test this.",
      "range": {
        "startLine": 655,
        "startChar": 43,
        "endLine": 655,
        "endChar": 66
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed8889a6_e275c849",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Hmm, we need to be careful here. Graph with an infinite loop might not have an exit block after simplify+dce. Right now this will work because:\n- above we run DCE first, so \"if (const)\" will not have been simplified yet\n- DCE does not set Exit block to null if removed (currently not a problem but needs to be fixed, I\u0027ll submit a CL)\n- we do not inline loops",
      "range": {
        "startLine": 261,
        "startChar": 28,
        "endLine": 261,
        "endChar": 57
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_b31e9817",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 3
      },
      "lineNbr": 1302,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "\"Skip\", \"past\" cannot be used as a verb",
      "range": {
        "startLine": 1302,
        "startChar": 22,
        "endLine": 1302,
        "endChar": 26
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_7860617e",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1577,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Is this guaranteed not null?",
      "range": {
        "startLine": 1577,
        "startChar": 22,
        "endLine": 1577,
        "endChar": 33
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_789221d2",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Move inside the if block?",
      "range": {
        "startLine": 71,
        "startChar": 15,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_d8fff5f8",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 21
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_b3c218d7",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Check that it is valid",
      "range": {
        "startLine": 82,
        "startChar": 13,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_f80e31b8",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Do we not have a constant for the host\u0027s pointer size?",
      "range": {
        "startLine": 310,
        "startChar": 34,
        "endLine": 310,
        "endChar": 47
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_781b41f4",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "Validity check",
      "range": {
        "startLine": 312,
        "startChar": 15,
        "endLine": 312,
        "endChar": 24
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_3398c8f0",
        "filename": "test/466-get-live-vreg/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-05-26T10:33:21Z",
      "side": 1,
      "message": "How about we add another $noinline$ function name marker instead?",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 69,
        "endChar": 22
      },
      "revId": "60a55b65dd2f32218b3382111389c3782aedd9f0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}