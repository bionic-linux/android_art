{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5790ac56_d6563bce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-02-22T10:17:42Z",
      "side": 1,
      "message": "Is that a performance improvement of a debugging feature? Why do we want it?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "389080b0_5146f395",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-02-22T15:22:45Z",
      "side": 1,
      "message": "It is a performance improvement. Tip of tree without this CL, we do a null check in the type check and then always mark the GC card as dirty. We can improve in two ways:\n1) Do the null check again and then maybe dirty mark the GC card, or\n2) Use the knowledge from the previous null check to skip dirtying the GC card.\n\nAdded more info in the description to be more clear",
      "parentUuid": "5790ac56_d6563bce",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "467ac327_5a5dcfdb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-02-22T10:17:42Z",
      "side": 1,
      "message": "grammar?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c83f437d_c67e86de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-02-22T15:22:45Z",
      "side": 1,
      "message": "Reworded",
      "parentUuid": "467ac327_5a5dcfdb",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8c67419_e9741146",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-02-22T10:17:42Z",
      "side": 1,
      "message": "executing?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 7
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d90b4ce4_1927ef93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-02-22T15:22:45Z",
      "side": 1,
      "message": "Reworded",
      "parentUuid": "a8c67419_e9741146",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 7
      },
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff7c559_59b87690",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 1
      },
      "lineNbr": 7064,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-02-20T08:09:17Z",
      "side": 1,
      "message": "An alternative I thought was to always do `codegen_-\u003eCheckGCCardIsValid(temp1, temp2, array);` if `codegen_-\u003eCanCheckGCCard() ` is true. This would make debug builds slower (as it would run even when we just marked the GC card) but it would simplify the logic here.\n\narm32, x86, x86_64 would benefit more from this than arm64/riscv64 (where the logic is simpler)",
      "revId": "91f3101bcdae11e3c2643a6a94de390d1cdcb269",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}