{
  "comments": [
    {
      "key": {
        "uuid": "c4700952_3b72bad6",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "It\u0027s not obvious reading the code that these states are disjoint. The reading I have is we have the following states:\n\nA. No Image File Found\nB. Image File Found\nIn the case where an image file is found, the image that is found can have the following properties:\n 1. The checksum is or is not up to date.\n 2. The image has or has not been relocated (only relevant if the checksum is up to date).\n 3. The image is or is not for the preferred abi.\n\nThen we have the following cases:\n1. No image file found (kImageUnusable)\n2. Preferred image found with up-to-date checksum and relocated (kImageUsable)\n3. Preferred image found with up-to-date checksum but not relocated (kImageNeedsRelocation). The comment claims this can only happen for system images. Is that because all other images are assumed to already be relocated? Or is it because you can\u0027t relocate the system image? If it\u0027s the later, it seems like the real question we are asking is not \"what is the state of the image\", but rather, \"what should we do to make the image up to date\". Maybe choosing different names based on that idea would make this more understandable.\n4. Preferred image found, but it\u0027s not up to date. (kImageOutOfDate? Though presumably an out-of-date image is also unusable?)\n5. No preferred image found, but a non-preferred image was found that is up to date and relocated (kImageNotPreferred).\n6. No preferred image found, but a non-preferred image was found that is up to date, but not relocated. (kImageNotPreferred? kImageNeedsRelocation? kImageUnusable?)",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 48,
        "endChar": 2
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_2c2b55ba",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "They are not totally disjoint. \n\nkImageUnusable is only returned for images that are corrupt or missing. all other states mean the image could be used but the runtime would not pick it for various reasons.\n\nkImageNeedsRelocation will only be returned for /system images. If the /system image would be preferred we would never return this.",
      "parentUuid": "c4700952_3b72bad6",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 48,
        "endChar": 2
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_0c61ba2e",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-25T22:46:55Z",
      "side": 1,
      "message": "Did you mean to do this?\n\n  class ImageAssistant : ValueObject",
      "range": {
        "startLine": 50,
        "startChar": 6,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_4d9a4fc7",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T16:55:33Z",
      "side": 1,
      "message": "There isn\u0027t really any need to. I use it like a value object but there is no reason it cannot be on the heap.",
      "parentUuid": "248c8586_0c61ba2e",
      "range": {
        "startLine": 50,
        "startChar": 6,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_c65e42bd",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Put the constructor implementations in image_assistant.cc instead of in-lining them in the header file.",
      "range": {
        "startLine": 53,
        "startChar": 5,
        "endLine": 53,
        "endChar": 49
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_330df4c6",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "If you really want me to I will but these are fairly trivial, keeping them near the declarations seems to be better for readability.",
      "parentUuid": "c42ba915_c65e42bd",
      "range": {
        "startLine": 53,
        "startChar": 5,
        "endLine": 53,
        "endChar": 49
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_27d9406a",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Info is a nebulous word. How about \u0027ImageStatus\u0027 instead? And \u0027GetImageStatus()\u0027?",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 11
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_07bf5cf8",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "What does \"Selected\" mean? Maybe call this \"GetImageInfo\" instead?",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 23
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4750d3f_83dedbd2",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "I think info is better since it includes a lot of other information about the image then just its status.",
      "parentUuid": "048f817d_27d9406a",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 11
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "849451c2_7bcb1f96",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Removed selected",
      "parentUuid": "048f817d_07bf5cf8",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 23
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_26313677",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "What does this parameter do?\n\nMy interpretation is if relocation_needed is True, this does the same as GetSelectedImageInfo(), otherwise this may return the info for a system image that hasn\u0027t been relocated, even if relocation is enabled. In that case, maybe have two distinct functions: \u0027GetRelocatedImageInfo()\u0027 for when relocation_needed is true, and \u0027GetUpToDateImageInfo()\u0027 for when relocation_needed is false.",
      "range": {
        "startLine": 69,
        "startChar": 33,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_5ebaf7a5",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Added a comment explaining the parameter. I think that it is better just to leave it as a parameter.",
      "parentUuid": "c42ba915_26313677",
      "range": {
        "startLine": 69,
        "startChar": 33,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a42a3512_d52a6402",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Add a comment saying what this function means. Under what conditions would you not be allowed to create the image? Is it because of runtime parameters? File permissions? Other reasons?",
      "range": {
        "startLine": 73,
        "startChar": 7,
        "endLine": 73,
        "endChar": 27
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4485f957_7f3cb146",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Added. It can only fail because the global /data/dalvik-cache/\u003cisa\u003e/ is special and should not be created by programs.",
      "parentUuid": "a42a3512_d52a6402",
      "range": {
        "startLine": 73,
        "startChar": 7,
        "endLine": 73,
        "endChar": 27
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a42a3512_b519e806",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "If you aren\u0027t caching anything, why have an ImageAssistant class? Instead just use static functions, passing the location and isa manually every time.",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 95,
        "endChar": 28
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84253145_8eb1417a",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-26T01:00:27Z",
      "side": 1,
      "message": "What\u0027s wrong with that? It\u0027s pretty common to have classes that are all-const in the fields (in art). Sometimes the functions can have side-effects on the parameters (I suppose in this case it doesn\u0027t, beyond regular out-params), or it\u0027s just a helper class.\n\nMy understanding behind this CL was that the whole intention was to refactor the previous situation of \"use static functions and pass parameters every time\" into a helper class.\n\nWhich this CL seems to have successfully accomplished.",
      "parentUuid": "a42a3512_b519e806",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 95,
        "endChar": 28
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_30bbb45f",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T22:01:48Z",
      "side": 1,
      "message": "Given the name of the class \"ImageAssistant\", I assume the ImageAssistant is meant to be analogous to the OatFileAssistant.\n\nThe goal of the OatFileAssistant was to avoid duplicating the  code for checking the status of an oat file. Previously there were multiple copies across the code base of the code for checking the status of an oat file, each with minor variations. The reason the OatFileAssistant is a class, rather than a set of static functions, is because providing static functions without duplicating code would require the same expensive operations to be executed multiple times in many of the use cases. The OatFileAssistant is a cache for those expensive operations. (From a Haskell point of view: lazy evaluation improves modularity; the OatFileAssistant is a localized implementation of lazy evaluation to improve the modularity of getting the status of an oat file).\n\nIn the ImageAssistant case, it doesn\u0027t appear that you need to introduce a kind of lazy evaluation for modularity, and it would be simpler and easier to understand if you provided static functions instead.\n\nOr maybe the issue is that the ImageInfo class is the cache. Then remove the extra class definition and rename the ImageInfo class ImageAssistant.",
      "parentUuid": "84253145_8eb1417a",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 95,
        "endChar": 28
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_7b6fdded",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-26T22:30:30Z",
      "side": 1,
      "message": "Thanks for the interesting viewpoint :). I don\u0027t have a strong opinion against this FWIW.\n\n----\n\nIf the issue is that it is too similar to ImageAssistant, what if he just renames it to something else like ImageFileHelper, or pretty much anything with +Image -Assistant. That might be the easiest fix.\n\nOn the other hand, if it was purely static helpers do you envision every function with 2 extra arguments?\n\n  ImageFileHelper::GetSelectedImageInfo(location, isa)\n\n?\n\nThat might be a little verbose for a lot of different calls, and it becomes really tempting to fabricate isa from kRuntimeISA. I suppose if it was one arg that might be fine.\n\n  ImageLocation image_location(location, isa);\n  // Option A:\n  ImageFileHelper::GetSelectedImageInfo(image_location);\n  // Option B: I suppose it could also be a free function,\n  GetSelectedImageFileInfo(image_location);\n\n\nThis seems like it could be an OK-ish change, though definitely not the kind of code I would normally write.\n\nOption A is still a few more characters to read though than what it was already doing today. Option B makes it significantly harder to find the source code where the function is actually declared without grepping.\n\n  ImageAssistant image_assistant(location, isa);\n  image_assistant.GetSelectedImageInfo();\n\nOne thing that might help to note is that ImageAssistant is immutable (perhaps we should even change all the local variables to \u0027const ImageAssistant image_assistant\u0027 to make it more obvious), which is a pretty common design pattern in OO-like languages that lack purity.\n\nIn regards to modularity, just separating out code into separate classes usually reduces tight coupling and increases cohesion (think object-oriented design). I\u0027m not sure if lazy evaluation is meant to traditionally affect modularity, it\u0027s usually used as a correctness (can\u0027t eagerly evaluate if it\u0027s too early, e.g. no runtime yet) or as a performance (re-evaluation is expensive, e.g. disk reads) feature.\n\nFor statics vs non-static methods that do the same thing, i.e.\n\n  static void foo(Type\u0026 t, ... Args);\n  void foo(... Args);\n\nThere is indeed very little difference other than the syntax, basically the call-site (and declaration) becomes much larger to read/write, hurting code readability. Instance methods (syntactically) are just generally preferred over static methods if their semantics are identical, am happy to explain more offline as this is a more philosophical discussion without a concretely right/wrong answer.",
      "parentUuid": "048f817d_30bbb45f",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 95,
        "endChar": 28
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4700952_9b096e39",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "image\u0027s",
      "range": {
        "startLine": 112,
        "startChar": 26,
        "endLine": 112,
        "endChar": 32
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_0630ba6e",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Will it fill in header if the image is not readable or the image is invalid?",
      "range": {
        "startLine": 112,
        "startChar": 52,
        "endLine": 112,
        "endChar": 91
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_73d85d98",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4700952_9b096e39",
      "range": {
        "startLine": 112,
        "startChar": 26,
        "endLine": 112,
        "endChar": 32
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4485f957_ffe8a12a",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Made comment clearer.\n\nIf the file is not readable no, otherwise yes. This should not be relied upon though.",
      "parentUuid": "c42ba915_0630ba6e",
      "range": {
        "startLine": 112,
        "startChar": 52,
        "endLine": 112,
        "endChar": 91
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a47f9520_27a61aca",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-25T22:46:55Z",
      "side": 1,
      "message": "Might be helpful to leave a comment here, not really sure what the difference here is between these two. Presumably GetImageState is the same thing as the other one with the parameter set to either true or false?",
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_38171308",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "It\u0027s odd that the state of the image depends on our needs.",
      "range": {
        "startLine": 115,
        "startChar": 27,
        "endLine": 115,
        "endChar": 49
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_5e299738",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a47f9520_27a61aca",
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4750d3f_26ab755f",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "added comment explanation.",
      "parentUuid": "e430ad80_38171308",
      "range": {
        "startLine": 115,
        "startChar": 27,
        "endLine": 115,
        "endChar": 49
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4750d3f_96a93ede",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "IsImageValid().\n\nWhy isn\u0027t this part of the ImageState returned by GetImageState?",
      "range": {
        "startLine": 118,
        "startChar": 7,
        "endLine": 118,
        "endChar": 15
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e430ad80_9e616f7f",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "It is, if this returns false then the state will be kImageUnusable (or kImageOutOfDate on a cache image if a valid /system image exists).",
      "parentUuid": "e4750d3f_96a93ede",
      "range": {
        "startLine": 118,
        "startChar": 7,
        "endLine": 118,
        "endChar": 15
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4485f957_840cab48",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-25T22:46:55Z",
      "side": 1,
      "message": "Why not a unique_ptr?",
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_22bb652d",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Can this fail? Return an error message if so indicating how it failed?",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 120,
        "endChar": 19
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_2e2b4eba",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "only in the same way that OpenFileForReading does (i.e. it doesn\u0027t exist/no perms to read). That doesn\u0027t have an error message so I don\u0027t thing that this needs one.",
      "parentUuid": "248c8586_22bb652d",
      "range": {
        "startLine": 120,
        "startChar": 2,
        "endLine": 120,
        "endChar": 19
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84253145_ff297dbd",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4485f957_840cab48",
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84253145_0e4c5117",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "Put the implementation in image_assistant.cc",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 32
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a42a3512_55f17407",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-08-26T01:00:27Z",
      "side": 1,
      "message": "Is this a style rule somewhere? I don\u0027t recall.",
      "parentUuid": "84253145_0e4c5117",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 32
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "849451c2_7bc79faa",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "The google style guide doesn\u0027t mention it and this is done in other places in art. Also these are so trivial it is probably better for readability to have them in the class definition.",
      "parentUuid": "a42a3512_55f17407",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 32
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a42a3512_15da1c97",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "But this already is an ImageInfo. What does it mean to get an ImageInfo from an ImageInfo?",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 136,
        "endChar": 3
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84253145_1f547929",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "These are internal function used in the implementation of GetImageState (which depends partly on the contents of both the system and cache images).",
      "parentUuid": "a42a3512_15da1c97",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 136,
        "endChar": 3
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_e2bd5d1d",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-26T00:52:39Z",
      "side": 1,
      "message": "What for?",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 30
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a47f9520_33f89870",
        "filename": "runtime/image_assistant.h",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-26T20:48:18Z",
      "side": 1,
      "message": "To allow ImageAssistant (and no-one else) to directly create ImageInfo structures.",
      "parentUuid": "248c8586_e2bd5d1d",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 30
      },
      "revId": "4f6da63732dcab5813f4a69fc7bd03cd3bbce79f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}