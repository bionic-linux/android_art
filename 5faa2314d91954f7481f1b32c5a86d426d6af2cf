{
  "comments": [
    {
      "key": {
        "uuid": "6b884673_31ef507c",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 1979,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-09-13T20:12:29Z",
      "side": 1,
      "message": "If you\u0027re storing the same constant to several locations (array elements or fields), the assembler will have to repeatedly materialize it. It may be better to leave that to the parallel move as it was done before. For example, arm64 uses a constant only when it can use the zero register, checking IsConstantZeroBitPattern().",
      "range": {
        "startLine": 1979,
        "startChar": 38,
        "endLine": 1979,
        "endChar": 56
      },
      "revId": "5faa2314d91954f7481f1b32c5a86d426d6af2cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be1fa42_4896734b",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 1979,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2016-09-13T20:50:26Z",
      "side": 1,
      "message": "If that\u0027s what\u0027s happening, I can redo it for 0 and +0.0 only. However, loading floats into registers is a tad expensive in terms of instruction count, so if a constant isn\u0027t reused, it\u0027s better to store it directly. Is there a way to find out whether or not a constant has more than one uses, at the locations builder level?",
      "parentUuid": "6b884673_31ef507c",
      "range": {
        "startLine": 1979,
        "startChar": 38,
        "endLine": 1979,
        "endChar": 56
      },
      "revId": "5faa2314d91954f7481f1b32c5a86d426d6af2cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}