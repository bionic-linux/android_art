{
  "comments": [
    {
      "key": {
        "uuid": "6092a68c_473500ae",
        "filename": "runtime/base/mutex.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-04-18T22:12:11Z",
      "side": 1,
      "message": "10 as before, since we\u0027re on a quest to reduce sched_yield calls? I could probably be talked into fewer.\n\nShould we explicitly avoid inlining CpuRelax to add a bit of local work, and make behavior here less dependent on the build environment?",
      "range": {
        "startLine": 111,
        "startChar": 51,
        "endLine": 111,
        "endChar": 53
      },
      "revId": "8d03193d97c4461dd3772090d855daeee781bcfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a884aef8_00a9efe5",
        "filename": "runtime/base/mutex.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-04-18T22:18:05Z",
      "side": 1,
      "message": "\u003e 10 as before, since we\u0027re on a quest to reduce sched_yield calls? I could probably be talked into fewer.\n\nSure. Let\u0027s keep it at ten. I\u0027ll also add a cap on the nanosleep time so that it doesn\u0027t increase without bound.\n\nWe should get rid of this routine entirely eventually, but I want to focus on other wait loops first.",
      "parentUuid": "6092a68c_473500ae",
      "range": {
        "startLine": 111,
        "startChar": 51,
        "endLine": 111,
        "endChar": 53
      },
      "revId": "8d03193d97c4461dd3772090d855daeee781bcfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3baf3fce_7ce423e2",
        "filename": "runtime/base/mutex.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2018-04-18T22:26:04Z",
      "side": 1,
      "message": "Re: getting rid of it eventually.\n\nI actually think this is a reasonable way to handle back-off in either\n\n1) corner cases in which it\u0027s difficult to do something more intelligent, or\n2) for a simple lock that doesn\u0027t want to spend the time for a CAS in the unlock path.\n\nI\u0027m not sure we currently have any uses of (2). But I\u0027d be pleasantly surprised if we got rid of all type (1) use cases, and I\u0027m not sure it\u0027s worth the added complexity.",
      "parentUuid": "a884aef8_00a9efe5",
      "range": {
        "startLine": 111,
        "startChar": 51,
        "endLine": 111,
        "endChar": 53
      },
      "revId": "8d03193d97c4461dd3772090d855daeee781bcfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}