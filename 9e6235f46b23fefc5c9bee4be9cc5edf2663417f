{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "99d222a0_6d2dd0c5",
        "filename": "runtime/quick_exception_handler.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1080076
      },
      "writtenOn": "2023-01-31T21:36:26Z",
      "side": 0,
      "message": "curious why was this move() removed? It\u0027s now copying the input vector every time",
      "range": {
        "startLine": 114,
        "startChar": 27,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "9e6235f46b23fefc5c9bee4be9cc5edf2663417f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24ed0ce9_1076d42b",
        "filename": "runtime/quick_exception_handler.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-02-01T11:37:32Z",
      "side": 0,
      "message": "The arg is `\u0026\u0026`.  I think it is the same.",
      "parentUuid": "99d222a0_6d2dd0c5",
      "range": {
        "startLine": 114,
        "startChar": 27,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "9e6235f46b23fefc5c9bee4be9cc5edf2663417f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f5437da_3af8fba4",
        "filename": "runtime/quick_exception_handler.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1080076
      },
      "writtenOn": "2023-02-01T22:58:05Z",
      "side": 0,
      "message": "no, without an explicit std::move() any use of an rvalue reference via named variable isn\u0027t a move - https://en.cppreference.com/w/cpp/utility/move\n\u003eNames of rvalue reference variables are lvalues and have to be converted to xvalues to be bound to the function overloads that accept rvalue reference parameters, which is why move constructors and move assignment operators typically use std::move",
      "parentUuid": "24ed0ce9_1076d42b",
      "range": {
        "startLine": 114,
        "startChar": 27,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "9e6235f46b23fefc5c9bee4be9cc5edf2663417f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f76724e_1e6d5fe5",
        "filename": "runtime/quick_exception_handler.h",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-02-02T10:32:04Z",
      "side": 0,
      "message": "Maybe I am misreading things but what you quoted I think applied to things like `arg.inner` rather than this operator.\n\nI think this line would call optional\u0027s move assignment operator (https://cs.android.com/android/platform/superproject/+/master:external/libcxx/include/optional;l\u003d688;drc\u003d134a848236518442cc6b4b8006a2927db2e6636b) and a move will be performed.",
      "parentUuid": "2f5437da_3af8fba4",
      "range": {
        "startLine": 114,
        "startChar": 27,
        "endLine": 114,
        "endChar": 36
      },
      "revId": "9e6235f46b23fefc5c9bee4be9cc5edf2663417f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}