{
  "comments": [
    {
      "key": {
        "uuid": "6473de94_8f96e9c7",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 10
      },
      "lineNbr": 1172,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "if a_constant is 0, the first param should be nullptr? or is v1.instruction just nullptr?",
      "range": {
        "startLine": 1172,
        "startChar": 34,
        "endLine": 1172,
        "endChar": 48
      },
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6473de94_1e904c80",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 10
      },
      "lineNbr": 1421,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "index_range should be good to be used here for bounds check.\nHowever we need to be careful that this index_range isn\u0027t\nused further, such as:\nfor (int i\u003d0; i\u003carray.length+2; i++) {\n  if (i \u003c array.length) {\n    array[i] \u003d 1;\n  } else {\n    b[i - array.length] \u003d 1;\n  }\n}\n\nIVA will return [0, array.length+1] for i\u0027s range. And the if\nstatement can narrow that range further to\n[0, array.length-1]. So bounds check for array[i] is\neliminated, which is incorrect.\n\nTo guard against such issue, maybe LookupInductionRange() can \nadd some overflow checking such that it returns a nullptr if\nthe range got from IVA has overflow concern? So basically BCE deals with good ranges (no overflow/underflow issues). IVA uses full power to get the range symbolically (especially useful for deoptimization dynamically).",
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a46156bd_832b2145",
        "filename": "compiler/optimizing/induction_var_range.cc",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "what\u0027s the meaning of this test?",
      "range": {
        "startLine": 146,
        "startChar": 27,
        "endLine": 146,
        "endChar": 59
      },
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0465c2c3_84e40715",
        "filename": "compiler/optimizing/induction_var_range.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "x",
      "range": {
        "startLine": 30,
        "startChar": 83,
        "endLine": 30,
        "endChar": 84
      },
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_c96b77e3",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 246,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "I was thinking about dx verifier, maybe you just mean this testcase?",
      "range": {
        "startLine": 246,
        "startChar": 47,
        "endLine": 246,
        "endChar": 55
      },
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848ff2ac_c80540db",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 250,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-09-15T22:07:03Z",
      "side": 1,
      "message": "OOB?",
      "range": {
        "startLine": 250,
        "startChar": 27,
        "endLine": 250,
        "endChar": 30
      },
      "revId": "8a40fb768efb17a899caaca4ee9539d6b202dda0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}