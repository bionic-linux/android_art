{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51eaeeab_66c20b75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T09:05:26Z",
      "side": 1,
      "message": "Python\n\nCan you add a comment about removing unicode string support since io.StringIO() does not support it.",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f912f80_0d399f5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-10-06T14:28:51Z",
      "side": 1,
      "message": "Afaics io.StringIO _does_ support it in Python 3, so that\u0027s why it\u0027s correct to remove the explicit conversions: https://docs.python.org/3/library/io.html#text-i-o",
      "parentUuid": "51eaeeab_66c20b75",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6d3f6c3_1622fd72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T15:11:11Z",
      "side": 1,
      "message": "Yes, this was my mistake, but I think this should be documented here as it appears to be the most major element of this change.",
      "parentUuid": "2f912f80_0d399f5b",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eba5c13_98406fb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1752579
      },
      "writtenOn": "2020-10-06T15:16:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f912f80_0d399f5b",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b6b1b64_a642993f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2020-10-05T17:50:16Z",
      "side": 1,
      "message": "Adding Orion, who is knowledgeable about Python and ART! :-)",
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc47a317_1c790a34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T09:05:26Z",
      "side": 1,
      "message": "+mast@ who has python readability.\n",
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a62a5e66_6bfb1c5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-10-06T14:28:51Z",
      "side": 1,
      "message": "On a side note, I expected to find an Android.bp with a Soong module for the checker, so that Soong packages it up properly as a host binary - ensures it runs with the right python interpreter, keeps track of dependencies on other python libs, etc. I recommend adding that, but it\u0027s arguably not in scope for this CL.",
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f23f4d62_22d4e140",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1752579
      },
      "writtenOn": "2020-10-06T15:16:31Z",
      "side": 1,
      "message": "Will be done here\nhttps://android-review.googlesource.com/c/platform/art/+/1442841",
      "parentUuid": "a62a5e66_6bfb1c5c",
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cde64b7_eaf34818",
        "filename": "tools/checker/common/logger.py",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T09:05:26Z",
      "side": 1,
      "message": "Can these be Enum\u0027s (or IntEnum)? [do we expect Python \u003e\u003d 3.4]",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 14
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f38cf0d_ff778181",
        "filename": "tools/checker/common/logger.py",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1752579
      },
      "writtenOn": "2020-10-06T15:16:31Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "9cde64b7_eaf34818",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 14
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "098a88d7_04376e68",
        "filename": "tools/checker/common/logger.py",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T15:50:33Z",
      "side": 1,
      "message": "\"Can these\" is plural, the comment means all instances touched by the change, not just this one.",
      "parentUuid": "5f38cf0d_ff778181",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 14
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b47776a_6ae849bb",
        "filename": "tools/checker/file_format/c1visualizer/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T09:05:26Z",
      "side": 1,
      "message": "Are these super.__init__() additions necessary?",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9cde8c9_bf2faa43",
        "filename": "tools/checker/file_format/c1visualizer/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-10-06T14:28:51Z",
      "side": 1,
      "message": "No, because PrintableMixin doesn\u0027t have an __init__. It can be considered good style to not make that assumption here though. go/pystyle doesn\u0027t go either way on it.",
      "parentUuid": "5b47776a_6ae849bb",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d22eed8_89c627ac",
        "filename": "tools/checker/file_format/c1visualizer/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T15:11:11Z",
      "side": 1,
      "message": "Precisely. It\u0027d be good to minimize the changes to just those required.",
      "parentUuid": "e9cde8c9_bf2faa43",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 22
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5be3e5a2_67e614c1",
        "filename": "tools/checker/file_format/checker/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T09:05:26Z",
      "side": 1,
      "message": "Not necessary.",
      "range": {
        "startLine": 40,
        "startChar": 48,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca93e53_4dcc1675",
        "filename": "tools/checker/file_format/checker/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-10-06T14:28:51Z",
      "side": 1,
      "message": "This is according to the style guide: http://go/pystyle#whitespace",
      "parentUuid": "5be3e5a2_67e614c1",
      "range": {
        "startLine": 40,
        "startChar": 48,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e490d952_118912ba",
        "filename": "tools/checker/file_format/checker/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-10-06T15:11:11Z",
      "side": 1,
      "message": "There are more variations on this in checker: fair game for a separate clean-up rather than fixing one instance here.",
      "parentUuid": "1ca93e53_4dcc1675",
      "range": {
        "startLine": 40,
        "startChar": 48,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6361c3e8_49772b88",
        "filename": "tools/checker/file_format/checker/struct.py",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1752579
      },
      "writtenOn": "2020-10-06T15:16:31Z",
      "side": 1,
      "message": "Thank you, Martin. \n\nNot nesessary here but the absense of this line would be suspicious. I can move these style changes to another CL because, as we privately discussed with Roland, I am going to make a reformatting CL anyway.",
      "parentUuid": "1ca93e53_4dcc1675",
      "range": {
        "startLine": 40,
        "startChar": 48,
        "endLine": 40,
        "endChar": 82
      },
      "revId": "7d0694b359440d98f0acd6959df41c78e728530b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}