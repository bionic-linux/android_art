{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ff33716b_d09db1a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "I wonder a bit about the BloatBuster finding. That service-art.jar grows by 20 KiB is perhaps to be expected, but why does the APEX grow by twice that amount? It doesn\u0027t add up with the small .so file increases.",
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "167bee62_1e5d580b",
        "filename": "libartservice/service/java/com/android/server/art/ArtManagerLocal.java",
        "patchSetId": 7
      },
      "lineNbr": 1662,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Same as the comment for the injector in PreRebootDexoptJob.java.",
      "range": {
        "startLine": 1658,
        "startChar": 0,
        "endLine": 1662,
        "endChar": 9
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf36861b_d5c08612",
        "filename": "libartservice/service/java/com/android/server/art/DexoptHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Doesn\u0027t it work to just synchronise on `values` itself?\n\nOr perhaps better, keep this but do away with the list in favour of 4 local integer variables.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "084833b6_ef082b8e",
        "filename": "libartservice/service/java/com/android/server/art/DexoptHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 160,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Please fix this WARNING reported by Error Prone: [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n\nAnalyzer Description: Warnings generated by errorprone.\nOwner: farivar@google.com\n\n    [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n                        future.thenAcceptAsync((result) -\u003e {\n                                              ^\n        (see https://errorprone.info/bugpattern/FutureReturnValueIgnored)\n      Did you mean \u0027var unused \u003d future.thenAcceptAsync((result) -\u003e {\u0027 or to remove this line?\n\nUse `m RUN_ERROR_PRONE\u003dtrue MyModule` to reproduce locally.\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P74942108/targets/errorprone-trunk_staging, but may also be present on other builds.\n\nThis is a different branch than your cl originated on (it was automerged), and thus might better reflect the state of the code in the git_main branch.",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 56
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fca2fa5_4594cf4b",
        "filename": "libartservice/service/java/com/android/server/art/DexoptHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 187,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Doesn\u0027t this need to be in the `synchronized` block? Otherwise the values may not monotonically increase in the progress callback.",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 187,
        "endChar": 95
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac004150_504964fe",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 7
      },
      "lineNbr": 302,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "This looks like the wrong level to inject a mock. Injecting the path to the pb file and the `ArtStatsLog.write` call in `PreRebootStatsReporter` instead seems more appropriate.\n\nTests for the stats collection are missing here, but if you don\u0027t have time to spend on them right now it\u0027s ok to put them off to a later CL. Still, I suggest moving down the mocking to the appropriate level.",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 302,
        "endChar": 9
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ee0923_112cf346",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootManager.java",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Use `awaitTermination` instead (after `shutdown`)? Being forced to specify some timeout for this seems like a good thing too.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 61
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2444208_54ec1ffb",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "`m` prefix",
      "range": {
        "startLine": 69,
        "startChar": 33,
        "endLine": 69,
        "endChar": 54
      },
      "fixSuggestions": [
        {
          "fixId": "0d16a487_8fe4c196",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 69,
                "startChar": 0,
                "endLine": 70,
                "endChar": 0
              },
              "replacement": "    private @NonNull Set\u003cString\u003e mPackagesWithArtifacts \u003d new HashSet\u003c\u003e();\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 117,
                "startChar": 0,
                "endLine": 118,
                "endChar": 0
              },
              "replacement": "        mPackagesWithArtifacts.add(packageName);\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 145,
                "startChar": 0,
                "endLine": 146,
                "endChar": 0
              },
              "replacement": "                    (int) mPackagesWithArtifacts.stream()\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 175,
                "startChar": 0,
                "endLine": 176,
                "endChar": 0
              },
              "replacement": "                jobDurationMs, jobLatencyMs, mPackagesWithArtifacts.size(),\n"
            }
          ]
        }
      ],
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247a0052_4e8b5f7d",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 107,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Nit: Perhaps put the methods in chronological order in this class?",
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32e23d91_e500a4bd",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 148,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Looks like this can create significantly more file I/O than `commitPreRebootStagedFiles` itself, so it\u0027s not all that lightweight. But let\u0027s not consider premature optimisations.",
      "range": {
        "startLine": 146,
        "startChar": 29,
        "endLine": 148,
        "endChar": 75
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "384e98df_006f5faf",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 152,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Style nit: Put parens around this? Haven\u0027t double checked with the style guide, but it\u0027s inconsistent with the above.",
      "range": {
        "startLine": 152,
        "startChar": 36,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdad8475_d5af2818",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 194,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "This probably isn\u0027t a big deal in this case, but maybe still consider `getNumber` instead, just to make the warning go away.\n\n---\n\nPlease fix this WARNING reported by Error Prone: [LiteProtoToString] toString() on lite proto enums will generate different representations of the value from development and optimized builds. Consider using #getNumber if you only need a serialized representation of the value, or #name if ...\n\nAnalyzer Description: Warnings generated by errorprone.\nOwner: farivar@google.com\n\n    [LiteProtoToString] toString() on lite proto enums will generate different representations of the value from development and optimized builds. Consider using #getNumber if you only need a serialized representation of the value, or #name if you really need the name.\n                    throw new IllegalStateException(\"Unknown status: \" + mStatsBuilder.getStatus());\n                                                                                                ^\n        (see https://errorprone.info/bugpattern/LiteProtoToString)\n\nUse `m RUN_ERROR_PRONE\u003dtrue MyModule` to reproduce locally.\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P74942108/targets/errorprone-trunk_staging, but may also be present on other builds.\n\nThis is a different branch than your cl originated on (it was automerged), and thus might better reflect the state of the code in the git_main branch.",
      "range": {
        "startLine": 194,
        "startChar": 0,
        "endLine": 194,
        "endChar": 96
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33566c0d_3052a92a",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Nit: Maybe `init` is a better name to reflect the purpose rather than the implementation, when called from the outside.",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 20
      },
      "fixSuggestions": [
        {
          "fixId": "64b59f65_f5f30c65",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 128,
                "startChar": 0,
                "endLine": 129,
                "endChar": 0
              },
              "replacement": "        init();\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 198,
                "startChar": 0,
                "endLine": 199,
                "endChar": 0
              },
              "replacement": "    public void init() {\n"
            }
          ]
        }
      ],
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22b303dc_a4d3ddf8",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "Nit: Similarly, suggest `reset` instead (and I think it\u0027d be cleaner if it reset the internal state too, although that means it needs to move to the end of `report`).",
      "range": {
        "startLine": 224,
        "startChar": 16,
        "endLine": 224,
        "endChar": 22
      },
      "fixSuggestions": [
        {
          "fixId": "343d21d7_96033439",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 129,
                "startChar": 0,
                "endLine": 130,
                "endChar": 0
              },
              "replacement": "        reset();\n"
            },
            {
              "path": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
              "range": {
                "startLine": 224,
                "startChar": 0,
                "endLine": 225,
                "endChar": 0
              },
              "replacement": "    public void reset() {\n        mStatsBuilder.clear();\n        packagesWithArtifacts.clear();\n"
            }
          ]
        }
      ],
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c781e99_d672c417",
        "filename": "libartservice/service/proto/pre_reboot_stats.proto",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "This is 5 in the stats proto, for some reason. There are other diffs too. No problem in and of itself since the enum gets translated, but:\n\nFor one, I wonder, can\u0027t we renumber the enum there to bring it into order? (I missed that when reviewing https://r.android.com/3091565.) We don\u0027t have any saved stats with that proto yet, do we?\n\nFor another, why not use that enum directly? Would it bloat the code for this proto?",
      "range": {
        "startLine": 30,
        "startChar": 25,
        "endLine": 30,
        "endChar": 26
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f18cd5b_c99bf95d",
        "filename": "libartservice/service/proto/pre_reboot_stats.proto",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-21T02:56:10Z",
      "side": 1,
      "message": "I suppose this approach works, but I\u0027m still curious, why not aggregate the durations and job counts for the stats reporting directly? The only extra info needed is the start time for the last (still currently running) job, I think. Probably easier than fiddling with this list too.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "acef08506941b2fd583351e07abcfe9c03207e24",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}