{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6fc0b0e4_98660b7a",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2877,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "nit: can we move this dwn to line 2904? It will be closer to its use",
      "range": {
        "startLine": 2875,
        "startChar": 0,
        "endLine": 2877,
        "endChar": 54
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad926c7_6c20ad4e",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2902,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "This can be `constexpr` right? If so, the DCHECK in line 2903 can become a static assert",
      "range": {
        "startLine": 2902,
        "startChar": 2,
        "endLine": 2902,
        "endChar": 7
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c16649_314f2373",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2914,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "I don\u0027t understand this comment. Can you explain what you meant?",
      "range": {
        "startLine": 2914,
        "startChar": 0,
        "endLine": 2914,
        "endChar": 48
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89e5028_49e2393b",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2941,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "Is this a clever way of skipping the `else` case in Arm64? https://cs.android.com/android/platform/superproject/main/+/main:art/compiler/optimizing/intrinsics_arm64.cc;l\u003d1971-1976;drc\u003d921c42389cf15b42b09f8364ad438ccc18f07e71 I am not seeing how we are skipping the `bic` in line 1975 over there but I could be missing something",
      "range": {
        "startLine": 2936,
        "startChar": 0,
        "endLine": 2941,
        "endChar": 3
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f02fc240_e7025c4f",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2962,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "same here regarding constexpr and static assert",
      "range": {
        "startLine": 2960,
        "startChar": 0,
        "endLine": 2962,
        "endChar": 0
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8b6efe3_f5dc5d98",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2964,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "unused, remove",
      "range": {
        "startLine": 2963,
        "startChar": 0,
        "endLine": 2964,
        "endChar": 41
      },
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f083bf2_6a5572c2",
        "filename": "compiler/optimizing/intrinsics_riscv64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2993,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-03-20T09:47:37Z",
      "side": 1,
      "message": "Shouldn\u0027t this load happen one line after? i.e. after the temp1 has been increased. Same for lhu in line 2995",
      "revId": "8a48e695ab1f364230f1ad1a414bb368338f53fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}