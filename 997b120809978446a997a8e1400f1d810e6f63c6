{
  "comments": [
    {
      "key": {
        "uuid": "b75fee26_109bcc74",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-05-17T10:16:03Z",
      "side": 1,
      "message": "Is this OK for Thumb? The T1 encoding is listed as \"1110|...\"",
      "range": {
        "startLine": 967,
        "startChar": 43,
        "endLine": 967,
        "endChar": 60
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1720ba90_dec55951",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-05-17T11:32:52Z",
      "side": 1,
      "message": "For which instruction(s)?  For \"VRINTA (floating-point)\", \"VRINTM (floating-point)\", \"VRINTN (floating-point)\", \"VRINTP (floating-point)\", bits 28-31 seem to be 1111 for both the A1 and the T1 encoding.",
      "parentUuid": "b75fee26_109bcc74",
      "range": {
        "startLine": 967,
        "startChar": 43,
        "endLine": 967,
        "endChar": 60
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d700e2f1_5ebef1e2",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-05-17T13:39:54Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "1720ba90_dec55951",
      "range": {
        "startLine": 967,
        "startChar": 43,
        "endLine": 967,
        "endChar": 60
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b75fee26_d053f458",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-05-17T13:42:53Z",
      "side": 1,
      "message": "Sorry, I was looking at the ARMv7 spec and the encoding seemed to match the VCVT there, except for this bit.",
      "parentUuid": "d700e2f1_5ebef1e2",
      "range": {
        "startLine": 967,
        "startChar": 43,
        "endLine": 967,
        "endChar": 60
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7da48_834e625f",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-05-17T11:32:52Z",
      "side": 1,
      "message": "Why not put this between B23 and B21?  Likewise for other fields.",
      "range": {
        "startLine": 973,
        "startChar": 21,
        "endLine": 973,
        "endChar": 28
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57431250_f5e39017",
        "filename": "compiler/utils/arm/assembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-05-17T13:39:54Z",
      "side": 1,
      "message": "I put it there because `D/Vd` and `M/Vm` are the encoding for the register indexes. I found them grouped together for `Thumb2Assembler::EmitVPushPop`. I gave a try at ordering everything by bit index, but I find it less readable.",
      "parentUuid": "17f7da48_834e625f",
      "range": {
        "startLine": 973,
        "startChar": 21,
        "endLine": 973,
        "endChar": 28
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b730ce13_a5c9a88c",
        "filename": "compiler/utils/arm/assembler_arm.h",
        "patchSetId": 1
      },
      "lineNbr": 668,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-05-17T17:57:27Z",
      "side": 1,
      "message": "please add some documentation to this enum for the folks less fluent in arm",
      "range": {
        "startLine": 668,
        "startChar": 24,
        "endLine": 668,
        "endChar": 25
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b730ce13_a57b6814",
        "filename": "compiler/utils/arm/assembler_arm.h",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-05-17T17:57:27Z",
      "side": 1,
      "message": "this file is not always consistent, but I thought we always try to avoid plain int, but specify sign and width explicitly",
      "range": {
        "startLine": 676,
        "startChar": 47,
        "endLine": 676,
        "endChar": 48
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b730ce13_88963b4c",
        "filename": "compiler/utils/arm/assembler_arm.h",
        "patchSetId": 1
      },
      "lineNbr": 681,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-05-17T17:57:27Z",
      "side": 1,
      "message": "empty line between virtuals and inlines below",
      "range": {
        "startLine": 681,
        "startChar": 75,
        "endLine": 681,
        "endChar": 76
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b711ae44_c04572a8",
        "filename": "compiler/utils/arm/assembler_arm32.cc",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-05-17T11:32:52Z",
      "side": 1,
      "message": "Nit: /* is_64bit */ false",
      "range": {
        "startLine": 530,
        "startChar": 68,
        "endLine": 530,
        "endChar": 85
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37fcde2a_cd50154f",
        "filename": "compiler/utils/arm/assembler_arm32.cc",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-05-17T13:39:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b711ae44_c04572a8",
      "range": {
        "startLine": 530,
        "startChar": 68,
        "endLine": 530,
        "endChar": 85
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57431250_9548c44d",
        "filename": "compiler/utils/arm/assembler_thumb2.cc",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-05-17T11:32:52Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 1119,
        "startChar": 70,
        "endLine": 1119,
        "endChar": 87
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f705e6fe_652d9cee",
        "filename": "compiler/utils/arm/assembler_thumb2.cc",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-05-17T13:39:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57431250_9548c44d",
      "range": {
        "startLine": 1119,
        "startChar": 70,
        "endLine": 1119,
        "endChar": 87
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1720ba90_5e0ca996",
        "filename": "disassembler/disassembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 1519,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-05-17T11:32:52Z",
      "side": 1,
      "message": "Maybe move these inside the `if` instruction in lines 1521â€“1524?\n\nAlso, why not using the 3-argument constructor:\n\n  FpRegister(uint32_t instr, uint16_t at_bit, uint16_t extra_at_bit)\n\nas the `size` information is at bit 8 (see line 205) in VRINT instructions?",
      "range": {
        "startLine": 1516,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 40
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b75fee26_1062ac2e",
        "filename": "disassembler/disassembler_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 1519,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-05-17T13:39:54Z",
      "side": 1,
      "message": "Refactored using that constructor.",
      "parentUuid": "1720ba90_5e0ca996",
      "range": {
        "startLine": 1516,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 40
      },
      "revId": "997b120809978446a997a8e1400f1d810e6f63c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}