{
  "comments": [
    {
      "key": {
        "uuid": "aa50601d_36a244b1",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-15T09:39:16Z",
      "side": 1,
      "message": "Unrelated?",
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ada63c1d_044abf98",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-15T17:33:24Z",
      "side": 1,
      "message": "It seems something about this change (probably making Thread* a bit larger) causes this test to fail. The linked bug basically says that nobody knows why it fails on x86 so I just added a skip for the rest too.",
      "parentUuid": "aa50601d_36a244b1",
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9b755d0_f51894f1",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-15T09:39:16Z",
      "side": 1,
      "message": "Can you try moving this stack walker in a ScopedSuspendAll block? This will remove the need for the other changes.",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 406,
        "endChar": 98
      },
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36d962f8_913def2d",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-01-15T17:33:24Z",
      "side": 1,
      "message": "Nope that won\u0027t work. Several of the other stack-walkers are run by suspended threads so the race is still present. Furthermore at least 2 stack-walkers can suspend during the stack walk (they both walk their own stack so this is safe enough assuming WalkStack is thread safe). This could lead to the exact type of interleaving that causes the bug.",
      "parentUuid": "b9b755d0_f51894f1",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 406,
        "endChar": 98
      },
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89550f6d_bce2ec54",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-01-16T10:21:07Z",
      "side": 1,
      "message": "Is there no other way?\n\nDo those 2 stack-walkers really need to suspend during the stack walk, or could they just collect information during stack walk and do the rest of the work afterwards? (That would be a valuable rewrite on its own.)\n\nCould we have a reader-writer mutex for the instrumentation stack that normal stack walk would acquire as a reader?",
      "parentUuid": "36d962f8_913def2d",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 406,
        "endChar": 98
      },
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "295a3d03_f5f6ae4f",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-16T16:18:18Z",
      "side": 1,
      "message": "+1 to that - If you can find a way that doesn\u0027t require that many changes to the stack walking code (it\u0027s ok to make anything related to instrumentation slow by the way), that would be much better. The stack walking code is already very fragile.",
      "parentUuid": "89550f6d_bce2ec54",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 406,
        "endChar": 98
      },
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1033795_2427bb1d",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-01-16T16:18:18Z",
      "side": 1,
      "message": "initial",
      "range": {
        "startLine": 367,
        "startChar": 31,
        "endLine": 367,
        "endChar": 38
      },
      "revId": "66c60b2cc1f0a0f3b5b5b53c2c78d1c0a94faa90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}