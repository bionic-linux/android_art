{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bab68375_e5e4714b",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-08-31T12:44:51Z",
      "side": 1,
      "message": "Add blank line.",
      "revId": "ec7c8a7579be540fce6aa80f37acf6b7fd62027a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08739db6_364a8061",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-08-31T12:44:51Z",
      "side": 1,
      "message": "Unnecessary, the `entry_str` already has that type.",
      "range": {
        "startLine": 139,
        "startChar": 8,
        "endLine": 139,
        "endChar": 25
      },
      "revId": "ec7c8a7579be540fce6aa80f37acf6b7fd62027a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "703e7042_e71cfdaa",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-08-31T12:44:51Z",
      "side": 1,
      "message": "Maybe we could use `ClassLinker::VisitClasses()` instead.",
      "range": {
        "startLine": 259,
        "startChar": 33,
        "endLine": 259,
        "endChar": 45
      },
      "revId": "ec7c8a7579be540fce6aa80f37acf6b7fd62027a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6edf68e_6217452e",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-08-31T12:44:51Z",
      "side": 1,
      "message": "This can throw. We should add an explicit bounds check above and use `GetWithoutChecks()` here.",
      "range": {
        "startLine": 278,
        "startChar": 80,
        "endLine": 278,
        "endChar": 83
      },
      "revId": "ec7c8a7579be540fce6aa80f37acf6b7fd62027a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc1705fa_a92d30bf",
        "filename": "dex2oat/linker/image_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 2547,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-08-31T12:44:51Z",
      "side": 1,
      "message": "Not needed for `MatchDirtyObjectPaths()`, so move the helper initialization just before the first use.",
      "range": {
        "startLine": 2547,
        "startChar": 2,
        "endLine": 2547,
        "endChar": 35
      },
      "revId": "ec7c8a7579be540fce6aa80f37acf6b7fd62027a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}