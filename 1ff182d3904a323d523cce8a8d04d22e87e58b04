{
  "comments": [
    {
      "key": {
        "uuid": "b9e2aea6_337cf981",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 2
      },
      "lineNbr": 793,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "overload Parse, then you can return Result directly and not use \"existing\" parameter\n\nParseAndAppend is only for \"flag-like\" options that can be aggregated over multiple flags.\n\nThis option will replace any previous set option, so it doesn\u0027t need the more complex parse.",
      "range": {
        "startLine": 793,
        "startChar": 9,
        "endLine": 793,
        "endChar": 23
      },
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fe9280a_bd2dcbba",
        "filename": "runtime/base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "nit: Why not 0?",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "391391bb_add9d29c",
        "filename": "runtime/base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-16T15:12:49Z",
      "side": 1,
      "message": "It\u0027s extra special (not that it really means none, because check level none will still do something), so I wanted it to stand out.",
      "parentUuid": "8fe9280a_bd2dcbba",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76bfa035_4644d77c",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "Again, I\u0027m not sure you want \"AppendValues\". At least it\u0027s not actually appending anything today because previous values are overwritten by new values.\n\nIf it doesn\u0027t need to append anything then you can write it like L274 where the whole thing is done via the DSL",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e5e3f02_c0a5a27a",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 2
      },
      "lineNbr": 720,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "\u003d(none,all) or whatever the strings were",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5cb3687_e285f078",
        "filename": "runtime/parsed_options_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "Move it to the cmdline parser test because that\u0027s where you added the parser.\n\nparsed_options_test should be for options that are parsed by only parsed_options.cc (e.g. magic jni hooks)",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d831a2da_2f528dc2",
        "filename": "runtime/parsed_options_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "nit: {}",
      "range": {
        "startLine": 174,
        "startChar": 22,
        "endLine": 174,
        "endChar": 36
      },
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e673efb2_f1d23942",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T14:12:35Z",
      "side": 1,
      "message": "I\u0027m not sure about this either way:\n\nIs it hard to make default \"all\" and make people reduce level down to e.g. \"fast\" ?\n\nAlso what about gtest?",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29777127_5152ccf5",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-16T15:12:49Z",
      "side": 1,
      "message": "Nicolas would like a libartd that by default boots the device. That means slow checks can\u0027t be on by default.\n\nYes, gtest is an oversight. I\u0027ll have to change common_runtime_test.",
      "parentUuid": "e673efb2_f1d23942",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3cb532b_3f30dbaf",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-16T15:37:35Z",
      "side": 1,
      "message": "I\u0027m not sure I really understand?\n\nTo even boot the device with libartd.so we have to shove in \"-Xlib:libartd.so\" somewhere right?\n\nSo why can\u0027t we also shove in \"-Xlibartd.so -XX:DebugCheckLevel\u003dfast\" while we\u0027re doing that?\n\nIt\u0027ll also make it more obvious from code search who is trying to use fast debugs because it will be in a script somewhere.\n----\n\nOr are, we saying that they already have the \"-Xlib:libartd.so\" scripts so by doing the \"fast by default\" we don\u0027t have to update anywhere else?\n\n-----\n\nEither way the reasoning for the default behavior should be encapsulated where we set the default gDebugLevel.",
      "parentUuid": "29777127_5152ccf5",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b63360c_65011bc4",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-16T15:58:33Z",
      "side": 1,
      "message": "libartd is shoved in by setting a specific system property that defines which runtime library is loaded. Having to add extra-opts separately is not that great.\n\nAgree on adding reasoning to logging.cc.",
      "parentUuid": "b3cb532b_3f30dbaf",
      "revId": "1ff182d3904a323d523cce8a8d04d22e87e58b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}