{
  "comments": [
    {
      "key": {
        "uuid": "d9fb8c32_8182dcd8",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 4022,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-29T09:10:35Z",
      "side": 1,
      "message": "Could you please add a helper for this?",
      "range": {
        "startLine": 4015,
        "startChar": 0,
        "endLine": 4022,
        "endChar": 9
      },
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_b89e396a",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 4022,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-29T12:10:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9fb8c32_8182dcd8",
      "range": {
        "startLine": 4015,
        "startChar": 0,
        "endLine": 4022,
        "endChar": 9
      },
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d54fde2_da7a52e9",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-28T16:33:01Z",
      "side": 1,
      "message": "Not sure how this worked properly before (!)",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed56c9ec_3d37d290",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-05-28T16:58:09Z",
      "side": 1,
      "message": "That sounds like a better regression test is necessary.",
      "parentUuid": "0d54fde2_da7a52e9",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d1bb95b_152d92c1",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-28T18:01:31Z",
      "side": 1,
      "message": "There is a test that actually tests this.  Unfortunately, this particular code only runs if sse4.1 is set as a feature, and that is not true by default.  I will post a (tested) fix for this, but I am not sure how to test this in general.",
      "parentUuid": "ed56c9ec_3d37d290",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d1bb95b_5559ca5c",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-05-28T18:05:31Z",
      "side": 1,
      "message": "This is surprising then, as we do test on the player, which should enable sse4.1...",
      "parentUuid": "6d1bb95b_152d92c1",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9fb8c32_a1b5d8ba",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-29T09:10:35Z",
      "side": 1,
      "message": "The player is x86. This code is for x86_64.\n\nI think we should just drop sse4.1 here. We can\u0027t easily test it right now until we have a x86_64 device.",
      "parentUuid": "6d1bb95b_5559ca5c",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3914a832_19f3eb9a",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-29T12:10:01Z",
      "side": 1,
      "message": "I would prefer to keep it, as it is useful on some Intel devices, and is tested in-house.",
      "parentUuid": "d9fb8c32_a1b5d8ba",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_c0b26cfa",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-29T12:12:36Z",
      "side": 1,
      "message": "How tested? You said you were not sure how this worked properly before?",
      "parentUuid": "3914a832_19f3eb9a",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_7888a12a",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-29T12:25:14Z",
      "side": 1,
      "message": "The bug was when I transferred the code to AOSP, and lost a line from a working version. \n\nWould you still prefer that I remove this section?",
      "parentUuid": "6d42d931_c0b26cfa",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_00963448",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-29T12:38:42Z",
      "side": 1,
      "message": "The problem is that we can\u0027t maintain something we\u0027re not testing. It\u0027s great if you have internal testing, but others might risk breaking it, and being notified in a few days when your tests kick in.\n\nSo yeah, for those sorts of things, I\u0027d prefer not having to maintain the code. Or highly prioritizing a way for testing it.",
      "parentUuid": "190b6419_7888a12a",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_38822909",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-05-29T12:56:41Z",
      "side": 1,
      "message": "I don\u0027t suppose that there is any way to increase your testing? I much prefer that improvements go into AOSP for maintainability.\n\nI tested this originally by forcing on sse4.1 on an x86 host, using Xcompiler-option.  Is it possible for that to be added?",
      "parentUuid": "6d42d931_00963448",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d470d3e_b3b7771a",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 714,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-29T13:01:41Z",
      "side": 1,
      "message": "Andreas? What was the conclusion on host testing with sse4.1?",
      "parentUuid": "190b6419_38822909",
      "revId": "49e61929ef23cb7bd231e40e179d110ee259ab89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}