{
  "comments": [
    {
      "key": {
        "uuid": "f7b6fbc0_95b57032",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "code",
      "range": {
        "startLine": 10,
        "startChar": 63,
        "endLine": 10,
        "endChar": 66
      },
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f2a4f95_c2b87f73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "I think that\u0027s a new use case in ART. We use FATAL without abort to log stuff, and then there\u0027s a FATAL to abort. I\u0027d prefer if we made it an ERROR/WARNING instead.",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43231e2c_e5b59c13",
        "filename": "runtime/class_loader_context.h",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "\u0026",
      "range": {
        "startLine": 172,
        "startChar": 39,
        "endLine": 172,
        "endChar": 40
      },
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13c9d0ea_fa22d246",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "I think we could do this check only if we fail the class loader context check?",
      "range": {
        "startLine": 664,
        "startChar": 17,
        "endLine": 664,
        "endChar": 42
      },
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30b48336_acaccd63",
        "filename": "test/726-load-duplicate-dex-files/expected.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "Can you check this works for both device and host? Logging is bit iffy for run-tests.",
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08ad42a3_d75959a3",
        "filename": "test/726-load-duplicate-dex-files/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:02:37Z",
      "side": 1,
      "message": "Line too long.",
      "revId": "8631cb207ada799fad40b0a4013cf50d6146d2ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}