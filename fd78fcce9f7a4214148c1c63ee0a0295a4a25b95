{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "abf75850_e1db3d58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-10T20:39:10Z",
      "side": 1,
      "message": "I hope you\u0027re right. The inherently less risky approach would be to not change the default behaviour and plumb down `new_process_group\u003dfalse` only from the specific exec\u0027s where we need it. Then the default can be changed separately, and after the last snap. Have you considered that approach?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f46dc32_30269d53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-10T21:08:59Z",
      "side": 1,
      "message": "Thanks for the suggestion. However, after this analysis described on the CL description, I think we have sufficient understanding of why changing this behavior is fine.\n\nOr, look at it from another angle:\n\nThe default value can only affect Zygote, odrefresh, artd, and dexopt_chroot_setup in production code.\n\n- For odrefresh, we need `new_process_group\u003dfalse` anyway no matter the default.\n- For artd, we need `new_process_group\u003dtrue` anyway no matter the default.\n- For dexopt_chroot_setup, it\u0027s new code, so there won\u0027t be a regression no matter the default.\n\nThe only place where the change of the default would possibly introduce a regression, if any, is Zygote. For Zygote, the use case is to call dex2oat to create an in-memory boot image, so we are confident that we don\u0027t need dex2oat to be in a separate process group.\n\nTherefore, changing the default is low-risk.",
      "parentUuid": "abf75850_e1db3d58",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1863d70_23203a01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-11T12:18:57Z",
      "side": 1,
      "message": "I did read the argument that this is supposedly safe, and I agree it looks fine in the production code calls. However there are many calls from tests, which even though they\u0027re just tests can cause a bother if they start getting flaky.\n\nAnyway, what I was asking about was what it\u0027d take to solve it the other way around. It doesn\u0027t seem to be that many calls to change for that, so personally I\u0027d do that to not have to worry about the tests, and then do the change that affects them separately (because I entirely agree the default ought to be to skip that `setpgid` call). But up to you.",
      "parentUuid": "0f46dc32_30269d53",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f602482_2dc2ae7d",
        "filename": "artd/artd.cc",
        "patchSetId": 4
      },
      "lineNbr": 1724,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-10T20:39:10Z",
      "side": 1,
      "message": "Worth a comment here too.",
      "range": {
        "startLine": 1724,
        "startChar": 36,
        "endLine": 1724,
        "endChar": 62
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "593353a6_7120a93e",
        "filename": "artd/artd.cc",
        "patchSetId": 4
      },
      "lineNbr": 1724,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-10T21:08:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f602482_2dc2ae7d",
      "range": {
        "startLine": 1724,
        "startChar": 36,
        "endLine": 1724,
        "endChar": 62
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8e712cb_2ac11966",
        "filename": "runtime/exec_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-10T20:39:10Z",
      "side": 1,
      "message": "As discussed on the ticket, it\u0027d be nice to restrict the sepolicy to catch this, but that can come later.",
      "range": {
        "startLine": 100,
        "startChar": 5,
        "endLine": 100,
        "endChar": 99
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "204978e3_96b02565",
        "filename": "runtime/exec_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-10T21:10:10Z",
      "side": 1,
      "message": "As discussed on the ticket, I do plan to restrict the sepolicy to catch this, but I\u0027ll do it later, and I\u0027ll keep the bug open to track it.",
      "parentUuid": "a8e712cb_2ac11966",
      "range": {
        "startLine": 100,
        "startChar": 5,
        "endLine": 100,
        "endChar": 99
      },
      "revId": "fd78fcce9f7a4214148c1c63ee0a0295a4a25b95",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}