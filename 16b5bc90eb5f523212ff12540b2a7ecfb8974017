{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9eeb7597_933d8f6b",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-05T11:21:02Z",
      "side": 1,
      "message": "Not sure what this means?\n\nIs it saying two threads are concurrently creating the dex cache and the one looked at in this method will be obsolete?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 79
      },
      "revId": "16b5bc90eb5f523212ff12540b2a7ecfb8974017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ecc98d2_1bf5529a",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-10-05T11:47:55Z",
      "side": 1,
      "message": "The array is initialized just once (under a lock), but it might be on other thread.\n\nThe initializing thread sets the data pointer and the size count.\n\nWhich means that if the timing is right, this thread might try to loop over the array right in between the update of those two fields. (i.e. seeing non-zero count, but seeing zero data pointer).\n\nThe simplest fix is to check both fields are initialized.",
      "parentUuid": "9eeb7597_933d8f6b",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 79
      },
      "revId": "16b5bc90eb5f523212ff12540b2a7ecfb8974017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4523150_1771815f",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-05T14:11:46Z",
      "side": 1,
      "message": "So we\u0027re either dealing with:\n1) Empty dex cache\n2) Dex cache created concurrently and hence we know there aren\u0027t any entries to update?",
      "parentUuid": "8ecc98d2_1bf5529a",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 79
      },
      "revId": "16b5bc90eb5f523212ff12540b2a7ecfb8974017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfc79c1e_17782cd0",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-10-05T14:23:25Z",
      "side": 1,
      "message": "Yes.  In fairness, I assume that most usecases of the visitors are going to be ensure there is no concurrent DexCache access in the caller.\n\nHowever, it is also possible to iterate over dex cache on one thread while other thread initializes it and adds entries.",
      "parentUuid": "c4523150_1771815f",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 79
      },
      "revId": "16b5bc90eb5f523212ff12540b2a7ecfb8974017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c700912e_3fe6a1bf",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-10-05T14:33:32Z",
      "side": 1,
      "message": "Oh so now I understand the comment :) That\u0027s pretty scary this code then, what happens in the situation we\u0027re changing the size of the cache? Should you insread do fields-\u003eSize() instead of calling NumResolvedFields, which can be changed randomly?",
      "parentUuid": "cfc79c1e_17782cd0",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 79
      },
      "revId": "16b5bc90eb5f523212ff12540b2a7ecfb8974017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}