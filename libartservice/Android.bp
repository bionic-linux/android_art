// Copyright (C) 2021 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "art_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["art_license"],
}

cc_library {
    // This native library contains JNI support code for the ART Service Java
    // Language library.

    name: "libartservice",
    defaults: ["art_defaults"],
    host_supported: true,
    srcs: [
        "service/native/service.cc",
    ],
    export_include_dirs: ["."],
    apex_available: [
        "com.android.art",
        "com.android.art.debug",
    ],
    shared_libs: [
        "libbase",
    ],
    export_shared_lib_headers: ["libbase"],
}

// This variable definition and many of the settings involved in the
// service-art target are taken from the
// framework-system-server-module-defaults target and its dependencies.  These
// target are not used directly because they have a dependency on a
// frameworks/base library which is not available in the unbundled ART build
// servers (framework-annotations-lib).
//
// TODO (b/183133670): Remove this hack and use the
//   framework-system-server-module-defaults target
mainline_stubs_args = "--error UnhiddenSystemApi " +
    "--hide BroadcastBehavior " +
    "--hide CallbackInterface " +
    "--hide DeprecationMismatch " +
    "--hide HiddenSuperclass " +
    "--hide HiddenTypedefConstant " +
    "--hide HiddenTypeParameter " +
    "--hide MissingPermission " +
    "--hide RequiresPermission " +
    "--hide SdkConstant " +
    "--hide Todo " +
    "--hide Typo " +
    "--hide UnavailableSymbol "

// Provides the API and implementation of the ART Service class that will be
// loaded by the System Server.
java_sdk_library {
    // This target is named 'service-art' to conform to the naming conventions
    // for JAR files in the System Server.
    name: "service-art",
    permitted_packages: ["com.android.server.art"],

    system_server: {
        enabled: true,
        sdk_version: "module_current",
    },

    // Prevent dependencies that do not specify an sdk_version from accessing the
    // implementation library by default and force them to use stubs instead.
    default_to_stubs: true,

    api_lint: {
        enabled: true,
    },

    annotations_enabled: true,

    // installable implies we'll create a non-apex (platform) variant, which
    // we shouldn't ordinarily need (and it can create issues), so disable that.
    installable: false,

    visibility: [
        "//art:__subpackages__",
        "//frameworks/base/services/core",
        "//frameworks/base/apex:__subpackages__",
        "//packages/modules:__subpackages__",
    ],

    impl_library_visibility: [
        ":__pkg__",
        "//art/libartservice/tests",
        "//frameworks/base",
    ],

    stubs_library_visibility: ["//visibility:public"],
    stubs_source_visibility: ["//visibility:private"],

    apex_available: [
        "com.android.art",
        "com.android.art.debug",
    ],
    sdk_version: "core_platform",
    min_sdk_version: "31",

    // This is not actually part of the public API but this is the only
    // way to define a custom API surface.
    public: {
        enabled: true,
        sdk_version: "module_current",
    },

    // The API elements are the ones annotated with
    //   libcore.api.CorePlatformApi(status=libcore.api.CorePlatformApi.Status.STABLE)
    droiddoc_options: [
        mainline_stubs_args,
        "--show-single-annotation libcore.api.CorePlatformApi\\(status=libcore.api.CorePlatformApi.Status.STABLE\\)",
    ],

    // Temporarily disable compatibility with previous released APIs.
    // TODO - remove once prototype has stabilized
    //   running "m update-api" will give instructions on what to do next
    unsafe_ignore_missing_latest_api: true,

    // This cannot be accessed by apps using <uses-library> in their manifest.
    shared_library: false,

    srcs: [
        "service/java/com/android/server/art/ArtManagerLocal.java",
    ],

    libs: [
        "art.module.api.annotations.for.system.modules",
    ],

    plugins: ["java_api_finder"],
}

art_cc_test {
    name: "art_libartservice_tests",
    defaults: [
        "art_gtest_defaults",
    ],
    srcs: [
        "service/native/service_test.cc",
    ],
    shared_libs: [
        "libbase",
        "libartservice",
    ],
}
