{
  "comments": [
    {
      "key": {
        "uuid": "8ba1acbc_e09a4258",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 872,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Should is_top be true by default?",
      "range": {
        "startLine": 872,
        "startChar": 67,
        "endLine": 872,
        "endChar": 72
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_5b432336",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 872,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 872,
        "startChar": 42,
        "endLine": 872,
        "endChar": 57
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1acbc_c004de91",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 872,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "Could be, it will change things slightly but it doesn\u0027t matter too much.\n\nThe reason I chose to have is_top and is_known is to speed up the fix point iteration. Since we move towards is_top we could potentially stop earlier when we hit it. If is_top is the default then we always have to go through all the inputs.\n\nAlso, it made slightly easier in InstructionSimplifier, since I didn\u0027t need to check if the type propagation has run.\n\nRe-evaluating this it\u0027s not really clear if there\u0027s any relevant speed-up... so I go for simplicity by removing is_known and having is_top the default.",
      "parentUuid": "8ba1acbc_e09a4258",
      "range": {
        "startLine": 872,
        "startChar": 67,
        "endLine": 872,
        "endChar": 72
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_db05f3bd",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 872,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "At this point it doesn\u0027t matter what value is here since the value is unknown.\n\nFor clarity I made this explicit eveywhere and set it to false here.",
      "parentUuid": "ebb1480e_5b432336",
      "range": {
        "startLine": 872,
        "startChar": 42,
        "endLine": 872,
        "endChar": 57
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_7b46df47",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 874,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 874,
        "startChar": 50,
        "endLine": 874,
        "endChar": 64
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_3bff3731",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 874,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "\"historic\" reasons as only NewInstance and LoadClass call this. I made it explicit.",
      "parentUuid": "ebb1480e_7b46df47",
      "range": {
        "startLine": 874,
        "startChar": 50,
        "endLine": 874,
        "endChar": 64
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_ab1b156f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 906,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Move line 898?",
      "range": {
        "startLine": 903,
        "startChar": 0,
        "endLine": 906,
        "endChar": 5
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb0e44b5_8a1f0b8e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 906,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "no longer applies, but previously the value could have been unknown and the embedded pointer null.",
      "parentUuid": "8b7c4cf2_ab1b156f",
      "range": {
        "startLine": 903,
        "startChar": 0,
        "endLine": 906,
        "endChar": 5
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_cb28497f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 952,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "How can it be a superclass? I would change the comment to \"it cannot be a subclass of `type_handle`.",
      "range": {
        "startLine": 952,
        "startChar": 39,
        "endLine": 952,
        "endChar": 64
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_fb278f58",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 952,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "fixed the comment.",
      "parentUuid": "8b7c4cf2_cb28497f",
      "range": {
        "startLine": 952,
        "startChar": 39,
        "endLine": 952,
        "endChar": 64
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_eb250da4",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 956,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "When true,",
      "range": {
        "startLine": 956,
        "startChar": 32,
        "endLine": 956,
        "endChar": 41
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb0e44b5_6a05f738",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 3
      },
      "lineNbr": 956,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7c4cf2_eb250da4",
      "range": {
        "startLine": 956,
        "startChar": 32,
        "endLine": 956,
        "endChar": 41
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_6b311de4",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Are we guaranteed by the algorithm that the inputs\u0027s types will be known? What happens here if only one input is known?",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 47
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1acbc_6033d26c",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "yea, there was a bug here.IsKnown should have behave like IsTop and set the result to unknown if any of the input is unknown. Fixed.",
      "parentUuid": "8b7c4cf2_6b311de4",
      "range": {
        "startLine": 77,
        "startChar": 7,
        "endLine": 77,
        "endChar": 47
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1acbc_40a44e8f",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Call the ReferenceTypeInfo method instead?",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 60
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abb2f059_11fb0cce",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "that one will do some redundant checks but done as it makes things cleaner.",
      "parentUuid": "8ba1acbc_40a44e8f",
      "range": {
        "startLine": 102,
        "startChar": 15,
        "endLine": 102,
        "endChar": 60
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_8b45713c",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 58
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abb2f059_71f898cf",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7c4cf2_8b45713c",
      "range": {
        "startLine": 105,
        "startChar": 15,
        "endLine": 105,
        "endChar": 58
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_ab42352f",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Add a TODO: Find common parent?",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 107,
        "endChar": 12
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b5ed4d0_a6c1c608",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7c4cf2_ab42352f",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 107,
        "endChar": 12
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1acbc_80aa565e",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "IsEquivalent doesn\u0027t really fit here. What you really want is to know whether any of the field has changed. Equals does seem like a good name to me....",
      "range": {
        "startLine": 113,
        "startChar": 10,
        "endLine": 113,
        "endChar": 45
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abb2f059_b1e96009",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "IsEqual makes me think of structural equality which is not the case here. I can see however that it\u0027s the pattern in other cases as well so done.",
      "parentUuid": "8ba1acbc_80aa565e",
      "range": {
        "startLine": 113,
        "startChar": 10,
        "endLine": 113,
        "endChar": 45
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_2bde451d",
        "filename": "test/450-checker-types/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T18:35:28Z",
      "side": 1,
      "message": "Maybe also add a test that the checkcast is still there when doing a checkcast of SubclassA ?",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 3
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b5ed4d0_a6d8e6f6",
        "filename": "test/450-checker-types/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-02-18T14:17:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7c4cf2_2bde451d",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 3
      },
      "revId": "5a9c0c0383e40f15cf3f10cd408464fb3e156d89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}