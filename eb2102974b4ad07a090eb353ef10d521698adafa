{
  "comments": [
    {
      "key": {
        "uuid": "8d159bc1_a328b697",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1898,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Why need to avoid buffering?",
      "range": {
        "startLine": 1898,
        "startChar": 4,
        "endLine": 1898,
        "endChar": 25
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_230726fa",
        "filename": "runtime/class_table-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Do we need to do an update in Read() instead of simply delegating it to VisitRoot() just like a normal concurrently-handled GC root?",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 86
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_3e3dfded",
        "filename": "runtime/class_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Just checking if it\u0027s as intended:\n\n1. The old code used to try to find it and it checked the class references are actually equal. Now we don\u0027t. Is this okay?\n\n2. If we now just check that the given class is in the class_set, calling LookupByDescriptor would have a redundant read barrier (it-\u003eRead())? We could avoid that read barrier here?",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 46
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_7eb6d58e",
        "filename": "runtime/class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Do we have some unit tests covering TableSlot/ClassSet?",
      "range": {
        "startLine": 45,
        "startChar": 8,
        "endLine": 45,
        "endChar": 17
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_c38a8a6c",
        "filename": "runtime/class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Is it possible to DCHECK that \u0027descriptor_hash\u0027 matches the descriptor hash of \u0027klass\u0027 here?",
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_9e6aa926",
        "filename": "runtime/class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Would changing this to \"static uint32_t Hash(uint32_t)\" avoid having to put \"\u0026 kHashMask\" in many locations?",
      "range": {
        "startLine": 65,
        "startChar": 13,
        "endLine": 65,
        "endChar": 17
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_e356aeeb",
        "filename": "runtime/class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-12-03T01:01:04Z",
      "side": 1,
      "message": "Make it clearer that this contains a GC root in the comment?",
      "range": {
        "startLine": 89,
        "startChar": 29,
        "endLine": 89,
        "endChar": 34
      },
      "revId": "eb2102974b4ad07a090eb353ef10d521698adafa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}