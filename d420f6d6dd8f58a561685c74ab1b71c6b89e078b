{
  "comments": [
    {
      "key": {
        "uuid": "a593eb68_d4dd4d29",
        "filename": "runtime/gc/accounting/space_bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-26T00:36:08Z",
      "side": 1,
      "message": "Keep the ALWAYS_INLINE?",
      "range": {
        "startLine": 69,
        "startChar": 34,
        "endLine": 69,
        "endChar": 35
      },
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a554cbb1_83711e24",
        "filename": "runtime/gc/accounting/space_bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-28T19:02:39Z",
      "side": 1,
      "message": "error: attributes are not allowed on a function-definition",
      "parentUuid": "a593eb68_d4dd4d29",
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05f3d71b_a1a638af",
        "filename": "runtime/gc/accounting/space_bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-28T22:46:56Z",
      "side": 1,
      "message": "OK. I guess that since it\u0027s now a template function, it will be specialized and inlined anyway without it.",
      "parentUuid": "a554cbb1_83711e24",
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6587332a_beb18d20",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-26T00:36:08Z",
      "side": 1,
      "message": "These could cause the rosalloc verification to take its own pause, separate from GC\u0027s pause.\n\nI think that to have a clear separation in who to blame upon verification errors (for example, if the pre didn\u0027t fail but post failed, then GC is to blame), it makes sense to let each collector choose when to run these verifications (just like this change now lets each collector when to pause) and have the verification run in the same pause that the collector takes.\n\nFor SemiSpace, how about moving lines 71 and 73 to the beginning and the end of SemiSpace::MarkPhase() or in appropriate places in RunPhases().\n\nFor MarkSweep, how about moving lines 71 and 73 to the beginning and the end of SemiSpace::PausePhase() or in appropriate places in  RunPhases().\n\nNote that the SemiSpace\u0027s and MarkSweep\u0027s pre-sweep gc verifications are part of the collectors\u0027 pause where I suggest moving the rosalloc verification calls to.",
      "range": {
        "startLine": 71,
        "startChar": 13,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e55a43dc_0b91c189",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-28T19:02:39Z",
      "side": 1,
      "message": "I put it in pre sweeping GC verification, is that good enough?",
      "parentUuid": "6587332a_beb18d20",
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05f3d71b_c1bc245f",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-28T22:46:56Z",
      "side": 1,
      "message": "I suggest going in the other direction. Placing it side by side with the pre-sweep gc verification isn\u0027t the main point, by which I was merely suggesting a code location to move it to. The point is, as I understand, to get the verification to give us information on who\u0027s to blame (gc or mutator). The whole reason to have the convention of having both \u0027pre\u0027 and \u0027post\u0027 in the first place is this very reason, it\u0027s not just that \u0027pre\u0027 needs to happen some time before a GC and \u0027post\u0027 needs to happen some time after a GC. They need to be part of the same GC pause for this blame attribution purpose. Otherwise, if a \u0027post\u0027 fails, since mutators are already resumed, we can\u0027t tell if it\u0027s mutator or what GC did during the pause that caused the problem.",
      "parentUuid": "e55a43dc_0b91c189",
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2581bb17_70ff4148",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-04-26T00:36:08Z",
      "side": 1,
      "message": "If we call these from within a collector\u0027s pause like one of the other comments suggests, we could add back those thread safety annotations.",
      "range": {
        "startLine": 447,
        "startChar": 69,
        "endLine": 447,
        "endChar": 94
      },
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c557ffb2_caa727dd",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-04-28T19:02:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2581bb17_70ff4148",
      "revId": "d420f6d6dd8f58a561685c74ab1b71c6b89e078b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}