{
  "comments": [
    {
      "key": {
        "uuid": "0310f3b3_ecc3b3f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-16T17:25:46Z",
      "side": 1,
      "message": "This applies to explicit dlopen calls, right? Why is libc loaded that way?",
      "range": {
        "startLine": 9,
        "startChar": 56,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "dec0b42c2a04e259eea18b5a73a9ea8034669bb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29863620_f7f6e6d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-04-16T17:56:44Z",
      "side": 1,
      "message": "No, in my case it happened when libarttestd.so (used in some ART run-tests) was loaded via java.lang.System.loadLibrary (which uses dlopen); libarttestd.so was dynamically linked to libc.so but could the linker could not find it.",
      "parentUuid": "0310f3b3_ecc3b3f3",
      "range": {
        "startLine": 9,
        "startChar": 56,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "dec0b42c2a04e259eea18b5a73a9ea8034669bb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ed4f0c4_f05674fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-17T12:57:11Z",
      "side": 1,
      "message": "So libarttestd.so was dlopen\u0027ed from the classloader-namespace namespace, and it just had a normal NEEDED dependency on libc which failed?\n\nIf so, I\u0027m surprised that visibility makes a difference. From the docs on [1]:\n\n\"If visible is false (default), /.../ Shared libraries can only be loaded into this namespace if (1) they are requested by another linker namespace that has a fallback link to this namespace or (2) they are requested by other shared libraries or executables in this namespace.\"\n\nThe way I read that, the libc dependency ought to be covered by (1). Perhaps the classloader-namespace is configured wrong?\n\n[1] https://source.android.com/devices/architecture/vndk/linker-namespace",
      "parentUuid": "29863620_f7f6e6d8",
      "range": {
        "startLine": 9,
        "startChar": 56,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "dec0b42c2a04e259eea18b5a73a9ea8034669bb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dc2cea2_ccab92a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-29T15:15:12Z",
      "side": 1,
      "message": "The reason this is necessary isn\u0027t because of dlopen, but to make the namespaces available to android_link_namespaces, as Jiyong explained in http://b/130293232#comment7.\n\nI\u0027ve got http://r.android.com/952236 with a larger change that supersedes this CL.",
      "parentUuid": "2ed4f0c4_f05674fa",
      "range": {
        "startLine": 9,
        "startChar": 56,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "dec0b42c2a04e259eea18b5a73a9ea8034669bb7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}