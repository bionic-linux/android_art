{
  "comments": [
    {
      "key": {
        "uuid": "9488a511_78883c38",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-21T10:53:57Z",
      "side": 1,
      "message": "If there is an .odex file but no .art file, we still want to load the .odex file. So this check looks wrong?",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a8ac234_fb3c817a",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-04-21T15:30:24Z",
      "side": 1,
      "message": "The point of this CL is to make it so that we can always assume in the OAT file that there is an app image, in order to enable some of the optimizations like removing HLoadClass for classes in the image that are discussed at http://b/38313278.\n\nI agree this is a change in policy, and it\u0027s worth having a discussion about whether this is what we want. That\u0027s part of what the CL is for - to give us something to debate.\n\nMy understanding is we pretty much always have an app image these days, so it shouldn\u0027t be a huge change in practice to require one.",
      "parentUuid": "9488a511_78883c38",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "091b626a_87bf5385",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2020-04-21T15:39:46Z",
      "side": 1,
      "message": "There are probably some cases where we wont have a profile that we should still handle (i.e. installation without a cloud profile / sideload). We should add a flag in the OAT file that says if an (app) image is required or not.",
      "parentUuid": "1a8ac234_fb3c817a",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484a84f7_ac693c63",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-04-21T16:30:28Z",
      "side": 1,
      "message": "I like the idea of having a flag that says an OAT file requires an app image.\n\nEven without the flag though, we\u0027d run in interpreter/JIT mode, which may be good enough if these cases are rare.\n\nFor the flag, I\u0027m guessing we could have dex2oat set it if it is generating an app image in addition to compiling?",
      "parentUuid": "091b626a_87bf5385",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "802af413_09785e91",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-21T20:36:00Z",
      "side": 1,
      "message": "There are still some cases we don\u0027t have an image (compiler filter verify, quicken, speed, etc). For those cases, we still want to support loading an .odex file when we don\u0027t have an image.",
      "parentUuid": "484a84f7_ac693c63",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9db99421_549cc0e3",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-04-21T20:44:15Z",
      "side": 1,
      "message": "Sounds good. Do you think a flag in the odex file that says an app image is required would be reasonable? If we set that flag, then we can generate code assuming the image exists, and otherwise we keep the current behavior.",
      "parentUuid": "802af413_09785e91",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f698e4b6_9c170e43",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-21T20:49:28Z",
      "side": 1,
      "message": "Maybe we can use the speed-profile filter as such a flag? Ie if the odex is speed-profile then we must also load an image.",
      "parentUuid": "9db99421_549cc0e3",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64584abc_22787366",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-04-21T21:12:37Z",
      "side": 1,
      "message": "That sounds good to me. It\u0027d be nice not to add an additional flag and the extra configuration space that comes along with that.",
      "parentUuid": "f698e4b6_9c170e43",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6954e35d_acfbe90a",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-22T08:28:15Z",
      "side": 1,
      "message": "We can do that as well - but I think this may require an .oat version change?",
      "parentUuid": "64584abc_22787366",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6c01729_53287008",
        "filename": "runtime/oat_file_manager.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-04-23T02:21:13Z",
      "side": 1,
      "message": "I think you\u0027re right. Let\u0027s stick with limiting this to speed-profile for now.\n\nMy latest patch set makes the change to only require app images for speed-profile OAT files.",
      "parentUuid": "6954e35d_acfbe90a",
      "range": {
        "startLine": 614,
        "startChar": 22,
        "endLine": 614,
        "endChar": 42
      },
      "revId": "efc2766081cfdffbaa77e0244c2ab6aed4ac9d03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}