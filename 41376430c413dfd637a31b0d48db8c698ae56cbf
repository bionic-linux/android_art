{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "74c290c3_1a1a32b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "I think the convention is to break text at column 72 in commit messages (even though Gerrit also does it implicitly).",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "439624f9_63b706c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "Did you try `// NOLINTBEGIN(modernize-use-using)` and `// NOLINTEND` around the #include line?",
      "range": {
        "startLine": 9,
        "startChar": 203,
        "endLine": 9,
        "endChar": 222
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3629512f_dd170acd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "Yes, I have tried all combinations of // NOLINT, // NOLINTENEXTLINE, and // NOLINTBEGIN + // NOLINTEND, but none of them solved the problem.",
      "parentUuid": "439624f9_63b706c6",
      "range": {
        "startLine": 9,
        "startChar": 203,
        "endLine": 9,
        "endChar": 222
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17b428dc_eb4abd9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "Stange, I have added this additional information directly in Gerrit (they are not present in my local commit message), so that should have been done automatically - I\u0027ll break it down manually.",
      "parentUuid": "74c290c3_1a1a32b9",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee9d472_7ea95108",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "Although this is admittedly a problem, or at least a potential one, I don\u0027t think it has any connection.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fd62ca9_c7e0fc02",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:31:34Z",
      "side": 1,
      "message": "Not even if we disable clang-tidy completely for external/dlmalloc by creating an Android.bp file in there and setting `tidy: false` explicitly?",
      "parentUuid": "eee9d472_7ea95108",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79900731_f84f0069",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Not for clang-tidy warnings that appear from including the header file, no. I think the `tidy: false` applies to the clang invocation for the compilation unit. Can\u0027t imagine there\u0027s magic in place that would somehow pass it along with exported headers so that it gets applied to those headers only. Things aren\u0027t that fancy.\n\nBut, hmm, that means we need to be building the .c file somewhere else. And we do, from https://cs.android.com/android/platform/superproject/+/master:art/runtime/gc/allocator/dlmalloc.cc;l\u003d42;drc\u003d5a0430d0239481f4efb252d60ec9641703b8d456. So we may be getting the warnings through several paths. You\u0027ve tried NOLINTBEGIN/NOLINTEND both there and around the header file #include simultaneously?",
      "parentUuid": "6fd62ca9_c7e0fc02",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a05bb45_25cbbddc",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T13:11:50Z",
      "side": 1,
      "message": "If we leave this, we can\u0027t prevent people from violating this rule in the future. Could you upload a patchset to show how you would exclude external/dlmalloc with --header-filter? It may be interesting for us to play with the path spec.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4de2424c_d4171d77",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T13:55:31Z",
      "side": 1,
      "message": "From your comment I understand that you would use the -header-filter flag to _exclude_ some paths from being included in the clang-tidy analysis; I had this idea as well (at first), but it looks like that flag does actually the opposite: by default, clang-tidy should _ignore_ all header files, and you could use -header-files to _include_ the ones that you want to have checked (see https://stackoverflow.com/a/65391968 and https://cs.android.com/android-llvm/toolchain/llvm-project/+/master:clang-tools-extra/test/clang-tidy/readability-identifier-naming.cpp;l\u003d90-92?q\u003dheader-filter)",
      "parentUuid": "1a05bb45_25cbbddc",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e0e88e6_d674c768",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:21:46Z",
      "side": 1,
      "message": "Try `-header-filter\u003dart/` to only include ART headers?",
      "parentUuid": "4de2424c_d4171d77",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44ea7623_7bde0126",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:34:18Z",
      "side": 1,
      "message": "I\u0027ve tried this, too - in fact, this surfaces _more_ issues because there are some typedef statements in some ART header files (e.g., `art/libelffile/elf/elf_debug_reader.h`) which are not picked up with the default configuration.",
      "parentUuid": "4e0e88e6_d674c768",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776b8ac6_7bbc89a5",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:37:09Z",
      "side": 1,
      "message": "Regardless of more issues it surfaces, does the issue with the external header go away?",
      "parentUuid": "44ea7623_7bde0126",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84dd0166_cc7d99a4",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:43:04Z",
      "side": 1,
      "message": "Unfortunately no, I meant it surfaces more errors in addition to the dlmalloc ones:\n\n$ m tidy-art | grep \"error: \"                                                \n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]",
      "parentUuid": "776b8ac6_7bbc89a5",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e532359f_e3d059c3",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:51:23Z",
      "side": 1,
      "message": ":( Too bad.\n\nI\u0027m not sure if clang-tidy supports regexes with negative lookahead. Try:\n```\n--header-filter\u003d(^|/)art/((?!external/dlmalloc).)*$\n```\n?",
      "parentUuid": "84dd0166_cc7d99a4",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64087f21_799eccd9",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "According to https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics the proper syntax is `NOLINT(modernize-use-using)`. I suggest using that here too. (I suspect this is actually the same as just `NOLINT`, i.e. it turns off all lint checks.)",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee07994d_a644ff1a",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "I am aware that would be the proper syntax (and would be my preference, too) - the reason why I went for this approach is that //NOLINT(modernize-use-using) would be recognised by CppLint as one of its suppressions, throwing an error as this is not one of the checks CppLint does (but it\u0027s one of clang-tidy\u0027s).",
      "parentUuid": "64087f21_799eccd9",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a0c2a6b_2a99512f",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Aha, I see.\n\nIf my suspicion is correct and it actually turns off all checks then I think it\u0027d be better to not give the impression that it disables modernize-use-using only. Maybe something like\n\n`// NOLINT // disable typedef warning`\n\nor just `// NOLINT` if even that isn\u0027t clear enough.\n\nIn any case, since we cannot explain the clang-tidy vs cpplint situation on every line, please do it in the CL description instead.",
      "parentUuid": "ee07994d_a644ff1a",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc64e102_f8c22a41",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Please address the AyeAye issue on this line.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}