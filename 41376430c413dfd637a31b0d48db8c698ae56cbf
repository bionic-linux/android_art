{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "74c290c3_1a1a32b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "I think the convention is to break text at column 72 in commit messages (even though Gerrit also does it implicitly).",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "439624f9_63b706c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "Did you try `// NOLINTBEGIN(modernize-use-using)` and `// NOLINTEND` around the #include line?",
      "range": {
        "startLine": 9,
        "startChar": 203,
        "endLine": 9,
        "endChar": 222
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3629512f_dd170acd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "Yes, I have tried all combinations of // NOLINT, // NOLINTENEXTLINE, and // NOLINTBEGIN + // NOLINTEND, but none of them solved the problem.",
      "parentUuid": "439624f9_63b706c6",
      "range": {
        "startLine": 9,
        "startChar": 203,
        "endLine": 9,
        "endChar": 222
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17b428dc_eb4abd9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "Stange, I have added this additional information directly in Gerrit (they are not present in my local commit message), so that should have been done automatically - I\u0027ll break it down manually.",
      "parentUuid": "74c290c3_1a1a32b9",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee9d472_7ea95108",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "Although this is admittedly a problem, or at least a potential one, I don\u0027t think it has any connection.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fd62ca9_c7e0fc02",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:31:34Z",
      "side": 1,
      "message": "Not even if we disable clang-tidy completely for external/dlmalloc by creating an Android.bp file in there and setting `tidy: false` explicitly?",
      "parentUuid": "eee9d472_7ea95108",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79900731_f84f0069",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Not for clang-tidy warnings that appear from including the header file, no. I think the `tidy: false` applies to the clang invocation for the compilation unit. Can\u0027t imagine there\u0027s magic in place that would somehow pass it along with exported headers so that it gets applied to those headers only. Things aren\u0027t that fancy.\n\nBut, hmm, that means we need to be building the .c file somewhere else. And we do, from https://cs.android.com/android/platform/superproject/+/master:art/runtime/gc/allocator/dlmalloc.cc;l\u003d42;drc\u003d5a0430d0239481f4efb252d60ec9641703b8d456. So we may be getting the warnings through several paths. You\u0027ve tried NOLINTBEGIN/NOLINTEND both there and around the header file #include simultaneously?",
      "parentUuid": "6fd62ca9_c7e0fc02",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2e3a7b_717a59c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T15:01:54Z",
      "side": 1,
      "message": "I hadn\u0027t tried this, because all the error lines specifically mentioned malloc.h as the problematic file - I have tried it now, but I don\u0027t see any improvements.",
      "parentUuid": "79900731_f84f0069",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19582e24_752d99b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T23:11:22Z",
      "side": 1,
      "message": "For which compilation unit(s) do you get the errors then?",
      "parentUuid": "8e2e3a7b_717a59c2",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f4bba0d_9cdcec2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T09:24:40Z",
      "side": 1,
      "message": "It\u0027s a bit hard to say - the errors reported by clang-tidy look like the following:\n\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\ntypedef void* mspace;\n^~~~~~~~~~~~~~~~~~~~\n\nI have seen errors coming both from art/compiler and from art/runtime; the latter is somewhat expected (as it\u0027s where the inclusion of the dlmalloc header file occurs), but I don\u0027t understand why art/compiler too would report the issue.",
      "parentUuid": "19582e24_752d99b7",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "501468a2_0722a8d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-16T09:50:30Z",
      "side": 1,
      "message": "The build command is printed before those errors, and before that you see the built Soong module name (I think the output is buffered, so it\u0027s never jumbled together with other build commands even though they\u0027re parallelized).\n\nAnyway, we can continue this on the next CL - not blocking this one.",
      "parentUuid": "2f4bba0d_9cdcec2a",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a05bb45_25cbbddc",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T13:11:50Z",
      "side": 1,
      "message": "If we leave this, we can\u0027t prevent people from violating this rule in the future. Could you upload a patchset to show how you would exclude external/dlmalloc with --header-filter? It may be interesting for us to play with the path spec.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4de2424c_d4171d77",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T13:55:31Z",
      "side": 1,
      "message": "From your comment I understand that you would use the -header-filter flag to _exclude_ some paths from being included in the clang-tidy analysis; I had this idea as well (at first), but it looks like that flag does actually the opposite: by default, clang-tidy should _ignore_ all header files, and you could use -header-files to _include_ the ones that you want to have checked (see https://stackoverflow.com/a/65391968 and https://cs.android.com/android-llvm/toolchain/llvm-project/+/master:clang-tools-extra/test/clang-tidy/readability-identifier-naming.cpp;l\u003d90-92?q\u003dheader-filter)",
      "parentUuid": "1a05bb45_25cbbddc",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e0e88e6_d674c768",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:21:46Z",
      "side": 1,
      "message": "Try `-header-filter\u003dart/` to only include ART headers?",
      "parentUuid": "4de2424c_d4171d77",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44ea7623_7bde0126",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:34:18Z",
      "side": 1,
      "message": "I\u0027ve tried this, too - in fact, this surfaces _more_ issues because there are some typedef statements in some ART header files (e.g., `art/libelffile/elf/elf_debug_reader.h`) which are not picked up with the default configuration.",
      "parentUuid": "4e0e88e6_d674c768",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776b8ac6_7bbc89a5",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:37:09Z",
      "side": 1,
      "message": "Regardless of more issues it surfaces, does the issue with the external header go away?",
      "parentUuid": "44ea7623_7bde0126",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84dd0166_cc7d99a4",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:43:04Z",
      "side": 1,
      "message": "Unfortunately no, I meant it surfaces more errors in addition to the dlmalloc ones:\n\n$ m tidy-art | grep \"error: \"                                                \n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:38:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:39:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:40:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:41:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/libelffile/elf/elf_debug_reader.h:42:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/../../external/dlmalloc/malloc.h:529:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:48:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/codegen_test_utils.h:260:3: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/compiler/optimizing/scheduler_arm.h:26:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 [modernize-use-using,-warnings-as-errors]",
      "parentUuid": "776b8ac6_7bbc89a5",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e532359f_e3d059c3",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T14:51:23Z",
      "side": 1,
      "message": ":( Too bad.\n\nI\u0027m not sure if clang-tidy supports regexes with negative lookahead. Try:\n```\n--header-filter\u003d(^|/)art/((?!external/dlmalloc).)*$\n```\n?",
      "parentUuid": "84dd0166_cc7d99a4",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cbe02ee_6a022dfe",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:55:16Z",
      "side": 1,
      "message": "Why not enable and fix the warnings in elf_debug_reader.h and the other ART headers? They\u0027re our own headers so we can change them easily, can\u0027t we?",
      "parentUuid": "e532359f_e3d059c3",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f2a0ff_20cc8f3e",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T15:01:54Z",
      "side": 1,
      "message": "@Jiakai: unfortunately negative lookaheads are not supported, as clang-tidy uses the POSIX regexp syntax (see https://stackoverflow.com/questions/71797349/is-it-possible-to-ignore-a-header-with-clang-tidy)\n\n@Martin: enabling the check for all ART headers and correcting the new issues sounds good (and I will send out a new patchset for this), but it won\u0027t solve the problem with dlmalloc.",
      "parentUuid": "6cbe02ee_6a022dfe",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18d3e68_c488bb2b",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-15T15:18:17Z",
      "side": 1,
      "message": "Alright. I guess the next option is to:\n1. Create an Android.bp file for external/dlmalloc with `cc_library_headers`.\n2. Import it as a `header_libs` of `libart_defaults`.\n3. Replace `#include \"../../xxxxx\"` with `#include \"malloc.h\"`.\n4. Add `--header-filter\u003d(^|/)art/`.\n\nMartin, will this work?",
      "parentUuid": "d5f2a0ff_20cc8f3e",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7ef265_cad01c19",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T23:11:22Z",
      "side": 1,
      "message": "So the effect of that is that clang gets fed `-Iexternal/dlmalloc` and thus won\u0027t need the ../.. path. Your idea is that that would help avoiding the malloc.h header getting included in the filter somehow? Maybe. I\u0027m not sure since I don\u0027t understand why that happens in the first place, and if it has anything to do with that ../.. path.\n\nSo could be worth a try, I guess, and it\u0027d be a good thing to do anyway. (Somewhat related is to try to clean up this hack https://cs.android.com/android/platform/superproject/+/master:art/runtime/gc/allocator/dlmalloc.cc;l\u003d34-42;drc\u003d5a0430d0239481f4efb252d60ec9641703b8d456 so that dlmalloc can become a regular static library instead, but that may be a different cup of tea.)\n\nIn any case, maybe we can get this submitted first with the other comments addressed, and iterate instead? This CL is a bit unwieldy due to the many changed files.",
      "parentUuid": "d18d3e68_c488bb2b",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c1cd072_e84a4a1e",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-16T09:02:11Z",
      "side": 1,
      "message": "SGTM. Feel free to do it in a separate CL.",
      "parentUuid": "5e7ef265_cad01c19",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cbe0efa_2d49cc2f",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T09:24:40Z",
      "side": 1,
      "message": "I agree with Martin, I would prefer the changes to make dlmalloc a \"proper\" library rather than just a couple of included file to live in a different CL - both because this CL is touching a number of files already (even though only few lines per file), and also because it\u0027s a different kind of work than fixing clang-tidy issues. Do you know if there a bug for this task already, or shall we create a new one?",
      "parentUuid": "5e7ef265_cad01c19",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3049f36e_ccae1823",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-06-16T09:45:00Z",
      "side": 1,
      "message": "I don\u0027t think there is an existing bug for this. Please create a new one. Thanks for looking into this!",
      "parentUuid": "9cbe0efa_2d49cc2f",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cd827f1_7000181a",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-16T09:50:30Z",
      "side": 1,
      "message": "+1 Then you can also put a TODO comment pointing to that ticket on the line here, so we have a reminder to remove this clang-tidy exception when it\u0027s been fixed.",
      "parentUuid": "9cbe0efa_2d49cc2f",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00bc648a_418c681d",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T10:42:03Z",
      "side": 1,
      "message": "Adding a TODO with the bug number sounds good, will do.",
      "parentUuid": "6cd827f1_7000181a",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26fd09fc_bc7ce3f1",
        "filename": "build/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T13:30:29Z",
      "side": 1,
      "message": "Opened b/236243696 to track the improvement on dlmalloc\u0027s inclusion (and left a TODO with a reference to it in the new patchset).",
      "parentUuid": "00bc648a_418c681d",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64087f21_799eccd9",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:06:14Z",
      "side": 1,
      "message": "According to https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics the proper syntax is `NOLINT(modernize-use-using)`. I suggest using that here too. (I suspect this is actually the same as just `NOLINT`, i.e. it turns off all lint checks.)",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee07994d_a644ff1a",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T14:26:20Z",
      "side": 1,
      "message": "I am aware that would be the proper syntax (and would be my preference, too) - the reason why I went for this approach is that //NOLINT(modernize-use-using) would be recognised by CppLint as one of its suppressions, throwing an error as this is not one of the checks CppLint does (but it\u0027s one of clang-tidy\u0027s).",
      "parentUuid": "64087f21_799eccd9",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a0c2a6b_2a99512f",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Aha, I see.\n\nIf my suspicion is correct and it actually turns off all checks then I think it\u0027d be better to not give the impression that it disables modernize-use-using only. Maybe something like\n\n`// NOLINT // disable typedef warning`\n\nor just `// NOLINT` if even that isn\u0027t clear enough.\n\nIn any case, since we cannot explain the clang-tidy vs cpplint situation on every line, please do it in the CL description instead.",
      "parentUuid": "ee07994d_a644ff1a",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52f250f7_7dcbd8fe",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T15:01:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9a0c2a6b_2a99512f",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67c16b9f_d7f84ff3",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T23:11:22Z",
      "side": 1,
      "message": "Not yet resolved.",
      "parentUuid": "52f250f7_7dcbd8fe",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a9e0d62_a2e3edf0",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T09:24:40Z",
      "side": 1,
      "message": "It is resolved in patchset 4 (I had made the change but forgot to upload).",
      "parentUuid": "67c16b9f_d7f84ff3",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc64e102_f8c22a41",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T14:50:45Z",
      "side": 1,
      "message": "Please address the AyeAye issue on this line.",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f014d4c3_a4987f61",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-15T15:01:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cc64e102_f8c22a41",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a516b9bc_40d99022",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-06-15T23:11:22Z",
      "side": 1,
      "message": "Not yet resolved.",
      "parentUuid": "f014d4c3_a4987f61",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f60397b1_23def132",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-06-16T09:24:40Z",
      "side": 1,
      "message": "It is resolved in patchset 4 (I had made the change but forgot to upload).",
      "parentUuid": "a516b9bc_40d99022",
      "revId": "41376430c413dfd637a31b0d48db8c698ae56cbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}