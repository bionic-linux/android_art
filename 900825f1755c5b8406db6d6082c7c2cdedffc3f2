{
  "comments": [
    {
      "key": {
        "uuid": "bde99ad1_972f53eb",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 441,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "Do we also need to bump the oat version?",
      "range": {
        "startLine": 441,
        "startChar": 7,
        "endLine": 441,
        "endChar": 14
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd380eb3_6de455b1",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 441,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Yes, I guess so.  Done in PS2.",
      "parentUuid": "bde99ad1_972f53eb",
      "range": {
        "startLine": 441,
        "startChar": 7,
        "endLine": 441,
        "endChar": 14
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd4792ea_a1e9b888",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 388,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "Why not QUICK_ENTRYPOINT_OFFSET(pointer_size, pReadBarrierMarkReg00).Int32Value()+pointer_size*reg?",
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd787271_3601b837",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 388,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "I thought it\u0027d be safer and more clear to map each register number to its own named entry point, but I guess we\u0027re sort of covered by runtime/entrypoints_order_test.cc, so I\u0027ve implemented your suggestion in PS2.",
      "parentUuid": "fd4792ea_a1e9b888",
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_177503dc",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "Just to clarify, this CL doesn\u0027t move the register saving code to the slow path entrypoints (yet), correct?",
      "range": {
        "startLine": 440,
        "startChar": 4,
        "endLine": 440,
        "endChar": 21
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd787271_f6c020ef",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Yes, it doesn\u0027t do that yet. :)  This will be done in another PS or CL, depending on the size of the change.",
      "parentUuid": "bde99ad1_177503dc",
      "range": {
        "startLine": 440,
        "startChar": 4,
        "endLine": 440,
        "endChar": 21
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d41c6d7_82c4bc47",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 444,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "The slow-path is always constructed with out_\u003d\u003dobj_. Can we clean this up and remove the \"standard\" slow-path?",
      "range": {
        "startLine": 444,
        "startChar": 8,
        "endLine": 444,
        "endChar": 25
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d36dec8_6917e597",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 444,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Sure we can! :)  Done in PS2.",
      "parentUuid": "1d41c6d7_82c4bc47",
      "range": {
        "startLine": 444,
        "startChar": 8,
        "endLine": 444,
        "endChar": 25
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d0c66bf_0de455af",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "a non-conventional calling convention",
      "range": {
        "startLine": 454,
        "startChar": 29,
        "endLine": 454,
        "endChar": 64
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_570ceb94",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "\"non-standard\"?",
      "parentUuid": "1d0c66bf_0de455af",
      "range": {
        "startLine": 454,
        "startChar": 29,
        "endLine": 454,
        "endChar": 64
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4dfe58_11ddacea",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Done (here and in other code generators).",
      "parentUuid": "bde99ad1_570ceb94",
      "range": {
        "startLine": 454,
        "startChar": 29,
        "endLine": 454,
        "endChar": 64
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_3723df9a",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "(Side note, we could also remove the stack map for this runtime call.)",
      "range": {
        "startLine": 459,
        "startChar": 19,
        "endLine": 459,
        "endChar": 32
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d42162f_eb8591ed",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 459,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Added as a TODO (here and in other files).",
      "parentUuid": "bde99ad1_3723df9a",
      "range": {
        "startLine": 459,
        "startChar": 19,
        "endLine": 459,
        "endChar": 32
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_1ccfea8b",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1750,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "I\u0027m probably confused about the calling conventions across the architectures. Can you clarify what this non-standard calling convention is like? Does r0 need to be saved?",
      "range": {
        "startLine": 1750,
        "startChar": 17,
        "endLine": 1750,
        "endChar": 50
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_ae10f7a5",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1750,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "I augmented the comment (here and in other back ends); hopefully this should be more clear.",
      "parentUuid": "bde99ad1_1ccfea8b",
      "range": {
        "startLine": 1750,
        "startChar": 17,
        "endLine": 1750,
        "endChar": 50
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d0f22b2_106b4c6c",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1758,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "Isn\u0027t 8-byte alignment sufficient for ARM native ABI? (Or was that x86 with the mismatch?)",
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_5c65f299",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1758,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "I heard a 8 byte alignment for arm and arm64.",
      "parentUuid": "7d0f22b2_106b4c6c",
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_2e8c07f7",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 1758,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "I\u0027ve changed this to 8-byte alignment.\n\nI thought we were 16-byte aligning everywhere, but it seems \nthat we only 8-byte align on ARM and ARM64 when dealing only with native code.  IIUC, we use 16-byte alignment in assembly code calling/potentially calling ART (managed) code, right?\n\nNote: the macro READ_BARRIER (and maybe other functions/macros) uses 16-byte alignment (see line 690).  Should we remove that padding too?",
      "parentUuid": "bde99ad1_5c65f299",
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_17142343",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 1929,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "Do we need to save EAX?",
      "range": {
        "startLine": 1929,
        "startChar": 40,
        "endLine": 1929,
        "endChar": 48
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d36dec8_89f09933",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 1929,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "No, that\u0027s unnecessary; fixed in PS2.",
      "parentUuid": "bde99ad1_17142343",
      "range": {
        "startLine": 1929,
        "startChar": 40,
        "endLine": 1929,
        "endChar": 48
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d0f22b2_d00ff4de",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 1931,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "4",
      "range": {
        "startLine": 1931,
        "startChar": 26,
        "endLine": 1931,
        "endChar": 27
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4dfe58_f1c028ef",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 1931,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Good catch!  Fixed in PS2.",
      "parentUuid": "7d0f22b2_d00ff4de",
      "range": {
        "startLine": 1931,
        "startChar": 26,
        "endLine": 1931,
        "endChar": 27
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_17b6e3e8",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1837,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "Why save RDI?",
      "range": {
        "startLine": 1837,
        "startChar": 39,
        "endLine": 1837,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_8e6c1bf2",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1837,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "This is not needed; changed in PS2.",
      "parentUuid": "bde99ad1_17b6e3e8",
      "range": {
        "startLine": 1837,
        "startChar": 39,
        "endLine": 1837,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd73ae92_f5f578ef",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1837,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:31:17Z",
      "side": 1,
      "message": "Ah, sorry, this change was not included in PS2; fixing…",
      "parentUuid": "fd3dd29f_8e6c1bf2",
      "range": {
        "startLine": 1837,
        "startChar": 39,
        "endLine": 1837,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde99ad1_b7e28fd7",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1850,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-06T18:29:56Z",
      "side": 1,
      "message": "Similarly why save RAX?",
      "range": {
        "startLine": 1850,
        "startChar": 39,
        "endLine": 1850,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d42162f_0b057d0b",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1850,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "bde99ad1_b7e28fd7",
      "range": {
        "startLine": 1850,
        "startChar": 39,
        "endLine": 1850,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd787271_164d9c2c",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1850,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:31:17Z",
      "side": 1,
      "message": "Ditto, fix pending.",
      "parentUuid": "9d42162f_0b057d0b",
      "range": {
        "startLine": 1850,
        "startChar": 39,
        "endLine": 1850,
        "endChar": 47
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd380eb3_edf84582",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1865,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-07T09:03:07Z",
      "side": 1,
      "message": "And why save RDI and RAX? In the follow-up we shall save all caller-save registers but in this CL the caller still considers RDI and RAX clobbered.",
      "range": {
        "startLine": 1864,
        "startChar": 0,
        "endLine": 1865,
        "endChar": 86
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd12a8d_e87653bb",
        "filename": "runtime/arch/x86_64/quick_entrypoints_x86_64.S",
        "patchSetId": 1
      },
      "lineNbr": 1865,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Right; I may have anticipated too much here.  Removed and documented.",
      "parentUuid": "dd380eb3_edf84582",
      "range": {
        "startLine": 1864,
        "startChar": 0,
        "endLine": 1865,
        "endChar": 86
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9df776e1_e65fe0cd",
        "filename": "runtime/entrypoints/quick/quick_entrypoints_list.h",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T17:01:10Z",
      "side": 1,
      "message": "Despite using a different calling convention, I think they should be declared as taking and returning mirror::Object* because that\u0027s what they do.",
      "range": {
        "startLine": 168,
        "startChar": 26,
        "endLine": 168,
        "endChar": 30
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd12a8d_c819cf29",
        "filename": "runtime/entrypoints/quick/quick_entrypoints_list.h",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-07T16:28:53Z",
      "side": 1,
      "message": "Right; changed in PS2.",
      "parentUuid": "9df776e1_e65fe0cd",
      "range": {
        "startLine": 168,
        "startChar": 26,
        "endLine": 168,
        "endChar": 30
      },
      "revId": "900825f1755c5b8406db6d6082c7c2cdedffc3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}