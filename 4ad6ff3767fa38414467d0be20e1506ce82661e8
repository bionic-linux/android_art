{
  "comments": [
    {
      "key": {
        "uuid": "e7e60628_b50c6a18",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1072549
      },
      "writtenOn": "2016-01-20T18:20:09Z",
      "side": 1,
      "message": "Is it possible to get the locations through the instruction?\n\nIf we move the SlowPath allocation to the LocationsBuilder then out_ and obj_ will be kInvalid when used below - since register allocation happens afterwards.",
      "range": {
        "startLine": 590,
        "startChar": 58,
        "endLine": 590,
        "endChar": 84
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "341f6e57_144a943e",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-21T15:19:00Z",
      "side": 1,
      "message": "Yes, I guess we could get the locations from the instruction. I\u0027ll try to do that in a follow-up CL (for ARM64 and other architectures).",
      "parentUuid": "e7e60628_b50c6a18",
      "range": {
        "startLine": 590,
        "startChar": 58,
        "endLine": 590,
        "endChar": 84
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e70fe6af_4de12d29",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1072549
      },
      "writtenOn": "2016-01-20T18:20:09Z",
      "side": 1,
      "message": "type \u003d instruction_-\u003eGetType();\nDCHECK(type \u003d\u003d Primitive::kPrimNot); ?",
      "range": {
        "startLine": 599,
        "startChar": 27,
        "endLine": 599,
        "endChar": 46
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67793673_96752caf",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-21T15:19:00Z",
      "side": 1,
      "message": "This does not work for all instructions: the type of an InstanceOf instruction is `kPrimBoolean` and the type of a CheckCast is `kPrimVoid`.",
      "parentUuid": "e70fe6af_4de12d29",
      "range": {
        "startLine": 599,
        "startChar": 27,
        "endLine": 599,
        "endChar": 46
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27e49e25_1218ec5f",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1072549
      },
      "writtenOn": "2016-01-20T18:20:09Z",
      "side": 1,
      "message": "Same comment for these Location s",
      "range": {
        "startLine": 641,
        "startChar": 38,
        "endLine": 645,
        "endChar": 58
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a75faef8_78b4019a",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-21T15:19:00Z",
      "side": 1,
      "message": "I\u0027ll try to change these as well.",
      "parentUuid": "27e49e25_1218ec5f",
      "range": {
        "startLine": 641,
        "startChar": 38,
        "endLine": 645,
        "endChar": 58
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47727221_8edbbf3f",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1741,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-20T15:56:13Z",
      "side": 1,
      "message": "What\u0027s that?",
      "range": {
        "startLine": 1741,
        "startChar": 13,
        "endLine": 1741,
        "endChar": 17
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e798c691_769f18d4",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 1741,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-20T16:56:14Z",
      "side": 1,
      "message": "\"Independent Reads of Independent Writes\".  This was part of the original code; see line 1657 in \"Base\" and also line 1756 in this patch set (PS2).",
      "parentUuid": "47727221_8edbbf3f",
      "range": {
        "startLine": 1741,
        "startChar": 13,
        "endLine": 1741,
        "endChar": 17
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e783661b_33a5da72",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4806,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-20T15:56:13Z",
      "side": 1,
      "message": "Maybe add a comment that array access are never volatile.",
      "range": {
        "startLine": 4806,
        "startChar": 44,
        "endLine": 4806,
        "endChar": 74
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8780ea14_b037fe1f",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4806,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-20T16:56:14Z",
      "side": 1,
      "message": "Good idea!  Done in PS3.",
      "parentUuid": "e783661b_33a5da72",
      "range": {
        "startLine": 4806,
        "startChar": 44,
        "endLine": 4806,
        "endChar": 74
      },
      "revId": "4ad6ff3767fa38414467d0be20e1506ce82661e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}