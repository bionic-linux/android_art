{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "01915969_4b48c265",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-24T16:26:27Z",
      "side": 1,
      "message": "But libnativehelper is a dynamic lib dependency. Why does this need to be repeated here?",
      "range": {
        "startLine": 35,
        "startChar": 21,
        "endLine": 35,
        "endChar": 47
      },
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e35de9_f07e72b1",
        "filename": "libartservice/service/Android.bp",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-24T18:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01915969_4b48c265",
      "range": {
        "startLine": 35,
        "startChar": 21,
        "endLine": 35,
        "endChar": 47
      },
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "759fe59b_393a5267",
        "filename": "libartservice/service/java/com/android/server/art/ArtJni.java",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-24T16:26:27Z",
      "side": 1,
      "message": "Is this correct, considering that it does in fact return null? It at least looks confusing, so if nothing else it may be better to just skip a nullness annotation altogether?",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 12
      },
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0630f27a_239e51ae",
        "filename": "libartservice/service/java/com/android/server/art/ArtJni.java",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-24T18:21:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "759fe59b_393a5267",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 12
      },
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c25c8b4_fcfa3760",
        "filename": "libartservice/service/javatests/com/android/server/art/PreRebootDexoptJobTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-24T16:26:27Z",
      "side": 1,
      "message": "Add a test in ArtManagerLocalTest.java that starts a job with one `mPreRebootDexoptJob` instance, replaces it with another, and checks that a call to `cleanup` leaves the staged files alone?",
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95f05853_c85ac0b3",
        "filename": "libartservice/service/javatests/com/android/server/art/PreRebootDexoptJobTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-24T18:17:18Z",
      "side": 1,
      "message": "Discussed offline. `PreRebootDexoptJob` is mocked in `ArtManagerLocalTest`, so fixing this is quite a bit of work. Although I think there\u0027s some merit to the test let\u0027s table it.",
      "parentUuid": "4c25c8b4_fcfa3760",
      "revId": "537e05ab6776918412b74258450f869f6f7a9232",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}