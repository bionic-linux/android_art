{
  "comments": [
    {
      "key": {
        "uuid": "927651c9_fe05d570",
        "filename": "runtime/native/dalvik_system_VMRuntime.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2019-03-18T10:13:19Z",
      "side": 1,
      "message": "static_cast\u003csize_t\u003e needed here?",
      "range": {
        "startLine": 281,
        "startChar": 11,
        "endLine": 281,
        "endChar": 12
      },
      "revId": "2cbbf41301e550321ac55bdfe0f4d213ab546884",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7797e961_e1f596ed",
        "filename": "runtime/native/dalvik_system_VMRuntime.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-03-18T16:46:29Z",
      "side": 1,
      "message": "Good question, but my conclusion is no. According to the standard, this context logically calls for copy-initialization, which applies \"standard conversions\", which applies \"integral conversions\" (in addition to \"integral promotions\"). Integral conversions can convert between arbitrary integral types, discarding information as necessary.\n\nTo be honest, I was counting on TreeHugger to check my intuition here.",
      "parentUuid": "927651c9_fe05d570",
      "range": {
        "startLine": 281,
        "startChar": 11,
        "endLine": 281,
        "endChar": 12
      },
      "revId": "2cbbf41301e550321ac55bdfe0f4d213ab546884",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cccf6231_52d4ca23",
        "filename": "runtime/native/dalvik_system_VMRuntime.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2019-03-19T11:19:17Z",
      "side": 1,
      "message": "I\u0027m fine either way. Is there any harm to adding the cast, just to make it an explicit cast rather than an implicit cast?",
      "parentUuid": "7797e961_e1f596ed",
      "range": {
        "startLine": 281,
        "startChar": 11,
        "endLine": 281,
        "endChar": 12
      },
      "revId": "2cbbf41301e550321ac55bdfe0f4d213ab546884",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f24f2f3_3e2f3213",
        "filename": "runtime/native/dalvik_system_VMRuntime.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-03-19T17:17:16Z",
      "side": 1,
      "message": "I could go either way. My impression is that in general we assume/pretend that the reader has a complete understanding of the programming language. Google\u0027s C++ style states that for comments. In the case of C++, that doesn\u0027t seem fully realistic, but I think there is a somewhat convincing slippery slope argument if you start documenting C++ implicit behavior in specific cases. I\u0027m weakly inclined to leave it.",
      "parentUuid": "cccf6231_52d4ca23",
      "range": {
        "startLine": 281,
        "startChar": 11,
        "endLine": 281,
        "endChar": 12
      },
      "revId": "2cbbf41301e550321ac55bdfe0f4d213ab546884",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6fc7da_1c21c26c",
        "filename": "runtime/native/dalvik_system_VMRuntime.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2019-03-20T10:06:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f24f2f3_3e2f3213",
      "range": {
        "startLine": 281,
        "startChar": 11,
        "endLine": 281,
        "endChar": 12
      },
      "revId": "2cbbf41301e550321ac55bdfe0f4d213ab546884",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}