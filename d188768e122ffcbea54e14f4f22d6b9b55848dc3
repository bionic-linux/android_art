{
  "comments": [
    {
      "key": {
        "uuid": "9f439833_ae48f744",
        "filename": "runtime/gc/collector/semi_space.cc",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "This does not have a write barrier while SetReferent() on the caller side before this CL had one. Is it as intended?",
      "range": {
        "startLine": 658,
        "startChar": 12,
        "endLine": 658,
        "endChar": 18
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_cd3b7d08",
        "filename": "runtime/gc/collector/semi_space.cc",
        "patchSetId": 1
      },
      "lineNbr": 660,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "The return type is bool and we are returning an object here.",
      "range": {
        "startLine": 660,
        "startChar": 9,
        "endLine": 660,
        "endChar": 16
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_cd929dd0",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "Do we not really need a read barrier here (like the old GetReferent() call)? Maybe so since we call GetReferent() once above, assuming there\u0027s no thread suspension point between that and here.",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 36
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_6da4512d",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "This phrase is repeated in line 70 below.",
      "range": {
        "startLine": 61,
        "startChar": 85,
        "endLine": 63,
        "endChar": 59
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_ad5f2951",
        "filename": "runtime/gc/reference_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "Same interface change (write on the caller side vs the callback side) comment.",
      "range": {
        "startLine": 91,
        "startChar": 7,
        "endLine": 91,
        "endChar": 13
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf469c40_52f3b40c",
        "filename": "runtime/gc/reference_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "What\u0027s benefit of the interface change from side-effect free IsMarkedCallback to (non-side-effect-free) IsHeapReferenceMarkedCallback?",
      "range": {
        "startLine": 107,
        "startChar": 42,
        "endLine": 107,
        "endChar": 71
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_8dbee551",
        "filename": "runtime/gc/reference_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "This does not have a read barrier, which is ok as we don\u0027t need it here. But I\u0027d worry that some other code could accidentally use GetReferentReferenceAddr() and not have a read barrier. Turn GetReferentReferenceAddr() a private member and use friend for ReferenceQueue to use it and leave a comment on this note?",
      "range": {
        "startLine": 111,
        "startChar": 64,
        "endLine": 111,
        "endChar": 88
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f439833_0e310bde",
        "filename": "runtime/gc/reference_queue.cc",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "I think that the name IsHeapReferenceMarkedCallback suggests side effect free like IsMarkedCallback, which can be confusing.",
      "range": {
        "startLine": 133,
        "startChar": 52,
        "endLine": 133,
        "endChar": 70
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f439833_ae5c7726",
        "filename": "runtime/mirror/reference.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "This provides a way to avoid a read barrier. I worry about accidental access without a read barrier. Maybe remove the template parameter as it isn\u0027t used? Leave a warning comment that says so, make this private, and add ReferenceQueue as a friend class? Is there a better way?",
      "range": {
        "startLine": 50,
        "startChar": 25,
        "endLine": 50,
        "endChar": 49
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f3264d4_2db09978",
        "filename": "runtime/object_callbacks.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-06-16T19:27:59Z",
      "side": 1,
      "message": "Leave a comment on what this does and what the return value means?",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 74,
        "endChar": 12
      },
      "revId": "d188768e122ffcbea54e14f4f22d6b9b55848dc3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}