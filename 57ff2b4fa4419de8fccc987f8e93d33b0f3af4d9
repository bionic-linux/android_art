{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec124523_ac5a9b81",
        "filename": "runtime/base/atomic_pair.h",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-12-23T20:05:41Z",
      "side": 1,
      "message": "It hopefully implements them, but doesn\u0027t report them as lock-free?\nIt may nonetheless use this implementation? It\u0027s unclear whether this implementation should be described as lock-free. It is in the theoretical sense, but loads need writable memory, and presumably cause cache contention.",
      "range": {
        "startLine": 54,
        "startChar": 3,
        "endLine": 54,
        "endChar": 63
      },
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9df94fa3_ed137af5",
        "filename": "runtime/base/atomic_pair.h",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-01-07T12:53:59Z",
      "side": 1,
      "message": "It does not seem to implement them at all (not even the compare and swap).\n\nThat is, it always defers to library calls so the could would work.\n\n(but we don\u0027t link the needed atomic library, which has the nice side effect that either these methods compile into efficient assembly, or the linker fails... but the static_assert should also guard against it)",
      "parentUuid": "ec124523_ac5a9b81",
      "range": {
        "startLine": 54,
        "startChar": 3,
        "endLine": 54,
        "endChar": 63
      },
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48bed4f_7dc97209",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 361,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-23T15:09:35Z",
      "side": 1,
      "message": "It used to be relaxed?",
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52c72556_f10ed59c",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 361,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-23T15:37:56Z",
      "side": 1,
      "message": "This was always somewhat questionable and David changed that in response to my comment in `atomic_pair.h` in PS5.\n\nMaybe Hans could weigh in?",
      "parentUuid": "e48bed4f_7dc97209",
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad5cea30_bb0b5a6c",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 361,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-01-04T16:45:04Z",
      "side": 1,
      "message": "Hans, any comments?",
      "parentUuid": "52c72556_f10ed59c",
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94c312b3_7dded131",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 4495,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-23T15:37:56Z",
      "side": 1,
      "message": "It would be cleaner to call this in a `callback` from `ThreadList::RunCheckpoint()` while it holds `*Locks::thread_suspend_count_lock_` and therefore no thread can actually run the checkpoint yet (see also `Thread::RunCheckpointFunction()`). But maybe this would block threads for too long given how big is the shared cache.",
      "range": {
        "startLine": 4495,
        "startChar": 2,
        "endLine": 4495,
        "endChar": 34
      },
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09458994_4ed5d88e",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 4495,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-01-07T12:53:59Z",
      "side": 1,
      "message": "Either way sounds fine to me.",
      "parentUuid": "94c312b3_7dded131",
      "range": {
        "startLine": 4495,
        "startChar": 2,
        "endLine": 4495,
        "endChar": 34
      },
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a29f3055_c0d62a19",
        "filename": "runtime/thread.cc",
        "patchSetId": 6
      },
      "lineNbr": 4495,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-01-07T14:19:27Z",
      "side": 1,
      "message": "Let\u0027s keep this as is for now.",
      "parentUuid": "09458994_4ed5d88e",
      "range": {
        "startLine": 4495,
        "startChar": 2,
        "endLine": 4495,
        "endChar": 34
      },
      "revId": "57ff2b4fa4419de8fccc987f8e93d33b0f3af4d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}