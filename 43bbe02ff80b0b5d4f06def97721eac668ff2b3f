{
  "comments": [
    {
      "key": {
        "uuid": "0904398a_3ab021dc",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 971,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-15T08:51:24Z",
      "side": 1,
      "message": "Why would the static analyzer warn about this? Did it look at all places last_instruction_ is set and shown that when calling AddInstruction it can be null?",
      "range": {
        "startLine": 971,
        "startChar": 4,
        "endLine": 971,
        "endChar": 43
      },
      "revId": "43bbe02ff80b0b5d4f06def97721eac668ff2b3f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e83d1825_707e0f65",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 971,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-15T15:32:26Z",
      "side": 1,
      "message": "Pretty sure that the analyzer isn\u0027t doing full interprocedural analysis to understand that first_instruction_ !\u003d nullptr means last_instruction_ !\u003d nullptr.",
      "parentUuid": "0904398a_3ab021dc",
      "range": {
        "startLine": 971,
        "startChar": 4,
        "endLine": 971,
        "endChar": 43
      },
      "revId": "43bbe02ff80b0b5d4f06def97721eac668ff2b3f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "930c4b6d_d2ccd6af",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 971,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-15T15:35:06Z",
      "side": 1,
      "message": "Of course, but then why is the analyzer complaining about that one access? It\u0027s just a field access that I\u0027m sure there\u0027s plenty others it cannot certify they\u0027re never null.",
      "parentUuid": "e83d1825_707e0f65",
      "range": {
        "startLine": 971,
        "startChar": 4,
        "endLine": 971,
        "endChar": 43
      },
      "revId": "43bbe02ff80b0b5d4f06def97721eac668ff2b3f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b53da7c_2b495715",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 971,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-15T15:40:13Z",
      "side": 1,
      "message": "Don\u0027t know. You\u0027ll have to ask the analysis writers, then.\n\nThe other two syntactically similar points actually do a similar thing. The branch condition there is !IsEmpty (which, btw, probably should have been used in line 966 :-) ).",
      "parentUuid": "930c4b6d_d2ccd6af",
      "range": {
        "startLine": 971,
        "startChar": 4,
        "endLine": 971,
        "endChar": 43
      },
      "revId": "43bbe02ff80b0b5d4f06def97721eac668ff2b3f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78130d4c_b7040659",
        "filename": "runtime/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-15T15:32:26Z",
      "side": 1,
      "message": "Please make this standalone with a very descriptive commit comment.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 51
      },
      "revId": "43bbe02ff80b0b5d4f06def97721eac668ff2b3f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}