{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a2fc8ae0_ea567cdb",
        "filename": "Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 405,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-25T15:32:24Z",
      "side": 1,
      "message": "This is generated by dexpreopt from the jars in [this list](https://cs.android.com/android/platform/superproject/main/+/main:build/make/target/product/default_art_config.mk;l\u003d41-47;drc\u003d0f00fbd681b3550bc13763847b8df3ea0c5eef6c) and is tailored for our own testing needs. For example, it includes core-icu4j and conscrypt, and the host variant of them is picked rather than the target variant, all because of our own various reasons. We may change it from time to time and our changes may break you.\n\nIs it possible for you to avoid relying on this? Instead, you can call `generate-boot-image` to generate the boot image, like [what we suggest for the local Compiler Explorer](https://cs.android.com/android/platform/superproject/main/+/main:art/tools/compiler-explorer/compiler-explorer.md;l\u003d89-117;drc\u003dbda11bd68212f6a03381a849b0ee44bebf3ca5ba). In this way, you have the full control of the jars to compile, the instruction set, the compiler filter, etc., and our changes won\u0027t break you because you\u0027ll have your own `generate-boot-image` invocation. You can run `m generate-boot-image \u0026\u0026 out/host/linux-x86/bin/generate-boot-image64 --help` to see how to use it.",
      "range": {
        "startLine": 405,
        "startChar": 21,
        "endLine": 405,
        "endChar": 57
      },
      "revId": "57c9ea1a7dfed805e53d4b331ed9badf1707313c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}