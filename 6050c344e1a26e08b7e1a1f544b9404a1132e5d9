{
  "comments": [
    {
      "key": {
        "uuid": "ceddbc49_e6d00dac",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-28T11:59:54Z",
      "side": 1,
      "message": "Shouldn\u0027t we replace the `invoke_instruction` with another HInvokeVirtual here (just like lines 1252-1268)? Otherwise we have an inconsistent invoke, for example invoke-interface CharSequence.charAt() claiming that it\u0027s kStringCharAt.\n\nAnd shouldn\u0027t this replacement happen in Sharpening anyway? The Sharpening already has the necessary type information when it runs.",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbb9910a_bca5f90e",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-28T12:37:17Z",
      "side": 1,
      "message": "Yeah, I think I\u0027d also rather have invoke-virtual instead of invoke-interface, and just assume invoke-interface isn\u0027t intrinsified.",
      "parentUuid": "ceddbc49_e6d00dac",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85200966_0d953e80",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-11-28T13:30:30Z",
      "side": 1,
      "message": "Not all invoke-interface can ben rewritten to invoke-virtual since it requires a good dex_method_index. So we either need to relax that requirement, or miss some optimizations.\nSharpening doesn\u0027t cover inline-cache/CHA devirtualization.",
      "parentUuid": "bbb9910a_bca5f90e",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c958c52e_90ac7773",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-28T14:08:46Z",
      "side": 1,
      "message": "Erf, that annoying dex_method_index.... Would be good to get rid of it on HInvokeVirtual at least.\n\nOK, then I guess I\u0027m fine having invoke-interface be intrisified.",
      "parentUuid": "85200966_0d953e80",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa124247_776f91a6",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1225,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-28T11:59:54Z",
      "side": 1,
      "message": "Needs \"MethodCompilationStat::\"; rebase across https://android-review.googlesource.com/546979 .",
      "range": {
        "startLine": 1225,
        "startChar": 28,
        "endLine": 1225,
        "endChar": 48
      },
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edf14f86_4a856dcf",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 1226,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-28T17:09:59Z",
      "side": 1,
      "message": "can\u0027t this become a regular else if (and save some indentation)?",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa7ae276_b54b181f",
        "filename": "compiler/optimizing/intrinsics.cc",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-28T17:09:59Z",
      "side": 1,
      "message": "accepting interfaces too seems a rather big change, and hopefully all cases are covered; I think we should at least extend the graph visualizer to show intrinsification",
      "range": {
        "startLine": 140,
        "startChar": 78,
        "endLine": 140,
        "endChar": 79
      },
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cde420d_0c00962e",
        "filename": "compiler/optimizing/intrinsics.cc",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-28T11:59:54Z",
      "side": 1,
      "message": "/* art_method */",
      "range": {
        "startLine": 176,
        "startChar": 39,
        "endLine": 176,
        "endChar": 40
      },
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb416b8f_d9f416b9",
        "filename": "test/638-checker-inline-cache-intrinsic/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-28T17:09:59Z",
      "side": 1,
      "message": "we should add the \"intrinsic:xxx\" to the visualizer to check it has been recognized",
      "revId": "6050c344e1a26e08b7e1a1f544b9404a1132e5d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}