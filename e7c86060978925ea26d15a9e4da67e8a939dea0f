{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "52ddf769_ae987c18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-10-08T17:10:54Z",
      "side": 1,
      "message": "ptal, I had to rebase due to changes to the parent CL.",
      "revId": "e7c86060978925ea26d15a9e4da67e8a939dea0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba90473_3c936dfc",
        "filename": "libartbase/base/metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-10-08T18:30:49Z",
      "side": 1,
      "message": "Rereading this, it sounds like this makes it sound a bit too much like this is a useful property, which I think it\u0027s not. I think it\u0027s an implementation accident that slows down a non-critical operation, which doesn\u0027t matter. A spectacularly clever compiler could probably optimize it away. Actually, on x86 it will probably have no effect on the generated code anyway.",
      "range": {
        "startLine": 167,
        "startChar": 3,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "e7c86060978925ea26d15a9e4da67e8a939dea0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf728df3_68ad51df",
        "filename": "libartbase/base/metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-10-08T19:01:57Z",
      "side": 1,
      "message": "I added a sentence to make it clear that this is stricter than necessary. You\u0027re correct, I\u0027d rather these all be relaxed loads, but I didn\u0027t think it was worth complicating the code for given that GetBuckets shouldn\u0027t be called in performance sensitive paths.\n\nWould doing seq_cst loads here slow down relaxed loads on other threads?\n\nIt\u0027d be nice if std::atomic could take an extra template parameter for a default memory order.",
      "parentUuid": "fba90473_3c936dfc",
      "range": {
        "startLine": 167,
        "startChar": 3,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "e7c86060978925ea26d15a9e4da67e8a939dea0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56ac9c69_4e96ae74",
        "filename": "libartbase/base/metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-10-08T19:31:08Z",
      "side": 1,
      "message": "Indeed. Though the ideal here, at least in many cases, would be to do non-atomic loads?\n\nOn all Android platforms you could get away with the appropriate memcpy. But I like this code  better.",
      "parentUuid": "bf728df3_68ad51df",
      "range": {
        "startLine": 167,
        "startChar": 3,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "e7c86060978925ea26d15a9e4da67e8a939dea0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02431648_4517f783",
        "filename": "libartbase/base/metrics.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1335232
      },
      "writtenOn": "2020-10-08T20:22:38Z",
      "side": 1,
      "message": "Yeah, non-atomic loads would be better. I agree though, let\u0027s keep the code cleaner.",
      "parentUuid": "56ac9c69_4e96ae74",
      "range": {
        "startLine": 167,
        "startChar": 3,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "e7c86060978925ea26d15a9e4da67e8a939dea0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}