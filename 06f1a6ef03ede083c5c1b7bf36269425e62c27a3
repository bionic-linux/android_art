{
  "comments": [
    {
      "key": {
        "uuid": "569062ca_47bda482",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1489,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Are we using this function anywhere else? The reason why I\u0027m asking is that it internally refers to the branches in the opposite manner - deopt is the false block and vice versa. Could you rename it to stay consistent?",
      "range": {
        "startLine": 1489,
        "startChar": 16,
        "endLine": 1489,
        "endChar": 41
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b2597a9_f5d5ba67",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1489,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "No it does not, see nodes.cc in this CL. I renamed everything in TransformLoopHeaderforBCE to be more generic (true, false etc, see nodes.cc), so that others could potentially use it too without the implied position of deopt.",
      "parentUuid": "569062ca_47bda482",
      "range": {
        "startLine": 1489,
        "startChar": 16,
        "endLine": 1489,
        "endChar": 41
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_07cb9c25",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1504,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "There are at least twenty long lines in this file, please stick to 100 characters everywhere.",
      "range": {
        "startLine": 1504,
        "startChar": 97,
        "endLine": 1504,
        "endChar": 103
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b816bc7_d013e440",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1504,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Apologies. I have become pretty could at keeping this border, but it seems in the last edits my eclipse border was set wrong. I went over the full file to find long lines.",
      "parentUuid": "569062ca_07cb9c25",
      "range": {
        "startLine": 1504,
        "startChar": 97,
        "endLine": 1504,
        "endChar": 103
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b8e83ee_a6a71229",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1530,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Please keep the names consistent throughout your code, it is incredibly confusing if you don\u0027t. This is `true_block` in TransformLoopForDeoptimizationIfNeeded.",
      "range": {
        "startLine": 1530,
        "startChar": 19,
        "endLine": 1530,
        "endChar": 24
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3453db_f8a12f65",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1530,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Yes, of course. I honestly don\u0027t know how I managed to get these names wrong. Must have been a back and forth edit after which I forgot to fix. Apologies. All renamed.",
      "parentUuid": "9b8e83ee_a6a71229",
      "range": {
        "startLine": 1530,
        "startChar": 19,
        "endLine": 1530,
        "endChar": 24
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d67c5259_a8771f1f",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1531,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Replace with block-\u003eGetSingleSuccessor(). It contains a DCHECK that there\u0027s only one successor and makes it more obvious that you\u0027re not selecting from multiple successors.",
      "range": {
        "startLine": 1531,
        "startChar": 32,
        "endLine": 1531,
        "endChar": 58
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_0c859b2d",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1531,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "This is `new_preheader`.",
      "range": {
        "startLine": 1531,
        "startChar": 19,
        "endLine": 1531,
        "endChar": 29
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3453db_d89e7321",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1531,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d67c5259_a8771f1f",
      "range": {
        "startLine": 1531,
        "startChar": 32,
        "endLine": 1531,
        "endChar": 58
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_e36b0688",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1534,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Okay, so this iterates over instructions the true branch and inserts a phi in the new preheader if they\u0027re used outside.\n\nI haven\u0027t really delved into InductionRange::GenerateCode too much, so please correct me if I\u0027m making wrong assumptions here, but could you explain this to me in more detail?\n\nWhat kind of instructions can you expect here? I gather from your diagrams that this is used purely for ArrayLength and setting it to zero if the false branch is taken. So then why do you need MakePhi to handle all primitive types? Could you just DCHECK that it\u0027s an int?\n\nAlso, how did the ArrayLength get there so it has uses in the loop? Was it moved from the old preheader?",
      "range": {
        "startLine": 1534,
        "startChar": 0,
        "endLine": 1534,
        "endChar": 89
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_67a3806d",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1553,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "I don\u0027t think we enforce (non-catch) phis having different vreg numbers. You should be able to give kNoRegNumber to all of them. Or did you find a problem with that?",
      "range": {
        "startLine": 1553,
        "startChar": 59,
        "endLine": 1553,
        "endChar": 65
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3453db_98a90b53",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1553,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Of course I started with just kNoRegNumbers. But this crashes the verifier as I mention in the comments. I hate this as much as the next person, and am open for other suggestions. For example, we could not verify synthetic phis in the same way.",
      "parentUuid": "569062ca_67a3806d",
      "range": {
        "startLine": 1553,
        "startChar": 59,
        "endLine": 1553,
        "endChar": 65
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b8e83ee_e6867a83",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1557,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Looks like a good candidate for a ReplaceInput helper function on HEnvironment.",
      "range": {
        "startLine": 1555,
        "startChar": 12,
        "endLine": 1557,
        "endChar": 62
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_d4687ca0",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1569,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "new_preheader",
      "range": {
        "startLine": 1569,
        "startChar": 29,
        "endLine": 1569,
        "endChar": 39
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b2597a9_15e5e639",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1569,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96865a95_d4687ca0",
      "range": {
        "startLine": 1569,
        "startChar": 29,
        "endLine": 1569,
        "endChar": 39
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_8c77cb1f",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1578,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-11-18T12:03:38Z",
      "side": 1,
      "message": "Prepend with /* number_of_inputs */ so readers don\u0027t need to refer to the constructor.",
      "range": {
        "startLine": 1578,
        "startChar": 70,
        "endLine": 1578,
        "endChar": 71
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db847bce_0e3048c3",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 19
      },
      "lineNbr": 1578,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-11-18T19:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56278298_8c77cb1f",
      "range": {
        "startLine": 1578,
        "startChar": 70,
        "endLine": 1578,
        "endChar": 71
      },
      "revId": "06f1a6ef03ede083c5c1b7bf36269425e62c27a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}