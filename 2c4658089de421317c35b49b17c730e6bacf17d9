{
  "comments": [
    {
      "key": {
        "uuid": "90972654_727cb034",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 5
      },
      "lineNbr": 135,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "I think this is way too obscure. Just say that we cannot emit a clinit check ourselves due to dex cache limitations.",
      "range": {
        "startLine": 135,
        "startChar": 64,
        "endLine": 135,
        "endChar": 83
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_93b84428",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 5
      },
      "lineNbr": 135,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90972654_727cb034",
      "range": {
        "startLine": 135,
        "startChar": 64,
        "endLine": 135,
        "endChar": 83
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_28492fbe",
        "filename": "compiler/optimizing/inliner.h",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "Please leave this as HInvoke. We can and will inline InvokeVirtual/Interface.",
      "range": {
        "startLine": 50,
        "startChar": 17,
        "endLine": 50,
        "endChar": 37
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_4b8a2ded",
        "filename": "compiler/optimizing/inliner.h",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50984e8f_28492fbe",
      "range": {
        "startLine": 50,
        "startChar": 17,
        "endLine": 50,
        "endChar": 37
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_0be0a512",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2226,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "This looks a bit too much. I\u0027d hide it with just a flag that says we cannot emit the clinit check.",
      "range": {
        "startLine": 2218,
        "startChar": 0,
        "endLine": 2226,
        "endChar": 4
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_6b585112",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2226,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "We actually need this, as there are three steps:\n* in the builder, we can have one these three cases: (a) no clinit check required; or (b) an explicit clinit check required (and emitted); or (c) an implicit clinit check required;\n* in the inliner, we need to isolate cases (b), as we do not know how to inline such static methods;\n* in the prepare-for-regalloc phase, we turn cases (c) into cases (b);\n* eventually the regalloc/codegen only sees cases (a) or (b).",
      "parentUuid": "50984e8f_0be0a512",
      "range": {
        "startLine": 2218,
        "startChar": 0,
        "endLine": 2226,
        "endChar": 4
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_75df3a55",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2226,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T17:26:02Z",
      "side": 1,
      "message": "Could we do:\n\nBuilder:\nHinvokeStaticOrDirect(arguments, (null if implicit)/(clinit if explicit)).\n\nInliner:\nDon\u0027t inline HInvokeStaticOrDirect that have null at the end of the input.\n\nPepareForAlloc:\nRemove last input of HInvokeStaticOrDirect.",
      "parentUuid": "50984e8f_6b585112",
      "range": {
        "startLine": 2218,
        "startChar": 0,
        "endLine": 2226,
        "endChar": 4
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_35ef72b6",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2226,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-24T13:40:07Z",
      "side": 1,
      "message": "This strategy does not cover case (a), where the clinit check is not required at all.  We could fold case (a) into case (b) by always emitting an explicit clining check, but this means extra costs (instantiating the clinit check in the buider, then destroying it in the prepare-for-allocation phase) for no real gain IMHO.  In some cases, the generated code would even be worse, e.g., if the call is inlined, then the clinit check (actually, the load class instruction) will stay, even it is known to be useless.",
      "parentUuid": "90972654_75df3a55",
      "range": {
        "startLine": 2218,
        "startChar": 0,
        "endLine": 2226,
        "endChar": 4
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_732af833",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2274,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "Would you need this if the clinit check was the last argument?",
      "range": {
        "startLine": 2259,
        "startChar": 0,
        "endLine": 2274,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_d399ecc5",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2274,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "No; but I would still need to keep the checks somewhere.  I\u0027ll try to move the extra input at the end of the input list in another patch set.",
      "parentUuid": "b088aa37_732af833",
      "range": {
        "startLine": 2259,
        "startChar": 0,
        "endLine": 2274,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_f5d32a51",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2274,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T17:26:02Z",
      "side": 1,
      "message": "Sure, I\u0027d try to keep the checks. But it would be nice to avoid leaking this start position offset change.",
      "parentUuid": "b088aa37_d399ecc5",
      "range": {
        "startLine": 2259,
        "startChar": 0,
        "endLine": 2274,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_95dd860d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2274,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-24T13:40:07Z",
      "side": 1,
      "message": "Method removed in PS8, as the clinit check now occupies the last position in the input list.  I transferred the check to the overriden InputRecordAt method.",
      "parentUuid": "90972654_f5d32a51",
      "range": {
        "startLine": 2259,
        "startChar": 0,
        "endLine": 2274,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_930e84e8",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2288,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "Since this will only be used by one pass, we should probably move this code over there.",
      "range": {
        "startLine": 2280,
        "startChar": 0,
        "endLine": 2288,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_337cf0e5",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2288,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "This code is here because art::PrepareForRegisterAllocation::VisitClinitCheck cannot call `inputs_.DeleteAt(0)\u0027, as it is private.  Should I make art::PrepareForRegisterAllocation::VisitClinitCheck a friend of art::HInvokeStaticOrDirect?",
      "parentUuid": "b088aa37_930e84e8",
      "range": {
        "startLine": 2280,
        "startChar": 0,
        "endLine": 2288,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_33631041",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2288,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T17:26:02Z",
      "side": 1,
      "message": "Oh I see. Then nevermind, it\u0027s probably better to have this here.\n\nOr instead of deleting it, which could be error prone with the InputCount() and number_of_arguments difference, could we just set it to the null constant in prepare_for_register_allocation ?",
      "parentUuid": "b088aa37_337cf0e5",
      "range": {
        "startLine": 2280,
        "startChar": 0,
        "endLine": 2288,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_567bf4b9",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2288,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-24T13:40:07Z",
      "side": 1,
      "message": "But if we were replacing the first (or last) input with an HNullConstant, I believe we would have to also adjust code generators (and I guess intrinsics handlers as well).\n\nWe could also decide to always have an extra first (or last, but first make more sense IMHO) input for HInvokeStaticOrDirect as a potential placeholder for a HClinitChech/HClassLoad object, possibly containing a HNullConstant if not used, to avoid special cases.  But I think this also implies changes in all the code generators/intrinsics handlers. \n\nAlso, for art::HInvoke and its subclasses, InputCount relies on the size of inputs_, which is adjusted correctly when inputs_.DeleteAt(0) is called.",
      "parentUuid": "b088aa37_33631041",
      "range": {
        "startLine": 2280,
        "startChar": 0,
        "endLine": 2288,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_d28ac4b2",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2309,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T14:46:13Z",
      "side": 1,
      "message": "All of this belongs to HInvokeStatic. Callers should know what they are dealing with.",
      "range": {
        "startLine": 2291,
        "startChar": 0,
        "endLine": 2309,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_d24ba4b5",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2309,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-23T17:16:25Z",
      "side": 1,
      "message": "What do you mean? We no longer have a HInvokeStatic class, as it has been turned into HInvokeStaticOrDirect.  Should we reintroduce it?",
      "parentUuid": "90972654_d28ac4b2",
      "range": {
        "startLine": 2291,
        "startChar": 0,
        "endLine": 2309,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_ebf46156",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2309,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-23T17:26:02Z",
      "side": 1,
      "message": "Sorry I thought this class was HInvoke. So this should be here, scratch my comment.\n\nMaybe rename IsInvokeStatic to IsStatic to avoid the confusion with the instruction  name?",
      "parentUuid": "90972654_d24ba4b5",
      "range": {
        "startLine": 2291,
        "startChar": 0,
        "endLine": 2309,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50984e8f_367870bb",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 2309,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-24T13:40:07Z",
      "side": 1,
      "message": "Agreed, sounds better; done in PS8.",
      "parentUuid": "50984e8f_ebf46156",
      "range": {
        "startLine": 2291,
        "startChar": 0,
        "endLine": 2309,
        "endChar": 3
      },
      "revId": "2c4658089de421317c35b49b17c730e6bacf17d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}