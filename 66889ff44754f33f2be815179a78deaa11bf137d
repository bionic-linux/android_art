{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e00ad566_00dca851",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-11-28T17:26:11Z",
      "side": 1,
      "message": "Please review diff PS1 PS3.",
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6994c9d5_98df76d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-29T01:00:45Z",
      "side": 1,
      "message": "Unfortunately, I have some new concerns that I missed earlier. Lokesh - Could you also look at PS1-\u003ePS3 fault_handler.cc?",
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "418a8aa3_a04d5279",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-29T01:00:45Z",
      "side": 1,
      "message": "I agree this should solve the immediate problem, and the rest of this is basically as before. But looking at it again in context ...",
      "range": {
        "startLine": 303,
        "startChar": 4,
        "endLine": 304,
        "endChar": 73
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf88e7a2_2858fa35",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-29T01:00:45Z",
      "side": 1,
      "message": "In this case, we end up suspended, but holding the mutator lock shared.",
      "range": {
        "startLine": 310,
        "startChar": 8,
        "endLine": 310,
        "endChar": 70
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8b9cdcd_5162dbc2",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-11-29T15:16:25Z",
      "side": 1,
      "message": "Removed in PS4.",
      "parentUuid": "bf88e7a2_2858fa35",
      "range": {
        "startLine": 310,
        "startChar": 8,
        "endLine": 310,
        "endChar": 70
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db28523a_340bf5da",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-29T01:00:45Z",
      "side": 1,
      "message": "In this case, we end up suspended, not holding the mutator lock, which is different from the previous case. Why?\n\nActually, I no longer quite understand why we need to touch the state here at all, except in the IsExclusiveHeld() case. RunEmptyCheckpoint() only seems to say:\n\n  Locks::mutator_lock_-\u003eAssertNotExclusiveHeld(self);\n\nI\u0027m also nervous about (sort of) releasing the mutator lock here, and whether that allows new and interesting deadlocks if another thread decides to suspend us in the middle here, and then block on the GC finishing.",
      "range": {
        "startLine": 312,
        "startChar": 8,
        "endLine": 312,
        "endChar": 49
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba3cce95_27bb5936",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-11-29T07:04:38Z",
      "side": 1,
      "message": "This code is this complicated only because of the fact that GCs are not using mutator-lock and state transitions correctly (b/259440389)\n\nUntil that is corrected, if we want to keep the empty-checkpoint usage consistent with how it\u0027s used elsewhere, then the mutator-lock should be (shared) unlocked unconditionally first.\n\nOTOH, if the goal is not to add yet another deadlock possibility then I agree that there seems to be no need to either change the state or unlock before running empty-checkpoint.",
      "parentUuid": "db28523a_340bf5da",
      "range": {
        "startLine": 312,
        "startChar": 8,
        "endLine": 312,
        "endChar": 49
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55cdc741_23bda7fa",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-11-29T15:16:25Z",
      "side": 1,
      "message": "I was under the impression that we wanted to avoid requesting checkpoints while holding the mutator lock. But it seems safer to avoid these transitions for now.",
      "parentUuid": "ba3cce95_27bb5936",
      "range": {
        "startLine": 312,
        "startChar": 8,
        "endLine": 312,
        "endChar": 49
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffa6336a_10a63247",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-29T17:05:43Z",
      "side": 1,
      "message": "Agreed. Let\u0027s revisit if there are post-submit failures.",
      "parentUuid": "55cdc741_23bda7fa",
      "range": {
        "startLine": 312,
        "startChar": 8,
        "endLine": 312,
        "endChar": 49
      },
      "revId": "66889ff44754f33f2be815179a78deaa11bf137d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}