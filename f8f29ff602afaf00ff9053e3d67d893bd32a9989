{
  "comments": [
    {
      "key": {
        "uuid": "0f0a6d5d_eec41aaa",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 1434,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2016-07-27T02:35:29Z",
      "side": 1,
      "message": "Here and in several other places \"pointer\" and its size is not what\u0027s being actually used if we\u0027re trying to use the right terms in the code. Specifically, here we aren\u0027t storing 2 pointers to memory and aren\u0027t adding a pointer size to the offset. It\u0027s a word (two words) here. I\u0027m confused. Could you elaborate here and in the commit message?",
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_0e007e9b",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 1434,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-27T02:55:19Z",
      "side": 1,
      "message": "When I read your argument, I should then reply that it should have never been kMipsWordSize either. It should have been a hard-coded 4. Because this is about halves of a 64-bit value. Otherwise there should have been an assert that word-size equals 32-bits at line 1425 to assert that your layout is actually correct at all (or that Low32 and High32 mean anything in respect to Mips words).\n\nSo, yeah, I wanted maintainability by reducing the amount of dummy variables that are redundant (because word size is luckily pointer size, unlike something backwards [IMHO brain-dead] like Mips64). But I\u0027ll revert this and let ImgTec deal with all the duplicate values.",
      "parentUuid": "0f0a6d5d_eec41aaa",
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_cea67607",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 2453,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2016-07-27T02:35:29Z",
      "side": 1,
      "message": "You need to run a script on the changed files to detect overly long lines and fix them.",
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_ced4b647",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 1
      },
      "lineNbr": 2453,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-27T02:55:19Z",
      "side": 1,
      "message": "Yes, this will all be fixed. This is still a work-in-progress, as clearly marked in the commit message.",
      "parentUuid": "0f0a6d5d_cea67607",
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_4e3726ea",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-07-27T02:19:02Z",
      "side": 1,
      "message": "nit: redundant \"PointerSize\"\n\n  PointerSize::kPointerSize32 ?\n\nvs\n \n  PointerSize::k32",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_6ecaea70",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-27T02:57:00Z",
      "side": 1,
      "message": "I started with an enum (non-class), that\u0027s where it came from.",
      "parentUuid": "0f0a6d5d_4e3726ea",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_ce4af65d",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-07-27T02:19:02Z",
      "side": 1,
      "message": "Current?",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_8ec58e63",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-27T02:57:00Z",
      "side": 1,
      "message": "Makes it too long and unwieldy in many contexts. It needs to replace sizeof(void*), which is significantly shorter. I don\u0027t want this CL\u0027s line count to balloon anymore than necessary. :-)",
      "parentUuid": "0f0a6d5d_ce4af65d",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_ece8a2ab",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-27T12:35:41Z",
      "side": 1,
      "message": "We have kInstructionSet and enum InstructionSet. We can make it consistent by having kPointerSize and enum PointerSize.",
      "parentUuid": "0f0a6d5d_8ec58e63",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_3d13f261",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-07-27T18:17:11Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "0f0a6d5d_ece8a2ab",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_fd284a88",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-27T18:18:03Z",
      "side": 1,
      "message": "kInstructionSet? Do your mean kRuntimeISA...",
      "parentUuid": "0f0a6d5d_3d13f261",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a6d5d_1d454e4d",
        "filename": "runtime/base/enums.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-27T18:19:42Z",
      "side": 1,
      "message": "Yeah, shouldn\u0027t you reviews while jet lagged....",
      "parentUuid": "0f0a6d5d_fd284a88",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "f8f29ff602afaf00ff9053e3d67d893bd32a9989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}