// Copyright 2018 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "art_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["art_license"],
}

// --- ahat.jar ----------------
java_binary_host {
    name: "ahat",
    visibility: [
        "//libcore/metrictests/memory/host",
    ],
    wrapper: "ahat.sh",
    srcs: ["src/main/**/*.java"],
    manifest: "etc/ahat.mf",
    java_resources: ["etc/style.css"],
    // Use a relaxed version to allow distribution against older runtimes.
    java_version: "11",
    javacflags: ["-Xdoclint:all/protected"],
    static_libs: [
        "guava",
    ],
}

// --- ahat-test-dump.jar --------------
java_test_helper_library {
    name: "ahat-test-dump",
    srcs: ["src/test-dump/**/*.java"],
    sdk_version: "core_platform",
    optimize: {
        obfuscate: true,
        enabled: true,
        proguard_flags_files: ["etc/test-dump.pro"],
    },
}

// --- ahat-ri-test-dump.jar -------
java_test_helper_library {
    host_supported: true,
    device_supported: false,
    name: "ahat-ri-test-dump",
    srcs: ["src/ri-test-dump/**/*.java"],
}

cc_library_shared {
    name: "libahat-test-jni",
    srcs: ["src/test/jni/**/*.cpp"],
    header_libs: ["jni_headers"],
    host_supported: true,
}

cc_genrule {
    name: "gen_test-dump.hprof",
    host_supported: true,
    device_supported: false,
    srcs: [
        // Part 1: Main executables
        ":ahat-test-dump", // ahat-test-dump.jar
        ":art-script", // out/host/srcs/bin/art
        ":dalvikvm", // out/host/srcs/bin/dalvikvm -> dalvikvm64

        // Part 2: Hardcoded library dependencies
        ":apache-xml", // out/host/srcs/apex/com.android.art/javalib/apache-xml.jar
        ":apex_icu.dat", // out/host/srcs/com.android.i18n/etc/icu/icudt75l.dat
        ":bouncycastle", // out/host/srcs/apex/com.android.art/javalib/bouncycastle.jar
        ":conscrypt-host", // out/host/srcs/apex/com.android.conscrypt/javalib/conscrypt.jar
        ":core-icu4j-host", // out/host/srcs/apex/com.android.i18n/javalib/core-icu4j.jar
        ":core-libart", // out/host/srcs/apex/com.android.art/javalib/core-libart.jar
        ":core-oj", // out/host/srcs/apex/com.android.art/javalib/core-oj.jar
        ":okhttp", // out/host/srcs/apex/com.android.art/javalib/okhttp.jar

        // Part 3: Shared libraries required by `dalvikvm`
        ":libandroidio",
        ":libart",
        ":libart-disassembler",
        ":libartbase",
        ":libartbased",
        ":libartd",
        ":libartd-disassembler",
        ":libartpalette",
        ":libbase",
        ":libc++",
        ":libdexfile",
        ":libdexfiled",
        ":libdt_socket",
        ":libexpat", // libexpat-host.so
        ":libicui18n", // libicui18n-host.so
        ":libicu",
        ":libicu_jni",
        ":libicuuc", // libicuuc-host.so
        ":libjavacore",
        ":libjavacrypto",
        ":libjdwp",
        ":liblz4",
        ":liblzma",
        ":liblog",
        ":libnativebridge",
        ":libnativehelper",
        ":libnativeloader",
        ":libnpt",
        ":libopenjdk",
        ":libopenjdkd",
        ":libopenjdkjvm",
        ":libopenjdkjvmd",
        ":libopenjdkjvmti",
        ":libopenjdkjvmtid",
        ":libprofile",
        ":libprofiled",
        ":libsqlite",
        ":libsigchain",
        ":libunwindstack",
        ":libxml2",
        ":libz", // libz-host.so
        ":libziparchive",

        // Part 4: JNI library
        ":libahat-test-jni", // out/host/srcs/lib64/libahat-test-jni.so
    ],
    out: [
        "test-dump.hprof",
    ],
    compile_multilib: "first",
    cmd: "mkdir -p $(genDir)/host/srcs/bin &&" +
        // Part 1
        "cp $(location :ahat-test-dump) $(genDir)/host/srcs/bin/ahat-test-dump.jar &&" +
        "cp $(location :art-script) $(genDir)/host/srcs/bin/art &&" +
        "cp $(location :dalvikvm) $(genDir)/host/srcs/bin/dalvikvm" +
        select(soong_config_variable("art_module", "host_prefer_32_bit"), {
            true: "32",
            default: "64",
        }) + " &&" +
        "ln -s $(genDir)/host/srcs/bin/dalvikvm" +
        select(soong_config_variable("art_module", "host_prefer_32_bit"), {
            true: "32",
            default: "64",
        }) + " $(genDir)/host/srcs/bin/dalvikvm &&" +

        // Part 2
        "mkdir -p $(genDir)/host/srcs/apex/com.android.art/javalib &&" +
        "cp $(location :apache-xml) $(genDir)/host/srcs/apex/com.android.art/javalib &&" +
        "mkdir -p $(genDir)/host/srcs/com.android.i18n/etc/icu &&" +
        "cp $(location :apex_icu.dat) $(genDir)/host/srcs/com.android.i18n/etc/icu &&" +
        "cp $(location :bouncycastle) $(genDir)/host/srcs/apex/com.android.art/javalib &&" +
        "mkdir -p $(genDir)/host/srcs/apex/com.android.conscrypt/javalib &&" +
        "cp $(location :conscrypt-host) $(genDir)/host/srcs/apex/com.android.conscrypt/javalib/conscrypt.jar &&" +
        "mkdir -p $(genDir)/host/srcs/apex/com.android.i18n/javalib &&" +
        "cp $(location :core-icu4j-host) $(genDir)/host/srcs/apex/com.android.i18n/javalib/core-icu4j.jar &&" +
        "cp $(location :core-libart) $(genDir)/host/srcs/apex/com.android.art/javalib &&" +
        "cp $(location :core-oj) $(genDir)/host/srcs/apex/com.android.art/javalib &&" +
        "cp $(location :okhttp) $(genDir)/host/srcs/apex/com.android.art/javalib &&" +

        // Part 3
        "cp $(location :libandroidio) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libart) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libart-disassembler) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libartbase) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libartbased) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libartd) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libartd-disassembler) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libartpalette) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libbase) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libc++) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libdexfile) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libdexfiled) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libdt_socket) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libexpat) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libicui18n) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libicu) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libicu_jni) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libicuuc) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libjavacore) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libjavacrypto) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libjdwp) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :liblz4) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :liblzma) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :liblog) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libnativebridge) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libnativehelper) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libnativeloader) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libnpt) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdk) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdkd) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdkjvm) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdkjvmd) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdkjvmti) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libopenjdkjvmtid) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libprofile) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libprofiled) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libsqlite) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libsigchain) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libunwindstack) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libxml2) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libz) $(genDir)/host/srcs/bin/ &&" +
        "cp $(location :libziparchive) $(genDir)/host/srcs/bin/ &&" +

        // Part 4
        "mkdir -p $(genDir)/host/srcs/lib" +
        select(soong_config_variable("art_module", "host_prefer_32_bit"), {
            true: "32",
            default: "64",
        }) + " &&" +
        "cp $(location :libahat-test-jni) $(genDir)/host/srcs/lib" +
        select(soong_config_variable("art_module", "host_prefer_32_bit"), {
            true: "32",
            default: "64",
        }) + " &&" +

        "mkdir -p $(genDir)/host/test-dump-android_data &&" +
        "ANDROID_DATA=$(genDir)/host/test-dump-android_data $(genDir)/host/srcs/bin/art " +
        " --no-compile -d --" +
        select(soong_config_variable("art_module", "host_prefer_32_bit"), {
            true: "32",
            default: "64",
        }) + " -cp $(location :ahat-test-dump) Main $(out)",
    target: {
        darwin: {
            enabled: false,
        },
        windows: {
            enabled: false,
        },
    },
}

// TODO: Remove this after `ahat-tests` is fully converted to Android.bp
// This `cc_prebuilt_object` is only for providing the install path of "test-dump.hprof"
// to the original Android.mk, and to verify that the converted content of
// "test-dump.hprof" is correct. It can be deleted after `ahat-tests` is fully
// converted to Android.bp.
cc_prebuilt_object {
    name: "test-dump.hprof",
    host_supported: true,
    device_supported: false,
    compile_multilib: "first",
    srcs: [
        ":gen_test-dump.hprof",
    ],
    target: {
        darwin: {
            enabled: false,
        },
        windows: {
            enabled: false,
        },
    },
    enabled: select(soong_config_variable("ANDROID", "EMMA_INSTRUMENT"), {
        true: false,
        default: true,
    }),
}
