{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f92fb9fc_10a10872",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-26T16:29:11Z",
      "side": 1,
      "message": "huh... that makes no sense, but i can repro locally...\n\nah, it looks like the glibc header that contains these macros doesn\u0027t get transitively included from \u003celf.h\u003e...\n\nah, okay, so glibc\u0027s actually fucked here. they have ELF64_ST_BIND() and ELF32_ST_BIND() but only the uapi header has ELF_ST_BIND() but -- unlike bionic -- they don\u0027t _really_ use the uapi headers, so you can\u0027t include both their \u003celf.h\u003e and the uapi \u003clinux/elf.h\u003e because of name collisions.\n\nstupidly, the definitions of ELF32_ST_* and ELF64_ST_* are the same, so we _could_ go that way, but it would look at bit odd at both callsites...\n```\n~/aosp-main-with-phones/art$ grep -r ELF_ST_\nlibelffile/elf/elf_builder.h:      auto is_local \u003d [](const Elf_Sym\u0026 sym) { return ELF_ST_BIND(sym.st_info) \u003d\u003d STB_LOCAL; };\nlibelffile/elf/elf_debug_reader.h:        if (ELF_ST_TYPE(symbol.st_info) \u003d\u003d STT_FUNC \u0026\u0026\n```\nthe other other alternative would be to have\n```\n#if !defined(__BIONIC__)\n#define ELF_ST_BIND(x) ELF64_ST_BIND(x)\n#define ELF_ST_TYPE(x) ELF64_ST_TYPE(x)\n#endif\n```\n(because, looking more closely, i think musl is in a similar boat, having the 32/64 macros but -- despite the fact they\u0027re both the same! -- no generic one.)",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0135281_9247fd45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-27T15:42:11Z",
      "side": 1,
      "message": "any preference? (or other alternatives?)",
      "parentUuid": "f92fb9fc_10a10872",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aca57ff0_bf337270",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-03-27T18:08:14Z",
      "side": 1,
      "message": "I\u0027ll review these ELF cleanups but I don\u0027t care about this code enough to have a preference. Maybe David?",
      "parentUuid": "d0135281_9247fd45",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a42225fd_9774a04b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2024-04-02T15:03:40Z",
      "side": 1,
      "message": "If it compiles I am happy.  (but I guess it does not for now)",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61013d3f_a1d35527",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-03T00:17:28Z",
      "side": 1,
      "message": "no, it doesn\u0027t, so that\u0027s the question --- which fix do you like best/dislike least:\n1. do nothing: keep this duplication (but add a comment explaining why it exists, because we\u0027re not monsters).\n2. replace the callers\u0027 ELF_ST_\u003cfoo\u003e with ELF64_ST_\u003cfoo\u003e (which is fine because the ELF32_ST_\u003cfoo\u003e and ELF64_ST_\u003cfoo\u003e macros are the same, but doesn\u0027t _look_ fine, at least until we delete ILP32 in a few years).\n3. define the size-independent ELF_ST_\u003cfoo\u003e as ELF_64_ST\u003cfoo\u003e in this header, so it\u0027s clearly just a name change, and you are actually using the libc macros rather than trying to change something about them.\n\nin case it\u0027s not clear what i meant by option 3, basically this:\n```\n#if !defined(__BIONIC__)\n#define ELF_ST_BIND(x) ELF64_ST_BIND(x)\n#define ELF_ST_TYPE(x) ELF64_ST_TYPE(x)\n#endif\n```",
      "parentUuid": "a42225fd_9774a04b",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8b2cb90_32f3441b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-03T06:34:59Z",
      "side": 1,
      "message": "I have a slight preference for 3 (but all three are OK).",
      "parentUuid": "61013d3f_a1d35527",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "950915f7_f91e9f9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2024-04-03T12:09:21Z",
      "side": 1,
      "message": "Well, I care about the code, but I don\u0027t care much how the macros are defined.  I happy to +2 whatever compiles.\n\nI like the option 3 as well to avoid saying ELF64 in 32-bit code. (maybe add comment next to the #define)",
      "parentUuid": "aca57ff0_bf337270",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf98e69f_6ae4291e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-04T01:21:32Z",
      "side": 1,
      "message": "https://android-review.git.corp.google.com/c/platform/art/+/3026743 (sorry, cider choked on the merge conflict)",
      "parentUuid": "d8b2cb90_32f3441b",
      "revId": "2a9f81a2595285bd33cfb6ba2122202c78b6ef6c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}