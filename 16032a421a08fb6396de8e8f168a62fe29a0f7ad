{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3a905667_552cdf77",
        "filename": "test/661-oat-writer-layout/run",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "Why remove the quotes?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05e25786_b57af549",
        "filename": "test/661-oat-writer-layout/run",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-21T14:30:49Z",
      "side": 0,
      "message": "RUN used to be `.../run-test-jar`, but it is now `.../python3 .../run-test-jar`\n\nThe quotes make bash lookup the executable as if there was space in the path.\n\nRemoving the quotes make bash run python3 with the script as argument",
      "parentUuid": "3a905667_552cdf77",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "923cb962_a8a032b9",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 862,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "TBH I\u0027m still confused how it works. I know about `${parameter/pattern/string}` susbtitutions in bash, but what is pattern here? It\u0027s ENOPARSE to me.",
      "range": {
        "startLine": 862,
        "startChar": 11,
        "endLine": 862,
        "endChar": 41
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1123b8f5_219e908a",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 862,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-21T14:30:49Z",
      "side": 0,
      "message": "\"${var//Pattern/Replacement}  Global replacement. All matches of Pattern, within var replaced with Replacement.\"\n\nI had to look it up as well.  So it replaces `\\/` with `@`.  That is `str.replace(\"/\", \"@\")` in python.\n\nI argue that python is much more readable then bash :-)",
      "parentUuid": "923cb962_a8a032b9",
      "range": {
        "startLine": 862,
        "startChar": 11,
        "endLine": 862,
        "endChar": 41
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80a4bf53_f4a3af13",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 971,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "Can you redirect output in front of the command in bash? I didn\u0027t know.",
      "range": {
        "startLine": 971,
        "startChar": 6,
        "endLine": 971,
        "endChar": 10
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c9bf8f6_31743680",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 971,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-21T14:30:49Z",
      "side": 0,
      "message": "I didn\u0027t know either.",
      "parentUuid": "80a4bf53_f4a3af13",
      "range": {
        "startLine": 971,
        "startChar": 6,
        "endLine": 971,
        "endChar": 10
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b65952_486d5493",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1461,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "Why does it need `eval` on line 1461 but not 1460? It doesn\u0027t matter for `run`, does it?",
      "range": {
        "startLine": 1460,
        "startChar": 0,
        "endLine": 1461,
        "endChar": 71
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7853483_2b82e1ca",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1461,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-29T12:38:03Z",
      "side": 0,
      "message": "I think people just added `eval` as needed.  I don\u0027t know bash well, but I checked that if you have `cmd\u003d\"echo 1 \u0026\u0026 echo 2\"` then you need to add the `eval` to make it work as expected.  And this script tends to use `\u0026\u0026` in many places.",
      "parentUuid": "f4b65952_486d5493",
      "range": {
        "startLine": 1460,
        "startChar": 0,
        "endLine": 1461,
        "endChar": 71
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97800c3b_3b92aa2a",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "I don\u0027t fully understand what it does, but it looks like your conversion is not 1:1 here, or is it?",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73d897dc_30a45820",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-29T12:38:03Z",
      "side": 0,
      "message": "Hmmm... my understanding is that it catches the INT signal (i.e. Ctrl+C) and if it sees it, it kills the child process.\n\nThe question is why was it there in the first place... If I just Ctrl+C the script it does seem to kill its children (isn\u0027t computer terminology odd sometimes?!) :-)\n\nEven if I put an infinite loop in dalvikvm, then the script can be aborted and there no processes left over.\n\nSimilar logic can be implemented in python.  On the other hand I am not sure if I should do it now, or wait we reencounter the issue that it is trying to solve.\n\nI think the calling script must more aggressively kills the whole process tree on Ctrl+C, so I think there is decent chance that this is just obsolete now.",
      "parentUuid": "97800c3b_3b92aa2a",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca86316d_369dba72",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-29T13:28:11Z",
      "side": 0,
      "message": "\u003e The question is why was it there in the first place... If I just Ctrl+C the script it does seem to kill its children (isn\u0027t computer terminology odd sometimes?!) :-)\n\nIt may have to do with background proccesses and timeout: https://unix.stackexchange.com/questions/57667/why-cant-i-kill-a-timeout-called-from-a-bash-script-with-a-keystroke\n\n\u003e isn\u0027t computer terminology odd sometimes?!\n\nDon\u0027t mention. It would be even more confusing for an AI. :D",
      "parentUuid": "73d897dc_30a45820",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58127560_79edc768",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-29T14:16:46Z",
      "side": 0,
      "message": "Interesting.  I think you are right... that very much looks like the motivation.\n\nAlas, I don\u0027t think it works as intended.  I think the trap never gets executed.\n\nGood news is the both without and with my CL, ctrl+C gives you back control.\n\nBad new is the both without and with my CL, ctrl+C leaves the timeout process around.  I guess this is not horrible, and the timeout will by definition go away.\n\nBut still, I would have preffered if Ctrl+C just immediatelly killed everything.  Your link seems to suggest that timeout crates it\u0027s own process group, which could ironically make it is immute from the current killing.\n\nIn any case.  This is good to know, and I should fix it either way.\n\nBut as far as I know, this CL does not modify behavior.",
      "parentUuid": "ca86316d_369dba72",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e0ade2d_cb60a9f5",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-29T14:38:19Z",
      "side": 0,
      "message": "Sure, for now maybe add a TODO and some explanation that timeout doesn\u0027t get killed on Ctrl+C as a bg process?",
      "parentUuid": "58127560_79edc768",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ae501b8_79a2e257",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-29T14:42:20Z",
      "side": 0,
      "message": "b/240684909",
      "parentUuid": "0e0ade2d_cb60a9f5",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52cb77f5_800d476a",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1513,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-29T14:47:11Z",
      "side": 0,
      "message": "Perfect, thanks!",
      "parentUuid": "5ae501b8_79a2e257",
      "range": {
        "startLine": 1511,
        "startChar": 0,
        "endLine": 1513,
        "endChar": 17
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "058173bc_d7c924aa",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1523,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2022-07-21T11:42:36Z",
      "side": 0,
      "message": "Same here.",
      "range": {
        "startLine": 1522,
        "startChar": 0,
        "endLine": 1523,
        "endChar": 30
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05019372_5d1c06f9",
        "filename": "test/etc/run-test-jar",
        "patchSetId": 7
      },
      "lineNbr": 1523,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-29T12:38:03Z",
      "side": 0,
      "message": "Ditto.",
      "parentUuid": "058173bc_d7c924aa",
      "range": {
        "startLine": 1522,
        "startChar": 0,
        "endLine": 1523,
        "endChar": 30
      },
      "revId": "16032a421a08fb6396de8e8f168a62fe29a0f7ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}