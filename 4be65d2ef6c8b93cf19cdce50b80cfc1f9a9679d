{
  "comments": [
    {
      "key": {
        "uuid": "0b732e96_daec25e1",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-04-18T09:21:11Z",
      "side": 1,
      "message": "Hmmm, don\u0027t we have a problem if we start saying Foo.class is the Object class if Foo is erroneous? For example:\n\nif (a instanceof Foo) ...\n\nWon\u0027t optimizing the instanceof say always true?\n\nSo maybe we can live with an invalid ReferenceTypeInfo instead?",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287c78a3_58094112",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-18T16:53:03Z",
      "side": 1,
      "message": "does that optimization look at exactness?\n\nare you proposing now to go back to the erroneous type, or make this invalid?\n\nCalin, any input?",
      "parentUuid": "0b732e96_daec25e1",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b732e96_7aa07115",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-04-18T17:02:34Z",
      "side": 1,
      "message": "We discussed this quite a bit with Calin. We already special case the LoadedClassRti to check invalid if the class is unresolved.\n\nSo I\u0027d suggest special casing the HLoadClass to either get a) an invalid RTI if the class is erroneous/unresolved, or b) a boolean flag in HLoadClass. I think I have a preference for a).",
      "parentUuid": "287c78a3_58094112",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b732e96_da6505ab",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-04-18T17:31:59Z",
      "side": 1,
      "message": "Yes, I also prefer to make it invalid (option a). We already have a special handling for LoadedClass and it\u0027s easier than creating a special case.",
      "parentUuid": "0b732e96_7aa07115",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287c78a3_1b58a32a",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-18T17:51:47Z",
      "side": 1,
      "message": "I am not sure I follow. After suggestions, we only have two cases of \"CreateReferenceTypeInfoAndFixError\" left. So now you are saying that one of these should be \"CreateReferenceTypeInfoAndFixErrorToInvalid\" (while the other will remain the \"CreateReferenceTypeInfoAndFixErrorToInexactObject\")?",
      "parentUuid": "0b732e96_da6505ab",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b732e96_dae0a544",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-04-18T17:56:53Z",
      "side": 1,
      "message": "I\u0027ll leave it up to you if you want to have the helpers. I don\u0027t think they are really needed as it\u0027s easy to test locally if the class is erroneous or not.\n\nfor e.g. in VisitLoadClass()\n\nthe check to set it  will be:\nif (resolved_class !\u003d nullptr \u0026\u0026 !resolved_class-\u003eIsErroneous()).",
      "parentUuid": "287c78a3_1b58a32a",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287c78a3_db978bc2",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 5445,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-18T18:03:23Z",
      "side": 1,
      "message": "No, if it is just these two, I will remove the helper(s). But can you confirm this is the situation both you and Nicolas want now?",
      "parentUuid": "0b732e96_dae0a544",
      "range": {
        "startLine": 5445,
        "startChar": 28,
        "endLine": 5445,
        "endChar": 49
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b732e96_5a7ad546",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 8
      },
      "lineNbr": 253,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-04-18T17:31:59Z",
      "side": 1,
      "message": "you can keep Create here. We know that object will not be erroneous.",
      "range": {
        "startLine": 253,
        "startChar": 39,
        "endLine": 253,
        "endChar": 81
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287c78a3_7b7437ce",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 8
      },
      "lineNbr": 253,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-18T17:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b732e96_5a7ad546",
      "range": {
        "startLine": 253,
        "startChar": 39,
        "endLine": 253,
        "endChar": 81
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b732e96_3a7d193e",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 8
      },
      "lineNbr": 544,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-04-18T17:31:59Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 544,
        "startChar": 6,
        "endLine": 544,
        "endChar": 53
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287c78a3_db622b11",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 8
      },
      "lineNbr": 544,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-04-18T17:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b732e96_3a7d193e",
      "range": {
        "startLine": 544,
        "startChar": 6,
        "endLine": 544,
        "endChar": 53
      },
      "revId": "4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}