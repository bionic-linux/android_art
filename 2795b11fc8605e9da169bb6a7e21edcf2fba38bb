{
  "comments": [
    {
      "key": {
        "uuid": "cae3c748_21bfcee9",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "Why not stating that this is JIT related and call it IsForJITCode or something?",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2c372e_1558f4d9",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "It is exactly JIT related - this methods just tells us whether we have written given section to disk or not.\nAsking whether the ELF file contains \".text\" happens to be useful for JIT, but that is concern of the higher level.",
      "parentUuid": "cae3c748_21bfcee9",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eae08b3e_623ef663",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T12:16:39Z",
      "side": 1,
      "message": "But the name of the method doesn\u0027t tell it so, and that I find confusing.",
      "parentUuid": "4a2c372e_1558f4d9",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5f3bcc_c6c6429a",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:29:09Z",
      "side": 1,
      "message": "Sorry, I meant \"it is not exactly JIT related\".\nThe idea is that the ElfBuilder is lower-level API for writing of an ELF file and thus does know about the JIT.",
      "parentUuid": "eae08b3e_623ef663",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a2b8319_f4277857",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T12:32:43Z",
      "side": 1,
      "message": "I understand, but WasWritten sounds like something that will eventually say true which will never be the case for the JIT, right?\n\nHow about calling the method IsFromDisk() and add the JIT as an example?",
      "parentUuid": "6a5f3bcc_c6c6429a",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2c372e_b516e0d7",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:41:44Z",
      "side": 1,
      "message": "Well, there is no need for it to be eventually true.  Many of the ELF sections are optional.\n\nWhat about Exists()?",
      "parentUuid": "2a2b8319_f4277857",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5f3bcc_665bced9",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "Add a comment explaining why section can be null?",
      "range": {
        "startLine": 263,
        "startChar": 22,
        "endLine": 263,
        "endChar": 40
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea6b2b68_edc6c170",
        "filename": "compiler/elf_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a5f3bcc_665bced9",
      "range": {
        "startLine": 263,
        "startChar": 22,
        "endLine": 263,
        "endChar": 40
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca6e677a_49e58134",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:34:49Z",
      "side": 1,
      "message": "So I think that GetText()-\u003eWasWritten() to determine whether we have written \".text\" do disk is reasonable.\n\nI feel kind of bad that the code needs ask the question in the first place, but it was the easiest solution to make the code work without the .text section in the ELF file.  I might still try to refactor it later.",
      "range": {
        "startLine": 238,
        "startChar": 34,
        "endLine": 238,
        "endChar": 66
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5f3bcc_a648e60c",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "Indentation is off, it should be:\n\nfoo \u003d bar\n(newline)   ? 1\n(newline)   : 0",
      "range": {
        "startLine": 238,
        "startChar": 34,
        "endLine": 239,
        "endChar": 73
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a54ffaf_43700620",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a5f3bcc_a648e60c",
      "range": {
        "startLine": 238,
        "startChar": 34,
        "endLine": 239,
        "endChar": 73
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eae08b3e_42b81231",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 445,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 445,
        "startChar": 35,
        "endLine": 445,
        "endChar": 84
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a54ffaf_636d0245",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 445,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eae08b3e_42b81231",
      "range": {
        "startLine": 445,
        "startChar": 35,
        "endLine": 445,
        "endChar": 84
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eae08b3e_c2c382b1",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 932,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 932,
        "startChar": 36,
        "endLine": 932,
        "endChar": 44
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae3c748_6190b671",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 932,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eae08b3e_c2c382b1",
      "range": {
        "startLine": 932,
        "startChar": 36,
        "endLine": 932,
        "endChar": 44
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a68ef71_0784567a",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 1225,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-06T11:35:01Z",
      "side": 1,
      "message": "Internal?",
      "range": {
        "startLine": 1225,
        "startChar": 48,
        "endLine": 1225,
        "endChar": 49
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5f3bcc_c61722d7",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 1225,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-01-06T12:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a68ef71_0784567a",
      "range": {
        "startLine": 1225,
        "startChar": 48,
        "endLine": 1225,
        "endChar": 49
      },
      "revId": "2795b11fc8605e9da169bb6a7e21edcf2fba38bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}