{
  "comments": [
    {
      "key": {
        "uuid": "6a4bd746_59b754d3",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-26T01:02:23Z",
      "side": 1,
      "message": "Consider ThrowIllegalAccessError from common_throws.",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 97
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a4bd746_b92040b7",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-07-26T01:25:47Z",
      "side": 1,
      "message": "That one needs a referrer for a very specific message (see here below L158), which applies less to this error",
      "parentUuid": "6a4bd746_59b754d3",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 97
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a4bd746_1935ccdc",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-26T01:29:42Z",
      "side": 1,
      "message": "This one fits:\n\n void ThrowIllegalAccessError(mirror::Class* referrer, const char* fmt, ...)\n\nYou can leave referrer null, if you want to.",
      "parentUuid": "6a4bd746_b92040b7",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 97
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a4bd746_39e8d0aa",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-26T01:02:23Z",
      "side": 1,
      "message": "That\u0027s the first time we use it outside of lambdas. This error wasn\u0027t meant to be used outside of testing. Not sure we have something better, though.",
      "range": {
        "startLine": 1263,
        "startChar": 9,
        "endLine": 1263,
        "endChar": 39
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a4bd746_39153050",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-07-26T01:25:47Z",
      "side": 1,
      "message": "I did notice :-)\n\nBut yes, what else is there? Alternatively, I could try to make interpreter *and* compiler handle this and not do this change.",
      "parentUuid": "6a4bd746_39e8d0aa",
      "range": {
        "startLine": 1263,
        "startChar": 9,
        "endLine": 1263,
        "endChar": 39
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f473d8f_bb16e7a3",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 1263,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-26T10:43:45Z",
      "side": 1,
      "message": "We do have needs access check to force the interpreter, right?",
      "parentUuid": "6a4bd746_39153050",
      "range": {
        "startLine": 1263,
        "startChar": 9,
        "endLine": 1263,
        "endChar": 39
      },
      "revId": "d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}