{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9b878fe_8797e78e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-10-14T12:17:08Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccbb69f3_3089290e",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "Please avoid using `auto` unless in particular circumstances. go/totw/232#otherwise-avoid-using-auto",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "fixSuggestions": [
        {
          "fixId": "0046fd99_333dfb6c",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 334,
                "startChar": 0,
                "endLine": 336,
                "endChar": 0
              },
              "replacement": "  const OatFile* oatFile \u003d c-\u003eGetDexFile().GetOatDexFile()-\u003eGetOatFile();\n  jstring odexPath \u003d env-\u003eNewStringUTF(oatFile-\u003eGetLocation().c_str());\n"
            },
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 337,
                "startChar": 0,
                "endLine": 338,
                "endChar": 0
              },
              "replacement": "  const ArtMethod* artMethod \u003d m-\u003eGetArtMethod();\n"
            },
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 346,
                "startChar": 0,
                "endLine": 348,
                "endChar": 0
              },
              "replacement": "  const uint8_t* odexOffset \u003d elfBegin;\n  const uint8_t* methodOffset \u003d\n      oatMethodQuickCode \u003d\u003d nullptr ? nullptr : oatMethodQuickCode - odexOffset;\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18d5cea_9300b720",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "If there is no odex and vdex at all, will `GetOatDexFile()` return nullptr?",
      "range": {
        "startLine": 334,
        "startChar": 33,
        "endLine": 334,
        "endChar": 48
      },
      "fixSuggestions": [
        {
          "fixId": "2352cd69_69b047f4",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 335,
                "startChar": 0,
                "endLine": 335,
                "endChar": 0
              },
              "replacement": "  if (oatFile \u003d\u003d nullptr) {\n    LOG(ERROR) \u003c\u003c \"Could not find oat file\";\n    return nullptr;\n  }\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0cc4765_6b109c53",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "Looks like this can return nullptr too. https://cs.android.com/android/platform/superproject/main/+/main:art/runtime/oat/oat_file.h;l\u003d536;drc\u003d9a4c0e57e6cac52898dba55989cf4c9efacf37ed",
      "range": {
        "startLine": 334,
        "startChar": 50,
        "endLine": 334,
        "endChar": 62
      },
      "fixSuggestions": [
        {
          "fixId": "803f228d_82bbd60f",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 333,
                "startChar": 0,
                "endLine": 333,
                "endChar": 0
              },
              "replacement": "\n  if (c-\u003eGetDexFile().GetOatDexFile() \u003d\u003d nullptr) {\n    LOG(ERROR) \u003c\u003c \"Could not find oat file\";\n    return nullptr;\n  }\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a3b8563_96ffe83f",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "Please use `snake_case` go/cstyle#Variable_Names",
      "range": {
        "startLine": 334,
        "startChar": 7,
        "endLine": 334,
        "endChar": 14
      },
      "fixSuggestions": [
        {
          "fixId": "7fd65721_30505d27",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 334,
                "startChar": 0,
                "endLine": 336,
                "endChar": 0
              },
              "replacement": "  auto oat_file \u003d c-\u003eGetDexFile().GetOatDexFile()-\u003eGetOatFile();\n  auto odex_path \u003d env-\u003eNewStringUTF(oat_file-\u003eGetLocation().c_str());\n"
            },
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 342,
                "startChar": 0,
                "endLine": 343,
                "endChar": 0
              },
              "replacement": "  const uint8_t* elfBegin \u003d oat_file-\u003eComputeElfBegin(\u0026errorMsg);\n"
            },
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 344,
                "startChar": 0,
                "endLine": 345,
                "endChar": 0
              },
              "replacement": "  DCHECK_GE(oat_file-\u003eBegin(), elfBegin);\n"
            },
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 351,
                "startChar": 0,
                "endLine": 352,
                "endChar": 0
              },
              "replacement": "  return env-\u003eNewObject(clazz, constructorID, odex_path, odexOffset, methodOffset);\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "965b988c_40f27623",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-10-14T12:17:08Z",
      "side": 1,
      "message": "Are we sure this will not be nullptr? I think it is possible to not have an odex file.",
      "range": {
        "startLine": 334,
        "startChar": 33,
        "endLine": 334,
        "endChar": 48
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6773d327_74ee6711",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "965b988c_40f27623",
      "range": {
        "startLine": 334,
        "startChar": 33,
        "endLine": 334,
        "endChar": 48
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32fe201b_f9059c16",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done other than where using `reinterpert_cast` (to avoid duplication) and here:\n```\nauto odex_offset \u003d elf_begin;\nauto method_offset \u003d oat_method_quick_code - odex_offset;\n```\n\nWhich makes me realize - should the types on the java object be `long` instead of `int`? And what explicit types should I use here in either case?",
      "parentUuid": "ccbb69f3_3089290e",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ba2516c_1aa3ef2e",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0cc4765_6b109c53",
      "range": {
        "startLine": 334,
        "startChar": 50,
        "endLine": 334,
        "endChar": 62
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51549978_50132c17",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a3b8563_96ffe83f",
      "range": {
        "startLine": 334,
        "startChar": 7,
        "endLine": 334,
        "endChar": 14
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d33d7576_e55a8c97",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d18d5cea_9300b720",
      "range": {
        "startLine": 334,
        "startChar": 33,
        "endLine": 334,
        "endChar": 48
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e64ecec4_7202d793",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T15:17:54Z",
      "side": 1,
      "message": "Forgive the AI suggestion. I meant `GetOatFile()` can return nullptr too, according to the comment I linked above.",
      "parentUuid": "1ba2516c_1aa3ef2e",
      "range": {
        "startLine": 334,
        "startChar": 50,
        "endLine": 334,
        "endChar": 62
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa6ab08_5d193bf5",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T15:17:54Z",
      "side": 1,
      "message": "\u003e should the types on the java object be `long` instead of `int`?\n\nYes, the pointers can be 64-bit long.\n\n\u003e And what explicit types should I use here in either case?\n\nI think `odex_offset` can be `const uint8_t*` since it\u0027s a pointer to an absolute address (and you probably need [`reinterpret_cast64`](https://cs.android.com/android/platform/superproject/main/+/main:art/libartbase/base/casts.h;l\u003d147;drc\u003d5513fa8b1f35c19048b44359f7337442f92e5a76) to cast it to `jlong`), and `method_offset` can be `size_t`.",
      "parentUuid": "32fe201b_f9059c16",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18e888f8_22c52e9f",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T18:16:49Z",
      "side": 1,
      "message": "Done - LMK if what I did makes sense.",
      "parentUuid": "3aa6ab08_5d193bf5",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5afd084_4b35c17e",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T18:16:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e64ecec4_7202d793",
      "range": {
        "startLine": 334,
        "startChar": 50,
        "endLine": 334,
        "endChar": 62
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "717a30be_e5f5a13d",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-15T10:22:05Z",
      "side": 1,
      "message": "Did you forget to upload the change?",
      "parentUuid": "18e888f8_22c52e9f",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5ea33f4_e806ef08",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-15T20:48:23Z",
      "side": 1,
      "message": "Sorry - lost the `reinterpret_cast64` changes somehow in the shuffle. Done.",
      "parentUuid": "717a30be_e5f5a13d",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18d3d0c_f50d4faf",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-16T09:39:42Z",
      "side": 1,
      "message": "Sorry, what I meant was to use `const uint8_t*` for `odex_offset` and use `size_t` for `method_offset`, and then `reinterpret_cast64` both to `jlong` when you call `NewObject`.\n\n`jlong` is a signed type, so it\u0027s not great for representing pointers and offsets. We have to use `jlong` in the returned object because that\u0027s the only 64-bit int type that Java supports, but it doesn\u0027t mean we have to use it during the calculation. In fact, the expression `reinterpret_cast64\u003cjlong\u003e(oat_method_quick_code) - odex_offset` is weird because you are casting `oat_method_quick_code` (in `const uint8_t*`, an unsigned type) to `jlong` (a signed type) and subtracting `odex_offset` (in `size_t`, an unsigned type) from it, causing it to be implicitly casted to unsigned again by the compiler. I guess the result is still fine, but I would suggest to avoid that for peace of mind.",
      "parentUuid": "a5ea33f4_e806ef08",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "349eede7_b488a035",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 334,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-16T13:45:36Z",
      "side": 1,
      "message": "Only remaining doubt (I think) is the right cast for `size_t` to `jlong`, as `reinterpret_cast64\u003cjlong\u003e` won\u0027t work for that.  Is `static_cast` ok?",
      "parentUuid": "d18d3d0c_f50d4faf",
      "range": {
        "startLine": 334,
        "startChar": 2,
        "endLine": 334,
        "endChar": 6
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0264e433_7bec9cb2",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "This will cause a leak. Please use `ScopedLocalRef`.\n\nThere is a helper macro [`CREATE_UTF_OR_RETURN`](https://cs.android.com/android/platform/superproject/main/+/main:libnativehelper/header_only_include/nativehelper/utils.h;l\u003d125;drc\u003ddc1e927c68b24b333df3d2c04ee7e4b0f26060b7) to create it easily.",
      "fixSuggestions": [
        {
          "fixId": "a9a21af2_4115adf9",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 335,
                "startChar": 0,
                "endLine": 336,
                "endChar": 0
              },
              "replacement": "  auto odexPath \u003d CREATE_UTF_OR_RETURN(env, oatFile-\u003eGetLocation().c_str());\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eac1f2fb_717f862f",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done - is it OK to return it to java with `odex_path.get()`?",
      "parentUuid": "0264e433_7bec9cb2",
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40aaee46_79936423",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T15:17:54Z",
      "side": 1,
      "message": "Looks like so.",
      "parentUuid": "eac1f2fb_717f862f",
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c73935ce_b5e0f2dc",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 343,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "This can return nullptr if an error occurred. https://cs.android.com/android/platform/superproject/main/+/main:art/runtime/oat/oat_file.h;l\u003d366;drc\u003d3df5451580a6cc40047deb445ad75c75325b92b7",
      "range": {
        "startLine": 343,
        "startChar": 2,
        "endLine": 343,
        "endChar": 43
      },
      "fixSuggestions": [
        {
          "fixId": "944b2055_8f1d7dc6",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 343,
                "startChar": 0,
                "endLine": 344,
                "endChar": 0
              },
              "replacement": "  if (elfBegin \u003d\u003d nullptr) {\n    LOG(ERROR) \u003c\u003c errorMsg;\n    return nullptr;\n  }\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f837fdf_d8250a53",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 343,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done - I removed the `DCHECK_GE(oatFile-\u003eBegin(), elfBegin);` - should I add an explicit check and `return nullptr` for that as well?",
      "parentUuid": "c73935ce_b5e0f2dc",
      "range": {
        "startLine": 343,
        "startChar": 2,
        "endLine": 343,
        "endChar": 43
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf8056d0_e7de3ff3",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 343,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T15:17:54Z",
      "side": 1,
      "message": "I think you can keep that as a DCHECK because I can\u0027t see how that invariant can be violated.",
      "parentUuid": "7f837fdf_d8250a53",
      "range": {
        "startLine": 343,
        "startChar": 2,
        "endLine": 343,
        "endChar": 43
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4932812a_6cd56245",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 347,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "If there is no quick code, will it be better to return nullptr rather than a JavaMethodExecutableOffset object with an invalid address?",
      "range": {
        "startLine": 347,
        "startChar": 22,
        "endLine": 347,
        "endChar": 45
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b73498e0_b35e1848",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 347,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-10-14T12:17:08Z",
      "side": 1,
      "message": "oatMethodQuickCode \u003d\u003d nullptr",
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22fa0f50_5a1ba9f2",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 347,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b73498e0_b35e1848",
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "058344f4_f1734fb0",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 347,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4932812a_6cd56245",
      "range": {
        "startLine": 347,
        "startChar": 22,
        "endLine": 347,
        "endChar": 45
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012fd9e3_c530f8ff",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 349,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T09:56:41Z",
      "side": 1,
      "message": "ScopedLocalRef, to avoid leak.\n\nAnd please handle the nullptr case.",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 349,
        "endChar": 84
      },
      "fixSuggestions": [
        {
          "fixId": "6c77b91a_6756bf21",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "runtime/native/dalvik_system_VMDebug.cc",
              "range": {
                "startLine": 349,
                "startChar": 0,
                "endLine": 350,
                "endChar": 0
              },
              "replacement": "  ScopedLocalRef\u003cjclass\u003e clazz(env, env-\u003eFindClass(\"dalvik/system/VMDebug$JavaMethodExecutableOffset\"));\n"
            }
          ]
        }
      ],
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b955a36_69d8460e",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 349,
      "author": {
        "id": 1944206
      },
      "writtenOn": "2024-10-14T14:58:07Z",
      "side": 1,
      "message": "Done - do I need to do something similar for `env-\u003eGetMethodID`? A similar refactor there doesn\u0027t compile.",
      "parentUuid": "012fd9e3_c530f8ff",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 349,
        "endChar": 84
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "160e5245_002f8299",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 13
      },
      "lineNbr": 349,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-10-14T15:17:54Z",
      "side": 1,
      "message": "Looks like you don\u0027t need it for jmethodID (I guess it\u0027s because it\u0027s just a pointer).",
      "parentUuid": "9b955a36_69d8460e",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 349,
        "endChar": 84
      },
      "revId": "01b533fa1a6954d1c314a8d5a6918e45fcf9cee2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}