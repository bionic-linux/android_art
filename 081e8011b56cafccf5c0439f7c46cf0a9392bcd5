{
  "comments": [
    {
      "key": {
        "uuid": "e39b8d7a_5b218fbe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "Can you add more description to what this change does?",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_c9eaf527",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T12:07:56Z",
      "side": 1,
      "message": "I don\u0027t know what else I should add.",
      "parentUuid": "e39b8d7a_5b218fbe",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_5bfa6f00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "Can you test this with CC if not?",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_e9ed3142",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T12:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e39b8d7a_5bfa6f00",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_5b234fd8",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "We don\u0027t need a read barrier when loading a class that\u0027s  in the boot image, but we still need a read barrier if we load a non-boot-image class from the boot image\u0027s BSS (which I thought was what this change introduces). Is this handled properly?",
      "range": {
        "startLine": 194,
        "startChar": 6,
        "endLine": 194,
        "endChar": 58
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_a997b9d7",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T12:07:56Z",
      "side": 1,
      "message": "Yes, codegens use GenerateGcRootFieldLoad() for this.",
      "parentUuid": "e39b8d7a_5b234fd8",
      "range": {
        "startLine": 194,
        "startChar": 6,
        "endLine": 194,
        "endChar": 58
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_580515c7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 1943,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "Only CMS uses kVisitRootFlagNewRoots. CC uses kVisitRootFlagAllRoots, that is, we must not reach here if running with CC (we could assert CHECK(!kUseReadBarrier) here.)\n\nChange this comment to say, \"We shouldn\u0027t reach here for concurrent moving GC\"?\n\nBTW, what the to-space invariant gives us for CC is that when we update a ref in the bss, we don\u0027t need a write barrier. So, we don\u0027t need to call WriteBarrierForBootOatFileBssRoots() for CC.",
      "range": {
        "startLine": 1942,
        "startChar": 0,
        "endLine": 1943,
        "endChar": 37
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_0991ada6",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 1943,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T13:41:13Z",
      "side": 1,
      "message": "Maybe the whole \"if ((flags \u0026 kVisitRootFlagNewRoots) !\u003d 0)\" and other ifs below should receive a \"!kUseReadBarrier \u0026\u0026\"?\n\nMaybe we should DCHECK() that we don\u0027t see kVisitRootFlagNewRoots, kVisitRootFlagStartLoggingNewRoots, kVisitRootFlagStopLoggingNewRoots and   kVisitRootFlagClearRootLog for CC in ClassLinker::VisitClassRoots()?",
      "parentUuid": "e39b8d7a_580515c7",
      "range": {
        "startLine": 1942,
        "startChar": 0,
        "endLine": 1943,
        "endChar": 37
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_5a86d73f",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 1943,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-17T18:44:06Z",
      "side": 1,
      "message": "DCHECK() would be good.",
      "parentUuid": "631cfdaf_0991ada6",
      "range": {
        "startLine": 1942,
        "startChar": 0,
        "endLine": 1943,
        "endChar": 37
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_b8f281b1",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 3684,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "We need do this only for CMS.",
      "range": {
        "startLine": 3680,
        "startChar": 0,
        "endLine": 3684,
        "endChar": 3
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_6986616e",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 3684,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T13:41:13Z",
      "side": 1,
      "message": "Do you want \"if (!kUseReadBaerrier) { ... }\"?",
      "parentUuid": "e39b8d7a_b8f281b1",
      "range": {
        "startLine": 3680,
        "startChar": 0,
        "endLine": 3684,
        "endChar": 3
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_fa6f8ba0",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 4
      },
      "lineNbr": 3684,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-17T18:44:06Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "631cfdaf_6986616e",
      "range": {
        "startLine": 3680,
        "startChar": 0,
        "endLine": 3684,
        "endChar": 3
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_78e1f9dd",
        "filename": "runtime/class_linker.h",
        "patchSetId": 4
      },
      "lineNbr": 1140,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "I think we can say this is used only for CMS.",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_c97675a5",
        "filename": "runtime/class_linker.h",
        "patchSetId": 4
      },
      "lineNbr": 1140,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T13:52:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e39b8d7a_78e1f9dd",
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_3b376b21",
        "filename": "runtime/entrypoints/quick/quick_dexcache_entrypoints.cc",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-13T19:33:50Z",
      "side": 1,
      "message": "Surround this with \"if (!kUseReadBarrier) {}\"?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_c95f951d",
        "filename": "runtime/entrypoints/quick/quick_dexcache_entrypoints.cc",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-01-16T13:41:13Z",
      "side": 1,
      "message": "Maybe the whole BssWriteBarrier() should be a no-op for CC?",
      "parentUuid": "e39b8d7a_3b376b21",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_5a5fb7f5",
        "filename": "runtime/entrypoints/quick/quick_dexcache_entrypoints.cc",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-01-17T18:44:06Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "631cfdaf_c95f951d",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "081e8011b56cafccf5c0439f7c46cf0a9392bcd5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}