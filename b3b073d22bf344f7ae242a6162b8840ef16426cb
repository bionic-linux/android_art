{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "739bc288_4a36bf37",
        "filename": "runtime/interpreter/mterp/riscv64/other.S",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-21T12:51:30Z",
      "side": 1,
      "message": "Note: `SET_VREG_OBJECT` will also mark the VREG as reference for GC, otherwise GC will ignore it and you end up with stale pointer.  So that was significant bug as well.  Just saying in case you suspect similar issue elsewhere.",
      "revId": "b3b073d22bf344f7ae242a6162b8840ef16426cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a022adb_ef002caf",
        "filename": "runtime/interpreter/mterp/riscv64/other.S",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-21T13:04:58Z",
      "side": 1,
      "message": "And if you go down that rabbit hole, I wonder if you would like to change `GET_VREG_OBJECT` and `GET_VREG` to check whether the loaded vreg is object or not.  (in debug build only, which might require increasing handler size in debug build)  I bet that would have caught this bug.",
      "parentUuid": "739bc288_4a36bf37",
      "revId": "b3b073d22bf344f7ae242a6162b8840ef16426cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da7d655f_0bf29de1",
        "filename": "runtime/interpreter/mterp/riscv64/other.S",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-12-21T16:08:39Z",
      "side": 1,
      "message": "Yes, it\u0027ll require a larger handler size... perhaps as a separate CL.\n\nIs there a straightforward way of looking at the contents of a vreg and determining whether it is an object?",
      "parentUuid": "8a022adb_ef002caf",
      "revId": "b3b073d22bf344f7ae242a6162b8840ef16426cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d108633_ca4e4b7c",
        "filename": "runtime/interpreter/mterp/riscv64/other.S",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-21T16:10:18Z",
      "side": 1,
      "message": "There are two vreg arrays.\nThe scecond has copy of the pointer if it is GC object, or 0 other if is primitive.",
      "parentUuid": "da7d655f_0bf29de1",
      "revId": "b3b073d22bf344f7ae242a6162b8840ef16426cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9ce599_28b0342d",
        "filename": "runtime/interpreter/mterp/riscv64/other.S",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-12-21T22:50:23Z",
      "side": 1,
      "message": "Ah, a consistency check! Not by looking up if an address value is a valid object.",
      "parentUuid": "7d108633_ca4e4b7c",
      "revId": "b3b073d22bf344f7ae242a6162b8840ef16426cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}