{
  "comments": [
    {
      "key": {
        "uuid": "407a2ad7_325bd029",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-05T11:10:54Z",
      "side": 1,
      "message": "Do we need to add extra checks for OSR to make sure the TypeConversion isn\u0027t reused across OSR entrypoint?",
      "revId": "fcc4db2ccd0c337d3f5f08923164294dac087a35",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9da77fcf_2ccaa5cc",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-12-05T11:14:29Z",
      "side": 1,
      "message": "Or does the LSA somehow prevent LSE across OSR entrypoints?",
      "parentUuid": "407a2ad7_325bd029",
      "revId": "fcc4db2ccd0c337d3f5f08923164294dac087a35",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56000d3a_46dc6359",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-05T17:11:05Z",
      "side": 1,
      "message": "Calling Dominates here makes me think this optimization isn\u0027t done at the right place.\n\nCould you add more comments about \"reuse type_conversion\"? Re-use where?",
      "range": {
        "startLine": 129,
        "startChar": 39,
        "endLine": 129,
        "endChar": 48
      },
      "revId": "fcc4db2ccd0c337d3f5f08923164294dac087a35",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf740a84_403cfbda",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-12-05T19:08:43Z",
      "side": 1,
      "message": "This is just best effort attempt. For code in the same block for example, the type conversion can be safely reused for another removed load. But not necessarily for code in other blocks and that\u0027s why we have the domination check. If type conversion cannot be reused, another type conversion will be created as needed. I can add more comments.",
      "parentUuid": "56000d3a_46dc6359",
      "range": {
        "startLine": 129,
        "startChar": 39,
        "endLine": 129,
        "endChar": 48
      },
      "revId": "fcc4db2ccd0c337d3f5f08923164294dac087a35",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2d8557f_cf2ce199",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 7
      },
      "lineNbr": 129,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-12-05T19:08:43Z",
      "side": 1,
      "message": "Good point. LSA/LSE don\u0027t deal with OSR. It does sound to me it\u0027s an issue. However it\u0027s a more fundamental issue on OSR. How does OSR generally deal with values that don\u0027t map to vregs before each OSR entrypoint? i.e. values that aren\u0027t tracked in DexRegisterMap. Debugging/deoptimization don\u0027t need to track all values in env, however osr is the other direction around and it needs those values which possibly aren\u0027t generated by interpreter yet.\n\nWe can disable TryToReuseTypeConversion() here for osr compile. However I\u0027m worried about the soundness of gvn/hoisting type of optimizations now for osr. What\u0027s the strategy behind it that guarantees correctness?",
      "parentUuid": "9da77fcf_2ccaa5cc",
      "revId": "fcc4db2ccd0c337d3f5f08923164294dac087a35",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}