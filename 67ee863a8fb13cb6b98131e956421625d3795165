{
  "comments": [
    {
      "key": {
        "uuid": "041cbd1d_763a30ba",
        "filename": "Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 367,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-07-02T07:44:48Z",
      "side": 1,
      "message": "Why this change? I haven\u0027t seen any changes in the art script that would require this executable. Maybe you meant to add it to build-art-host?",
      "range": {
        "startLine": 367,
        "startChar": 4,
        "endLine": 367,
        "endChar": 8
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_5f559b2a",
        "filename": "Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 367,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T16:50:48Z",
      "side": 1,
      "message": "I thought about delaying this but the goal is that the next CL will enabled patching pregenerated .oat files automatically in ANDROID_DATA, so it doesn\u0027t hurt to start building this.",
      "parentUuid": "041cbd1d_763a30ba",
      "range": {
        "startLine": 367,
        "startChar": 4,
        "endLine": 367,
        "endChar": 8
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d6ed80_adfc69da",
        "filename": "compiler/compilers.cc",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "can we just add this as a CompilerOptions that is in CompilerDriver so we don\u0027t have to pass it through all the layers explicitly? clearly we have it here at this point and even one layer below.",
      "range": {
        "startLine": 96,
        "startChar": 37,
        "endLine": 96,
        "endChar": 58
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_bea3018d",
        "filename": "compiler/compilers.cc",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "I did it like this because I think we should have the patch information regardless of how we compile it. ISTM that the option is only whether or not to write it out.",
      "parentUuid": "84d6ed80_adfc69da",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_a2bc84c9",
        "filename": "compiler/compilers.cc",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T19:54:15Z",
      "side": 1,
      "message": "my point is, a lot of the diff is just to pass around this bool flag, it really should just be in the options. then we can document what it means one place, instead of through all all the call paths",
      "parentUuid": "440235bc_bea3018d",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_2e3067da",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 3
      },
      "lineNbr": 832,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "if this is the same as include_patches, I\u0027d call it the same name consistently thoughout.",
      "range": {
        "startLine": 832,
        "startChar": 32,
        "endLine": 832,
        "endChar": 42
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_ff91f7cd",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 3
      },
      "lineNbr": 832,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4a77122_2e3067da",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_4e0213d8",
        "filename": "compiler/image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "i\u0027d probably add the comment explaining that it is unsupported for now. its obvious why this is here now, because i just saw the mclinker change, but it won\u0027t be obvious later",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_1f994bf1",
        "filename": "compiler/image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4a77122_4e0213d8",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f3dd1b_25118d25",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "i agree that we should have this comment, but is this the right place? somewhere where we are actually calculating the size of the patches makes more sense to me.",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 146,
        "endChar": 75
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_3eb891b1",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04f3dd1b_25118d25",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f3dd1b_85e981cf",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "we don\u0027t need the argument here right? it is in oat_file_?",
      "range": {
        "startLine": 147,
        "startChar": 25,
        "endLine": 147,
        "endChar": 39
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_65d8bcfb",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Yes we need it. This is the File* that the elf_file is in. We need it to fully map in the elf file and add patching information.",
      "parentUuid": "04f3dd1b_85e981cf",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_42cc886b",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T19:54:15Z",
      "side": 1,
      "message": "I see, this is my own confusing naming come back to bite me.",
      "parentUuid": "c4fc65ef_65d8bcfb",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d6ed80_2d2999f0",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 804,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "this seems like a better place for the comment from above.",
      "range": {
        "startLine": 802,
        "startChar": 0,
        "endLine": 804,
        "endChar": 65
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_becca148",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 804,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84d6ed80_2d2999f0",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_2e37c71c",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 851,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "while clever, I assumed this would be in SetPatchLocation. i see this way that the patch information is scoped to this function. but that could be done with an out argument. I thought you might be doing this because there were a lot of cases in SetPatchLocation, but there aren\u0027t, there is just one. plus you have kind of a hacky return value now where 0 implies relative vs absolute, which is just for the convenience of maybe_push.",
      "range": {
        "startLine": 851,
        "startChar": 4,
        "endLine": 851,
        "endChar": 14
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cafddd_46ef9221",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 851,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Rewrote using out parameters.",
      "parentUuid": "a4a77122_2e37c71c",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f3dd1b_a5d63df7",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 874,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "I don\u0027t think we should be reserving our own section type, I\u0027d just use a named section.",
      "range": {
        "startLine": 874,
        "startChar": 25,
        "endLine": 874,
        "endChar": 39
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_9ed1dde0",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 874,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Changed It to search for name.",
      "parentUuid": "04f3dd1b_a5d63df7",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d6ed80_4d204d02",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 887,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "space around *",
      "range": {
        "startLine": 887,
        "startChar": 29,
        "endLine": 887,
        "endChar": 30
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_fec61926",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 887,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84d6ed80_4d204d02",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f3dd1b_e5ede5e0",
        "filename": "compiler/image_writer.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "again in this case, it can be found via compiler options.",
      "range": {
        "startLine": 40,
        "startChar": 61,
        "endLine": 40,
        "endChar": 78
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_7fa68738",
        "filename": "compiler/image_writer.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Again. It seems like this is more an option controlling whether it gets written out and doesn\u0027t seem to belong in the compiler_options.",
      "parentUuid": "04f3dd1b_e5ede5e0",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d6ed80_0d9935f1",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "i wondered why you didn\u0027t do this in the other test where you set to true but then set back to false if portable.",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 122,
        "endChar": 78
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_3f29aff0",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "In the other test we just use the default compiler and it is not possible to determine the kind from a given compiler.",
      "parentUuid": "84d6ed80_0d9935f1",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f3dd1b_05729164",
        "filename": "patchoat/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "do you depend on the compiler parts? if not, you can leave these out if you just need the runtime.",
      "range": {
        "startLine": 33,
        "startChar": 78,
        "endLine": 33,
        "endChar": 106
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_1eb2edea",
        "filename": "patchoat/Android.mk",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04f3dd1b_05729164",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_e504ccaf",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "rather than bake another copy of these strings here, I\u0027d make this return InstructionSet, and then use GetInstructionSetString.",
      "range": {
        "startLine": 52,
        "startChar": 27,
        "endLine": 52,
        "endChar": 40
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_9efa7d54",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "i think we always call this error_msg. should we make it an argument and use it in place of the LOG(ERROR) and have the caller log? if not move to point of first use from here.",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 18
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_a523e443",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "art_location -\u003e image_location for consistency. also in the text part \"image file\"",
      "range": {
        "startLine": 80,
        "startChar": 9,
        "endLine": 80,
        "endChar": 13
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_feff3942",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "return false; after this",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 89
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_be1e61f4",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "WriteFully to deal with signal interrupts.",
      "range": {
        "startLine": 174,
        "startChar": 31,
        "endLine": 174,
        "endChar": 36
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_9e239d44",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 189,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "WriteFully",
      "range": {
        "startLine": 189,
        "startChar": 31,
        "endLine": 189,
        "endChar": 36
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_1f4b0b95",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "relocation",
      "range": {
        "startLine": 208,
        "startChar": 19,
        "endLine": 208,
        "endChar": 29
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_3e1371ed",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 231,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "I think I\u0027d just move this into InHeap and rename it \"CheckHeapReference\" so it can be reused with the below call. it can deal with the null case as well. it is a pretty common pattern for us to have CheckFoo helper functions.",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 94
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_5e0aa5ae",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "all the values of what?",
      "range": {
        "startLine": 286,
        "startChar": 2,
        "endLine": 286,
        "endChar": 38
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_a52da420",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 389,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "I think we have this knowledge elsewhere. ah yes, in ElfFixup::FixupDynamic. can you move this to a shared helper in elf_utils.h?\n\nthere are other cases you are missing because of this such as \n\n              case DT_MIPS_BASE_ADDRESS:\n              case DT_MIPS_CONFLICT:\n              case DT_MIPS_LIBLIST:\n              case DT_MIPS_RLD_MAP:",
      "range": {
        "startLine": 374,
        "startChar": 0,
        "endLine": 389,
        "endChar": 1
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_df41936f",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 446,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "just use \"ELF32_ST_TYPE(st_info)\"",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 446,
        "endChar": 1
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_85698838",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "we look all these sections up in CheckOatFile, can we just save them?",
      "range": {
        "startLine": 477,
        "startChar": 2,
        "endLine": 477,
        "endChar": 67
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_c5eb905b",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "again, we always call these image (here and below)",
      "range": {
        "startLine": 537,
        "startChar": 24,
        "endLine": 537,
        "endChar": 27
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_459ca0e1",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 686,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "we should consider moving to a non-fatal form of GetInstructionSetFromString. add a TODO?",
      "range": {
        "startLine": 671,
        "startChar": 1,
        "endLine": 686,
        "endChar": 7
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_85a6a835",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 688,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "I think it\u0027s clearer to do the parsing checks here, but the semantic checks later",
      "range": {
        "startLine": 688,
        "startChar": 0,
        "endLine": 688,
        "endChar": 27
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_226a34bc",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 3
      },
      "lineNbr": 877,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T18:52:21Z",
      "side": 1,
      "message": "supply",
      "range": {
        "startLine": 877,
        "startChar": 20,
        "endLine": 877,
        "endChar": 25
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84d6ed80_ed630122",
        "filename": "runtime/elf_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "I\u0027d rather avoid using these I think some ABIs might have effectively used some of these.",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 39
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_85d6a8f7",
        "filename": "runtime/elf_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "It shouldn\u0027t. Sections for specific processor ABI\u0027s should be between SHT_LOPROC and SHT_HIPROC. OS \u0026 associated tools sections (i.e. for BSD/GNU tools we use) are kept between SHT_LOOS and SHT_HIOS.\n\nBetween LOUSER and HIUSER is reserved for application use. This means that since niether linux nor our loader uses it we should be free to do so.\n\nAnyway if it becomes a problem it would be easy to change the value then.",
      "parentUuid": "84d6ed80_ed630122",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_c1d3786e",
        "filename": "runtime/elf_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T19:54:15Z",
      "side": 1,
      "message": "my point is that I don\u0027t think we need to use one, so I wouldn\u0027t.",
      "parentUuid": "c4fc65ef_85d6a8f7",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_f1480074",
        "filename": "runtime/image.h",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "don\u0027t we want to assume unsigned for simplicity?",
      "range": {
        "startLine": 159,
        "startChar": 2,
        "endLine": 159,
        "endChar": 23
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640d79e9_5f8d83db",
        "filename": "runtime/image.h",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "We can have negative patch deltas and I think that the header should not hide that fact.",
      "parentUuid": "a4a77122_f1480074",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440235bc_7e316924",
        "filename": "runtime/image.h",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T19:54:15Z",
      "side": 1,
      "message": "can we? I don\u0027t think so. the platform is going to have a minimal supported base address, and we are going to have a delta from that.",
      "parentUuid": "640d79e9_5f8d83db",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a77122_11402c47",
        "filename": "runtime/oat_file.h",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-07-02T01:20:35Z",
      "side": 1,
      "message": "replace \u0027this oatfile.\" with \u003c\u003c GetLocation() so we know which one.",
      "range": {
        "startLine": 65,
        "startChar": 40,
        "endLine": 65,
        "endChar": 55
      },
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4fc65ef_05f8d89a",
        "filename": "runtime/oat_file.h",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-07-02T18:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4a77122_11402c47",
      "revId": "67ee863a8fb13cb6b98131e956421625d3795165",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}