{
  "comments": [
    {
      "key": {
        "uuid": "d685318b_20ddea41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-28T16:01:35Z",
      "side": 1,
      "message": "Line too long.\n\nWe usually stick to just 60 characters in commit message but I\u0027m OK with 76 for reading git log on an 80-column terminal. This one is over 100.",
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b688bda5_bf1f57a4",
        "filename": "compiler/oat_writer.h",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-28T16:01:35Z",
      "side": 1,
      "message": "Please update the layout comment with the new data.",
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3694cdc0_fb000f50",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 423,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-28T16:01:35Z",
      "side": 1,
      "message": "Line too long.",
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f66795cb_39b1af1a",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 502,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-28T16:01:35Z",
      "side": 1,
      "message": "If the new lookup table is better, we should use it instead of the \"Index\" (rather than in addition to it).",
      "range": {
        "startLine": 497,
        "startChar": 0,
        "endLine": 502,
        "endChar": 3
      },
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96cad9dc_66b8ceac",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 502,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-28T16:16:49Z",
      "side": 1,
      "message": "There\u0027s a tradeoff. Space for the new lookup table is larger. So I think this is fine - for runtime cases, use the index, otherwise use the lookup table that\u0027s oat backed.",
      "parentUuid": "f66795cb_39b1af1a",
      "range": {
        "startLine": 497,
        "startChar": 0,
        "endLine": 502,
        "endChar": 3
      },
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f66795cb_59be63e9",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 6
      },
      "lineNbr": 511,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-28T16:01:35Z",
      "side": 1,
      "message": "This is really sub-optimal. The number of strings is usually an order of magnitude higher than the number of types, so the first binary search is doing about 3 more string comparisons than needed if we provide a \"FindTypeId(const char* descriptor)\", and it\u0027s also bringing non-type strings into cache.\n\nMaybe we should start by improving this slow path and then benchmark against that to assess whether the lookup table (and/or the \"Index\") is actually needed.",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 511,
        "endChar": 72
      },
      "revId": "0cb342abdb4de5aefb258849e85326f20be0b39d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}