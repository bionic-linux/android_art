{
  "comments": [
    {
      "key": {
        "uuid": "870b8a60_52e192ba",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 624,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-13T18:15:55Z",
      "side": 1,
      "message": "Thanks for doing this. Way better :)",
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07f79a9a_2b2739f5",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T11:53:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this be `i`?",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27fc9e7c_ecef0ba3",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-12T12:19:12Z",
      "side": 1,
      "message": "two dimensional array, I think. So first array get returns a reference, second returns an int.",
      "parentUuid": "07f79a9a_2b2739f5",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27fc9e7c_2c5f532a",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T14:34:57Z",
      "side": 1,
      "message": "Makes sense, thanks.  Please ignore my initial comment.",
      "parentUuid": "27fc9e7c_ecef0ba3",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27673e34_a81d0355",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-12T18:50:32Z",
      "side": 1,
      "message": "Yes, what Nicolas said. This is done on purpose to make sure only \"the right one\" is hoisted.",
      "parentUuid": "27fc9e7c_2c5f532a",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "870b8a60_af54d9d9",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T19:02:12Z",
      "side": 1,
      "message": "Nice!  This might be worth a comment IMO. :)",
      "parentUuid": "27673e34_a81d0355",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "274e5eac_4bc39163",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 639,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-13T18:06:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "870b8a60_af54d9d9",
      "range": {
        "startLine": 639,
        "startChar": 20,
        "endLine": 639,
        "endChar": 21
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47ed12c9_704e4e72",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 642,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-13T18:15:55Z",
      "side": 1,
      "message": "This is still nasty (I should forbid mixing -DAG and -NOT entirely) because it only tests the assertion in a part of the file.\n\nIIUC, there should be no NullCheck and no BoundsCheck whatsoever, right? Then let\u0027s move them to their own pass just like you do everywhere else:\n\n  CHECK-START:\n  CHECK-NOT: NullCheck\n  CHECK-NOT: BoundsCheck\n\nThe ArrayGet and ArrayLength should still be in the graph but should be in the outer loop, right? So why not test them the same way as the Deoptimize below?\n\n  ...\n  CHECK-DAG: Deoptimize loop:\u003c\u003cOuterLoop:B\\d+\u003e\u003e\n  CHECK-DAG: {{l\\d+}} ArrayGet loop:\u003c\u003cOuterLoop\u003e\u003e\n  CHECK-DAG: ArrayLength loop:\u003c\u003cOuterLoop\u003e\u003e\n  CHECK-EVAL: ...",
      "range": {
        "startLine": 642,
        "startChar": 6,
        "endLine": 642,
        "endChar": 15
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07623a24_a865ff1f",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 642,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-13T18:27:19Z",
      "side": 1,
      "message": "Yes, you may have noticed that I separated -DAG and -NOT completely in the other file for exactly that reason, it does not tell much. I thought it would be okay here since it appears typically before the array get, but you are right I might as well go the full way.\n\nWhat you suggest does not test that there is no ArrayLength in the inner loop at all (some strange optimization may move it out and keep it inside :-)\n\nAny pointers on how you would do that (since it seems you need *some* positive mixed with the negative?",
      "parentUuid": "47ed12c9_704e4e72",
      "range": {
        "startLine": 642,
        "startChar": 6,
        "endLine": 642,
        "endChar": 15
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c701023f_74f5a672",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 642,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-13T19:13:23Z",
      "side": 1,
      "message": "Correct, we\u0027d need to pass the name of the inner loop header between the passes to test that the instruction is not present there. We\u0027ve never needed something like this before, maybe I should think about adding a feature for doing a match without moving the cursor...\n\nThat said, it reminds me of the instruction simplifier where we don\u0027t actually remove the optimized-out instructions but assume that DCE will do so later on. Showing in Checker that the instruction was removed from the data flow is then sufficient enough evidence that it will not be present in the native code. You could do that by showing that the two inputs of the integer ArrayGet are now the two Phis and be done with it.\n\nIf you wanted to be absolutely strict about making sure there\u0027s no dangling ArrayLength, you could do a match on the number of users - that\u0027s the number before the instruction id. You would show that they had just one user in (before):\n\n  CHECK-DAG {{\\d}} 1 \u003c\u003cLen:i\\d+\u003e\u003e ArrayLength\n  CHECK-DAG                       BoundsCheck [\u003c\u003cLen\u003e\u003e,...]\n\nthat that user was removed in (after)\n\n  CHECK-NOT BoundsCheck\n\nand now there isn\u0027t an ArrayLength with no users\n\n  CHECK-NOT {{\\d+}} 0 {{i\\d+}} ArrayLength\n\nbut that just seems like a massive overkill...",
      "parentUuid": "07623a24_a865ff1f",
      "range": {
        "startLine": 642,
        "startChar": 6,
        "endLine": 642,
        "endChar": 15
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27fc9e7c_6c6f9b01",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 1059,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T11:53:23Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1059,
        "endChar": 48
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "870b8a60_6faaf141",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 1059,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T14:34:57Z",
      "side": 1,
      "message": "Ditto. :)",
      "parentUuid": "27fc9e7c_6c6f9b01",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1059,
        "endChar": 48
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07f79a9a_6b2141dc",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 1067,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T11:53:23Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 1065,
        "startChar": 0,
        "endLine": 1067,
        "endChar": 50
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7088e64_70d0104f",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 10
      },
      "lineNbr": 1067,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-12T14:34:57Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "07f79a9a_6b2141dc",
      "range": {
        "startLine": 1065,
        "startChar": 0,
        "endLine": 1067,
        "endChar": 50
      },
      "revId": "c58802b95ff4421e88fb8e0277112e5c00b5261b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}