{
  "comments": [
    {
      "key": {
        "uuid": "2e2e2591_23a31019",
        "filename": "runtime/entrypoints/quick/quick_jni_entrypoints.cc",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-09-29T23:46:51Z",
      "side": 1,
      "message": "Only run if env-\u003echeck_jni is true?",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 28
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e5fa128_0747fe18",
        "filename": "runtime/entrypoints/quick/quick_jni_entrypoints.cc",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-30T16:05:34Z",
      "side": 1,
      "message": "The implementation checks that (difference between this and the Impl). As it\u0027s in the .h file, I\u0027d expect that to be inlined here.",
      "parentUuid": "2e2e2591_23a31019",
      "range": {
        "startLine": 68,
        "startChar": 7,
        "endLine": 68,
        "endChar": 28
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55712e1a_c5e03aff",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T08:24:30Z",
      "side": 1,
      "message": "Why don\u0027t you use the height?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 128,
        "endChar": 3
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9555663b_b7444818",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-30T16:05:34Z",
      "side": 1,
      "message": "This one\u0027s faster, I only need to find the immediate caller and not traverse the complete stack (you need to pass over all transitions etc).",
      "parentUuid": "55712e1a_c5e03aff",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 128,
        "endChar": 3
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b57c2af2_e8c4337e",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T08:24:30Z",
      "side": 1,
      "message": "Well wouldn\u0027t that also just optimize the failing case?",
      "range": {
        "startLine": 202,
        "startChar": 63,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5398a03_e098c2fa",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-30T16:05:34Z",
      "side": 1,
      "message": "These are ordered. So the current frame entries are at the end, and you can detect when you go to the next frame. In the passing case, you\u0027ll immediately find something !\u003d current_frame and can stop.",
      "parentUuid": "b57c2af2_e8c4337e",
      "range": {
        "startLine": 202,
        "startChar": 63,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55712e1a_45fd2a29",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T16:14:46Z",
      "side": 1,
      "message": "How do you detect you go to the next frame?",
      "parentUuid": "b5398a03_e098c2fa",
      "range": {
        "startLine": 202,
        "startChar": 63,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d55b5e6b_bca38d7a",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-30T16:44:16Z",
      "side": 1,
      "message": "The first time you find pair.first !\u003d current_frame.\n\nIf things are locked according to the rules, the vector forms a stack wrt/ frames. You may freely lock and unlock in a frame, but you need to unlock all monitors in the current frame when unlocking. So you get something like:\n\n [\u003c0,mon1\u003e,\u003c0,mon2\u003e,\u003c#1,mon1\u003e,\u003c#1,mon3\u003e,\u003c#2,monX\u003e,\u003c#3,monY\u003e,...]\n\nIf you go backwards, you either have #X \u003d\u003d current_frame and have some locked but not unlocked monitors, or it\u0027s different (and should be the parent).",
      "parentUuid": "55712e1a_45fd2a29",
      "range": {
        "startLine": 202,
        "startChar": 63,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35703a18_2474b297",
        "filename": "runtime/jni_env_ext.cc",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T16:50:46Z",
      "side": 1,
      "message": "I see. At this point of the discussion, may be we would have saved us some time if you did actually start from the end. How hard is that to do?",
      "parentUuid": "d55b5e6b_bca38d7a",
      "range": {
        "startLine": 202,
        "startChar": 63,
        "endLine": 204,
        "endChar": 64
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55712e1a_a5e33e09",
        "filename": "runtime/jni_env_ext.h",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T08:24:30Z",
      "side": 1,
      "message": "Also explain why it\u0027s a vector and not a stack.",
      "range": {
        "startLine": 115,
        "startChar": 78,
        "endLine": 117,
        "endChar": 30
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75ab929e_be01f94a",
        "filename": "runtime/jni_internal_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 611,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-30T08:24:30Z",
      "side": 1,
      "message": "nit: one per line",
      "range": {
        "startLine": 610,
        "startChar": 20,
        "endLine": 611,
        "endChar": 37
      },
      "revId": "00db8f5e521e4b0fc7454c7e43d2c910ac30e441",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}