{
  "comments": [
    {
      "key": {
        "uuid": "7f1c24fb_c1ae3173",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-06-05T21:36:50Z",
      "side": 1,
      "message": "How about modularizing this too rather than the repeated code?  Likewise for all the similar code below",
      "range": {
        "startLine": 154,
        "startChar": 2,
        "endLine": 167,
        "endChar": 48
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf293c21_1d0a5740",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-06-05T21:36:50Z",
      "side": 1,
      "message": "Modularize this rather than repeated code below?",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 228,
        "endChar": 51
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_069f5a51",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "alphabetical please",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 21,
        "endChar": 22
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff749443_6eb40f0d",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df2c3030_069f5a51",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_86860a00",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "our style has been to put this in a private: section at the end. also add DISALLOW_ macros as appropriate to prevent accidental constructors.",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 52,
        "endChar": 28
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff749443_ae2bd771",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Moved the friend.\n\nAt the moment I do actually use the assign constructor in a few places to make lifetimes easier to think about. I can rewrite these if you want.",
      "parentUuid": "df2c3030_86860a00",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_20c34e72",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "not sure we use inline unless it critical, I\u0027d leave it off by default, it will probably be inlined anyway.",
      "range": {
        "startLine": 98,
        "startChar": 4,
        "endLine": 98,
        "endChar": 10
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff749443_4e3113dd",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df4350e0_20c34e72",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_c8173cd7",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "we try to use just // comments",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 110,
        "endChar": 5
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_85757dde",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf505ca5_c8173cd7",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_b284a484",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "what is this used for? the x86 info?\n\ncould the data be passed at construction time?\ncould we take ownership rather than copy the data? presumably the caller won\u0027t need it anymore?",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 118,
        "endChar": 24
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_4e225599",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Yeah this is for the x86 intro. We only actually copy a single buffer. The other 3 we just pass the function the ones in this class.",
      "parentUuid": "1f1b2808_b284a484",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_1241d06c",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "are their elf types for these uint8_t values? as I recall, they just get stored into a Elf..._Word, so probably this is fine as is.",
      "range": {
        "startLine": 156,
        "startChar": 27,
        "endLine": 156,
        "endChar": 34
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_ae3199df",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "No.",
      "parentUuid": "1f1b2808_1241d06c",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_126a30f7",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "style is to have whitespace around ? and :",
      "range": {
        "startLine": 162,
        "startChar": 44,
        "endLine": 162,
        "endChar": 65
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_e54fa99f",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f1b2808_126a30f7",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_a6e0e6ac",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "this could be big. shouldn\u0027t we pass back a pointer to the data that the caller should take ownership of?\n\nsimilar for the next two methods",
      "range": {
        "startLine": 169,
        "startChar": 4,
        "endLine": 169,
        "endChar": 24
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_bd4c75ac",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "The vector will store its payload on the heap and IIRC the compiler should be able to recognize that no aliasing occurs within this function and should only copy the relatively small (~20 bytes) vector data-structure on return, not the larger payload.\n\nStill I can change these if you think its worth it.",
      "parentUuid": "df2c3030_a6e0e6ac",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_2044ae2e",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "should we what it is used for during Write?",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 186,
        "endChar": 29
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff749443_ae42f71f",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df4350e0_2044ae2e",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_0043b226",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "class doc for purpose? this is probably true for most of the classes.\n\nthis almost seems like it is for unit testing.\n\nspeaking of which, you probably want to add some unit tests of your new API to elf_writer_test, or actually to a new elf_writer_quick_test.",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 28
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_08e7444c",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Removed Entierly.\n\nIt currently passes all of the tests for the old ElfWriterQuick. This API is entierly private to ElfWriterQuick. It seems like the old tests should be okay.",
      "parentUuid": "df4350e0_0043b226",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_00fe5288",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "can this be const?",
      "range": {
        "startLine": 215,
        "startChar": 15,
        "endLine": 215,
        "endChar": 36
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_6e895112",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df4350e0_00fe5288",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4350e0_60edd6d9",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "can we avoid copy? I assume caller won\u0027t want the data after giving it to us.",
      "range": {
        "startLine": 255,
        "startChar": 4,
        "endLine": 261,
        "endChar": 5
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_7d56dd38",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Maybe. I put the copy in because it means I don\u0027t need to deal with lifetime issues of the passed in sections.",
      "parentUuid": "df4350e0_60edd6d9",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_08a5248f",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 265,
        "startChar": 1,
        "endLine": 267,
        "endChar": 1
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_253cb1ff",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf505ca5_08a5248f",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_28aa6061",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 268,
        "startChar": 1,
        "endLine": 268,
        "endChar": 27
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_4e77b555",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf505ca5_28aa6061",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_937aaafe",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "perhaps a clearer name. debug_logging_?",
      "range": {
        "startLine": 270,
        "startChar": 4,
        "endLine": 270,
        "endChar": 22
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_1d424175",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f33447f_937aaafe",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_c8ae5c73",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "still unclear what this is for.\n\nis this for the oat related symbols? that is what I assumed symtab_builder_ was for.",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 281,
        "endChar": 46
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_8e5dbdcd",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Removed it entierly. It was something I thought I would need but don\u0027t.",
      "parentUuid": "bf505ca5_c8ae5c73",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f162cdd_8a560d36",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-06-06T21:17:17Z",
      "side": 1,
      "message": "const vector and pieces?",
      "range": {
        "startLine": 332,
        "startChar": 22,
        "endLine": 332,
        "endChar": 55
      },
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf505ca5_6ec3911b",
        "filename": "compiler/elf_writer_quick.h",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2014-06-06T23:32:19Z",
      "side": 1,
      "message": "Done.\n\nThis will write out most of the file (everything except oat file data. Also the comment is lying. It doesn\u0027t perform bounds checking, I\u0027ve removed this comment.",
      "parentUuid": "3f162cdd_8a560d36",
      "revId": "a131103c2c4e7926a2f42b1ffda42bcbe0c8b544",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}