{
  "comments": [
    {
      "key": {
        "uuid": "fce4da45_665a3ac3",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "There is no difference between `push_back()` and `emplace_back()` for `std::vector\u003c.\u003e` when the `emplace_back()` argument type is deduced as `std::vector\u003c.\u003e::value_type\u0026\u0026`.",
      "range": {
        "startLine": 214,
        "startChar": 23,
        "endLine": 214,
        "endChar": 35
      },
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed1643c3_0e8b2d76",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "I guess this should be outside the `s` loop, otherwise we\u0027re flipping also the already-flipped locations. Alternatively, we could adjust the location before the `emplace_back()`.\n\nBut I would rather stick with the old approach and keep the DexRegisterLocation unmodified and let the elf_debug_loc_writer.h deal with it as before, otherwise the meaning of the data becomes confusing. (I think the MethodDebugInfo should retain the frame size needed by the elf_debug_loc_writer.h .)",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 220,
        "endChar": 11
      },
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aec2181f_820d4f1b",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "Nit: I would move this after the `Finalize(allocator)`.",
      "range": {
        "startLine": 441,
        "startChar": 0,
        "endLine": 442,
        "endChar": 0
      },
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "145f3f7a_e1e1db0a",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "Do you really anticipate more than one method header per CodeInfo in the future? How would it be used?",
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a5032f_5b7e8711",
        "filename": "runtime/stack_map.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "Why?",
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fcd8c0d_b3cad9a7",
        "filename": "runtime/stack_map.h",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-25T09:11:33Z",
      "side": 1,
      "message": "Using a BitTable for something that is guaranteed to have exactly one row shall probably waste a lot of bits.",
      "range": {
        "startLine": 479,
        "startChar": 2,
        "endLine": 479,
        "endChar": 24
      },
      "revId": "8f05838e917fe3dce726b5b997027e6d7d1d43b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}