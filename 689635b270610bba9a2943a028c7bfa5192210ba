{
  "comments": [
    {
      "key": {
        "uuid": "6d83be1d_be3271f5",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1229,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-07-24T18:22:44Z",
      "side": 1,
      "message": "Why are these all blank definitions? Wouldn\u0027t it be easier if the original visitor had blank definitions?",
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dbd52cc_f976cfb0",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1229,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-07-24T18:34:55Z",
      "side": 1,
      "message": "You\u0027re right, I think tehse two are not required.",
      "parentUuid": "6d83be1d_be3271f5",
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d9ade79_c6a5a236",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1229,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-07-24T18:37:46Z",
      "side": 1,
      "message": "I am not sure that I agree. Blank definitions are sometimes bad, as you might forget to override them.",
      "parentUuid": "6d83be1d_be3271f5",
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed8dee45_8821eba4",
        "filename": "runtime/gc/accounting/mod_union_table.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-07-24T18:22:44Z",
      "side": 1,
      "message": "Why do these require extra if checks, doesn\u0027t the name imply its already not null?",
      "range": {
        "startLine": 115,
        "startChar": 25,
        "endLine": 115,
        "endChar": 40
      },
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0da7a2c0_f2a0a6ec",
        "filename": "runtime/gc/accounting/mod_union_table.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-07-24T18:34:55Z",
      "side": 1,
      "message": "No, the name implies that there is the check. If the name was VisitRootNonNull then it would be assuming its already not null.",
      "parentUuid": "ed8dee45_8821eba4",
      "range": {
        "startLine": 115,
        "startChar": 25,
        "endLine": 115,
        "endChar": 40
      },
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d83be1d_7ee9d972",
        "filename": "runtime/gc/accounting/mod_union_table.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-07-24T18:38:58Z",
      "side": 1,
      "message": "What\u0027s supposed to be the practical difference between VisitRootIfNonNull and VisitRoot then, if both of them would need checking?\n\nI would\u0027ve imagined that the visitor class does its own non-null filtering before invoking this method?\n\nWouldn\u0027t it be (less code) anyway to just do that (and rename to VisitRootNonNull as you said),similar to removing all the blank defs?",
      "parentUuid": "0da7a2c0_f2a0a6ec",
      "range": {
        "startLine": 115,
        "startChar": 25,
        "endLine": 115,
        "endChar": 40
      },
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d9d1a6f_147d1add",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 1420,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-07-24T17:54:59Z",
      "side": 1,
      "message": "What\u0027s this?",
      "range": {
        "startLine": 1420,
        "startChar": 4,
        "endLine": 1420,
        "endChar": 25
      },
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad977653_32822856",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 1420,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-07-24T18:34:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d9d1a6f_147d1add",
      "range": {
        "startLine": 1420,
        "startChar": 4,
        "endLine": 1420,
        "endChar": 25
      },
      "revId": "689635b270610bba9a2943a028c7bfa5192210ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}