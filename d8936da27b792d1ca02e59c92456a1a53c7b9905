{
  "comments": [
    {
      "key": {
        "uuid": "5a199b0d_5740ac73",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-15T12:18:00Z",
      "side": 1,
      "message": "by anyone/anything right? It\u0027s not just down to the jit code cache, as the jit code cache doesn\u0027t reference it anymore.\n\nSorry I\u0027m still puzzled. Aren\u0027t you using old_method for the new redefinition?",
      "range": {
        "startLine": 631,
        "startChar": 3,
        "endLine": 631,
        "endChar": 20
      },
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6aeb2c_d2ad4383",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2016-12-15T19:20:17Z",
      "side": 1,
      "message": "It\u0027s like the \"mirror::\u003cwhatever\u003e*\"s are after suspend. They shouldn\u0027t be used since they might point to anything. After this function the \u0027old_method\u0027 ArtMethod is not valid. If any runtime/compiled code outside of the redefinition stuff gets a hold of it then weird things could happen. This comment is saying that we might want to put in some debug checking that these invalid ArtMethods aren\u0027t used that way. It\u0027s like why we added the ObjPtr type.",
      "parentUuid": "5a199b0d_5740ac73",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ad35b96_e74e82b2",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-16T10:43:31Z",
      "side": 1,
      "message": "I\u0027m sorry if I keep getting back and forth on this one. It might be something trivial I\u0027m not getting.\n\nSo here\u0027s what I think I understand\n\na) old_method is getting redefined, and new_method is the newly allocated obsolete ArtMethod. The JIT needs to update its data structure so that things now reference new_method instead of old_method.\n\nb) old_method will now be the actual redefinition with its CodeItem being the new CodeItem in the redefined dex file.\n\nSo far so good?\n\nGiven that a) and b) are done sort of atomically (by having all threads suspended), the part I don\u0027t understand is why are you saying old_method cannot be used anymore.",
      "parentUuid": "da6aeb2c_d2ad4383",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51fff3_1ff20f27",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2016-12-16T17:49:50Z",
      "side": 1,
      "message": "Okay so the thing is this function only does (a). Once (b) is finished everything is fine but that doesn\u0027t happen until we call \u0027UpdateClass\u0027 later in the redefinition procedure. We need to be sure to cleanup if we return between the end of this function and calling updateClass successfully. \n\nIn many places it is useful for debugging to mark even temporarily invalid objects in order to ease debugging in case they ever escape. That is what this TODO is referring to.",
      "parentUuid": "5ad35b96_e74e82b2",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "773d9abc_b08518f5",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-19T11:21:31Z",
      "side": 1,
      "message": "I see. So here\u0027s my suggestion: add a boolean flag to ScopedSuspendJit, which, once you\u0027re sure you\u0027re done, you set to true. Then when the ScopedSuspendJit calls its destructor, DCHECK that the flag is true.",
      "parentUuid": "7a51fff3_1ff20f27",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51fff3_eb5023f0",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2016-12-19T18:51:08Z",
      "side": 1,
      "message": "We cannot see the ScopedSuspendJit here.\n\nThis is basically just a nice-to-have thing we should make before we consider this feature fully done. I don\u0027t think it is anything even resembling a high priority piece of this feature.",
      "parentUuid": "773d9abc_b08518f5",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_55136c42",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-19T21:34:30Z",
      "side": 1,
      "message": "It doesn\u0027t have to be here. ti_redefine is where all the logic happens. It\u0027s the one that can drive this \"sanity\" check.",
      "parentUuid": "7a51fff3_eb5023f0",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51fff3_773df0ec",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 20
      },
      "lineNbr": 631,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2016-12-19T21:56:14Z",
      "side": 1,
      "message": "Maybe. That seems like the wrong place to do it but this is for later.",
      "parentUuid": "17237e9f_55136c42",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daa58b1c_6b026174",
        "filename": "runtime/openjdkjvmti/ti_redefine.cc",
        "patchSetId": 20
      },
      "lineNbr": 688,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-16T10:43:31Z",
      "side": 1,
      "message": "This made me think about another problem: the jit code cache may already have a profiling info and compiled code (and osr) for this method. And I couldn\u0027t find a place where you discard those entries.",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 688,
        "endChar": 5
      },
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51fff3_1f404f73",
        "filename": "runtime/openjdkjvmti/ti_redefine.cc",
        "patchSetId": 20
      },
      "lineNbr": 688,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2016-12-16T17:49:50Z",
      "side": 1,
      "message": "I\u0027ll look at this in the revert.",
      "parentUuid": "daa58b1c_6b026174",
      "revId": "d8936da27b792d1ca02e59c92456a1a53c7b9905",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}