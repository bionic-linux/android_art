{
  "comments": [
    {
      "key": {
        "uuid": "451c6411_1ebfcc5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "no",
      "range": {
        "startLine": 17,
        "startChar": 38,
        "endLine": 17,
        "endChar": 41
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f6f7f48_32a6b435",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "board",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 18
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b793a29a_7b570989",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2774,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Let\u0027s keep the original temp register, base_reg:\n\n  , base_reg)",
      "range": {
        "startLine": 2774,
        "startChar": 75,
        "endLine": 2774,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24e9a55b_566bef74",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2791,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2791,
        "startChar": 75,
        "endLine": 2791,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "131c2785_6892f4b7",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2810,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2810,
        "startChar": 77,
        "endLine": 2810,
        "endChar": 78
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b55cc7e_bf10d394",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2840,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2840,
        "startChar": 79,
        "endLine": 2840,
        "endChar": 80
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bcff796_bf9bf338",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2898,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2898,
        "startChar": 75,
        "endLine": 2898,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a454ff93_23c628ad",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2923,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2923,
        "startChar": 75,
        "endLine": 2923,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d225e3e_837ed5d1",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2940,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2940,
        "startChar": 75,
        "endLine": 2940,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8040f9c6_8d1a562e",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 2957,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2957,
        "startChar": 75,
        "endLine": 2957,
        "endChar": 76
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64d132a4_3e9df52b",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 6338,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Note that `scale_factor` may be equal to TIMES_1 (0), which lsa doesn\u0027t support. Extend ShiftAndAdd() to support it.",
      "range": {
        "startLine": 6338,
        "startChar": 42,
        "endLine": 6338,
        "endChar": 54
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6853e125_acc7a6bd",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2164,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "We both missed this one (should\u0027ve been 64-bit add):\n\n    __ Dlsa(TMP, index.AsRegister\u003cGpuRegister\u003e(), obj, TIMES_4);",
      "range": {
        "startLine": 2163,
        "startChar": 0,
        "endLine": 2164,
        "endChar": 33
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2bcafca_605fed2c",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2362,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Remove. AsRegister\u003cGpuRegister\u003e() below will catch this.",
      "range": {
        "startLine": 2362,
        "startChar": 0,
        "endLine": 2362,
        "endChar": 46
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "228b2569_3e9e6065",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 2
      },
      "lineNbr": 4436,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "We may get a `scale_factor` of TIMES_1 (0) here, which [d]lsa does not support.\n\n  if (scale_factor \u003d\u003d TIMES_1) {\n    __ Daddu(TMP, index_reg, obj);\n  } else {\n    __ Dlsa(TMP, index_reg, obj, scale_factor);\n  }",
      "range": {
        "startLine": 4436,
        "startChar": 0,
        "endLine": 4436,
        "endChar": 49
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "891ed6c6_235a14d4",
        "filename": "compiler/optimizing/code_generator_mips64.cc",
        "patchSetId": 2
      },
      "lineNbr": 6192,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "__ Dlsa(TMP, TMP, AT, 2);",
      "range": {
        "startLine": 6191,
        "startChar": 0,
        "endLine": 6192,
        "endChar": 25
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bbc8b64_09f04888",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 647,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Unnecessary. Remove.",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 647,
        "endChar": 69
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08c6aed4_bdc6b8c3",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 655,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "It may be used for purposes other than array indexing. Remove.",
      "range": {
        "startLine": 653,
        "startChar": 0,
        "endLine": 655,
        "endChar": 54
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f84dcef_be458658",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 658,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "The only case when we may have a real problem is when writing to `tmp` also writes to `src_base` before `src_base` is read from. And there\u0027s CHECK_NE(src_base, tmp) for that already. Remove.",
      "range": {
        "startLine": 658,
        "startChar": 0,
        "endLine": 658,
        "endChar": 111
      },
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dbd6327_066b95af",
        "filename": "compiler/utils/mips/assembler_mips.cc",
        "patchSetId": 2
      },
      "lineNbr": 659,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2017-04-11T00:15:32Z",
      "side": 1,
      "message": "Let\u0027s extend this method to support `shamt` \u003d 0 since there are several calls into GenerateReferenceLoadWithBakerReadBarrier() with `index` being a register and `scale_factor` equal to `TIMES_1` (0), which are then passed down into this method.\n\nAdjust the remaining CHECK(...shamt...) above and add a few lines here:\n\n  if (shamt \u003d\u003d 0) {\n    __ Addu(dst, src_idx, src_base);\n  } else if (IsR6()) {",
      "revId": "ee7ca7531fd782a7604951e5105dc6e890b0218d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}