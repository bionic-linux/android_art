{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68e06905_b673e1de",
        "filename": "libdexfile/dex/art_dex_file_loader_test.cc",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "ASSERT",
      "range": {
        "startLine": 102,
        "startChar": 2,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "507a4444_20d5c806",
        "filename": "libdexfile/dex/dex_file_loader.cc",
        "patchSetId": 13
      },
      "lineNbr": 182,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "I\u0027m not very fond of the post-increment operator. When the return value is unused, it\u0027s only giving the compiler extra dead code to eliminate, compared to the pre-increment expression. (And when the return value is used, I often prefer splitting the increment out to its own line.)",
      "range": {
        "startLine": 182,
        "startChar": 24,
        "endLine": 182,
        "endChar": 27
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d4018f_47b679a4",
        "filename": "libdexfile/dex/dex_file_loader.cc",
        "patchSetId": 13
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Same pattern to avoid arithmetic overflow; maybe also check that file size is at least the same as header size.",
      "range": {
        "startLine": 208,
        "startChar": 39,
        "endLine": 208,
        "endChar": 69
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a4aafbd_81ee4f4f",
        "filename": "libdexfile/dex/dex_file_loader.cc",
        "patchSetId": 13
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "This check should be before reading the \"magic\". And it should be `dchecked_intergal_cast\u003csize_t\u003e(end - ptr) \u003c sizeof(*header)` to avoid arithmetic overflow.",
      "range": {
        "startLine": 208,
        "startChar": 8,
        "endLine": 208,
        "endChar": 35
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a740402a_7540578e",
        "filename": "libdexfile/dex/dex_file_loader.h",
        "patchSetId": 13
      },
      "lineNbr": 76,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "constructor",
      "range": {
        "startLine": 76,
        "startChar": 56,
        "endLine": 76,
        "endChar": 57
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1680f6f4_9dd7c310",
        "filename": "libdexfile/dex/dex_file_loader.h",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Sets `*checksum` to `nullopt`",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 56
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a6b99d6_55bbf37f",
        "filename": "libdexfile/dex/dex_file_loader.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Document that this must start as `nullopt`.",
      "range": {
        "startLine": 94,
        "startChar": 67,
        "endLine": 94,
        "endChar": 84
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3be49707_1f57c54d",
        "filename": "libdexfile/dex/dex_file_loader.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "inout",
      "range": {
        "startLine": 94,
        "startChar": 36,
        "endLine": 94,
        "endChar": 39
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feba32c7_f15277ac",
        "filename": "libdexfile/dex/dex_file_loader.h",
        "patchSetId": 13
      },
      "lineNbr": 98,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "inout",
      "range": {
        "startLine": 98,
        "startChar": 36,
        "endLine": 98,
        "endChar": 39
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb12abb1_e725b5f0",
        "filename": "odrefresh/odrefresh.cc",
        "patchSetId": 13
      },
      "lineNbr": 327,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Remove the `ostringstream` and use the ternary operator to initialize the `checksum_str`.",
      "range": {
        "startLine": 327,
        "startChar": 23,
        "endLine": 327,
        "endChar": 26
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2a46d9_b9d13752",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 501,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Split to two lines (and use a local `bool success`) to avoid call with side-effects inside `CHECK()`.",
      "range": {
        "startLine": 501,
        "startChar": 12,
        "endLine": 501,
        "endChar": 80
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f68856f8_9c990dad",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 700,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 700,
        "startChar": 4,
        "endLine": 700,
        "endChar": 73
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247fb97c_1a693b9e",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 1169,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1169,
        "startChar": 4,
        "endLine": 1169,
        "endChar": 67
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d3a58e5_88ca3691",
        "filename": "runtime/class_loader_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 1501,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1501,
        "startChar": 6,
        "endLine": 1501,
        "endChar": 68
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76794da6_0fe3a627",
        "filename": "runtime/class_loader_context_test.cc",
        "patchSetId": 13
      },
      "lineNbr": 197,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "This is `primary_checksums.back()`. And you should `CHECK(!primary_checksums.empty())` first, effectively ensuring that the first dex file is primary.",
      "range": {
        "startLine": 197,
        "startChar": 57,
        "endLine": 197,
        "endChar": 85
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59dacbaa_aaa8a4df",
        "filename": "runtime/class_loader_context_test.cc",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "You did not check that `expected_location.length() \u003e\u003d opened_location.length()`.\n\nIt\u0027s much easier to check this with `EndsWith()` from `string_view_cpp20.h` until we actually have `std::string::ends_with()` from C++20.",
      "range": {
        "startLine": 216,
        "startChar": 10,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0627958_3e788c4e",
        "filename": "runtime/class_loader_context_test.cc",
        "patchSetId": 13
      },
      "lineNbr": 246,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 246,
        "endChar": 64
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "996eef6b_888ef5ad",
        "filename": "runtime/class_loader_context_test.cc",
        "patchSetId": 13
      },
      "lineNbr": 1241,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "You should also `ASSERT_TRUE(expected_checksum.has_value())` before this.",
      "range": {
        "startLine": 1241,
        "startChar": 68,
        "endLine": 1241,
        "endChar": 86
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87bb348c_20051653",
        "filename": "runtime/dex2oat_environment_test.h",
        "patchSetId": 13
      },
      "lineNbr": 112,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "What does this mean?",
      "range": {
        "startLine": 112,
        "startChar": 12,
        "endLine": 112,
        "endChar": 53
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5b903ee_3c63e693",
        "filename": "runtime/gc/space/image_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 3466,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Avoid expressions with side-effects in `CHECK()`.\n\nI\u0027m also wondering if we should simply `return false` from this function instead of aborting. (Same for line 3489 below.)",
      "range": {
        "startLine": 3464,
        "startChar": 4,
        "endLine": 3466,
        "endChar": 61
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e50916a_570d9e44",
        "filename": "runtime/gc/space/image_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 3551,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Avoid expressions with side-effects in `CHECK()`.",
      "range": {
        "startLine": 3551,
        "startChar": 4,
        "endLine": 3551,
        "endChar": 67
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2ce0a7_16b3af2b",
        "filename": "runtime/oat_file_assistant.cc",
        "patchSetId": 13
      },
      "lineNbr": 494,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Avoid expressions with side-effects in `CHECK()`.",
      "range": {
        "startLine": 492,
        "startChar": 4,
        "endLine": 494,
        "endChar": 61
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c26c78_724b3a56",
        "filename": "runtime/oat_file_assistant.cc",
        "patchSetId": 13
      },
      "lineNbr": 733,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "You rely here on these fields being initialized to `nullopt`. You should at least `DCHECK()` this assumption.",
      "range": {
        "startLine": 731,
        "startChar": 6,
        "endLine": 733,
        "endChar": 52
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c386db4a_319e8eeb",
        "filename": "runtime/oat_file_assistant_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 84,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Avoid expressions with side-effects inside `CHECK()`.",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 84,
        "endChar": 67
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad42b8a2_8f69d8c5",
        "filename": "runtime/oat_file_assistant_context.cc",
        "patchSetId": 13
      },
      "lineNbr": 168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-06-29T12:49:49Z",
      "side": 1,
      "message": "Style: Break before `?`/`:`, not after. (Though there are some places where we have line breaks after.)",
      "range": {
        "startLine": 168,
        "startChar": 78,
        "endLine": 168,
        "endChar": 80
      },
      "revId": "0238b435cc1f5997187afbc26a4a9d06f7a7fd59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}