{
  "comments": [
    {
      "key": {
        "uuid": "26d84e6c_acc776a0",
        "filename": "test/622-checker-bce-regressions/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2016-11-01T21:38:00Z",
      "side": 1,
      "message": "BCE?\nWhy didn\u0027t this case fail before? I thought it\u0027s tested.",
      "range": {
        "startLine": 38,
        "startChar": 27,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "1d62ef9aab5a6b1fca15a582c4ac42bb6e73e0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26d84e6c_ec59fe16",
        "filename": "test/622-checker-bce-regressions/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-11-01T21:41:58Z",
      "side": 1,
      "message": "no, I really mean DCE. Dead code elimination removes the array references, so we end up with two consecutive boundschecks entering BCE.\n\nWe test something similar at BB level, and I guard against it in the dynamic/constant cases, but this was surprisingly the first time we hit this at the visit level\n\nit is not common to hit this, even this test needs jack, not dx to reproduce\n\nbut it is gone now",
      "parentUuid": "26d84e6c_acc776a0",
      "range": {
        "startLine": 38,
        "startChar": 27,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "1d62ef9aab5a6b1fca15a582c4ac42bb6e73e0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6dd1ea2_c94c3140",
        "filename": "test/622-checker-bce-regressions/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2016-11-01T23:53:19Z",
      "side": 1,
      "message": "It seems to me a deeper cause of bug like this is the way we iterate instructions. When we modify instructions, the iterator (like HInstructionIterator) isn\u0027t aware of the change of elements.\n\nstd::vector::erase() for example, takes an iterator as arg and returns another iterator, thus the iterator is involved.\n\nBlock iterator has the same issue since blocks can be dynamically removed/inserted during iteration.\n\nA more thorough fix could be each VisitInstruction() actually isn\u0027t HGraphVisitor::VisitInstruction() but really HInstructionIterator::VisitInstruction() to get the iterator involved. But it seems too complicated due to the existing way we code. I\u0027m wondering if there is an easier way to notify the iterator to update its internal next_ correctly when an instruction is removed.",
      "parentUuid": "26d84e6c_ec59fe16",
      "range": {
        "startLine": 38,
        "startChar": 27,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "1d62ef9aab5a6b1fca15a582c4ac42bb6e73e0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e641d62c_6b244125",
        "filename": "test/622-checker-bce-regressions/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-02T10:10:00Z",
      "side": 1,
      "message": "\"It seems to me a deeper cause of bug like this is the way we iterate instructions.\"\n\nI agree with this. The HGraphVisitor protects from the current instruction being deleted but not the next one. Maybe we should have a different iterator for BCE that knows that even the next instruction might be deleted?",
      "parentUuid": "a6dd1ea2_c94c3140",
      "range": {
        "startLine": 38,
        "startChar": 27,
        "endLine": 38,
        "endChar": 30
      },
      "revId": "1d62ef9aab5a6b1fca15a582c4ac42bb6e73e0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e641d62c_8befad98",
        "filename": "test/622-checker-bce-regressions/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-02T10:10:00Z",
      "side": 1,
      "message": "missing spaces.",
      "range": {
        "startLine": 40,
        "startChar": 20,
        "endLine": 40,
        "endChar": 21
      },
      "revId": "1d62ef9aab5a6b1fca15a582c4ac42bb6e73e0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}