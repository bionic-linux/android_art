{
  "comments": [
    {
      "key": {
        "uuid": "8ba36cb2_703d9059",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T11:12:28Z",
      "side": 1,
      "message": "How does that relate to HasEmptyFrame?",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a802f_ed3c45bc",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T11:25:07Z",
      "side": 1,
      "message": "I updated HasEmptyFrame in PS2, but now I\u0027m not sure the fix is quite right, as enlarging the \"empty frame size\" may have changed the behavior of HasEmptyFrame.  Do we actually rely on the fact that the a stack frame is non 16-byte aligned (or zero-sized) to declare it an empty frame?",
      "parentUuid": "8ba36cb2_703d9059",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7c4cf2_28372bdd",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T11:28:33Z",
      "side": 1,
      "message": "I think making it a frame of 16 does not work. What is Quick doing?",
      "parentUuid": "2b8a802f_ed3c45bc",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a802f_0dafd17c",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T11:51:35Z",
      "side": 1,
      "message": "In art::Mir2Lir::ComputeFrameSize(), the frame size is always rounded up to kStackAlignment (e.g. 16 bytes).  I did not find a special case for leaf methods regarding frame size in Quick.",
      "parentUuid": "8b7c4cf2_28372bdd",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a802f_adbf9da7",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-17T11:59:34Z",
      "side": 1,
      "message": "But what does it generate for methods it does not change the stack? frame size of 0 or 8? I guess frame size of 0...",
      "parentUuid": "2b8a802f_0dafd17c",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a802f_0d6431ad",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T12:43:16Z",
      "side": 1,
      "message": "Yes, I guess so.  Here\u0027s a filtered output of oatdump on core.oat showing frame sizes:\n\n  $ oatdumpd --oat-file\u003dout/host/linux-x86/framework/x86_64/core.oat | sed -n \u0027s/      frame_size_in_bytes: //p\u0027 | sort -n | uniq\n  0\n  32\n  48\n  64\n  80\n  96\n  112\n  128\n  144\n  160\n  176\n  192\n  208\n  224\n  240\n  256\n  288\n  304\n  320\n  336",
      "parentUuid": "2b8a802f_adbf9da7",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 143,
        "endChar": 43
      },
      "revId": "a8ed09a333f24d925f45b46a961d71167ae6e9fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}