{
  "comments": [
    {
      "key": {
        "uuid": "819c1a95_70aafb02",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 1615,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "You don\u0027t have this bit in the vixl backend. That means you\u0027re willing to emit multi-instruction SBCS with the vixl backend but not with the old one (missing SbcsConstant()?). I\u0027d prefer we keep in sync.",
      "range": {
        "startLine": 1598,
        "startChar": 0,
        "endLine": 1615,
        "endChar": 9
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f67e74f_3ca05638",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 1625,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "This comment no longer applies here, it should be moved to the IsConstant() branch. We could add a comment about blocking FP registers here instead.",
      "range": {
        "startLine": 1624,
        "startChar": 0,
        "endLine": 1625,
        "endChar": 66
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20b16a65_2c56c601",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 1660,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "IsControlFlow?",
      "range": {
        "startLine": 1660,
        "startChar": 23,
        "endLine": 1660,
        "endChar": 29
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c9d9d4_f86f93f8",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 2477,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "Actually, we really want just [0, 255] as constants because we want to use IT+MOV.",
      "range": {
        "startLine": 2477,
        "startChar": 26,
        "endLine": 2477,
        "endChar": 85
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0852e73_04f15540",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 2488,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "I\u0027m not convinced that this is a good thing but if you prefer it this way, I\u0027m willing to submit it.",
      "range": {
        "startLine": 2487,
        "startChar": 0,
        "endLine": 2488,
        "endChar": 80
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7695be8d_df08a2f9",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 2593,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "Maybe \"if (select_end.IsLinked()) { ... }\". (Because of the GetFinalLabel() optimization, select_end may be unused.)",
      "range": {
        "startLine": 2593,
        "startChar": 2,
        "endLine": 2593,
        "endChar": 23
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fae9541a_db56d284",
        "filename": "test/570-checker-select/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 674,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "Line too long, break before \"2L\".",
      "range": {
        "startLine": 674,
        "startChar": 54,
        "endLine": 674,
        "endChar": 56
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63e50a55_704c9109",
        "filename": "test/570-checker-select/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 676,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-01T15:04:54Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 676,
        "startChar": 54,
        "endLine": 676,
        "endChar": 56
      },
      "revId": "c1807d10967a3218ce6888891176052593634520",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}