{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e632d04d_4ced6057",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-03-27T18:22:03Z",
      "side": 1,
      "message": "A couple of questions around this. Apologies for my ignorance in cgroup matters.\n\n1. If the \"io\" check had failed I assume it means v1 is used. Is it WAI that SetTaskProfiles is successful for non-root?\n\n2. When I test on my devices (Cheetah and Cuttlefish), `adb shell cat /sys/fs/cgroup/cgroup.controllers` returns nothing. Shouldn\u0027t I get \"io\"?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "431370e4_62dd8c4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-27T18:47:13Z",
      "side": 1,
      "message": "(1) It is not clear to me whether these tests run as root or non-root. On Android processes in the system group should be able to change cgroup settings because libprocessgroup sets the owner and group ID to system:system in the v2 hierarchy. An example: \n\n$ adb -s 0.0.0.0:6520 shell ls -l /sys/fs/cgroup/uid_2000\ntotal 0\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.controllers\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.events\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.freeze\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.kill\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.max.depth\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.max.descendants\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.procs\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.stat\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.subtree_control\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.threads\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cgroup.type\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 cpu.stat\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 io.bfq.weight\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 io.stat\n-rwxrwxr-x 1 system system 0 2023-03-27 11:37 io.weight\ndrwxrwxr-x 2 system system 0 2023-03-27 11:37 pid_253\ndrwxrwxr-x 2 system system 0 2023-03-27 11:37 pid_2947\n\n(2) This is what I see in Cuttlefish (AOSP master branch):\n\n$ adb -s 0.0.0.0:6520 shell cat /sys/fs/cgroup/cgroup.controllers\nio",
      "parentUuid": "e632d04d_4ced6057",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e5c0b7b_29608002",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-03-27T19:27:56Z",
      "side": 1,
      "message": "`adb shell cat /sys/fs/cgroup/cgroup.controllers` returns nothing for me either. I\u0027m on Cuttlefish on udc-dev.\n\nDo I understand it correctly that this \"io\" check is only needed if we use an I/O profile? Martin, can we use a different profile instead to avoid this dependency? Using `ProcessCapacityHigh` might be a choice.",
      "parentUuid": "431370e4_62dd8c4d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "451e9d00_a34f6fde",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-27T20:31:07Z",
      "side": 1,
      "message": "The CL that migrates the io controller from the v1 to the v2 cgroup hierarchy has been tagged with \"DO NOT MERGE\" (see also https://android-review.git.corp.google.com/c/platform/system/core/+/2378990). That is why that CL is not present on the udc-dev branch.",
      "parentUuid": "0e5c0b7b_29608002",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46166e04_beb439b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-03-27T22:34:59Z",
      "side": 1,
      "message": "\u003e (1) It is not clear to me whether these tests run as root or non-root.\n\nOrdinarily they run as non-root, but we may try to run them as root as well since it\u0027s only then that the call is properly exercised (or at least that\u0027s what I thought). That\u0027s the reason for lines 158-164 (in PS2).\n\n\u003e On Android processes in the system group should be able to change cgroup settings\n\nSo a more correct test would be either root or the system group in the test on line 160 then? However I doubt it matter in practice - AFAIK tests are either run as root or a completely non-privileged user, but you mean they actually run as the system group in the latter case, and that\u0027s a difference between v2 and v1?\n\n\u003e Do I understand it correctly that this \"io\" check is only needed if we use an I/O profile? Martin, can we use a different profile instead to avoid this dependency? Using ProcessCapacityHigh might be a choice.\n\nThe two profiles are arbitrary. The only thing that matters is that we can count on them existing, and I\u0027d prefer to test two just because the API allows more than one. Bart, may this be worth testing?\n\n\u003e The CL that migrates the io controller from the v1 to the v2 cgroup hierarchy has been tagged with \"DO NOT MERGE\"\n\nIIUC this patch in PS2 only works if https://r.android.com/2378990 is present, so this CL would have to be merged with \"DO NOT MERGE\" as well. If a different profile, as suggested by Jiakai, would avoid that so that we can use the same test for both v1 and v2 then that\u0027d be preferable.",
      "parentUuid": "451e9d00_a34f6fde",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 57
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71dc66b3_a42552e3",
        "filename": "libartpalette/apex/palette_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-03-27T18:22:03Z",
      "side": 1,
      "message": "Same check needs to go here too, so it could use a function of its own.",
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3bbca71_ea2b957b",
        "filename": "libartpalette/apex/palette_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-27T18:47:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71dc66b3_a42552e3",
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c918b055_eda7181d",
        "filename": "libartpalette/apex/palette_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-03-27T18:22:03Z",
      "side": 1,
      "message": "Nit: Can this be a `read` call instead? It\u0027s easier to find the docs for.",
      "range": {
        "startLine": 159,
        "startChar": 12,
        "endLine": 159,
        "endChar": 14
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2476aa10_8631a4c9",
        "filename": "libartpalette/apex/palette_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-27T18:47:13Z",
      "side": 1,
      "message": "Not without making the code a lot more complicated. std::basic_istream\u003cCharT,Traits\u003e::read() reads a fixed number of bytes. operator\u003e\u003e reads a whitespace-separated word. In this context the latter functionality is required.",
      "parentUuid": "c918b055_eda7181d",
      "range": {
        "startLine": 159,
        "startChar": 12,
        "endLine": 159,
        "endChar": 14
      },
      "revId": "cb31b4d80d63c8858bc1fb74a521b9fc66543384",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}