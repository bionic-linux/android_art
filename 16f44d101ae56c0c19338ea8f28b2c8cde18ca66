{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9dd3d831_d0bef122",
        "filename": "runtime/arch/riscv64/context_riscv64.cc",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-02-10T07:43:02Z",
      "side": 1,
      "message": "This is unnecessary but present in other arch context code as well.",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 24
      },
      "revId": "16f44d101ae56c0c19338ea8f28b2c8cde18ca66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc524658_15d99724",
        "filename": "runtime/arch/riscv64/context_riscv64.cc",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-02-10T07:43:02Z",
      "side": 1,
      "message": "We should add\n\n    DCHECK_NE(frame_info.CoreSpillMask() \u0026 ~(1u \u003c\u003c RA), 0u);\n\n(Though this is essentially checked by the `DCHECK_EQ()` in line 59, that\u0027s quite far from the code to fill RA.)",
      "revId": "16f44d101ae56c0c19338ea8f28b2c8cde18ca66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a1e3627_8019f96d",
        "filename": "runtime/arch/riscv64/context_riscv64.cc",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-02-10T07:43:02Z",
      "side": 1,
      "message": "Just `1u`, please. The `frame_info.CoreSpillMask()` returns `uint32_t`.",
      "range": {
        "startLine": 55,
        "startChar": 72,
        "endLine": 55,
        "endChar": 75
      },
      "revId": "16f44d101ae56c0c19338ea8f28b2c8cde18ca66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "951e6d25_ded2383c",
        "filename": "runtime/arch/riscv64/context_riscv64.cc",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-02-10T07:43:02Z",
      "side": 1,
      "message": "Note: This is the exception handling code that requires saving TR for `kSaveAllCalleeSaves` methods. (We could simply fill it in instead of doing this check.)",
      "range": {
        "startLine": 142,
        "startChar": 2,
        "endLine": 142,
        "endChar": 70
      },
      "revId": "16f44d101ae56c0c19338ea8f28b2c8cde18ca66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24e06338_053a2723",
        "filename": "runtime/arch/riscv64/context_riscv64.cc",
        "patchSetId": 8
      },
      "lineNbr": 145,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-02-10T07:43:02Z",
      "side": 1,
      "message": "Should we not provide an (empty?) implementation for this function in this CL? Otherwise we should get unresolved reference errors during linking (as long as the entire `Riscv64Context` is not removed as unused by the linker).",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 24
      },
      "revId": "16f44d101ae56c0c19338ea8f28b2c8cde18ca66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}