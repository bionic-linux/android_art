{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5fef1964_9e15ff50",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-08-10T19:55:39Z",
      "side": 1,
      "message": "Nit: Can you please add an empty line here, so that it\u0027s more clear that the comment only applies to the line above.",
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8311b8c_8c309c32",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2021-08-11T00:45:44Z",
      "side": 1,
      "message": "The product namespace has the same goal with the sphal. It is for product partition.\nI added additional comments on each namespace.",
      "parentUuid": "5fef1964_9e15ff50",
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef33fda3_991bb5c2",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-08-11T08:48:56Z",
      "side": 1,
      "message": "I read it as an explanation of why it has the strange name \"sphal\", but this is fine too. Thanks.",
      "parentUuid": "e8311b8c_8c309c32",
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b28e6df_da30fb1a",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-08-10T19:55:39Z",
      "side": 1,
      "message": "What\u0027s the purpose of this? It won\u0027t work to link to the system namespace for product libs if /product/${LIB} isn\u0027t in its search path.",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 62
      },
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44b14b02_ab49820d",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2021-08-11T00:45:44Z",
      "side": 1,
      "message": "\u0027product\u0027 namespace is defined only if the target defined \u0027PRODUCT_PRODUCT_VNDK_VERSION\u0027. So, in some cases, product_ns does not exist. In that case the system namespace has the search path of /product/${LIB}.\n(https://cs.android.com/android/platform/superproject/+/master:system/linkerconfig/testdata/golden_output/stage2/ld.config.txt;drc\u003d294a3f8ed7a357d5d73ddcd860a450a86388c337;l\u003d32)",
      "parentUuid": "0b28e6df_da30fb1a",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 62
      },
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada462c0_c1468767",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-08-11T08:48:56Z",
      "side": 1,
      "message": "Aha, so it should be equivalent to using is_product_vndk_version_defined() as condition? Can we change it to that, and then do it before even calling GetExportedNamespace above? That way we\u0027d get better error propagation if for some reason it fails to find \"product\" when it should exist.",
      "parentUuid": "44b14b02_ab49820d",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 62
      },
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10cfb5ef_a3d44999",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2021-08-11T09:55:48Z",
      "side": 1,
      "message": "\u003e it should be equivalent to using is_product_vndk_version_defined() as condition?\nYes.\nAs suggested, with the new patchset, if `product` namespace is not found with the `PRODUCT_PRODUCT_VNDK_VERSION` configured, the namespace creation will report an error.",
      "parentUuid": "ada462c0_c1468767",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 62
      },
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11c34293_bce3bb16",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2021-08-11T11:51:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10cfb5ef_a3d44999",
      "range": {
        "startLine": 383,
        "startChar": 0,
        "endLine": 384,
        "endChar": 62
      },
      "revId": "0d4a1ead3a7662d76518dc1021dd79026e06dcc9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}