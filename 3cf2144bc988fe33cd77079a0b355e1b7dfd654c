{
  "comments": [
    {
      "key": {
        "uuid": "690eddb9_dfbd2c40",
        "filename": "libartpalette/system/palette_android.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2019-04-11T19:54:40Z",
      "side": 1,
      "message": "There\u0027s nothing we can do if we notice I/O failure as a result of close, because the fd gets closed either way (and release sets output_fd to -1, so all of the stuff below is guaranteed to fail). We should have noticed as a result of fsync, anyway, so just delete this?",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 123,
        "endChar": 3
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d216aea_bca1bda2",
        "filename": "libartpalette/system/palette_android.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-12T13:03:19Z",
      "side": 1,
      "message": "close() can still fail with the badly specified EIO, and I think it\u0027s better to not leave the question open whether that can possibly matter after successful write and sync (also without making assumptions about the type of the fd). It should however not count EINTR as a failure, that\u0027s true - fixed.\n\n\u003e so all of the stuff below is guaranteed to fail\n\nYes, if the failure happens here, but it\u0027s the same failure cleanup for all errors and it doesn\u0027t matter if some or all the calls in the saved_errno block fail.",
      "parentUuid": "690eddb9_dfbd2c40",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 123,
        "endChar": 3
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7693b87_6c5a110f",
        "filename": "libartpalette/system/palette_android.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-04-12T13:36:55Z",
      "side": 1,
      "message": "For some debuggability it may help to report the error source of the error to the caller here (write, fsync, close). These failures are all exceptional and have overlapping errno side-effects.",
      "parentUuid": "5d216aea_bca1bda2",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 123,
        "endChar": 3
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cba0628_d1caa2d7",
        "filename": "libartpalette/system/palette_android.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-12T17:55:47Z",
      "side": 1,
      "message": "\u003e report the error source of the error to the caller here\n\nAre you suggesting something like an /*out*/char **error_msg for that? Wouldn\u0027t it be more appropriate to just log it here instead since it\u0027s only for debug? I\u0027ve added some log messages.",
      "parentUuid": "b7693b87_6c5a110f",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 123,
        "endChar": 3
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6800a503_af101631",
        "filename": "runtime/signal_catcher.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-04-11T17:45:04Z",
      "side": 1,
      "message": "I\u0027d replace this with:\n\n  #include \u003ccsignal\u003e\n  #include \u003ccstdlib\u003e\n  #include \u003ccstring\u003e\n\nas this is a C++ file.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffa3ac7e_9d4d0b06",
        "filename": "runtime/signal_catcher.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-12T13:03:19Z",
      "side": 1,
      "message": "Sounds like a cleanup to do separately across the code base, but ok.",
      "parentUuid": "6800a503_af101631",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e05707b_505a3483",
        "filename": "runtime/signal_catcher.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-04-12T13:36:55Z",
      "side": 1,
      "message": "It\u0027s fine to push back on this here.",
      "parentUuid": "ffa3ac7e_9d4d0b06",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fc20eff_7948ed73",
        "filename": "runtime/signal_catcher.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-12T17:55:47Z",
      "side": 1,
      "message": "NP, it\u0027s in now.",
      "parentUuid": "1e05707b_505a3483",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "3cf2144bc988fe33cd77079a0b355e1b7dfd654c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}