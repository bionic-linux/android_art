{
  "comments": [
    {
      "key": {
        "uuid": "45f7ca47_1d707372",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-10T16:00:37Z",
      "side": 1,
      "message": "Could you add a Java test around this?",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e55fde25_c40a1236",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-12-10T17:13:47Z",
      "side": 1,
      "message": "Please note I already had added fail-before, pass-after unit tests for all these cases. But I have added a few checkers tests in Java as well, just to show the domain where it may apply.",
      "parentUuid": "45f7ca47_1d707372",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8030d0ce_47f5aee6",
        "filename": "compiler/optimizing/induction_var_range.cc",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-10T16:00:37Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 114
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a567a60d_4105c8a0",
        "filename": "compiler/optimizing/induction_var_range.cc",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-12-10T17:13:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8030d0ce_47f5aee6",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 114
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8030d0ce_67f2b201",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 533,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-10T16:00:37Z",
      "side": 1,
      "message": "New line before a CHECK-START",
      "range": {
        "startLine": 533,
        "startChar": 17,
        "endLine": 533,
        "endChar": 25
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6553ee27_151e1eec",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 533,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2015-12-10T17:13:47Z",
      "side": 1,
      "message": "Is that our convention? I had not done that for any of my other checkers tests (in this file and elsewhere) but am happy to follow any convention you recommend.",
      "parentUuid": "8030d0ce_67f2b201",
      "range": {
        "startLine": 533,
        "startChar": 17,
        "endLine": 533,
        "endChar": 25
      },
      "revId": "8340f1ddefbcb86860981390364974abbdb69bda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}