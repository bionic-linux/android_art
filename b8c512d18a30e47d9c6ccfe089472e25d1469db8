{
  "comments": [
    {
      "key": {
        "uuid": "8480d2c5_7611b0cd",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-02T15:43:39Z",
      "side": 1,
      "message": "DestroyShadowFrame? Also why do you need to do it now?",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4072a51_795c7bdf",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-02T20:15:08Z",
      "side": 1,
      "message": "It was a trivial type before, e.g. destructor was no-op. Now the destructor is not a no-op so it needs to be called explicitly.",
      "parentUuid": "8480d2c5_7611b0cd",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "247566b9_96fa4aaa",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-03T11:54:34Z",
      "side": 1,
      "message": "The desctructor hasn\u0027t been changed, the body is still empty. Is the plan in another CL to do things in it then?",
      "parentUuid": "c4072a51_795c7bdf",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_32756a0c",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-03T15:58:48Z",
      "side": 1,
      "message": "Yes. I wanted to upload this as a \"refactor\" so it\u0027s easier to discuss it.",
      "parentUuid": "247566b9_96fa4aaa",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44141a88_aa47ab15",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-03T18:29:16Z",
      "side": 1,
      "message": "Just because the destructor hasn\u0027t changed doesn\u0027t mean the destructor is a no-op\n\nFor a simple example,\n\n  struct StringWrapper {\n     std::string hello;\n  }\n\nStringWrapper itself has no user-defined destructor, but hello does and we\u0027d still want to call ~StringWrapper() to deallocate the hello string.\n\nThe exact term for this in C++ is \"trivial type\" (e.g. a trivial type does not need to have its destructor invoked).",
      "parentUuid": "8497f201_32756a0c",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d222e7_3537bac7",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-04T08:58:10Z",
      "side": 1,
      "message": "Sure but he hasn\u0027t done anything in this change to require the call to happen.",
      "parentUuid": "44141a88_aa47ab15",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44141a88_79bd8b0e",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-04T19:51:47Z",
      "side": 1,
      "message": "Oh, good point, I just remember talking to him offline and he said he was going to add heap-allocated memory to the ShadowFrame.",
      "parentUuid": "04d222e7_3537bac7",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_48f170a0",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-02T20:15:08Z",
      "side": 1,
      "message": "(no change needed)\n\nNot sure I like this cast but I guess it\u0027s non-trivial to allocate/delete types with variable length memory. Should be possible to generalize something to avoid this kind of reinterpret casting in the future.",
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a40a365b_2fb3c945",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-02T20:15:08Z",
      "side": 1,
      "message": "nit: not aligned to rest \\",
      "range": {
        "startLine": 98,
        "startChar": 93,
        "endLine": 98,
        "endChar": 95
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_0e184aaf",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-02T20:15:08Z",
      "side": 1,
      "message": "IMHO the name should be more like CreateInPlace or CreateUnowned or something like that.",
      "range": {
        "startLine": 297,
        "startChar": 22,
        "endLine": 297,
        "endChar": 43
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2461e61f_536064ca",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-02T15:43:39Z",
      "side": 1,
      "message": "no need for local variable?",
      "range": {
        "startLine": 302,
        "startChar": 4,
        "endLine": 307,
        "endChar": 13
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0484e2ca_7fb3c844",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T17:33:14Z",
      "side": 1,
      "message": "Just moved code, but I\u0027ll clean it up a little.",
      "parentUuid": "2461e61f_536064ca",
      "range": {
        "startLine": 302,
        "startChar": 4,
        "endLine": 307,
        "endChar": 13
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84529221_8113e966",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-02T04:24:55Z",
      "side": 1,
      "message": "This should really be private, but because we need to use a macro we need it public. So I decided to at least move it close to the private section.",
      "range": {
        "startLine": 296,
        "startChar": 2,
        "endLine": 308,
        "endChar": 3
      },
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_e86abcdf",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 353,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-09-02T20:15:08Z",
      "side": 1,
      "message": "nit: although the linkage is still static, it would be less confusing to repeat static again",
      "revId": "b8c512d18a30e47d9c6ccfe089472e25d1469db8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}