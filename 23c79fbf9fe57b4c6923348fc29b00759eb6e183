{
  "comments": [
    {
      "key": {
        "uuid": "ff57b14b_d2e87188",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T10:36:13Z",
      "side": 1,
      "message": "Unnecessary parentheses.",
      "range": {
        "startLine": 98,
        "startChar": 45,
        "endLine": 98,
        "endChar": 46
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed63af6f_0d490594",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T16:14:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff57b14b_d2e87188",
      "range": {
        "startLine": 98,
        "startChar": 45,
        "endLine": 98,
        "endChar": 46
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "886912b9_e6bc29d2",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T10:36:13Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 123,
        "startChar": 42,
        "endLine": 123,
        "endChar": 43
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8abf873_550200dc",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T16:14:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "886912b9_e6bc29d2",
      "range": {
        "startLine": 123,
        "startChar": 42,
        "endLine": 123,
        "endChar": 43
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d5f7922_2d4db60a",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T10:36:13Z",
      "side": 1,
      "message": "Are you sure this uses the correct rounding mode?",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d64a04d9_28c93f5a",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T16:14:25Z",
      "side": 1,
      "message": "My understanding is that the default rounding mode is FE_TONEAREST, which by my reading matches what we want.  But, I\u0027ll happily await Hans\u0027 comment.",
      "parentUuid": "4d5f7922_2d4db60a",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "630a1c9a_46a90ab3",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T17:11:17Z",
      "side": 1,
      "message": "According to http://en.cppreference.com/w/cpp/numeric/math/rint , std::rint uses the \"current rounding mode\" which can modified by native code. We do not set the rounding mode on JNI transitions.",
      "parentUuid": "d64a04d9_28c93f5a",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "315c87b9_e4a99cde",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T17:48:34Z",
      "side": 1,
      "message": "Interesting question: should we reset rounding mode on return from JNI?  I could force rounding mode here, but looking at libcore\u0027s Math.rint() it appears it also bottoms out into a vanilla call to native rint() with no rounding mode checking that I can see.  Or, if native code mucks with the rounding mode perhaps it should expect to fail?",
      "parentUuid": "630a1c9a_46a90ab3",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d6cfc21_3d96cba5",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2017-03-24T22:35:10Z",
      "side": 1,
      "message": "The floating point control word on x86 must be preserved over calls and so there is no need to preserve it (see the System V ABI documents). For Neon/SSE operations the rounding mode is implicit in the opcode. What the STL does above this is another matter.",
      "parentUuid": "315c87b9_e4a99cde",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40360600_e1ba2492",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2017-03-25T00:21:12Z",
      "side": 1,
      "message": "Does anyone understand exactly what that statement in the ABI means? fesetround() just seems to set the control words. Who\u0027s responsible for ensuring that \"The control bits of the MXCSR register are callee-saved (preserved across calls)...\" The Posix page seems to encourage the programmer to do so, but ...",
      "parentUuid": "6d6cfc21_3d96cba5",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 40
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2c7c868_b4c319fd",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T10:36:13Z",
      "side": 1,
      "message": "We do not have a fixed style for unaligned access but we mostly use something like\n\n    typedef __attribute__((aligned(1)) T unaligned_T;",
      "range": {
        "startLine": 271,
        "startChar": 4,
        "endLine": 271,
        "endChar": 54
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "933426e8_8e5aa654",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T16:14:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2c7c868_b4c319fd",
      "range": {
        "startLine": 271,
        "startChar": 4,
        "endLine": 271,
        "endChar": 54
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cef9824_f663222b",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 283,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-03-24T10:36:13Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 54
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eea81611_105a3734",
        "filename": "runtime/interpreter/interpreter_intrinsics.cc",
        "patchSetId": 4
      },
      "lineNbr": 283,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2017-03-24T16:14:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cef9824_f663222b",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 54
      },
      "revId": "23c79fbf9fe57b4c6923348fc29b00759eb6e183",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}