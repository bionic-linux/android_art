{
  "comments": [
    {
      "key": {
        "uuid": "16c50ace_440303eb",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "? this may be resolution methods, IMT conflict, etc....",
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16c50ace_640a7ffe",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "Same behavior for both sides, can we only do the IsProxyMethod check for debug builds to avoid the overhead?",
      "range": {
        "startLine": 375,
        "startChar": 0,
        "endLine": 375,
        "endChar": 60
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6da7ea7_232ec666",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 491,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-11-11T01:29:11Z",
      "side": 1,
      "message": "Why change this?",
      "range": {
        "startLine": 478,
        "startChar": 2,
        "endLine": 491,
        "endChar": 3
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b0e2f2a_ba0ced50",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 3256,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-11-11T01:29:11Z",
      "side": 1,
      "message": "Is anything other then kJavaLangClass allowed?",
      "range": {
        "startLine": 3256,
        "startChar": 2,
        "endLine": 3256,
        "endChar": 39
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3453db_4f953163",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 3271,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "Not required",
      "range": {
        "startLine": 3271,
        "startChar": 2,
        "endLine": 3271,
        "endChar": 3
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb3987d2_60a91c50",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 3271,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-12T21:47:23Z",
      "side": 1,
      "message": "It scopes \u0027hash\u0027 to just 2 lines because it\u0027s not used anywhere else.",
      "parentUuid": "1b3453db_4f953163",
      "range": {
        "startLine": 3271,
        "startChar": 2,
        "endLine": 3271,
        "endChar": 3
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb2e9f8f_0e5a8b31",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 3289,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "GetOrCreateAllocatorForClassLoader is probably safer",
      "range": {
        "startLine": 3289,
        "startChar": 33,
        "endLine": 3289,
        "endChar": 59
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "568ea242_d78636f8",
        "filename": "runtime/common_runtime_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 58,
        "startChar": 5,
        "endLine": 58,
        "endChar": 11
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "568ea242_c27912d9",
        "filename": "runtime/common_runtime_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "Thanks, sorry for leaving this in.",
      "parentUuid": "568ea242_d78636f8",
      "range": {
        "startLine": 58,
        "startChar": 5,
        "endLine": 58,
        "endChar": 11
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16c50ace_53abcedc",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-11-11T01:29:11Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 17
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b25eb9e_2a288771",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "Should this be first_arg_reg * sizeof(uint32_t) since vregs are 4 bytes each?",
      "range": {
        "startLine": 1008,
        "startChar": 33,
        "endLine": 1008,
        "endChar": 46
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16c50ace_bf2640f7",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-12T21:47:23Z",
      "side": 1,
      "message": "shadow_frame_vregs is a uint32_t so when adding first_arg_reg to it, the underlying address advances by first_arg_reg*4 bytes",
      "parentUuid": "5b25eb9e_2a288771",
      "range": {
        "startLine": 1008,
        "startChar": 33,
        "endLine": 1008,
        "endChar": 46
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16c50ace_c4d893a7",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1010,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "And here",
      "range": {
        "startLine": 1010,
        "startChar": 38,
        "endLine": 1010,
        "endChar": 51
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3453db_b257584f",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1017,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "And here",
      "range": {
        "startLine": 1017,
        "startChar": 40,
        "endLine": 1017,
        "endChar": 53
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d4867d_f959f541",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1017,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-12T21:47:23Z",
      "side": 1,
      "message": "Looks like 1014 should be uint32_t instead, thanks for catching this.",
      "parentUuid": "1b3453db_b257584f",
      "range": {
        "startLine": 1017,
        "startChar": 40,
        "endLine": 1017,
        "endChar": 53
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_03fc5d98",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 2
      },
      "lineNbr": 1019,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "And here",
      "range": {
        "startLine": 1019,
        "startChar": 45,
        "endLine": 1019,
        "endChar": 58
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d69a9277_389051c2",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 890,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Why not just use the constructor?",
      "range": {
        "startLine": 890,
        "startChar": 24,
        "endLine": 890,
        "endChar": 30
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d69a9277_fb8de3e4",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 890,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "That is using the constructor, it\u0027s pretty much the same thing as doing hs(self).",
      "parentUuid": "d69a9277_389051c2",
      "range": {
        "startLine": 890,
        "startChar": 24,
        "endLine": 890,
        "endChar": 30
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d683721b_70710878",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 890,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "But this way requires the annoying NOLINT",
      "parentUuid": "d69a9277_fb8de3e4",
      "range": {
        "startLine": 890,
        "startChar": 24,
        "endLine": 890,
        "endChar": 30
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96a49abb_56316498",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 911,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Use CHECK instead of log fatal here?",
      "range": {
        "startLine": 911,
        "startChar": 10,
        "endLine": 911,
        "endChar": 38
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b686fe2b_8f9e59d4",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 917,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "And here",
      "range": {
        "startLine": 917,
        "startChar": 10,
        "endLine": 917,
        "endChar": 39
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96a49abb_d64474fa",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 929,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "I thought the correct indentation here was 4, is 8 actually right?",
      "range": {
        "startLine": 929,
        "startChar": 5,
        "endLine": 929,
        "endChar": 12
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_171c3cf8",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 929,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "4 is probably right",
      "parentUuid": "96a49abb_d64474fa",
      "range": {
        "startLine": 929,
        "startChar": 5,
        "endLine": 929,
        "endChar": 12
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d683721b_edb4410f",
        "filename": "runtime/interpreter/interpreter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 930,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "AssertPendingException",
      "range": {
        "startLine": 930,
        "startChar": 6,
        "endLine": 930,
        "endChar": 40
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d683721b_6d77711e",
        "filename": "runtime/lambda/box_class_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "I think we prefer ATTRIBUTE_UNUSED. Also what do you mean by delete the class?",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 8
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_970f4cb7",
        "filename": "runtime/lambda/box_class_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "I left this boilerplate code just in case I need to call anything else manually to say that it was \"now safe to delete the class\" (i.e. to drop the reference)\n\nI was initially envisioning it to hold weak reference to the classes, but since it\u0027s now storing strong references it probably never needs to worry about it.",
      "parentUuid": "d683721b_6d77711e",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 8
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d683721b_d0bc74e1",
        "filename": "runtime/lambda/box_class_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "That is safe.",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_1770bce6",
        "filename": "runtime/lambda/box_class_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "You don\u0027t need to manually free heap objects. Having the destructor be completely empty seems OK with me.",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 15
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6923665_91eafc99",
        "filename": "runtime/lambda/box_class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "You can just leave this uncommented, it works with NO_THREAD_SAFETY_ANALYSIS",
      "range": {
        "startLine": 84,
        "startChar": 36,
        "endLine": 84,
        "endChar": 76
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "568ea242_f79fb21c",
        "filename": "runtime/lambda/box_class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "2 spaces",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 24
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_f72c18d6",
        "filename": "runtime/lambda/box_class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Strange indentation",
      "range": {
        "startLine": 110,
        "startChar": 19,
        "endLine": 110,
        "endChar": 54
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_5716c4d7",
        "filename": "runtime/lambda/box_class_table.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "Yeah I had them line up (across multiple fields) in another file that I copied/pasted this from. I\u0027ll fix it.",
      "parentUuid": "b69d1e72_f72c18d6",
      "range": {
        "startLine": 110,
        "startChar": 19,
        "endLine": 110,
        "endChar": 54
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36892e3b_536a5cf6",
        "filename": "runtime/lambda/box_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "This means that class_loader may be a stale pointer.",
      "range": {
        "startLine": 117,
        "startChar": 8,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36892e3b_93e84414",
        "filename": "runtime/lambda/box_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-05T01:56:41Z",
      "side": 1,
      "message": "Ok, I\u0027ll move this to under line 127",
      "parentUuid": "36892e3b_536a5cf6",
      "range": {
        "startLine": 117,
        "startChar": 8,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1698aa84_9b11376e",
        "filename": "runtime/lambda/box_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "Doesn\u0027t this erase possibly invalidate the reference above?",
      "range": {
        "startLine": 292,
        "startChar": 26,
        "endLine": 292,
        "endChar": 31
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6da7ea7_7708726f",
        "filename": "runtime/lambda/box_table.cc",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-12T21:47:23Z",
      "side": 1,
      "message": "Yeah not sure how that slipped in, thanks.",
      "parentUuid": "1698aa84_9b11376e",
      "range": {
        "startLine": 292,
        "startChar": 26,
        "endLine": 292,
        "endChar": 31
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69d1e72_3775c0d7",
        "filename": "runtime/lambda/box_table.h",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Is indenting the GUARDED_BY required?",
      "range": {
        "startLine": 145,
        "startChar": 19,
        "endLine": 145,
        "endChar": 61
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b686fe2b_0fc0a9a0",
        "filename": "runtime/lambda/shorty_field_type.h",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Indentation",
      "range": {
        "startLine": 316,
        "startChar": 3,
        "endLine": 318,
        "endChar": 2
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1698aa84_db581f81",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "What is the point of these parens?",
      "range": {
        "startLine": 369,
        "startChar": 27,
        "endLine": 369,
        "endChar": 45
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b25eb9e_2afd2725",
        "filename": "runtime/mirror/class_loader.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-12T19:47:10Z",
      "side": 1,
      "message": "Is this safe? Can lambdas escape to other class loaders? In that case the lambda would to keep the class loader live.",
      "range": {
        "startLine": 89,
        "startChar": 11,
        "endLine": 89,
        "endChar": 30
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b2597a9_f3584809",
        "filename": "runtime/mirror/class_loader.h",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-11-12T21:47:23Z",
      "side": 1,
      "message": "I suppose they could escape to other class loaders if the parent is shared.\n\nThis could probably use some more thought.",
      "parentUuid": "5b25eb9e_2afd2725",
      "range": {
        "startLine": 89,
        "startChar": 11,
        "endLine": 89,
        "endChar": 30
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6923665_b1953801",
        "filename": "runtime/modifiers.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Extra spaace",
      "range": {
        "startLine": 53,
        "startChar": 66,
        "endLine": 53,
        "endChar": 67
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_57ba96e3",
        "filename": "runtime/modifiers.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-11-11T01:29:11Z",
      "side": 1,
      "message": "Note that I use 0x00800000 in one of my CLs. We will need to be careful merging.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 87
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "568ea242_772742a4",
        "filename": "runtime/native/java_lang_reflect_Method.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-11-05T00:27:01Z",
      "side": 1,
      "message": "Line too long now.",
      "range": {
        "startLine": 82,
        "startChar": 97,
        "endLine": 82,
        "endChar": 109
      },
      "revId": "ba6596b6051c0d586cee10a85298a9ed860a0d96",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}