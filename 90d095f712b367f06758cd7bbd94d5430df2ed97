{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "57e41446_92212960",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-12-20T02:31:40Z",
      "side": 1,
      "message": "How is this possible? Are you referring to the rare situation where a thread doesn\u0027t get to run (due to CPU scheduling) after it resumes (at thread.cc line 1897/1918) in the ith GC and then i+1th GC adds a flip function? Otherwise, I don\u0027t see how this can happen. And even this case I\u0027m still wondering if it\u0027s possible. Because in order to be able to do the next GC, the gc-thread needs to run the callback in the pause, and wouldn\u0027t this thread, which is runnable, need to respond to the suspend-check for that?",
      "range": {
        "startLine": 16,
        "startChar": 24,
        "endLine": 16,
        "endChar": 64
      },
      "revId": "90d095f712b367f06758cd7bbd94d5430df2ed97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93a0f584_cdad1ab7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-20T03:56:31Z",
      "side": 1,
      "message": "We call WaitForFlipFunction from TransitionFromSuspendedTuRunnable, while still suspended. And WaitForFlipFunction basically releases all locks while waiting, I think. So I think the GC can merrily progress, running checkpoints etc. on the suspended threads\u0027s behalf. This is based on an observed test failure, and I think it all makes sense. The test explicitly runs a bunch of GCs in a row, with little in-between.",
      "parentUuid": "57e41446_92212960",
      "range": {
        "startLine": 16,
        "startChar": 24,
        "endLine": 16,
        "endChar": 64
      },
      "revId": "90d095f712b367f06758cd7bbd94d5430df2ed97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f35cf9b7_c776728b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-12-20T05:48:45Z",
      "side": 1,
      "message": "Thanks for clarifying.",
      "parentUuid": "93a0f584_cdad1ab7",
      "range": {
        "startLine": 16,
        "startChar": 24,
        "endLine": 16,
        "endChar": 64
      },
      "revId": "90d095f712b367f06758cd7bbd94d5430df2ed97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb1aca33_c340d0d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-12-20T02:19:24Z",
      "side": 1,
      "message": "Ready to review once more. Changes from the last one are small.",
      "revId": "90d095f712b367f06758cd7bbd94d5430df2ed97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}