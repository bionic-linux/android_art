{
  "comments": [
    {
      "key": {
        "uuid": "22c49160_788f1d18",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-02-23T10:46:25Z",
      "side": 1,
      "message": "Can you do this with a loop instead of recursion? Recursion in a compiler is prone to stack overflow.\n\nIs the overflow check actually needed?",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 83,
        "endChar": 9
      },
      "revId": "486aa24c2407f9f81b58bd38ea0287e66b5853cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62a5a9c6_be19f0be",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-02-23T17:15:36Z",
      "side": 1,
      "message": "Good suggestion. I think I have a few other places I should change into loops.\n\nAs for the overflow, it is not strictly necessary for the deopt client (although it\u0027s doubtful it will help anywhere), but some of the other clients rely on not being to relaxed on integrating constants with symbolics.",
      "parentUuid": "22c49160_788f1d18",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 83,
        "endChar": 9
      },
      "revId": "486aa24c2407f9f81b58bd38ea0287e66b5853cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2b881d5_7ced55aa",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 414,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-02-23T10:46:43Z",
      "side": 1,
      "message": "I venture that David would prefer CHECK-DAGs instead of CHECKs and a separate set of assertion for CHECK-NOTs. :)",
      "range": {
        "startLine": 394,
        "startChar": 0,
        "endLine": 414,
        "endChar": 21
      },
      "revId": "486aa24c2407f9f81b58bd38ea0287e66b5853cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82bb7df1_4a57b5a5",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 414,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-02-23T17:15:36Z",
      "side": 1,
      "message": "No, he grumbled a bit and shook his fist, but for such simple straight-line code he was willing to look the other way :-)",
      "parentUuid": "a2b881d5_7ced55aa",
      "range": {
        "startLine": 394,
        "startChar": 0,
        "endLine": 414,
        "endChar": 21
      },
      "revId": "486aa24c2407f9f81b58bd38ea0287e66b5853cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}