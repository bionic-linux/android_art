{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25ad0d08_8eaec059",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-12-14T12:53:39Z",
      "side": 1,
      "message": "I am not very familiar with this code either.  Naively it sounds good, but I don\u0027t follow the details.\n\nWhat is the debuggerd interaction here?  How come we never get here is debuggerd is enabled.  Do we register different \"default\" handler if debuggers is enabled?  I don\u0027t see it here.\n\nThe `sigaction` registers a default handler, but if we are here, isn\u0027t the default handler already set, and doesn\u0027t the sigaction affect the next signal but does not affect the current signal?",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "619b9e19_ec7f3ef1",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1463403
      },
      "writtenOn": "2022-12-14T19:20:32Z",
      "side": 1,
      "message": "Yes, if debuggerd is enabled, we register a handler for many signals. https://cs.android.com/android/platform/superproject/+/master:system/core/debuggerd/include/debuggerd/handler.h;l\u003d64;drc\u003d7bd6dca85571fbc85767022943109e662d0252ed. This is done very early on, before dynamic linking. So we won\u0027t ever revert to the SIG_DFL action for those.\n\nWe could get here if there was a special signal handler on one of the signals not handled by debuggerd. But the only signals that currently could have special handlers are SIGSEGV and SIGILL, both debuggerd signals. That said, if some other signal were to get a special handler (say SIGCHLD), a crash here would be still be wrong if the signal\u0027s default action is ignore.",
      "parentUuid": "25ad0d08_8eaec059",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19a8a12d_e93f83d9",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-12-15T14:20:10Z",
      "side": 1,
      "message": "Ah, `debugger` is magically setup in bionic on startup.\n\nI still don\u0027t follow how this \"triggers SIG_DFL\" handler.  This code runs inside the handler.  So `sigaction` will not affect it, right?  It would only affect how the next signal gets handled, no?\n\nAlso, if we don\u0027t fatal-exit here, what happens? What tries the handle it next? (as by definition there is no other handler?)",
      "parentUuid": "619b9e19_ec7f3ef1",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9982271_6fca727f",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1463403
      },
      "writtenOn": "2022-12-15T16:17:28Z",
      "side": 1,
      "message": "Returning from a SIGSEGV handler without doing anything will restore the state just before the segfault, making the segfault happen again. And that will run the default handler. I\u0027ll update the comment to say this.",
      "parentUuid": "19a8a12d_e93f83d9",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "127c5fc8_824609c6",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1463403
      },
      "writtenOn": "2022-12-22T00:19:02Z",
      "side": 1,
      "message": "Updated the comment",
      "parentUuid": "b9982271_6fca727f",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc35b5ab_972e1010",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-01-12T15:31:20Z",
      "side": 1,
      "message": "The last line of the comment is too long, please wrap.",
      "parentUuid": "127c5fc8_824609c6",
      "revId": "27ae6f5dd2bb25218adeabc522f2fb2928b475b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}