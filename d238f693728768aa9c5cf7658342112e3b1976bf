{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "793fcf9f_8cbb39aa",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-31T13:15:16Z",
      "side": 1,
      "message": "What would it take to not require an injector for this? The artd instance comes from the global injector that we\u0027ve discussed before to use for testing.",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36bc769f_867aef8f",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-31T13:41:32Z",
      "side": 1,
      "message": "I think the conclusion of that discussion was that the global injector is only for production and the local injector is for testing?",
      "parentUuid": "793fcf9f_8cbb39aa",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c29e6a0_2dd0456f",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-31T14:01:05Z",
      "side": 1,
      "message": "As I recall, it was just that at the time we didn\u0027t have any immediate reason to use the global injector for testing, but that may change. This seems like one reason.\n\nMy thinking is that if we can use a global injector to mock external things then we wouldn\u0027t need injectors like this just to pass down mocks. Going that way and start to use the global injector for more things, like the PackageManager instance etc, it may be possible to clean up quite a few of these injectors that separate internal parts from each other (which as we\u0027ve discussed offline, I consider a bit of an antipattern).\n\nThat\u0027d be a refactoring that\u0027s out of scope here, but I asked the question to see if it\u0027s a feasible option for this particular case.",
      "parentUuid": "36bc769f_867aef8f",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ae3b98a_44965554",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-31T14:37:57Z",
      "side": 1,
      "message": "I think the current pattern is better.\n\n1. As [the comment on `GlobalInjector`](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/GlobalInjector.java;l\u003d34-35;drc\u003dfe6509ad165fd32d4ac5f5986de1b8934c397cbb) suggested, it\u0027s an interface for getting different behaviors depending on whether the code is running for Pre-reboot Dexopt or not. Adding things irrelevant to Pre-reboot makes readers easily get lost if they want to find out the behavior difference.\n2. The global injector instance is a static field, and it can be set only once. We may run into problems when we try to use different global injector instances for different tests.\n3. In some cases, mocking internal things can be useful, though somehow antipattern. For example, when testing `ArtManagerLocal.dexoptPackages`, it\u0027s useful to mock `DexoptHelper`. In this way, we can focus on testing which packages are dexopted. Otherwise, because `ArtManagerLocal.dexoptPackages` calls into `DexoptHelper`, which calls into `PrimaryDexopter`/`SecondaryDexopter`, which calls into `UserManager`, `Artd`, `StorageManager`, and `PackageManagerLocal`, we\u0027ll have to mock all those external dependencies, adding up to tens of methods, making the test complicated and easy to lose focus. Therefore, we\u0027ll likely keep the local injectors.\n4. Because we have to keep the local injectors, if we use the global injector in tests as well, we\u0027ll have to construct two injectors in tests, and that\u0027s a bit of a hassle.",
      "parentUuid": "4c29e6a0_2dd0456f",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78c3cef2_fa2a4847",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-05T14:42:27Z",
      "side": 1,
      "message": "I think I can poke holes in all those arguments except #3. That\u0027s a valid point in the general case, and when it comes that I agree a local injector is better, and it\u0027s particularly true for testing error conditions, races, etc. But it doesn\u0027t mean that pattern has to apply everywhere.\n\nSo in the case with `ArtdRefCache` here it\u0027s just a helper class and one can just as well mock the artd instance instead. (It\u0027s not unlikely one would need to do that anyway, if it\u0027s not covered by higher level mocks, and if it is then it\u0027s incredibly easy to mock.)\n\nThis comment was primarily about this particular case, not changing the approach to injectors as a whole (we can discuss that too, but then there\u0027s the question whether it\u0027s worth the work to refactor it, and I doubt that). So I\u0027m still unconvinced this particular injector is at the right level and it looks like it\u0027d be better solved by a global injector, perhaps a separate one if it feels ugly to put it in the existing one. But in any case it\u0027s not important enough to block on.",
      "parentUuid": "3ae3b98a_44965554",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8383520_ec4a340b",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-06-05T15:07:25Z",
      "side": 1,
      "message": "If the suggestion is to make this injectable with a separate class, I\u0027m totally fine with it, and I agree that we can potentially include more things to that class. I just feel wrong to use `GlobalInjector` for testing purpose. The current `GlobalInjector` class is for getting different behaviors depending on whether the code is running for Pre-reboot Dexopt or not. Maybe \"GlobalInjector\" is not the best name because the word \"injector\" makes readers think that it\u0027s for testing purpose, while it\u0027s not. \"GlobalState\" or something like that might be better (https://en.wikipedia.org/wiki/State_pattern).\n\nI put a note about adding a global class for testing purpose. It requires quite a lot of refactoring, so I\u0027m not doing it in this CL. I\u0027ll come back to it after we have finalized V. For now, let\u0027s move on.",
      "parentUuid": "78c3cef2_fa2a4847",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "070c0d01_7339f2ce",
        "filename": "libartservice/service/java/com/android/server/art/prereboot/PreRebootStatsReporter.java",
        "patchSetId": 21
      },
      "lineNbr": 319,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-06-05T16:23:56Z",
      "side": 1,
      "message": "\u003e Maybe \"GlobalInjector\" is not the best name because the word \"injector\" makes readers think that it\u0027s for testing purpose, while it\u0027s not. \"GlobalState\" or something like that might be better\n\nI see. Yes, that could help.\n\n\u003e It requires quite a lot of refactoring, so I\u0027m not doing it in this CL. I\u0027ll come back to it after we have finalized V. For now, let\u0027s move on.\n\nOk. To be clear, I\u0027m not asking for a refactor of all the existing tests, just that it\u0027d be nice to avoid adding more injectors like this. I\u0027d hope it\u0027d be possible to use a global injector for new things.",
      "parentUuid": "f8383520_ec4a340b",
      "range": {
        "startLine": 319,
        "startChar": 19,
        "endLine": 319,
        "endChar": 55
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1e595c6_ccda2cdd",
        "filename": "libartservice/service/javatests/com/android/server/art/prereboot/PreRebootStatsReporterTest.java",
        "patchSetId": 21
      },
      "lineNbr": 127,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-31T13:15:16Z",
      "side": 1,
      "message": "Suggest separating the \"runs\" a bit better so it\u0027s easier to see where one stops and the next starts. E.g. a comment that summarises the type of run would be nice, and/or using one block for each (that way you don\u0027t need to suffix the session variables either).",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 36
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c76f525_c6d0e24a",
        "filename": "libartservice/service/javatests/com/android/server/art/prereboot/PreRebootStatsReporterTest.java",
        "patchSetId": 21
      },
      "lineNbr": 127,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-05-31T13:41:32Z",
      "side": 1,
      "message": "Added blocks.",
      "parentUuid": "c1e595c6_ccda2cdd",
      "range": {
        "startLine": 127,
        "startChar": 8,
        "endLine": 127,
        "endChar": 36
      },
      "revId": "d238f693728768aa9c5cf7658342112e3b1976bf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}