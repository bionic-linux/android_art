{
  "comments": [
    {
      "key": {
        "uuid": "15d14637_13a10e3e",
        "filename": "runtime/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "Remove tab.",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0078bb8a_9d4e61a1",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-26T16:51:18Z",
      "side": 1,
      "message": "Why does it need this code at all? In interpreter you can tell class would be initialized from new-instance, invoke-static, getstatic, putstatic, etc.",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e63e243a_9d318fbf",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T17:13:27Z",
      "side": 1,
      "message": "Then we would need to add checking code at those four insructions in interpreter, but Andreas doesn\u0027t like it and prefer this abstraction. Implementation in that way is done in /c/433727/.",
      "parentUuid": "0078bb8a_9d4e61a1",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d863bf7_7fbf9565",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-26T22:09:51Z",
      "side": 1,
      "message": "It\u0027s not done that way in 433727.. I would\u0027ve expected you to edit interpreter_switch_impl.cc ExecuteSwitchImpl function.",
      "parentUuid": "e63e243a_9d318fbf",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d5893e_62adecd3",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-07-26T22:11:43Z",
      "side": 1,
      "message": "It is easier to have this all in a centralized point, which I am OK with if it does _not_ pollute the regular class-linker. The advantage here is that all initialization requests must go through the class-linker, so you know you get everything (including unstarted runtime and reflection).",
      "parentUuid": "9d863bf7_7fbf9565",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40834ddf_08673336",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-26T22:17:26Z",
      "side": 1,
      "message": "The class linker is already a giant mess of code, why would we want to make it an even bigger mess?",
      "parentUuid": "87d5893e_62adecd3",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a930deb7_f9ecc5fb",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T22:25:55Z",
      "side": 1,
      "message": "At the ExecuteSwitchImpl, the class we want to initialize has not been extracted from the instruction, and if we encapsulate the whole instruction in the transaction, the modification made in that instruction would be committed and won\u0027t be able to rolled back.",
      "parentUuid": "87d5893e_62adecd3",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0b12bfc_d6d736e0",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-07-26T22:27:39Z",
      "side": 1,
      "message": "Re \"bigger mess:\" how is this dedicated subclass a mess? It layers the transaction on top of the regular behavior, but separates them.",
      "parentUuid": "a930deb7_f9ecc5fb",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "648bfdd7_5b1308dc",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-26T22:30:31Z",
      "side": 1,
      "message": "Actually I see that transactions have already infested ClassLinker, but thankfully its at least contained to InitializeClass.\n\nSo I would agree with Nicolas, just move all this code back into ClassLinker::InitializeClass at least then all the transaction code will be in the same function.",
      "parentUuid": "f0b12bfc_d6d736e0",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f9cc06_e0dd0f81",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-07-26T22:38:29Z",
      "side": 1,
      "message": "You\u0027re talking about the single IsActiveTransaction? That should probably factored out?",
      "parentUuid": "648bfdd7_5b1308dc",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d71a720_061af055",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T22:46:31Z",
      "side": 1,
      "message": "I think this subclass actually a good idea, because if later we want to add global trace for boot image modifications, the behaviours of InitializeClass in compiler and runtime will further diverge.",
      "parentUuid": "09f9cc06_e0dd0f81",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b7d6b7_5eece456",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-26T22:53:21Z",
      "side": 1,
      "message": "If it\u0027s factored out along with this CL, I agree then having a separate file would be better.",
      "parentUuid": "6d71a720_061af055",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c2890c_766e55ac",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T23:21:12Z",
      "side": 1,
      "message": "I can do it, but at least it\u0027s not relevant to this CL, right? Maybe we need to put them into another CL, which purify the ClassLinker and extract that part into two functions.",
      "parentUuid": "e7b7d6b7_5eece456",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d8c062f_49029270",
        "filename": "runtime/aot_class_linker.cc",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-07-26T23:24:10Z",
      "side": 1,
      "message": "Follow-up CL is OK with me.",
      "parentUuid": "86c2890c_766e55ac",
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd8a4038_1e242271",
        "filename": "runtime/aot_class_linker.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "This sounds like a recipe for confusion :( Given it\u0027s only that method, I would strongly prefer avoiding this class.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "869fb2c9_5c73ed81",
        "filename": "runtime/aot_class_linker.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-07-26T15:34:11Z",
      "side": 1,
      "message": "And I strongly prefer not to have transaction code pasted all over the class-linker and interpreter for something that\u0027s off 99% of the time. :-)",
      "parentUuid": "fd8a4038_1e242271",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e734286_189f3b63",
        "filename": "runtime/aot_class_linker.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T16:09:57Z",
      "side": 1,
      "message": "But don\u0027t we have it already?",
      "parentUuid": "869fb2c9_5c73ed81",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0009140b_a6003eab",
        "filename": "runtime/aot_class_linker.h",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T16:30:42Z",
      "side": 1,
      "message": "I will possibly add some more functions here to implement some other compile-time only behaviours.\nAnd this can also help reduce the runtime overhead for testing of transactions in runtime also.",
      "parentUuid": "5e734286_189f3b63",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 37,
        "endChar": 2
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd95fe70_16052504",
        "filename": "runtime/transaction.cc",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "nit: inconsistent naming.",
      "range": {
        "startLine": 108,
        "startChar": 18,
        "endLine": 109,
        "endChar": 22
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dda6159_195d5b5c",
        "filename": "runtime/transaction.cc",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T17:13:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd95fe70_16052504",
      "range": {
        "startLine": 108,
        "startChar": 18,
        "endLine": 109,
        "endChar": 22
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e460cbc_5f581312",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "grammar",
      "range": {
        "startLine": 63,
        "startChar": 43,
        "endLine": 63,
        "endChar": 50
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3f49f01_56058616",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T17:13:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e460cbc_5f581312",
      "range": {
        "startLine": 63,
        "startChar": 43,
        "endLine": 63,
        "endChar": 50
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8295e6dd_e3dc75cc",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "be allowed",
      "range": {
        "startLine": 64,
        "startChar": 34,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d145dd8_b52dc7dc",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-26T09:41:52Z",
      "side": 1,
      "message": "class?",
      "range": {
        "startLine": 64,
        "startChar": 9,
        "endLine": 64,
        "endChar": 15
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43c67996_5fab93ce",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T17:13:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d145dd8_b52dc7dc",
      "range": {
        "startLine": 64,
        "startChar": 9,
        "endLine": 64,
        "endChar": 15
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "376ac937_8ddc6c4e",
        "filename": "runtime/transaction.h",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1167013
      },
      "writtenOn": "2017-07-26T17:13:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8295e6dd_e3dc75cc",
      "range": {
        "startLine": 64,
        "startChar": 34,
        "endLine": 64,
        "endChar": 44
      },
      "revId": "a7a7a4484a35bdd583e4c9989db8cdbbc9bfe94b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}