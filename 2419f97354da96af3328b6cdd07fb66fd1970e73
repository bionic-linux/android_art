{
  "comments": [
    {
      "key": {
        "uuid": "1b115463_d828ac48",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3395,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-09-11T12:51:19Z",
      "side": 1,
      "message": "Sorry, I might be lost here: the \u0027type\u0027 register contains poisoned reference (when called from GenerateVarHandleInstanceFieldCheck), but \"temp\u0027 is unpoisoned here, right?",
      "range": {
        "startLine": 3395,
        "startChar": 54,
        "endLine": 3395,
        "endChar": 74
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "869585e9_3d12a70e",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3395,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-09-11T14:21:11Z",
      "side": 1,
      "message": "This is just a stale comment from a previous version of the code. But the GenerateVarHandleInstanceFieldCheck() is indeed missing an unpoisoning.\n\nFixed in https://android-review.googlesource.com/1424796 . Checked by running benchmarks from https://android-review.googlesource.com/1420959 .",
      "parentUuid": "1b115463_d828ac48",
      "range": {
        "startLine": 3395,
        "startChar": 54,
        "endLine": 3395,
        "endChar": 74
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c518d0c6_f387f437",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3560,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-09-11T12:51:19Z",
      "side": 1,
      "message": "Nit: maybe to extract as a bool \"is_static_field\"?",
      "range": {
        "startLine": 3560,
        "startChar": 45,
        "endLine": 3560,
        "endChar": 78
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9df4dd2e_dedcbf5e",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3560,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-09-11T14:21:11Z",
      "side": 1,
      "message": "I was previously thinking about that and decided to stay with the `expected_coordinates_count` used everywhere else.",
      "parentUuid": "c518d0c6_f387f437",
      "range": {
        "startLine": 3560,
        "startChar": 45,
        "endLine": 3560,
        "endChar": 78
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39a420a0_349366a1",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3676,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2020-09-11T12:51:19Z",
      "side": 1,
      "message": "Nit: here and in other places: are all the .W()/.X() conversions are needed? Here do we get an X register from InputRegisterAt?",
      "range": {
        "startLine": 3676,
        "startChar": 34,
        "endLine": 3676,
        "endChar": 38
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47746e80_689311c9",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3676,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-09-11T14:21:11Z",
      "side": 1,
      "message": "I tried to remove unnecessary .W()/.X() when I changed MemOperand()s to HeapOperand()s. I missed this one and the one at line 3565.\n\nDone.",
      "parentUuid": "39a420a0_349366a1",
      "range": {
        "startLine": 3676,
        "startChar": 34,
        "endLine": 3676,
        "endChar": 38
      },
      "revId": "2419f97354da96af3328b6cdd07fb66fd1970e73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}