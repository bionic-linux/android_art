{
  "comments": [
    {
      "key": {
        "uuid": "8801e53f_5af889f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "Typos, excess comma.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_9ad95196",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "be",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 1
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_65d68ed7",
        "filename": "runtime/monitor_pool.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Does memset work here?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28dab964_51c79655",
        "filename": "runtime/monitor_pool.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-04-28T21:12:55Z",
      "side": 1,
      "message": "I think it works, but it\u0027s probably not officially technically correct.  I would guess the loop only takes an instruction or two more than setting up the call?  The fully unrolled loop is probably also not terrible.",
      "parentUuid": "8801e53f_65d68ed7",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28dab964_573e66a9",
        "filename": "runtime/monitor_pool.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T22:37:19Z",
      "side": 1,
      "message": "Curious - why not correct?",
      "parentUuid": "28dab964_51c79655",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28dab964_42ad8297",
        "filename": "runtime/monitor_pool.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-04-28T23:05:45Z",
      "side": 1,
      "message": "I don\u0027t think a nullptr\u0027s representation is guaranteed to consist of zero bytes.  T* p \u003d 0 is guaranteed to work, but I think it\u0027s allowed to do a conversion.\n\nThis is of course entirely theoretical. Probably a slightly more real danger is that some compiler will decide that this isn\u0027t legal, and therefore it\u0027s allowed to transform the code to something else.",
      "parentUuid": "28dab964_573e66a9",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_e5e1deab",
        "filename": "runtime/monitor_pool.cc",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Add an error message using a \u003c\u003c as this is where we hit the maximum number of monitors we support?",
      "range": {
        "startLine": 47,
        "startChar": 51,
        "endLine": 47,
        "endChar": 52
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_ba67f5d9",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Have a DCHECK that kMaxListSize is a power of 2 somewhere?",
      "range": {
        "startLine": 138,
        "startChar": 31,
        "endLine": 138,
        "endChar": 43
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28dab964_51ff9644",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-04-28T21:12:55Z",
      "side": 1,
      "message": "Added static assertions below.",
      "parentUuid": "8801e53f_ba67f5d9",
      "range": {
        "startLine": 138,
        "startChar": 31,
        "endLine": 138,
        "endChar": 43
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_25300646",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Would it make sense to swap the left and the right of the \u0026\u0026 for efficiency?",
      "range": {
        "startLine": 154,
        "startChar": 29,
        "endLine": 154,
        "endChar": 31
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28dab964_1190eefb",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-04-28T21:12:55Z",
      "side": 1,
      "message": "In most production cases, I would expect current_chunk_list to be zero, so the second test is vacuous. So I think this is faster, though less intuitive.",
      "parentUuid": "8801e53f_25300646",
      "range": {
        "startLine": 154,
        "startChar": 29,
        "endLine": 154,
        "endChar": 31
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_dac47971",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "4-space indent for sub-expressions in ART.",
      "range": {
        "startLine": 160,
        "startChar": 10,
        "endLine": 160,
        "endChar": 18
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_1aa601d2",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "Can make it a constexpr function?",
      "range": {
        "startLine": 177,
        "startChar": 2,
        "endLine": 177,
        "endChar": 8
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_dabab919",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "How about\n\n kIsDebugBuild ? 1U : 512U\n\nor probably kPageSize / sizeof(monitor_chunks_[0])?",
      "range": {
        "startLine": 194,
        "startChar": 54,
        "endLine": 194,
        "endChar": 89
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_052062e6",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-04-28T01:16:27Z",
      "side": 1,
      "message": "There\u0027s nothing magic about page size, so I think a constant is fine. I followed your advice for now (with a slightly smaller value for 512U to save space), but I\u0027m a little nervous about always having the debug configuration diverge from the release one.  We should probably change this after initial testing?",
      "parentUuid": "8801e53f_dabab919",
      "range": {
        "startLine": 194,
        "startChar": 54,
        "endLine": 194,
        "endChar": 89
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_1a31e192",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "28 -\u003e LockWord::kMonitorIdSize ?",
      "range": {
        "startLine": 200,
        "startChar": 50,
        "endLine": 200,
        "endChar": 52
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_1a8d6142",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "I assume this means that 2^9 * 8 (kMonitorAlignment) \u003d 4096 (kChunkSize)?\n\nMaybe would it be clearer if \"int64_t offset\" is changed to \"index into an array of kMonitorAlignment-aligned entries\" or something like that?",
      "range": {
        "startLine": 208,
        "startChar": 9,
        "endLine": 208,
        "endChar": 50
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_1a0a81c2",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 210,
        "startChar": 5,
        "endLine": 211,
        "endChar": 59
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_45dd4a24",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "How about \"current_chunk_list_index_\"?",
      "range": {
        "startLine": 218,
        "startChar": 9,
        "endLine": 218,
        "endChar": 28
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_3a2ca53a",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 221,
        "startChar": 39,
        "endLine": 221,
        "endChar": 55
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_65ecced8",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Is this meant to be current_chunk_list_ instead (I don\u0027t see the definition of num_chunk_lists_)?",
      "range": {
        "startLine": 221,
        "startChar": 39,
        "endLine": 221,
        "endChar": 55
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_5ab08904",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-04-28T00:32:30Z",
      "side": 1,
      "message": "is",
      "range": {
        "startLine": 222,
        "startChar": 38,
        "endLine": 222,
        "endChar": 41
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_c5d01a0a",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "Same.",
      "range": {
        "startLine": 222,
        "startChar": 74,
        "endLine": 222,
        "endChar": 90
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8801e53f_25cc8645",
        "filename": "runtime/monitor_pool.h",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-04-28T01:20:29Z",
      "side": 1,
      "message": "How about \"current_chunk_list_capacity_\"?",
      "range": {
        "startLine": 223,
        "startChar": 9,
        "endLine": 223,
        "endChar": 18
      },
      "revId": "4373815f48d3eaa79255962050ce19cd2ef8e1d9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}