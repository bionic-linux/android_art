{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "611e01c5_75b13af4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T12:56:53Z",
      "side": 1,
      "message": "Thanks for reviewing!",
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca95eea0_3a754bd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T18:42:28Z",
      "side": 1,
      "message": "ll",
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b11195f_eaf923d6",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T13:45:41Z",
      "side": 1,
      "message": "IIUC, the input is a colon-separated list, and if any element in this list is in /system or /system_ext, we consider the whole list as APK_ORIGIN_SYSTEM? Is this expected? Is there a way what an APK on /data can pretend to be APK_ORIGIN_SYSTEM by appending a jar on /system to the list?",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 42
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94f0694c_bf5a1a48",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T16:23:52Z",
      "side": 1,
      "message": "Like the `is_shared` flag, it\u0027s not easy to track this path list to its sources either. One important location is `zipPaths` here: https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/LoadedApk.java;l\u003d915;drc\u003dd2ba72bc5861fc75c0103ad514ef05d46e433e3d where it basically gets set from all the splits in the app, iow they\u0027re all in the same location, aren\u0027t they?\n\n\u003e Is there a way what an APK on /data can pretend to be APK_ORIGIN_SYSTEM by appending a jar on /system to the list?\n\nI don\u0027t see anything stopping apps from doing that sort of thing, but then they can just as well have their own class loader and load whatever they want. This isn\u0027t hard security, only sepolicy can provide that. The goal is just to stop accidental access.",
      "parentUuid": "4b11195f_eaf923d6",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 42
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "807d4332_94b2e248",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T17:00:21Z",
      "side": 1,
      "message": "Thanks for the clarification!",
      "parentUuid": "94f0694c_bf5a1a48",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 42
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17e1ef8c_9202f4c9",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T18:09:24Z",
      "side": 1,
      "message": "Btw, the logic in `GetApkOriginFromDexPath` is such that if any path is in vendor or product, they get classified as such. So to get APK_ORIGIN_SYSTEM, an app would need to only specify system paths.",
      "parentUuid": "807d4332_94b2e248",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 42
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5010bbad_651616ec",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T18:42:28Z",
      "side": 1,
      "message": "Alright... I guess it\u0027s a valid assumption that all dex files come from the same source, otherwise they wouldn\u0027t be loaded together.",
      "parentUuid": "17e1ef8c_9202f4c9",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 42
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0930bde_1f4213cc",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T13:45:41Z",
      "side": 1,
      "message": "What about /system/vendor? I see that as a symlink to /vendor on Cuttlefish.",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf826b60_9d2989fe",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T16:23:52Z",
      "side": 1,
      "message": "I don\u0027t know. My understanding was that only product could appear under /system/product on some devices. But I agree, that symlink is a bit worrying with the fallback to APK_ORIGIN_SYSTEM now.\n\nNote that if anyone does use /system/vendor they wouldn\u0027t get APK_ORIGIN_VENDOR treatment since R I think, and I haven\u0027t heard any complaints about that.\n\nI\u0027ll roll a CL to fix it anyway, seems like the least risky option.",
      "parentUuid": "f0930bde_1f4213cc",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e72c951d_e7ce3d6c",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T17:00:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cf826b60_9d2989fe",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d97b7706_6b135c5c",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T18:09:24Z",
      "side": 1,
      "message": "Sent out https://r.android.com/2216741.",
      "parentUuid": "e72c951d_e7ce3d6c",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87b998fa_c0e2bea9",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T13:45:41Z",
      "side": 1,
      "message": "Just curious, how?",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aec72f4c_72bbe41b",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T16:23:52Z",
      "side": 1,
      "message": "That\u0027s a really good question. The java entry point is here: https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/com/android/internal/os/ClassLoaderFactory.java;l\u003d161;drc\u003d24c57c33ea720de04c5e374c34480c751b43d9fc From there it forks into various places and it\u0027s not trivial to find all the origin sites.\n\nAnyway, in the higher Java levels the flag becomes `isBundled`, so I think the gist of it is any app (and system server) in the system partition. This I believe is one of the more important code paths: https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/LoadedApk.java;l\u003d886;drc\u003dd2ba72bc5861fc75c0103ad514ef05d46e433e3d where it starts off from `ApplicationInfo.isSystemApp` in PackageManager.\n\nI\u0027d love to see less tangled logic there, but atm I\u0027m assuming it works, whatever it is that it does. :\\",
      "parentUuid": "87b998fa_c0e2bea9",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fbae125_5f33ce84",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T17:00:21Z",
      "side": 1,
      "message": "Thanks for pointing out the relevant code. I would phrase this as something like \"System apps commonly get system library paths in the input java_library_path and java_permitted_path and hence ...\" WDYT?",
      "parentUuid": "aec72f4c_72bbe41b",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "310de4c5_ec658100",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T18:09:24Z",
      "side": 1,
      "message": "Well, what `is_shared` actually does is to set `ANDROID_NAMESPACE_TYPE_SHARED` in the `android_create_namespace` call, which makes the new namespace inherit all the paths of the parent one. That should indeed mean they \"commonly\" get those paths anyway, but that\u0027s a significantly longer chain of logic.\n\nIt\u0027d be easier to reason about this code if the `!is_shared` condition above wasn\u0027t present. I don\u0027t know of a situation when that\u0027d be wrong, except that search paths would likely accumulate more unnecessary duplicates.",
      "parentUuid": "7fbae125_5f33ce84",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efdd309d_19cbc403",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-13T18:42:28Z",
      "side": 1,
      "message": "Ughhh... I was misguided by the comment here: https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/app/LoadedApk.java;l\u003d933;drc\u003dd2ba72bc5861fc75c0103ad514ef05d46e433e3d. I thought access to system libs comes from there, but it actually comes from `is_shared`? Worth a comment.\n\nSomething like \"System apps commonly get access to system libs from the `is_shared` flag.",
      "parentUuid": "310de4c5_ec658100",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdd2d53a_61e16135",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-13T22:20:17Z",
      "side": 1,
      "message": "That could very well be true. The paths have to come from somewhere after all, and the top level app classloader namespace doesn\u0027t have a parent. However the situation here is that they load a shared library, which means another classloader namespace beneath the app one is being created. If a bundled/shared system app does that it won\u0027t go into this code, and then it works due to the inherited path.\n\n\u003e Something like \"System apps commonly get access to system libs from the  is_shared  flag.\n\nAll right, sent you https://r.android.com/2214689.",
      "parentUuid": "efdd309d_19cbc403",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ace13e8_a87192a4",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-09-14T09:54:15Z",
      "side": 1,
      "message": "The comment on line 72 says:\n\n```\nA shared namespace (cf. ANDROID_NAMESPACE_TYPE_SHARED) has\ninherited all the libraries of the parent classloader namespace, or the\nsystem namespace for the main app classloader.\"\n```\n\nI found relevant code here: https://cs.android.com/android/platform/superproject/+/master:art/libnativeloader/native_loader_namespace.cpp;l\u003d103?q\u003dNativeLoaderNamespace::Create\n\nSo it\u0027s very likely that the shared namespace that system apps get system libs from is the \"system namespace\".",
      "parentUuid": "fdd2d53a_61e16135",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d6500d2_1eb3daee",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-14T10:18:26Z",
      "side": 1,
      "message": "Yes, right. The line you found in LoadedApk.java just adds paths from java.library.path, which is typically empty except for tests and possibly vendor customisations. So I agree the comment there appear to be misleading.",
      "parentUuid": "7ace13e8_a87192a4",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 51
      },
      "revId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "AIDL-API-Review",
        "description": {
          "value": "Submit requirement for the AIDL-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(.*/)?aidl_api/.*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:AIDL-API-Review AND -label:AIDL-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(.*/)?aidl_api/.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(.*/)?aidl_api/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:AIDL-API-Review AND -label:AIDL-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "API-Review",
        "description": {
          "value": "Submit requirement for the API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:API-Review\u003dMAX AND -label:API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\"","project:device/generic/vulkan-cereal","project:platform/external/qemu","project:platform/hardware/interfaces","project:toolchain/go","project:platform/prebuilts/go/darwin-x86","project:platform/prebuilts/go/linux-x86","project:platform/system/tools/xsdc","project:platform/external/gfxstream-protocols","project:platform/frameworks/av","file:\".*/xmlparser/.*\"","project:platform/external/icu","file:\".*android_icu4j/api/legacy_platform/.*\"","project:platform/tools/base","file:\".*build-system/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:API-Review=MAX AND -label:API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Build-Team-Review",
        "description": {
          "value": "Build team review is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Build-Team-Review\u003dMAX AND -label:Build-Team-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"Import translations.\"","message:\"DO NOT MERGE ANYWHERE\"","branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Build-Team-Review=MAX AND -label:Build-Team-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the Code-Review requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Code-Review\u003dMIN AND (label:Code-Review\u003dMAX,user\u003dnon_uploader OR (label:Code-Review\u003dMAX AND (label:Exempt\u003d+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Code-Review=MIN AND (label:Code-Review=MAX,user=non_uploader OR (label:Code-Review=MAX AND (label:Exempt=+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN","label:Exempt=+1","uploader:1474732","project:platform/developers/docs","project:platform/frameworks/support"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers"]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "DrNo-Review",
        "description": {
          "value": "Submit requirement for the DrNo-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:DrNo-Review\u003dMAX AND -label:DrNo-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/heads/oreo-cts-dev","branch:refs/heads/oreo-mr1-cts-dev","branch:refs/heads/oreo-vts-dev","branch:refs/heads/oreo-mr1-vts-dev","branch:refs/heads/nougat-cts-dev","branch:refs/heads/nougat-mr1-cts-dev","branch:refs/heads/pie-cts-dev","branch:refs/heads/pie-vts-dev","branch:refs/heads/android10-tests-dev","branch:refs/heads/android11-tests-dev","branch:refs/heads/android12-tests-dev","branch:refs/heads/android12L-tests-dev","branch:refs/heads/android13-tests-dev","branch:^refs/heads/.*-gsi"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:DrNo-Review=MAX AND -label:DrNo-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Lint",
        "description": {
          "value": "Submit requirement for the Lint requirement"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Lint\u003dMIN AND (label:Lint\u003d+2 OR -label:Lint\u003d-1)"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Lint=MIN AND (label:Lint=+2 OR -label:Lint=-1)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Lint=MIN","label:Lint=+2","label:Lint=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "NDK-API-Review",
        "description": {
          "value": "Submit requirement for the NDK-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^.*\\\\.map\\\\.txt$\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:NDK-API-Review\u003dMAX AND -label:NDK-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^.*\\\\.map\\\\.txt$\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^.*\\\\.map\\\\.txt$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:NDK-API-Review=MAX AND -label:NDK-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Open-Source-Licensing",
        "description": {
          "value": "Submit requirement for the Open-Source-Licensing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Open-Source-Licensing\u003d0 OR (-label:Open-Source-Licensing\u003dMIN AND ((label:Open-Source-Licensing\u003dMAX AND label:Open-Source-Licensing\u003d-1) OR -label:Open-Source-Licensing\u003d-1))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Open-Source-Licensing=0 OR (-label:Open-Source-Licensing=MIN AND ((label:Open-Source-Licensing=MAX AND label:Open-Source-Licensing=-1) OR -label:Open-Source-Licensing=-1))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Open-Source-Licensing=0","label:Open-Source-Licensing=MIN","label:Open-Source-Licensing=MAX","label:Open-Source-Licensing=-1","label:Open-Source-Licensing=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Presubmit-Verified",
        "description": {
          "value": "Submit requirement for the Presubmit-Verified requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Presubmit-Verified\u003d-2 AND (label:Bypass-Presubmit\u003d+1 OR label:Presubmit-Verified-Together\u003d+1 OR (-label:Presubmit-Verified\u003d-1 AND (label:Presubmit-Verified\u003d+2 OR label:Presubmit-Verified\u003d+1)))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bypass-Presubmit\u003d+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override\u003d+1 AND is:pure-revert AND -label:Presubmit-Verified\u003d-2)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Presubmit-Verified=-2 AND (label:Bypass-Presubmit=+1 OR label:Presubmit-Verified-Together=+1 OR (-label:Presubmit-Verified=-1 AND (label:Presubmit-Verified=+2 OR label:Presubmit-Verified=+1)))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Presubmit-Verified=+2"],"failingAtoms":["label:Presubmit-Verified=-2","label:Bypass-Presubmit=+1","label:Presubmit-Verified-Together=+1","label:Presubmit-Verified=-1","label:Presubmit-Verified=+1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bypass-Presubmit=+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override=+1 AND is:pure-revert AND -label:Presubmit-Verified=-2)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bypass-Presubmit=+2","is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1","is:pure-revert","label:Presubmit-Verified=-2"]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Qualcomm-Review",
        "description": {
          "value": "Submit requirement for the Qualcomm-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Qualcomm-Review\u003dMAX AND -label:Qualcomm-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\"","project:\"^.*/vendor/(qcom|bsp).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Qualcomm-Review=MAX AND -label:Qualcomm-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a0a5d8ad760c73e7b21968aacc6232c091a893bb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}