{
  "comments": [
    {
      "key": {
        "uuid": "e9604856_ed412c5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-13T17:47:30Z",
      "side": 1,
      "message": "How about the GC we run in JitCodeCache::ReserveData ?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5043f4f9_93fbf9f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-13T17:57:30Z",
      "side": 1,
      "message": "That can still be *in theory* called if we max out the whole capacity.\n\nI believe that in practice we never take that path since data is smaller than code.\n\nSo, I would inclined to remove the GC there, and make a failure.",
      "parentUuid": "e9604856_ed412c5c",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8c7346d_3b6b94f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-13T18:00:35Z",
      "side": 1,
      "message": "But then what do we win form this CL?",
      "parentUuid": "5043f4f9_93fbf9f6",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "723aaac3_d29f4a9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-13T18:07:44Z",
      "side": 1,
      "message": "Ensuring that JitMemoryRegion::AllocateData does not randomly fail.\n(used in the followup CL)",
      "parentUuid": "c8c7346d_3b6b94f0",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78a4d968_7def40d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-13T18:37:10Z",
      "side": 1,
      "message": "I see. Do you want to clean up ReserveData then?",
      "parentUuid": "723aaac3_d29f4a9b",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f395ab36_d3d905b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-14T14:03:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78a4d968_7def40d4",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 30
      },
      "revId": "d9f42bdfc0fdd9f179c7d9da1697e703428a034a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}