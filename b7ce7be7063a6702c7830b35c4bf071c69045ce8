{
  "comments": [
    {
      "key": {
        "uuid": "fc7471da_818e6a04",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 3317,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-11-27T15:44:44Z",
      "side": 1,
      "message": "Add \"static\" and maybe also \"inline\".\n\nI was thinking it would be something like\n\n  static inline void GenerateFP16Compare(HInvoke* invoke,\n                                         CodeGeneratorARM64* codegen,\n                                         MacroAssembler* masm,\n                                         vixl::aarch64::Condition cond) {\n    auto compareOp \u003d [masm, cond](const Register out, const VRegister\u0026 in0, const VRegister\u0026 in1) {\n      __ Fcmp(in0, in1);\n      __ Cset(out, cond);\n    };\n    GenerateFP16Compare(invoke, codegen, masm, compareOp);\n  }\n\nBut if you want to keep this approach, it\u0027s fine with me.",
      "revId": "b7ce7be7063a6702c7830b35c4bf071c69045ce8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad6683ef_12fb0c0f",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 3327,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-11-27T15:44:44Z",
      "side": 1,
      "message": "Remove the top-level \"const\" and trailing \"_\".",
      "range": {
        "startLine": 3327,
        "startChar": 45,
        "endLine": 3327,
        "endChar": 59
      },
      "revId": "b7ce7be7063a6702c7830b35c4bf071c69045ce8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}