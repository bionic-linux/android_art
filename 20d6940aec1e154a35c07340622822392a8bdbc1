{
  "comments": [
    {
      "key": {
        "uuid": "103a56f6_201d8a66",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 524,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "I\u0027d drop, since the call is already on two lines.",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 524,
        "endChar": 35
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7048f2a0_1b471b11",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 524,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "eh, couldn\u0027t find a decent readable way to inline this even with two lines. I prefer this one over 3 lines for a single return statement.",
      "parentUuid": "103a56f6_201d8a66",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 524,
        "endChar": 35
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103a56f6_80129652",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "Add a helper in HGraphBuilder for this.",
      "range": {
        "startLine": 532,
        "startChar": 11,
        "endLine": 532,
        "endChar": 58
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103a56f6_80ea9671",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "103a56f6_80129652",
      "range": {
        "startLine": 532,
        "startChar": 11,
        "endLine": 532,
        "endChar": 58
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10089662_70b930dc",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "This looks odd: you\u0027re doing \"not\" but still adding the barrier...",
      "range": {
        "startLine": 535,
        "startChar": 17,
        "endLine": 535,
        "endChar": 45
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103a56f6_c003fec6",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "Obsolete.\nIt was correct because it tests the outer unit. If we don\u0027t need a barrier there we need to add one here.",
      "parentUuid": "10089662_70b930dc",
      "range": {
        "startLine": 535,
        "startChar": 17,
        "endLine": 535,
        "endChar": 45
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7048f2a0_5be9a3ac",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "I don\u0027t think this works if it\u0027s a constructor method that calls \"new\".",
      "range": {
        "startLine": 536,
        "startChar": 7,
        "endLine": 539,
        "endChar": 50
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7048f2a0_9b968bc4",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "Indeed. This whole optimization is bogus. There\u0027s no easy and safe way to decide on this pattern (dex does not support kAccSuper flag and calls to super have nothing special to differentiate them from `new` call). It might be possible to track the calls and figure it out but I\u0027ll leave it for another CL.",
      "parentUuid": "7048f2a0_5be9a3ac",
      "range": {
        "startLine": 536,
        "startChar": 7,
        "endLine": 539,
        "endChar": 50
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10089662_50beacc5",
        "filename": "test/476-checker-ctor-memory-barrier/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "Maybe check that there is no other barrier?",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 44
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7048f2a0_fb186f2a",
        "filename": "test/476-checker-ctor-memory-barrier/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "see below",
      "parentUuid": "10089662_50beacc5",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 44
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103a56f6_a0287a80",
        "filename": "test/476-checker-ctor-memory-barrier/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-20T09:01:38Z",
      "side": 1,
      "message": "What is this? Shouldn\u0027t you use CHECK-DAG to check the order?",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 22
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10089662_f0b240c3",
        "filename": "test/476-checker-ctor-memory-barrier/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-20T11:21:01Z",
      "side": 1,
      "message": "this checks that no other instruction is in between the barrier and the return (which includes another barrier),",
      "parentUuid": "103a56f6_a0287a80",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 22
      },
      "revId": "20d6940aec1e154a35c07340622822392a8bdbc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}