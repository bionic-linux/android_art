{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73389e78_f691179b",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 462,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-24T16:08:55Z",
      "side": 1,
      "message": "`-\u003eget()` is more obvious (throughout).",
      "range": {
        "startLine": 462,
        "startChar": 37,
        "endLine": 462,
        "endChar": 38
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8f0a27b_4b56df2d",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 462,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-24T19:05:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73389e78_f691179b",
      "range": {
        "startLine": 462,
        "startChar": 37,
        "endLine": 462,
        "endChar": 38
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bc56a4c_4c4d27f7",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-24T16:08:55Z",
      "side": 1,
      "message": "It\u0027s not obvious that this refactoring is a win, since `profile_path_` is optional while `tmp_profile_path_` isn\u0027t.\n\nIs this refactoring necessary in this CL? If not, then I suggest doing changes like this in separate CLs. Partly because this CL is already large and in a stack, so e.g. if a revert becomes necessary it\u0027s good to limit it. Also because doing changes like this later in the review (PS15..PS19) doesn\u0027t help with review speed.\n\nAnyway, now that I\u0027ve reviewed it there\u0027s no need to back it out.",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4982cb1d_457cf4a5",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-24T19:05:51Z",
      "side": 1,
      "message": "This change is required. Before this change, `tmp_profile_path_` was used as both an input profile and an output profile for simplicity, which was kind of a hack. After we added checks, we can no longer use the same path because the input profile has to be a non-pre-reboot one while we want to set the output profile to be a pre-reboot one in `ArtdPreRebootTest`\n\nAlthough `profile_path_` is optional, it\u0027s set by default, so its nonnullness is not a concern here.",
      "parentUuid": "3bc56a4c_4c4d27f7",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "535dc2fc_70750530",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-26T12:18:30Z",
      "side": 1,
      "message": "Oh, `ArtdPreRebootTest` inherits all the testcases from `ArtdTest`, so all its tests are effectively parameterised? But if that\u0027s the case, how does it work with e.g. the `deleteRuntimeArtifacts` test, which fails in pre-reboot?\n\nExplicit parameterisation has the benefit of making it much more clear, but it\u0027s possible it makes other things too clunky. If you don\u0027t like that approach then this state of affairs needs to be called out:\n\n- Mention for `ArtdPreRebootTest` that it inherits all the `ArtdTest` tests.\n\n- Add `is_pre_reboot` as a flag to `ArtdTest.SetUp` and move all the code that set `ArtdTest` state from `ArtdPreRebootTest.SetUp` into it as conditionals. This is important to get the correct picture for the fixtures and mocks when reading the tests, because one will look there but not in an inheriting class far below.\n\nI\u0027m still confused about what the deal is with the tests that call functions that are invalid for pre-reboot, though.",
      "parentUuid": "4982cb1d_457cf4a5",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dd892e8_1be69d66",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-26T13:59:31Z",
      "side": 1,
      "message": "There is no parameterized tests here. Inheriting `ArtdTest` only inherits its setup (variables like `profile_path_`, `tmp_profile_path_`, etc.), which we don\u0027t want to duplicate here, but **not** its tests.",
      "parentUuid": "535dc2fc_70750530",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83c5fd2e_cb891677",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-26T14:03:52Z",
      "side": 1,
      "message": "To add more, Inheriting `ArtdTest` also inherits its protected methods, such as `RunCopyAndRewriteProfile`, which we are using in `ArtdPreRebootTest`. That method used to use `tmp_profile_path_` for both the input and the output, and I have to change it in this CL to separate the input and the output, or it won\u0027t work in `ArtdPreRebootTest`.",
      "parentUuid": "4dd892e8_1be69d66",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe48b58_992dfb47",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1394,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-26T16:36:44Z",
      "side": 1,
      "message": "\u003e Inheriting ArtdTest only inherits its setup (variables like profile_path_, tmp_profile_path_, etc.), which we don\u0027t want to duplicate here, but not its tests.\n\nAll right, so at least gtest works as I thought. But then I don\u0027t see how using `tmp_profile_path_` for both input and output profile can cause these `ArtdTest` tests to fail. Were the changes made just for consistency with `ArtdPreRebootTest` tests?\n\nAlso, isn\u0027t it a pretty good idea to do parameterise all the tests that should work the same for normal and pre-reboot artd? Not for this CL, but definitely something to consider.",
      "parentUuid": "83c5fd2e_cb891677",
      "range": {
        "startLine": 1394,
        "startChar": 34,
        "endLine": 1394,
        "endChar": 70
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82b8be16_a4c62b1d",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1858,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-04-24T16:08:55Z",
      "side": 1,
      "message": "With `reference_profile_path_` in the previous code it was obvious that lines 1845 and 1858 were referring to the same file, but now one needs to look at SetUp to figure that out, which makes this less readable. If you want to stick with this then please get the `TmpProfilePath` out of `profile_path_` here. (Same goes for the other tests where `reference_profile_path` is deleted.)\n\n(Another step that\u0027d simplify this would be to remove `tmp_profile_path_` completely in favour if `profile_path_`, if that\u0027s possible. However, that\u0027d be for another time.)",
      "range": {
        "startLine": 1858,
        "startChar": 46,
        "endLine": 1858,
        "endChar": 63
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d68d10d5_acf005e7",
        "filename": "artd/artd_test.cc",
        "patchSetId": 19
      },
      "lineNbr": 1858,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-04-24T19:05:51Z",
      "side": 1,
      "message": "The intention is to use two separate files for input and output. I used the same file for simplicity, but it was a hack and it no longer works after I added the checks.",
      "parentUuid": "82b8be16_a4c62b1d",
      "range": {
        "startLine": 1858,
        "startChar": 46,
        "endLine": 1858,
        "endChar": 63
      },
      "revId": "cbc70a8bff7d9b66e907154ee2545c778fdeb9cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}