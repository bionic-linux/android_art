{
  "comments": [
    {
      "key": {
        "uuid": "305b1f41_4d5d2d48",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "What prevents using induction analysis?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 62
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_02dbee6f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "I am mostly using induction analysis information (see below to get last value), but this is a quick cycle recognizer for the simple case.\n\nI plan to replace this with a general cycle operation by storing the cycle during analysis and reusing it here (rather than finding it again), but this requires a bit more work getting this from induction analysis to here.\n\nThis CL is really just a start, to get the ball rolling.",
      "parentUuid": "305b1f41_4d5d2d48",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 62
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_2d62f90f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "check if `block` is the header of an empty loop.\n\nBut actually the name of the method is good enough and doesn\u0027t require a comment IMO.",
      "range": {
        "startLine": 55,
        "startChar": 20,
        "endLine": 55,
        "endChar": 52
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_c2d4e63e",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_2d62f90f",
      "range": {
        "startLine": 55,
        "startChar": 20,
        "endLine": 55,
        "endChar": 52
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c54be3fb_1b9edb07",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-27T13:48:35Z",
      "side": 1,
      "message": "Actually... My comment wasn\u0027t clear :) I\u0027d keep the lines 56-59 below still.",
      "parentUuid": "305b1f41_2d62f90f",
      "range": {
        "startLine": 55,
        "startChar": 20,
        "endLine": 55,
        "endChar": 52
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5c1c7c3_107dc10a",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-28T22:14:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c54be3fb_1b9edb07",
      "range": {
        "startLine": 55,
        "startChar": 20,
        "endLine": 55,
        "endChar": 52
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_ed6bc1e6",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": ":)",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 47
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_a2d9da74",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_ed6bc1e6",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 47
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_0d673520",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Maybe add a block-\u003eGetSinglePhi()?",
      "range": {
        "startLine": 63,
        "startChar": 24,
        "endLine": 63,
        "endChar": 49
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0938fd9_1d74c65e",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-23T19:58:38Z",
      "side": 1,
      "message": "Perhaps, but it won\u0027t save much code (and all the phi getters in nodes.h are nice and small, this would break that a bit).",
      "parentUuid": "305b1f41_0d673520",
      "range": {
        "startLine": 63,
        "startChar": 24,
        "endLine": 63,
        "endChar": 49
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_cd68fdec",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "ditto about the comment.",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 84,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_45f34066",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_cd68fdec",
      "range": {
        "startLine": 84,
        "startChar": 3,
        "endLine": 84,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_ad75c9c2",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "ditto\n\nBut a comment on what conditions can a pre header can be removed could be nice.",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_c25506c2",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "removed, conditions are documented below; is that                      description sufficient?",
      "parentUuid": "305b1f41_ad75c9c2",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_8d7205d7",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Since you\u0027re changing the block, I\u0027d suggest changing the method name / re-arrange the code to convey it\u0027s not just a predicate.",
      "range": {
        "startLine": 110,
        "startChar": 10,
        "endLine": 110,
        "endChar": 43
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_625d12e4",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_8d7205d7",
      "range": {
        "startLine": 110,
        "startChar": 10,
        "endLine": 110,
        "endChar": 43
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_6d411160",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 145,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Expand the comment on why you need the graph to be linearized?",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_058e58e0",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 145,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_6d411160",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 51
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f09507fc_1dcbb36f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Do the LoopNode escape this pass? You might consider having your own ArenaAllocator.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 59
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_65a87c2b",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Good point. They don\u0027t escape, so I was wasting bytes for nothing! Fixed.\n\nBy the way, we don\u0027t seem to do this very often, right? I could only find one other instance in the just introduced graph coloring reg allocator?",
      "parentUuid": "f09507fc_1dcbb36f",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 59
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "909beb7b_7212f869",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-21T21:35:37Z",
      "side": 1,
      "message": "Yeah, initially we only used one arena for simplicity, but we should really revisit each pass and change to use more pass-level scoped arena.",
      "parentUuid": "d0b2c310_65a87c2b",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 59
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5c1c7c3_30843d0c",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-28T22:14:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "909beb7b_7212f869",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 59
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_4d464d7a",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 209,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "environment",
      "range": {
        "startLine": 209,
        "startChar": 54,
        "endLine": 209,
        "endChar": 57
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_c53ab0f4",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 209,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_4d464d7a",
      "range": {
        "startLine": 209,
        "startChar": 54,
        "endLine": 209,
        "endChar": 57
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_2d3b19fa",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 220,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "environment",
      "range": {
        "startLine": 220,
        "startChar": 54,
        "endLine": 220,
        "endChar": 57
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_a53fa4e2",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 220,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_2d3b19fa",
      "range": {
        "startLine": 220,
        "startChar": 54,
        "endLine": 220,
        "endChar": 57
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_0d405558",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "environment",
      "range": {
        "startLine": 224,
        "startChar": 42,
        "endLine": 224,
        "endChar": 45
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_6552bc30",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "305b1f41_0d405558",
      "range": {
        "startLine": 224,
        "startChar": 42,
        "endLine": 224,
        "endChar": 45
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_ed54e11c",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 231,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "RemoveIfEmptyLoop?",
      "range": {
        "startLine": 231,
        "startChar": 24,
        "endLine": 231,
        "endChar": 39
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "508b33e0_c6d9f60f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 235,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Although I think I understand this comment :) you might want to be more explicit.",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 35
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_651bdc8a",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 235,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "508b33e0_c6d9f60f",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 35
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0462f6a_a62168b0",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "I guess this guarding against body branching to the exit too? Please add a comment (I think single exit is not really clear here).",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 253,
        "endChar": 3
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_0504181f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0462f6a_a62168b0",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 253,
        "endChar": 3
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f050a71d_6bf9f568",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "nit: replace the parens with \u0027:\u0027",
      "range": {
        "startLine": 254,
        "startChar": 25,
        "endLine": 254,
        "endChar": 27
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_857388a7",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f050a71d_6bf9f568",
      "range": {
        "startLine": 254,
        "startChar": 25,
        "endLine": 254,
        "endChar": 27
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f09507fc_7dd67718",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "as",
      "range": {
        "startLine": 30,
        "startChar": 35,
        "endLine": 30,
        "endChar": 36
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_02564eff",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f09507fc_7dd67718",
      "range": {
        "startLine": 30,
        "startChar": 35,
        "endLine": 30,
        "endChar": 36
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d049e37c_4a099735",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "loop_info",
      "range": {
        "startLine": 45,
        "startChar": 40,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_824a5e4f",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done (well, at least made it lp_info, since we still have loop_info below)",
      "parentUuid": "d049e37c_4a099735",
      "range": {
        "startLine": 45,
        "startChar": 40,
        "endLine": 45,
        "endChar": 41
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "508b33e0_a6dcf200",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "const?",
      "range": {
        "startLine": 51,
        "startChar": 21,
        "endLine": 51,
        "endChar": 22
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_4297b695",
        "filename": "compiler/optimizing/loop_optimization.h",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "508b33e0_a6dcf200",
      "range": {
        "startLine": 51,
        "startChar": 21,
        "endLine": 51,
        "endChar": 22
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_cd511d2b",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Since liveness analysis will create a new linear order, should this method just return the linear order (without updating the field), and only liveness update the field?",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_85aee89e",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "I am not sure I understand completely, but this seems sufficiently general? (basically I make the method re-entrant).",
      "parentUuid": "305b1f41_cd511d2b",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "909beb7b_92067c2c",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-21T21:35:37Z",
      "side": 1,
      "message": "It\u0027s just that it feels cleaner to have one method that creates and returns the linear order, and one other method that sets it in the graph. The loop pass would just call the one that creates, whereas the liveness will call the creation and then sets it in the graph.",
      "parentUuid": "d0b2c310_85aee89e",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "650077b3_58d63dbe",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-27T13:48:35Z",
      "side": 1,
      "message": "ping on this one? I really think it\u0027s cleaner :)",
      "parentUuid": "909beb7b_92067c2c",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5c1c7c3_f03bc5ec",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-28T22:14:41Z",
      "side": 1,
      "message": "Ah, I think I understand now, but I don\u0027t think we can just build it in liveness. Between liveness and loop we have, e.g. BCE, which adds blocks. So we need the resize, and rebuild right at the point we need the new order.\n\nOr am I still not understanding fully?",
      "parentUuid": "650077b3_58d63dbe",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "452ff370_c70d1e4e",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-29T09:05:02Z",
      "side": 1,
      "message": "No :)\n\nSo the linear order is currently only computed by liveness analysis (SsaLivenessAnalysis::Analyze), which is a point where it\u0027s guaranteed no new blocks will be added/removed. The register allocator and the code generator use that order too.\n\nYou are adding a new optimization pass that also wants a linear order. However that order is really only for that pass, as passes after it can change the control flow.\n\nSo instead of having the new pass set something that will become invalid right after, what I\u0027m suggesting is having a static helper that will return the linear order. The loop optimization pass will call that and store the linear order in its private class. And the SsaLivenessAnalysis will also call that helper, but will store it in the graph.\n\nNote that having the linear order in the graph is primarily a convenience way of accessing it in liveness/RA/Codegen. We could record the linear order in the codegen class instead.",
      "parentUuid": "e5c1c7c3_f03bc5ec",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a28505ca_9d47b477",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-30T16:20:41Z",
      "side": 1,
      "message": "That would mean that reverse_post_order_ and      linear_order_ become very different. Incrementally keeping the linear_order_ up to date would make them more similar, but i am not sure we want to go there. Also this would mean that some (all?) HXXXXOrderIterator now need to provide a different constructor (want that takes the order, not the graph). And finally, we need a setter on the linear order. Is that really simpler than what I have now?\n\nIf you really want to avoid the \"getting stale\" property, we should do a major refactoring to restrict ownership of orders and their iterators.",
      "parentUuid": "452ff370_c70d1e4e",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_4673b279",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-03T08:54:19Z",
      "side": 1,
      "message": "Ah it\u0027s the iterator you worry about, I see.\n\nSo linear order used to be something just for the code generator / register allocator, so again, a better place for it could have been in CodeGenerator, and then you don\u0027t need a setter in HGraph.\n\nAnd if you look at the iterators, they just have fancy names for something that just iterates from start to end or end to start.\n\nI\u0027m indeed not fund of the \"getting stale\" state, even though, yes, it\u0027s simpler :). It feels very easy to have someone mistakenly using it. Which is the main reason for me arguing here. I don\u0027t think we have any stale state in HGraph, it\u0027d be great to avoid it.\n\nI don\u0027t want to hold off this change though, or block you. I\u0027d prefer having the linear order cleanup done first, or as part of this change, but will comply if you prefer to do it as a follow-up of this change.",
      "parentUuid": "a28505ca_9d47b477",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a28505ca_663ecd15",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 526,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-10-03T17:22:25Z",
      "side": 1,
      "message": "No worries, there is no rush to get this in immediately, so there is time to get this done the way you prefer. Let me try to do what you are asking for in this CL and see if you like the solution (if not, we can make it a TODO and try later, but at least I want to give it a shot now).",
      "parentUuid": "22b035be_4673b279",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30907f09_622d789f",
        "filename": "test/618-checker-induction/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "Check that this is still here? (applies to other tests below)",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 15
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_45b8e0df",
        "filename": "test/618-checker-induction/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30907f09_622d789f",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 15
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305b1f41_ad4ee988",
        "filename": "test/618-checker-induction/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 153,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-20T21:23:52Z",
      "side": 1,
      "message": "CHECK the value returned? (here and other tests below)",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 44
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0b2c310_6594fc41",
        "filename": "test/618-checker-induction/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 153,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-09-21T21:28:05Z",
      "side": 1,
      "message": "ok (note that I also do that functionally by running the method; but I can CHECK explicitly on that as well)",
      "parentUuid": "305b1f41_ad4ee988",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 44
      },
      "revId": "5790e9d349c6008f2bdff1cc64573438a48ace4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}