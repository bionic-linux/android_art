{
  "comments": [
    {
      "key": {
        "uuid": "b5ebf779_13d4ad21",
        "filename": "runtime/openjdkjvmti/jvmti_weak_table.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-31T11:48:04Z",
      "side": 1,
      "message": "As the JvmtiWeakTable\u003c\u003e is a template, this is unnecessary for correctness with respect to ODR.",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "8ea4eec9139da904979792a0660e992c3f6318d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5b9e7c_c7ffcb49",
        "filename": "runtime/openjdkjvmti/jvmti_weak_table.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-05-31T14:54:20Z",
      "side": 1,
      "message": "Not according to clang-analyzer...",
      "parentUuid": "b5ebf779_13d4ad21",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "8ea4eec9139da904979792a0660e992c3f6318d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1b804a8_46e9b836",
        "filename": "runtime/openjdkjvmti/jvmti_weak_table.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-31T15:20:33Z",
      "side": 1,
      "message": "3.2/6: There can be more than one definition of [...] member function of a class template [...] in a program provided that each definition appears in a different translation unit, and provided the definitions satisfy the following requirements. [...]\n\nEither the clang-analyser is broken or we broke some of the requirements that follow. Is there an additional message why did clang-analyser conclude that it violates the ODR?\n\nAlso, if there is an ODR violation, this \"fix\" did not fix the debug build where we define ALWAYS_INLINE as blank rather than \"inline\".",
      "parentUuid": "df5b9e7c_c7ffcb49",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "8ea4eec9139da904979792a0660e992c3f6318d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12656b60_53ad260f",
        "filename": "runtime/openjdkjvmti/jvmti_weak_table.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-05-31T15:26:59Z",
      "side": 1,
      "message": "It doesn\u0027t state that it is an ODR violation, only that it can lead to one. It\u0027s a cleanliness warning (and of course has zero diagnostics)...\n\n(And yes, I probably should have marked them ALWAYS_INLINE inline?)",
      "parentUuid": "a1b804a8_46e9b836",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "8ea4eec9139da904979792a0660e992c3f6318d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84e40e56_9e059f21",
        "filename": "runtime/openjdkjvmti/jvmti_weak_table.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-31T16:47:45Z",
      "side": 1,
      "message": "But why does it warn only here then? Is there something special here?\n\nNote that being \"inline\" does not actually remove any ODR requirements for member functions of template classes, so it should not silence the warning anyway.\n\nAnd non-template inline functions have very much the same rules as member functions of template classes when it comes to ODR, so why are we not getting warnings for them as well?\n\n(Maybe the #define ALWAYS_INLINE should include \"inline\" for both debug and release builds. The \"ALWAYS_INLINE inline\" is an odd pattern.)",
      "parentUuid": "12656b60_53ad260f",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "8ea4eec9139da904979792a0660e992c3f6318d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}