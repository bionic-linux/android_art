{
  "comments": [
    {
      "key": {
        "uuid": "22b035be_a609468c",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 32
      },
      "lineNbr": 1429,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-30T09:56:21Z",
      "side": 1,
      "message": "This early return needs to go back line 1411.",
      "range": {
        "startLine": 1428,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 25
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_c640028d",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 32
      },
      "lineNbr": 1429,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-09-30T10:15:23Z",
      "side": 1,
      "message": "No, it\u0027s right where it belongs. Empty string is compressed, so at line 1411 it yields ECX\u003d0x80000000.\n\n(Though I intend to move that back when I flip the meaning of the compression flag later.)",
      "parentUuid": "22b035be_a609468c",
      "range": {
        "startLine": 1428,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 25
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_46bad28d",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 32
      },
      "lineNbr": 1429,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-30T10:20:06Z",
      "side": 1,
      "message": "Sorry wasn\u0027t clear enough: if kUseStringCompression is false, we should do early return like before.",
      "parentUuid": "22b035be_c640028d",
      "range": {
        "startLine": 1428,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 25
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_66bfce7c",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 32
      },
      "lineNbr": 1429,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-09-30T10:39:08Z",
      "side": 1,
      "message": "OK. But instead of introducing additional `if`s, we could just reorder the whole section in lines 1416-1429 with the LEAs in lines 1412-1414.",
      "parentUuid": "22b035be_46bad28d",
      "range": {
        "startLine": 1428,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 25
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_46641247",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 32
      },
      "lineNbr": 1595,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-09-30T09:56:21Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1594,
        "startChar": 0,
        "endLine": 1595,
        "endChar": 23
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b035be_e63dfe17",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 32
      },
      "lineNbr": 1595,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-09-30T10:15:23Z",
      "side": 1,
      "message": "No, see x86.",
      "parentUuid": "22b035be_46641247",
      "range": {
        "startLine": 1594,
        "startChar": 0,
        "endLine": 1595,
        "endChar": 23
      },
      "revId": "62d689845e4c3e4c2b0ca7866fca8b715a62fd4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}