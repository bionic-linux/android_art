{
  "comments": [
    {
      "key": {
        "uuid": "e4298d86_776e82aa",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Why is this templated?",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42489af_960c52f6",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "The elf file is templated internally. This seems to be the way this is done (see line 764 of this file)",
      "parentUuid": "e4298d86_776e82aa",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 31
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42489af_933b444f",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Add a comment describing what this function does?",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 75
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "645f5d28_91d9fb6b",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c42489af_933b444f",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 75
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "046a21d9_5757ccd7",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "What is this check for?",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 100,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "046a21d9_fd4d9f93",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "just to make sure it worked.",
      "parentUuid": "046a21d9_5757ccd7",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 100,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4298d86_3778fa66",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Use OatFile::GetOatHeader() instead?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 105,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64367de0_d8d0c5c3",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "It does a bunch of set up and init we don\u0027t need/want (like verifying all the dex files) also we don\u0027t might not know what the location this comes from is so we cannot use OatFile class since it uses that to verify the file.",
      "parentUuid": "e4298d86_3778fa66",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 105,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f5c13c_a8da5fdd",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Should this be const ElfFile*?",
      "range": {
        "startLine": 111,
        "startChar": 29,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f5c13c_68ee9781",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Add a comment describing what this function does?",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 82
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64111d42_69b57119",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04f5c13c_68ee9781",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 82
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4f6494b_3120f8a0",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04f5c13c_a8da5fdd",
      "range": {
        "startLine": 111,
        "startChar": 29,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "645f5d28_24d8ce61",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "What does it mean to patch an image to match itself? Won\u0027t current_delta always be the same as delta in this case?",
      "range": {
        "startLine": 190,
        "startChar": 1,
        "endLine": 191,
        "endChar": 2
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4298d86_2211d68f",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "This is for the (theoretical) future use case where apps might have images that need to be relocated. Further we could add in a --set-patch-delta-to\u003d... flag which this would be useful for.\n\nremoved.",
      "parentUuid": "645f5d28_24d8ce61",
      "range": {
        "startLine": 190,
        "startChar": 1,
        "endLine": 191,
        "endChar": 2
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4298d86_d72bf631",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 750,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-08-12T17:35:02Z",
      "side": 1,
      "message": "Why is this code duplicated from above?",
      "range": {
        "startLine": 744,
        "startChar": 0,
        "endLine": 750,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f5c13c_19999b4d",
        "filename": "patchoat/patchoat.cc",
        "patchSetId": 1
      },
      "lineNbr": 750,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-08-12T22:13:42Z",
      "side": 1,
      "message": "We need to do the same thing in both places and it cannot really be pulled out into a new function.",
      "parentUuid": "e4298d86_d72bf631",
      "range": {
        "startLine": 744,
        "startChar": 0,
        "endLine": 750,
        "endChar": 3
      },
      "revId": "ef139e640d6caf262917cd37ebaf56a4afb93250",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}