{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8794dd2b_25c7db3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T11:41:56Z",
      "side": 1,
      "message": "Martin: What are your thoughts on capitalization.\nI would be tempted to make the method names capital:\nExtDexFile_GetAllMethodInfos -\u003e ExtDexFile::GetAllMethodInfos\n\nThe guideline is non-specific, but some of the examples hint at lower case.",
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fbc8e39_ec84f093",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T14:03:56Z",
      "side": 1,
      "message": "I think the guide is clear on that they shouldn\u0027t be capitalized:\n\n\u003e Class methods should follow AClassName_methodName naming\n\nThat\u0027s a bit at odds with the C++ style guide. I guess it originates from JNI use cases.\n\nI also prefer AClassName_MethodName for this pure native interface. Maybe enh@ can clarify?",
      "parentUuid": "8794dd2b_25c7db3a",
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5d35af5_fbaafa31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T14:41:42Z",
      "side": 1,
      "message": "I assume the motivation is lower case matches lower-case convention of java.\nBut since the intended use case here is C++, I would go for upper case.\nI will make it upper case for now.  enh@ can veto",
      "parentUuid": "9fbc8e39_ec84f093",
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1652e78e_57d836ed",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T14:03:56Z",
      "side": 1,
      "message": "This could be more precise: It must be used before the next call to NewMethodInfo. (Since the general assumption is thread-unsafety, that\u0027s the only restriction.)",
      "range": {
        "startLine": 85,
        "startChar": 5,
        "endLine": 85,
        "endChar": 89
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa52175a_aa94a22f",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T14:41:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1652e78e_57d836ed",
      "range": {
        "startLine": 85,
        "startChar": 5,
        "endLine": 85,
        "endChar": 89
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0198f47f_9778e29c",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T14:03:56Z",
      "side": 1,
      "message": "Nit: ASSERT_FALSE(",
      "range": {
        "startLine": 253,
        "startChar": 4,
        "endLine": 253,
        "endChar": 17
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3a7a10f_1fcd64dd",
        "filename": "libdexfile/external/dex_file_supp_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T14:41:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0198f47f_9778e29c",
      "range": {
        "startLine": 253,
        "startChar": 4,
        "endLine": 253,
        "endChar": 17
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88fa64c4_4bbfa0d1",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T14:58:46Z",
      "side": 1,
      "message": "http://go/cstyle#Enumerator_Names says these should be prefixed with \"k\", and I can\u0027t find anything overriding it in go/android-ndk-api-guidelines, so afaics these should be kept.",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13d4e794_9285370e",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T15:10:38Z",
      "side": 1,
      "message": "Right, it seems most NDK still follows the MACRO_NAME convention.\n\nShould it be ExtDexFileError_kOk or kExtDexFileError_Ok?",
      "parentUuid": "88fa64c4_4bbfa0d1",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767d4b33_8b8b9946",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T15:28:04Z",
      "side": 1,
      "message": "I reason that ExtDexFileError_Ok is the identifier, so the k prefix should be in front of all of it, i.e. kExtDexFileError_Ok. But I haven\u0027t checked other APIs (MACRO_NAME looks like, well, a macro, which these aren\u0027t, so I\u0027d be inclined to view it as a historical artefact rather than good guidance.)",
      "parentUuid": "13d4e794_9285370e",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11961bba_c958e7cf",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-29T15:33:05Z",
      "side": 1,
      "message": "I would reason that Ok is the identifier, and ExtDexFileError_ is just C mangling prefix so it should be ExtDexFileError_kSuccess.",
      "parentUuid": "767d4b33_8b8b9946",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48515077_734cccff",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T15:44:31Z",
      "side": 1,
      "message": "So the question is whether the naming guidelines should apply to the full (\"mangled\") identifier or the \"pure\" identifier in some sense. Since the go/cstyle doesn\u0027t recognise such mangling and go/android-ndk-api-guidelines doesn\u0027t say anything about prefixing the \"pure\" identifiers I think the former is the more natural interpretation. Another aspect is that the \"k\" is hard to see in the middle and hence loses its purpose a bit.\n\nI don\u0027t care overly much either way, except that it\u0027d be great if go/android-ndk-api-guidelines could mention this so we don\u0027t need to discuss it.",
      "parentUuid": "11961bba_c958e7cf",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78abd76a_6a2b3e64",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2021-03-30T22:51:42Z",
      "side": 1,
      "message": "Have opened that discussion with the other council members. AFAICT all of our APIs are ALL_CAPS and we\u0027ll encode that existing practice.",
      "parentUuid": "48515077_734cccff",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09d4fc94_062fd4ae",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-31T00:12:57Z",
      "side": 1,
      "message": "The NDK guildline does not say anything about enums and https://engdoc.corp.google.com/eng/doc/devguide/cpp/styleguide.md?cl\u003dhead#Enumerator_Names explicitly says ALL_CAPS should not be used.",
      "parentUuid": "78abd76a_6a2b3e64",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "317d9a1e_673177cb",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2021-03-31T00:54:15Z",
      "side": 1,
      "message": "It does now: https://g3doc.corp.google.com/company/teams/android-api-council/ndk_guidelines.md?cl\u003dhead#naming",
      "parentUuid": "09d4fc94_062fd4ae",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da7e7ac_d0c011e5",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-03-31T18:41:27Z",
      "side": 1,
      "message": "Is it worth adding something like \"We are aware the APP_CAPS has been deprecated in Google for new code, but we are still following it here because... (ALL_CAPS is the C way?)\"",
      "parentUuid": "317d9a1e_673177cb",
      "range": {
        "startLine": 44,
        "startChar": 2,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f2b54a_ef042410",
        "filename": "libdexfile/external/include/art_api/dex_file_external.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-03-29T14:58:46Z",
      "side": 1,
      "message": "Assuming you\u0027re confident we don\u0027t want to add object-level flags at some point.",
      "range": {
        "startLine": 51,
        "startChar": 15,
        "endLine": 51,
        "endChar": 21
      },
      "revId": "abbda3eb5a5a0faee04b1f146721bec2d7a7a1a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}