{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34bdfc91_52367fd6",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 71,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "It\u0027d be slightly more stringent to have different values for unset and Mainline update, so that we could e.g. detect if the caller has forgotten the `updateOtaSlot` call. I don\u0027t feel strongly about it though.",
      "range": {
        "startLine": 71,
        "startChar": 59,
        "endLine": 71,
        "endChar": 63
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659a8b91_a56b93c7",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 85,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Not sure I understand this warning, but my best guess is that it wants a call to `exceptionally` or something similar on the returned future to report any thrown exception. Maybe the error handling on line 164 is better off in something like that? Then I suppose it\u0027d apply to the stage below as well.\n\n---\n\nPlease fix this WARNING reported by Error Prone: [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n\nAnalyzer Description: Warnings generated by errorprone.\nOwner: farivar@google.com\n\n    [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n            start().thenRunAsync(() -\u003e {\n                                ^\n        (see https://errorprone.info/bugpattern/FutureReturnValueIgnored)\n      Did you mean \u0027var unused \u003d start().thenRunAsync(() -\u003e {\u0027 or to remove this line?\n\nUse `m RUN_ERROR_PRONE\u003dtrue MyModule` to reproduce locally.\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P74016640/targets/errorprone-trunk_staging, but may also be present on other builds.\n\nThis is a different branch than your cl originated on (it was automerged), and thus might better reflect the state of the code in the git_main branch.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 36
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc43ad75_ff6abc19",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Typo: \"likely\"\n```suggestion\n            // it will likely fail again. If it\u0027s cancelled, the job will be rescheduled because the\n```",
      "range": {
        "startLine": 87,
        "startChar": 23,
        "endLine": 87,
        "endChar": 27
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68836f79_13097fb4",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 97,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Is it wise to block here? I\u0027m thinking it may be better to split `cancel` into one method that cancels and another that waits.",
      "range": {
        "startLine": 97,
        "startChar": 8,
        "endLine": 97,
        "endChar": 17
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cb82f5d_edd7f530",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 99,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "How do retries work? `dexoptPackages` will start over with a new snapshot, but is the intention that it\u0027ll quickly skip over already dexopted and staged packages? If so, that bears testing.",
      "range": {
        "startLine": 99,
        "startChar": 15,
        "endLine": 99,
        "endChar": 19
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e294b889_69cb452e",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 175,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Typo: \"waits\"\n```suggestion\n    /** Cancels the job and waits for the job to exit. */\n```",
      "range": {
        "startLine": 175,
        "startChar": 28,
        "endLine": 175,
        "endChar": 32
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2d96b10_eda99fd4",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 176,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "If you\u0027d like to keep the wait in this method, I suggest calling it something like `cancelAndWait` to make the difference from `BackgroundDexoptJob.cancel` more clear.",
      "range": {
        "startLine": 176,
        "startChar": 16,
        "endLine": 176,
        "endChar": 22
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53bb0347_792f66df",
        "filename": "libartservice/service/java/com/android/server/art/PreRebootDexoptJob.java",
        "patchSetId": 21
      },
      "lineNbr": 180,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Given that many call sites call this both via `unschedule` and directly, this will happen more often than not, won\u0027t it? Then I suspect this log will be of little value.\n\nAnother approach is to let `cancel` only cancel, as it does in `BackgroundDexoptJob`, and have a separate method to wait.",
      "range": {
        "startLine": 180,
        "startChar": 16,
        "endLine": 180,
        "endChar": 49
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53a08e35_f3c3b7b3",
        "filename": "libartservice/service/javatests/com/android/server/art/PreRebootDexoptJobTest.java",
        "patchSetId": 21
      },
      "lineNbr": 195,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-05-02T13:12:07Z",
      "side": 1,
      "message": "Suggest the `var unused \u003d ...` thing to silence this.\n\n---\n\nPlease fix this WARNING reported by Error Prone: [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n\nAnalyzer Description: Warnings generated by errorprone.\nOwner: farivar@google.com\n\n    [FutureReturnValueIgnored] Return value of methods returning Future must be checked. Ignoring returned Futures suppresses exceptions thrown from the code that completes the Future.\n            mPreRebootDexoptJob.start();\n                                     ^\n        (see https://errorprone.info/bugpattern/FutureReturnValueIgnored)\n      Did you mean \u0027var unused \u003d mPreRebootDexoptJob.start();\u0027 or to remove this line?\n\nUse `m RUN_ERROR_PRONE\u003dtrue MyModule` to reproduce locally.\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P74016640/targets/errorprone-trunk_staging, but may also be present on other builds.\n\nThis is a different branch than your cl originated on (it was automerged), and thus might better reflect the state of the code in the git_main branch.",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 195,
        "endChar": 36
      },
      "revId": "895342eaaebce01880f9a2d0ec92046993524611",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}