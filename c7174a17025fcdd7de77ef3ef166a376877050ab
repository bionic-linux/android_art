{
  "comments": [
    {
      "key": {
        "uuid": "6a85b882_a605930f",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-10-05T17:10:12Z",
      "side": 1,
      "message": "Why?",
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c64bd983_fe171dc6",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-10-05T17:21:27Z",
      "side": 1,
      "message": "We changed the RequestSynchronousCheckpoint method so we need to control the mutex\u0027s directly.",
      "parentUuid": "6a85b882_a605930f",
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c399535_f6599c8d",
        "filename": "runtime/monitor.cc",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-10-05T17:10:12Z",
      "side": 1,
      "message": "???",
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b2f627f_d7cfe407",
        "filename": "runtime/monitor.cc",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-10-05T17:21:27Z",
      "side": 1,
      "message": "Need to make sure the lock state is the same at line 489 regardless of the path through this \u0027if\u0027",
      "parentUuid": "8c399535_f6599c8d",
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "668f9db1_243c09eb",
        "filename": "runtime/thread.h",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-05T18:14:40Z",
      "side": 1,
      "message": "Up for discussion: Maybe we should add a Release() to MutexLock in the sense of a unique_lock/unique_ptr, and pass the Mutex* in here? To make things more explicit, and not require the ugly ExclusiveLock/Unlock hoops?",
      "range": {
        "startLine": 268,
        "startChar": 7,
        "endLine": 268,
        "endChar": 35
      },
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74daa4f6_e3e17956",
        "filename": "runtime/thread.h",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2017-10-17T21:55:02Z",
      "side": 1,
      "message": "I would probably vote for adding a second version that does allow a release, along the lines of lock_guard/unique_lock.",
      "parentUuid": "668f9db1_243c09eb",
      "range": {
        "startLine": 268,
        "startChar": 7,
        "endLine": 268,
        "endChar": 35
      },
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26f411e7_5880a04d",
        "filename": "runtime/thread.h",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-10-05T18:14:40Z",
      "side": 1,
      "message": "I believe UNLOCK_FUNCTION is more common for this?",
      "range": {
        "startLine": 270,
        "startChar": 6,
        "endLine": 270,
        "endChar": 13
      },
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25acbea1_1fb4d53b",
        "filename": "runtime/thread.h",
        "patchSetId": 3
      },
      "lineNbr": 270,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2017-10-17T21:55:02Z",
      "side": 1,
      "message": "The documentation seems to say that RELEASE() is the way of the future... (https://clang.llvm.org/docs/ThreadSafetyAnalysis.html)",
      "parentUuid": "26f411e7_5880a04d",
      "range": {
        "startLine": 270,
        "startChar": 6,
        "endLine": 270,
        "endChar": 13
      },
      "revId": "c7174a17025fcdd7de77ef3ef166a376877050ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}