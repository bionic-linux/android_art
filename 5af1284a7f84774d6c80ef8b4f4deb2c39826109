{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2cdbc2a8_4650a571",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 31
      },
      "lineNbr": 61,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-10-04T20:31:36Z",
      "side": 1,
      "message": "Change to limit the code size in services.odex.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 67
      },
      "revId": "5af1284a7f84774d6c80ef8b4f4deb2c39826109",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e59a123_dbbf62b6",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 31
      },
      "lineNbr": 61,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-10-05T12:27:30Z",
      "side": 1,
      "message": "Please mention that in the commit message.\n\nIt\u0027s a bit difficult to evaluate which mitigations are really important of you submit multiple mitigations together (@NeverInline and changing this constant).\n\nWe could try to submit other changes to inlining heuristics before this CL, and see if the code size changes from this CL are mitigated. For example, we could drastically reduce inlining budgets for invokes in blocks that end with a `Throw` (or post-dominated by such blocks but we currently do not calculate post-domination), or blocks dominated by a catch block. These should be explored independently of the try-catch inlining.",
      "parentUuid": "2cdbc2a8_4650a571",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 67
      },
      "revId": "5af1284a7f84774d6c80ef8b4f4deb2c39826109",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb611511_4f95a951",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 31
      },
      "lineNbr": 61,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-10-05T17:40:56Z",
      "side": 1,
      "message": "Added to the commit message.\n\nThe @NeverInline mitigiation is only for on-device compiles. The warnings we were getting are for host compiles. Since we are not getting the warnings anymore, we can safely say that host compiles are not seeing big code size regressions.\n\nRegarding the other optimizations, I think we can create follow-up investigations CLs that explore those heuristics.",
      "parentUuid": "1e59a123_dbbf62b6",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 67
      },
      "revId": "5af1284a7f84774d6c80ef8b4f4deb2c39826109",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}