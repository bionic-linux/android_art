{
  "comments": [
    {
      "key": {
        "uuid": "81edab5e_44c884a5",
        "filename": "runtime/gc/space/region_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 213,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2018-12-14T19:58:25Z",
      "side": 1,
      "message": "I think it\u0027s cleaner to use the variable from the region space instead of going back to the heap. This current way is a bit confusing.",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d813a8fb_764d091f",
        "filename": "runtime/gc/space/region_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 213,
      "author": {
        "id": 1384552
      },
      "writtenOn": "2018-12-14T20:04:14Z",
      "side": 1,
      "message": "The current method lives with Region, from which I can\u0027t get the ref to RegionSpace.",
      "parentUuid": "81edab5e_44c884a5",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7eeb30d_2a3cab92",
        "filename": "runtime/gc/space/region_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 213,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2018-12-14T20:13:49Z",
      "side": 1,
      "message": "Could pass it as a parameter? Up to you.",
      "parentUuid": "d813a8fb_764d091f",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c8afc7_69a01b3d",
        "filename": "runtime/gc/space/region_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 213,
      "author": {
        "id": 1384552
      },
      "writtenOn": "2018-12-14T20:18:23Z",
      "side": 1,
      "message": "`GetUseGenerationalCC()` is used in two other methods (the one above and below) in `Region`; if it takes `RegionSpace` as an argument, I have to thread `RegionSpace` through them as well, which I think more cumbersome.",
      "parentUuid": "b7eeb30d_2a3cab92",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64e4302f_b913fb12",
        "filename": "runtime/gc/space/region_space.cc",
        "patchSetId": 13
      },
      "lineNbr": 213,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-12-18T12:49:09Z",
      "side": 1,
      "message": "Albert, could you add a comment explaining the choice to fetch the \"Generational CC\" state from the Heap object rather than the RegionSpace object (basically, because accessing the Heap from a Region object is easier than accessing the RegionSpace)?",
      "parentUuid": "94c8afc7_69a01b3d",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52cfaf71_e3da8c45",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 13
      },
      "lineNbr": 702,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2018-12-14T19:58:25Z",
      "side": 1,
      "message": "I would have had two GC types instead of adding this flag:\n-Xgc:CC for normal CC\n-Xgc:GENCC for generational CC\n\nThat is more in line with the existing collector type logic IMO.",
      "range": {
        "startLine": 702,
        "startChar": 35,
        "endLine": 702,
        "endChar": 50
      },
      "revId": "6e3f0138deb88a10f28d20ba42d552e0ffee4040",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}