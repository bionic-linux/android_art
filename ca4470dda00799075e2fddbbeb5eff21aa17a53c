{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "79de4b8b_ebe82f75",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-14T09:18:16Z",
      "side": 1,
      "message": "We really try hard to avoid new dependencies in the ART module. If uploading odsign stats require new library dependencies, we should discuss where else to put the uploading instead.",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2c13fb_8d5758f2",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-03-14T09:30:08Z",
      "side": 1,
      "message": "I don\u0027t see how we can get away with using the proto library since the processing is done using proto. (I was using a normal txt processing before, but the suggestion was to use proto).\n\nThe uploading has to be done after statsd has started \u0026 since uploading odrefresh metrics is also here, I thought I could just add it here. Any suggestion on where else we can upload?\n\n@Alan",
      "parentUuid": "79de4b8b_ebe82f75",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74844aae_10bce050",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-14T09:32:05Z",
      "side": 1,
      "message": "Can we do something similar to odrefresh? We did not need extra libraries for it.\n\nThe other option for uploading I think would be in system server.",
      "parentUuid": "3c2c13fb_8d5758f2",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cb2a1d1_af77bc89",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2022-03-14T09:59:46Z",
      "side": 1,
      "message": "Odrefresh uses a text file to avoid the dependency, I think? As in art/odrefresh/odr_metrics_record.cc. (With some interesting code generation funkiness for enums: http://cs/android-internal/art/odrefresh/Android.bp?l\u003d91\u0026rcl\u003d39f6d00b731c8e043d984c4f508e72b1f9fc54a6)\n\nShikha: That seems reasonable, if we want to avoid the proto dependency.",
      "parentUuid": "74844aae_10bce050",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa6dcfe8_9e4fec85",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-03-14T11:15:51Z",
      "side": 1,
      "message": "We can change the file back to text \u0026 remove the 2 proto related libs. \n\nBut we will continue the dependency on libstatslog_art (which odrefresh also use). Coding vise this looks like an easier option. Wanted to check if everyone is okay with it.\n\ncc++ rpl@ for odrefresh metrics",
      "parentUuid": "4cb2a1d1_af77bc89",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34bab6d6_3486728b",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2022-03-14T18:00:12Z",
      "side": 1,
      "message": "The odrefresh case is simpler I supposed, since both the producer and consumers are in the ART module?  Since odsign is not part of ART module, using protobuf seems easier to maintain for backward/forward compatibility than text.  But I don\u0027t know the cost to have such an extra dependency.  Is using text a good trade-off?",
      "parentUuid": "aa6dcfe8_9e4fec85",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e314a42_b081a0bb",
        "filename": "runtime/Android.bp",
        "patchSetId": 10
      },
      "lineNbr": 481,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-03-15T15:18:58Z",
      "side": 1,
      "message": "Discussed with Alan offline. How about we move keep the proto file like that \u0026 move the read code in ArtManagerService on post Success (cs.android.com/android/platform/superproject/+/master:frameworks/base/services/core/java/com/android/server/pm/dex/ArtManagerService.java;drc\u003dmaster;bpv\u003d1;bpt\u003d1;l\u003d367)",
      "parentUuid": "34bab6d6_3486728b",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 481,
        "endChar": 31
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c2fc513_7bf37b49",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 184,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Is this used?",
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ca60e7b_4b9e6f03",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Move it to the anonymous namespace starting from line 220.",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 35
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed52cf29_3d41b756",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 250,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Does `ParseFromIstream` set `errno`? If not, use `Errorf` instead.",
      "range": {
        "startLine": 250,
        "startChar": 11,
        "endLine": 250,
        "endChar": 22
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611f12d0_62957b7c",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 253,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Too long. Please break it into two lines and indent the second line with **4** spaces.",
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac08ada6_2688d79a",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 253,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: snake_case",
      "range": {
        "startLine": 253,
        "startChar": 53,
        "endLine": 253,
        "endChar": 65
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f1c430_00fe2c3f",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 255,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Indent with 4 spaces.",
      "range": {
        "startLine": 255,
        "startChar": 4,
        "endLine": 255,
        "endChar": 6
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bd18002_202de3f1",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 260,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Errorf",
      "range": {
        "startLine": 260,
        "startChar": 13,
        "endLine": 260,
        "endChar": 24
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd39ac48_b76046f8",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 1197,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Don\u0027t indent #ifdef. (I.e., no space before #ifdef at all)",
      "range": {
        "startLine": 1197,
        "startChar": 0,
        "endLine": 1197,
        "endChar": 2
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b828435_cb1359d7",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 1198,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: Spell out the type. go/cstyle#Type_deduction",
      "range": {
        "startLine": 1198,
        "startChar": 4,
        "endLine": 1198,
        "endChar": 8
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87623f65_06ac4928",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 1198,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-03-15T15:44:34Z",
      "side": 1,
      "message": "Nit: snake_case",
      "range": {
        "startLine": 1198,
        "startChar": 9,
        "endLine": 1198,
        "endChar": 32
      },
      "revId": "ca4470dda00799075e2fddbbeb5eff21aa17a53c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}