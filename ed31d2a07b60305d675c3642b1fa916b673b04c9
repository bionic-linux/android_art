{
  "comments": [
    {
      "key": {
        "uuid": "bbb8a7d5_59234399",
        "filename": "compiler/dwarf/debug_info_entry_writer.h",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "I think we don\u0027t need this comment as all information you generate is dwarf4",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bc96b78_79ad63aa",
        "filename": "compiler/dwarf/debug_info_entry_writer.h",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Fair enough.  I do not envision we might need to support dwarf3.",
      "parentUuid": "bbb8a7d5_59234399",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bc4b760_358db019",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 322,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "\"Can\"? Is there an ambiguity in DWARF4?",
      "range": {
        "startLine": 322,
        "startChar": 6,
        "endLine": 322,
        "endChar": 48
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9baf638f_18ee2573",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 322,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T15:27:37Z",
      "side": 1,
      "message": "It allows both format. If you specify the value with class address (DW_FORM_addr) then it is an absolute address and if you specify it with class constant (e.g. DW_FORM_data4) then it is the size of the function",
      "parentUuid": "3bc4b760_358db019",
      "range": {
        "startLine": 322,
        "startChar": 6,
        "endLine": 322,
        "endChar": 48
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_4830df96",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 322,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T15:39:01Z",
      "side": 1,
      "message": "I see, the subtle change from WriteAddr() to WriteUdata() makes the difference.",
      "parentUuid": "9baf638f_18ee2573",
      "range": {
        "startLine": 322,
        "startChar": 6,
        "endLine": 322,
        "endChar": 48
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bc4b760_75e568cb",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "I think \"this\" will be a 64 bit value on 64 bit systems",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bc96b78_565f94f2",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T15:04:21Z",
      "side": 1,
      "message": "No, Java heap references are (for the moment) 32-bit even on 64-bit systems.",
      "parentUuid": "3bc4b760_75e568cb",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_088a6792",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 394,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "Are we storing a 64 bit value in 2 virtual register on 64 bit systems also? (Please check all location where you special case 64 bit values to make sure they work on 64 bit systems)",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb2aff7_175b5439",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 394,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T15:04:21Z",
      "side": 1,
      "message": "vreg refers to 32-bit dex registers.",
      "parentUuid": "9b7da3ef_088a6792",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_abe6a9d4",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 425,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 425,
        "startChar": 11,
        "endLine": 425,
        "endChar": 22
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb2aff7_17d8b4a2",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 425,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb921f65_abe6a9d4",
      "range": {
        "startLine": 425,
        "startChar": 11,
        "endLine": 425,
        "endChar": 22
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bb2aff7_377778ba",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 467,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 467,
        "startChar": 49,
        "endLine": 467,
        "endChar": 57
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_6b9921ec",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 467,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bb2aff7_377778ba",
      "range": {
        "startLine": 467,
        "startChar": 49,
        "endLine": 467,
        "endChar": 57
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bc96b78_b62c686e",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "(nit): I would suggest to initialize it to true and then remove the else from the if",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbb8a7d5_b90d3fbf",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "It is intentional.  If any path fails to set it, we will get compiler warning.",
      "parentUuid": "5bc96b78_b62c686e",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_cb57694e",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-24T12:06:07Z",
      "side": 1,
      "message": "Good point (will we notice it?)",
      "parentUuid": "bbb8a7d5_b90d3fbf",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_eb2d0dd0",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-24T12:09:46Z",
      "side": 1,
      "message": "We compile with -Werror, so any warning breaks the build.",
      "parentUuid": "9b7da3ef_cb57694e",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_4bf9c570",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 512,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "uint32_t?",
      "range": {
        "startLine": 512,
        "startChar": 14,
        "endLine": 512,
        "endChar": 17
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bc96b78_99b15f0b",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 512,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb921f65_4bf9c570",
      "range": {
        "startLine": 512,
        "startChar": 14,
        "endLine": 512,
        "endChar": 17
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_6bfe815b",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 518,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "Helper function?",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 518,
        "endChar": 15
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbb8a7d5_d90af3a3",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 518,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb921f65_6bfe815b",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 518,
        "endChar": 15
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9baf638f_b819b964",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 522,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "It would be nice if we can properly handle the case when a 64 bit (float) value is in a 64 bit (float) register.\nIf I understand correctly then currently you will say it is split between two S\u003cn\u003e register instead of saying it is in a D\u003cn\u003e register (with arm register names).",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_8b9d6dda",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 522,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Good point, but it does not seem exactly trivial.\nI have added TODO and I will do it with local variables when I have more data to test it with.",
      "parentUuid": "9baf638f_b819b964",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bc4b760_f521787c",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 522,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T03:56:25Z",
      "side": 1,
      "message": "Done.  It required a bit of restructuring.",
      "parentUuid": "fb921f65_8b9d6dda",
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9baf638f_d8166d33",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 534,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-23T14:57:50Z",
      "side": 1,
      "message": "What does this mean?",
      "range": {
        "startLine": 534,
        "startChar": 14,
        "endLine": 534,
        "endChar": 43
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbbdbfca_f321907c",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 6
      },
      "lineNbr": 534,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T15:27:37Z",
      "side": 1,
      "message": "DW_OP_consts will push the SLEB128 value after it to the dwarf stack and then DW_OP_stack_value is the operation what says that the value of the variable is at the top of the dwarf stack",
      "parentUuid": "9baf638f_d8166d33",
      "range": {
        "startLine": 534,
        "startChar": 14,
        "endLine": 534,
        "endChar": 43
      },
      "revId": "ed31d2a07b60305d675c3642b1fa916b673b04c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}