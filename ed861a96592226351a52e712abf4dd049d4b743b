{
  "comments": [
    {
      "key": {
        "uuid": "d10c0422_55b3a5d9",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1084268
      },
      "writtenOn": "2017-03-01T20:51:38Z",
      "side": 1,
      "message": "Again, with ART_TEST_FULL - it will take a long time to cancel all the remaining tests.",
      "range": {
        "startLine": 260,
        "startChar": 2,
        "endLine": 261,
        "endChar": 17
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3447001_fa7472bf",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-03-01T21:30:26Z",
      "side": 1,
      "message": "This takes relatively little time. It just needs to mark the jobs as cancelled. This is a fast operation.",
      "parentUuid": "d10c0422_55b3a5d9",
      "range": {
        "startLine": 260,
        "startChar": 2,
        "endLine": 261,
        "endChar": 17
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "993a60ca_9b4529fd",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1084268
      },
      "writtenOn": "2017-03-01T20:51:38Z",
      "side": 1,
      "message": "Use implicit false - https://engdoc.corp.google.com/eng/doc/devguide/py/styleguide.shtml?cl\u003dhead#truefalse-evaluations",
      "range": {
        "startLine": 279,
        "startChar": 32,
        "endLine": 279,
        "endChar": 36
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049cb96b_a215f198",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-03-01T21:24:19Z",
      "side": 1,
      "message": "External mirror: https://google.github.io/styleguide/pyguide.html",
      "parentUuid": "993a60ca_9b4529fd",
      "range": {
        "startLine": 279,
        "startChar": 32,
        "endLine": 279,
        "endChar": 36
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0707b29f_1c3ba6dc",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-03-01T21:30:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "993a60ca_9b4529fd",
      "range": {
        "startLine": 279,
        "startChar": 32,
        "endLine": 279,
        "endChar": 36
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5eabff24_dbb2c24c",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 444,
      "author": {
        "id": 1084268
      },
      "writtenOn": "2017-03-01T20:51:38Z",
      "side": 1,
      "message": "I would go with the old approach of having this lazily generated. When ART_TEST_FULL is set to true, test_results would grow to 100 million size and would probably crash. \nAlso, in the above case, even if we overcome the memory issues, it will increase the time for the first test run.",
      "range": {
        "startLine": 443,
        "startChar": 6,
        "endLine": 444,
        "endChar": 38
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dffbe97_617e5cc5",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 444,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-03-01T21:24:19Z",
      "side": 1,
      "message": "100 million is probably not so bad now, but agreed it might not be future proof.\n\nI would use concurrent.futures.wait here to block until at least 1 job is done (you know how many workers are there total, workers\u003dn_threads) and submit more futures later.",
      "parentUuid": "5eabff24_dbb2c24c",
      "range": {
        "startLine": 443,
        "startChar": 6,
        "endLine": 444,
        "endChar": 38
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f92a42_387ca831",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 444,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-03-01T21:30:26Z",
      "side": 1,
      "message": "\u003e I would go with the old approach of having this lazily generated. When ART_TEST_FULL is set to true, test_results would grow to 100 million size and would probably crash. \n\nNo it won\u0027t. Each executor future is fairly small structure all things considered and we have plenty of RAM. I don\u0027t think we should really be concerning ourselves with this unless it becomes clear that it will be an actual problem.\n\n\u003e Also, in the above case, even if we overcome the memory issues, it will increase the time for the first test run.\n\nNo it won\u0027t. The futures will start executing as soon as the first is submitted. It will make it take longer for the first result to be printed (assuming it finishes before all jobs are submitted) but in practice this doesn\u0027t seem to be a problem even with multiple types of tests.",
      "parentUuid": "5eabff24_dbb2c24c",
      "range": {
        "startLine": 443,
        "startChar": 6,
        "endLine": 444,
        "endChar": 38
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b3b319b_ed851b70",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 444,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-03-01T21:31:42Z",
      "side": 1,
      "message": "\u003e100 million is probably not so bad now, but agreed it might not be future proof.\n\u003e\n\u003e I would use concurrent.futures.wait here to block until at least 1 job is done (you know how many workers are there total, workers\u003dn_threads) and submit more futures later.\n\nThis is not a good idea IMO and is simply premature optimization.  By doing this we would be making the code more complicated for what would be very little to even negative benefit.",
      "parentUuid": "47f92a42_387ca831",
      "range": {
        "startLine": 443,
        "startChar": 6,
        "endLine": 444,
        "endChar": 38
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f12b4d5_a1319f21",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 1084268
      },
      "writtenOn": "2017-03-01T20:51:38Z",
      "side": 1,
      "message": "why?",
      "range": {
        "startLine": 527,
        "startChar": 70,
        "endLine": 527,
        "endChar": 73
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84081c31_b4e12f6e",
        "filename": "test/testrunner/testrunner.py",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-03-01T21:30:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f12b4d5_a1319f21",
      "range": {
        "startLine": 527,
        "startChar": 70,
        "endLine": 527,
        "endChar": 73
      },
      "revId": "ed861a96592226351a52e712abf4dd049d4b743b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}