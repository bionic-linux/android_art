{
  "comments": [
    {
      "key": {
        "uuid": "251f3657_34b0f0b3",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1349,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-09T19:58:15Z",
      "side": 1,
      "message": "Does mips provide the same guarantees as arm?",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1349,
        "endChar": 23
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "454eea83_ee4bb3aa",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1349,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-12-10T02:08:28Z",
      "side": 1,
      "message": "Looking back at the MIPS memory model document, and prior discussions with David Lau, the answer remains unclear to me.  I\u0027m not sure whether dependencies enforce visibility ordering.  What does \"uniprocessor data dependencies are maintained\" mean?  Does it just mean that a single thread executes correctly.  Or does it mean that if there is an address dependency from load a to load b, then a is visible to other cores before b?\n\nWe need the latter, at least in some cases, for Java code with final fields to execute correctly at better than glacial speed.  We need a very strong version of the latter property for this to work correctly.\n\nI previously suggested an in-person meeting to resolve this and related issues.  I\u0027m still open to that.",
      "parentUuid": "251f3657_34b0f0b3",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1349,
        "endChar": 23
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a567a60d_21bf74ce",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1349,
      "author": {
        "id": 1057043
      },
      "writtenOn": "2015-12-10T02:18:46Z",
      "side": 1,
      "message": "My understanding (indicated in an internal review of this patch) is that we likely need SYNC here (just as we have one at the end of this routine). Clearly, the XOR/ADDU won\u0027t have any reliable effect on memory accesses or ordering. However, I don\u0027t know the perf impact of inserting SYNC here. But above all, we need to remain correct, fast alone is worhtless if the code is incorrect.",
      "parentUuid": "454eea83_ee4bb3aa",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1349,
        "endChar": 23
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6553ee27_f51ee249",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1349,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-12-10T05:40:40Z",
      "side": 1,
      "message": "This really needs to get straightened out for more basic reasons.  If data dependencies like this are never guaranteed to enforce ordering, then there is no guarantee that reading a Java reference field, and the using that to access a final field ensures ordering of those two loads.  Those are required to be ordered by the Java language specification.  If we have to insert SYNCs there, I suspect the performance impact would be disastrous.\n\nWe really need to understand the rules.",
      "parentUuid": "a567a60d_21bf74ce",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1349,
        "endChar": 23
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4520aa91_d5809cb1",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1358,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-09T19:58:15Z",
      "side": 1,
      "message": "Is \"GE\" unsigned comparison? Or are we guaranteed to never allocate across the 0x80000000 boundary?\n(I think \"EQ\" would work just as well, top offset should never exceed end offset.)",
      "range": {
        "startLine": 1358,
        "startChar": 4,
        "endLine": 1358,
        "endChar": 7
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "253496db_41c9802c",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1358,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-12-10T21:44:09Z",
      "side": 1,
      "message": "+1 for using unsigned GE or EQ.",
      "parentUuid": "4520aa91_d5809cb1",
      "range": {
        "startLine": 1358,
        "startChar": 4,
        "endLine": 1358,
        "endChar": 7
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2506560b_fc99493a",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1363,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-09T19:58:15Z",
      "side": 1,
      "message": "Signed or unsigned? (Though I wouldn\u0027t expect a 2GiB instance size.)",
      "range": {
        "startLine": 1363,
        "startChar": 4,
        "endLine": 1363,
        "endChar": 7
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e55fde25_91157b1d",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1363,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-12-10T21:44:09Z",
      "side": 1,
      "message": "+1 for using unsigned.",
      "parentUuid": "2506560b_fc99493a",
      "range": {
        "startLine": 1363,
        "startChar": 4,
        "endLine": 1363,
        "endChar": 7
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_29632d21",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1366,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-09T19:58:15Z",
      "side": 1,
      "message": "I recently learned that this is an obsolete form, the correct is \"subtract.\"",
      "range": {
        "startLine": 1366,
        "startChar": 54,
        "endLine": 1366,
        "endChar": 63
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65fcce2b_7ecf7135",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1389,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-09T19:58:15Z",
      "side": 1,
      "message": "This store should be before the comment. The comment belongs to the assertion and store below.",
      "range": {
        "startLine": 1386,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 88
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "855c6237_618fda14",
        "filename": "runtime/arch/mips/quick_entrypoints_mips.S",
        "patchSetId": 2
      },
      "lineNbr": 1389,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-12-10T21:44:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "65fcce2b_7ecf7135",
      "range": {
        "startLine": 1386,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 88
      },
      "revId": "eaf23af99b3af0922526b283956e04142d965654",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}