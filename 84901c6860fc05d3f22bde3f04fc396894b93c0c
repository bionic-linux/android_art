{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5df92d20_0c41487c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-07-14T09:24:04Z",
      "side": 1,
      "message": "Thanks! It looks like a nice clean up and also shares code between interpreter and nterp. I will let David +2 this since he knows more about this code.",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "700ef322_c538100e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-14T12:44:27Z",
      "side": 1,
      "message": "Thanks Mythri!",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbac8b96_ec1933af",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 524,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-07-14T12:57:08Z",
      "side": 1,
      "message": "Please mark as /*inout*/",
      "range": {
        "startLine": 524,
        "startChar": 28,
        "endLine": 524,
        "endChar": 34
      },
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e37312d_8377d0bd",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 536,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-07-14T09:24:04Z",
      "side": 1,
      "message": "Since we use NterpGetMethod in switch interpreter as well, should we rename it to just GetMethod / InterpreterGetMethod / GetMethodWithoutCache or something similar?",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca415232_a0a7dcae",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 536,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-14T12:44:27Z",
      "side": 1,
      "message": "Good idea - but I\u0027d like to move every instruction that uses the cache over to using the NterpGet* versions before doing these changes. Once they\u0027ve all moved over, let\u0027s see how we can have a better naming (and new .cc/.h files potentially).",
      "parentUuid": "6e37312d_8377d0bd",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a8162e_28fc2834",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 564,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-07-14T09:24:04Z",
      "side": 1,
      "message": "Instead of constants like 1, 0b11 maybe it\u0027s better to have tls_value as a bit field or declare constants like STRING_INIT_MASK / CALLED_METHOD_MASK for better readability?",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe11b5c_94e288e6",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 564,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-14T12:44:27Z",
      "side": 1,
      "message": "Making a generic struct/bitfield is not so easy ad there can be many variants here (the contents could be a method index, or an ArtMethod. An interface call uses two bits, etc).\n\nAlso, nterp decodes this in assembly, so it won\u0027t be able to access the data structure.\n\nI think once we have all users moved to using the cache, we can restructure so all these cache operations can be in one file and then we can introduce local flags like STRING_INIT_MASK.",
      "parentUuid": "b6a8162e_28fc2834",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76ff9c68_cb51ded4",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 564,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-07-14T12:53:35Z",
      "side": 1,
      "message": "Yeah, I don\u0027t think C++ bit fields work well for us (given the atomic and assembly use cases).\n\nGiven the small constants name values might be reasonable though (and \"thread.def\" already exports some to assembly)\n\nI don\u0027t feel strongly about it either way.",
      "parentUuid": "cfe11b5c_94e288e6",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d12f5ed_c5cc5ce0",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 564,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-07-14T12:57:08Z",
      "side": 1,
      "message": "Could we add constexpr values for this method only at least? We have several magic numbers `0b10`, `0b11`, `1`",
      "parentUuid": "76ff9c68_cb51ded4",
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c4a8a06_4fbfa844",
        "filename": "runtime/entrypoints/entrypoint_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-07-14T12:57:08Z",
      "side": 1,
      "message": "Please mark as /*inout*/",
      "range": {
        "startLine": 151,
        "startChar": 35,
        "endLine": 151,
        "endChar": 41
      },
      "revId": "84901c6860fc05d3f22bde3f04fc396894b93c0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}