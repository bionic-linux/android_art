{
  "comments": [
    {
      "key": {
        "uuid": "7a072ac2_52ca1b25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-08T21:10:47Z",
      "side": 1,
      "message": "libunwindstack tests are useful to exercise this.",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "006edaad_6fa1d6b8",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-08T21:10:47Z",
      "side": 1,
      "message": "Can move into the if block.",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 41
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "720994e7_0c743672",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T21:47:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "006edaad_6fa1d6b8",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 41
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d6dee0d_4ca3eb39",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T14:11:59Z",
      "side": 1,
      "message": "If you make all the types unsigned, you can simplify this as `dex_offset - offset \u003c len`.",
      "range": {
        "startLine": 127,
        "startChar": 12,
        "endLine": 127,
        "endChar": 61
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2320587d_4bff13ba",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-08T21:10:47Z",
      "side": 1,
      "message": "This is not safe to do?\n\nMethod entries and instructions don\u0027t necessarily follow the same order either?",
      "range": {
        "startLine": 141,
        "startChar": 18,
        "endLine": 141,
        "endChar": 77
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0019eddd_871e69f9",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T21:47:18Z",
      "side": 1,
      "message": "I doubt that the dex spec enforces it....",
      "parentUuid": "2320587d_4bff13ba",
      "range": {
        "startLine": 141,
        "startChar": 18,
        "endLine": 141,
        "endChar": 77
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31cf1382_180f5b80",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-08T21:10:47Z",
      "side": 1,
      "message": "Nit: Suggest class_idx for clarity.",
      "range": {
        "startLine": 143,
        "startChar": 20,
        "endLine": 143,
        "endChar": 23
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5bd5133_118123d7",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T21:47:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31cf1382_180f5b80",
      "range": {
        "startLine": 143,
        "startChar": 20,
        "endLine": 143,
        "endChar": 23
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "beb748ae_eb5406c9",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T14:11:59Z",
      "side": 1,
      "message": "I think the cache construction would be faster and more memory efficient if you just added the pairs into a vector\u003c\u003e, and then called std::sort() before pruning the undesirable entries.",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05bec147_78991e6b",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-09T14:16:42Z",
      "side": 1,
      "message": "I tried that, but then the merging becomes more complex.\nThe end result would be the same either way, it is just choice of the temporary structure, so I went for the simpler (slower).",
      "parentUuid": "beb748ae_eb5406c9",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d8b82fb_6e722cd9",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T14:36:37Z",
      "side": 1,
      "message": "You could use std::remove_if or be explicit:\n\n  if (!v.empty()) {\n    size_t store_pos \u003d 0u;\n    for (size_t i \u003d 0, end \u003d v.size() - 1u; i !\u003d end; ++i) {\n      if (v[i].second !\u003d v[i+1].second) {\n        v[store_pos] \u003d v[i];  //\u003c std::remove_if avoids this until it removes something.\n        ++store_pos;\n      }\n    }\n    v[store_pos] \u003d v.back();\n    v.resize(store_pos + 1u);\n    v.shrink_to_fit();\n  }",
      "parentUuid": "05bec147_78991e6b",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3b8d9bd_d6ffdc8e",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-09T14:57:30Z",
      "side": 1,
      "message": "remove_if can not compare two values.\nunique removes the wrong element.\nexplicit code gets a bit messy.",
      "parentUuid": "4d8b82fb_6e722cd9",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4df5d356_90ef5201",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-09T15:33:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3b8d9bd_d6ffdc8e",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2024b29_5c5e266c",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T15:38:07Z",
      "side": 1,
      "message": "You can get creative with remove_if:\n\n  if (!v.empty()) {\n    auto end \u003d std::remove_if(\n        v.begin(),\n        std::prev(v.end()),\n        [](const auto\u0026 entry) {\n          const auto\u0026 next \u003d (\u0026entry)[1];\n          return entry.first \u003d\u003d entry.second;\n        });\n    if (std::next(end) !\u003d v.end()) {\n      *end \u003d v.back();\n      v.resize(std::distance(v.begin(), end) + 1u);\n    }\n    v.shrink_to_fit();\n  }\n\nBut you would have to trust the implementation to do the obvious thing and nothing weird.",
      "parentUuid": "e3b8d9bd_d6ffdc8e",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50aadf27_2eaa4665",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-08T16:00:44Z",
      "side": 1,
      "message": "Given we\u0027re talking speed optimizations, can you also comment on why we want O(log(n)) instead of O(1)?",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 81
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06f9e2e0_fa09b3b1",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T16:07:57Z",
      "side": 1,
      "message": "Which O(1) do you mean?  Both class and method lookup needs O(log(n)) because it \"nearest\" DEX PC lookup (upper_bound), rather then exact DEX PC lookup (so we can not use hashmap).",
      "parentUuid": "50aadf27_2eaa4665",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 81
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "490d76a3_7856075a",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-08T17:06:09Z",
      "side": 1,
      "message": "Oh I see, I thought class_cache_ could have been encoded as a map.",
      "parentUuid": "06f9e2e0_fa09b3b1",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 81
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7bdcb4c_79a615f0",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T17:14:47Z",
      "side": 1,
      "message": "It could... it is pretty much a map (with linear layout)... hence the trivial copy to create it.\n\nIt could not be unordered_map, as we will do lookup by any PC in the range of the class\u0027s code.",
      "parentUuid": "490d76a3_7856075a",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 162,
        "endChar": 81
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644cb563_8142de92",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T14:11:59Z",
      "side": 1,
      "message": "Rename to `cmp` or `comp` (this is a Compare object according to https://en.cppreference.com/w/cpp/algorithm/upper_bound ).",
      "range": {
        "startLine": 168,
        "startChar": 9,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6da61f2e_93bfb57e",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-09T15:50:56Z",
      "side": 1,
      "message": "Done in PS4.",
      "parentUuid": "644cb563_8142de92",
      "range": {
        "startLine": 168,
        "startChar": 9,
        "endLine": 168,
        "endChar": 13
      },
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12160c3c_d9763539",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-08T21:10:47Z",
      "side": 1,
      "message": "Could be helpful to comment that this is sorted by end_dex_offset.",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c65b00a4_0abb2ee1",
        "filename": "libdexfile/external/dex_file_ext.cc",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-08T21:47:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12160c3c_d9763539",
      "revId": "51f6e74b46f9dd8b8258af22fb3de19a16744aaf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}