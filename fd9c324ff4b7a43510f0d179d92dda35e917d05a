{
  "comments": [
    {
      "key": {
        "uuid": "b737b3c2_c959b1f8",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-02-03T18:36:36Z",
      "side": 1,
      "message": "is there some contract that we are returning false so we should add a message as to why? in this case just noting that we failed to load and fallback is disabled?",
      "range": {
        "startLine": 1017,
        "startChar": 4,
        "endLine": 1017,
        "endChar": 17
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17207f81_e4713aca",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-03T18:51:07Z",
      "side": 1,
      "message": "At this point error_msgs will already contain some errors, namely those of oat file generation. I guess it\u0027s fine to add a top-level one stating that fallback is disabled in an else-branch.\n\nThe false is the return code for \"couldn\u0027t find or generate oat file\" according to a comment in DexFile. The actual decision is then made over the content of dex_files. Probably needs a comment in class_linker.h what \"false\" means.",
      "parentUuid": "b737b3c2_c959b1f8",
      "range": {
        "startLine": 1017,
        "startChar": 4,
        "endLine": 1017,
        "endChar": 17
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c293c84_710452bf",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-02-04T00:53:45Z",
      "side": 1,
      "message": "OpenDexFilesFromOat can return three ways:\n1. return true, with \u0027dex_files\u0027 populated, meaning the dex files were loaded from oat files.\n2. return false, with \u0027dex_files\u0027 populated, meaning the dex files were loaded from unquickened dex files, to be interpreted.\n3. return false, with \u0027dex_files\u0027 empty, meaning it couldn\u0027t open anything for the given dex location.\n\nIn the oat file cleanup work I was doing, I wanted to change this to return true if any dex files were loaded (oat or no oat), because dalvik_system_DexFile.cc doesn\u0027t care if no oat file was loaded, so long as it gets some dex files back.\n\nMy vote is to return \u0027false\u0027 only if no dex files are returned. Then dalvik_system_DexFile.cc can be cleaned up a little and the interface is less confusing. Either way, yes, add a comment in class_linker.h to describe these cases. The comment I added in my oat file management cleanup is:\n\n// Find or create the oat file holding dex_location. Then load all\n// corresponding dex files into the given vector (there may be more than one\n// dex file loaded in the case of multidex).\n// Returns true if dex files were successfully loaded, including the case\n// where an oat file could not be generated, but the original, unquickened\n// dex files could be loaded.",
      "parentUuid": "17207f81_e4713aca",
      "range": {
        "startLine": 1017,
        "startChar": 4,
        "endLine": 1017,
        "endChar": 17
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc6318f1_a93edd04",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-04T01:14:50Z",
      "side": 1,
      "message": "Your cleanup isn\u0027t merged, yet, right? How about we roll this cleanup into your CL?",
      "parentUuid": "5c293c84_710452bf",
      "range": {
        "startLine": 1017,
        "startChar": 4,
        "endLine": 1017,
        "endChar": 17
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc6318f1_699a25de",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-02-04T00:53:45Z",
      "side": 1,
      "message": "Can you document this option by adding usage info for it?",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 657,
        "endChar": 39
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c5d2031_67a0123f",
        "filename": "runtime/parsed_options.cc",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-04T01:14:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc6318f1_699a25de",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 657,
        "endChar": 39
      },
      "revId": "fd9c324ff4b7a43510f0d179d92dda35e917d05a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}