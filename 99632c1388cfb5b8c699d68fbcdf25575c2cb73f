{
  "comments": [
    {
      "key": {
        "uuid": "c200ad7b_bd995974",
        "filename": "runtime/asm_support.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-07T09:10:19Z",
      "side": 1,
      "message": "This seems hacky. Why don\u0027t you include a separate header file for this?\n\nBecause of the #ifndef on line 17 it might be possible to inadvertently use this the wrong way.",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c122ddb_5e59033b",
        "filename": "runtime/asm_support.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-07T17:19:48Z",
      "side": 1,
      "message": "Sorry, don\u0027t understand what you mean. Could you explain in more detail. please?",
      "parentUuid": "c200ad7b_bd995974",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0b3b0c_622983b5",
        "filename": "runtime/asm_support.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-08T09:25:47Z",
      "side": 1,
      "message": "This is the pattern:\n\n #include \"asm_support.h\"\n .... many includes later\n #define ASM_SUPPORT_CREATE_CHECK_ASM\n #include \"asm_support.h\"\n // second time around it *doesnt* have the checks\n\nexcept imagine if asm_support.h was included transitively through another header.\n\nMaybe it\u0027s not a real problem? the #define would have to go first always before any other include, but it would also infect the other headers which maybe didn\u0027t want to include the create_check_asm.\n\n #define ASM_SUPPORT_CREATE_CHECK_ASM\n #include \"asm_support.h\"\n .... many includes later\n // did not #define ASM_SUPPORT_CREATE_CHECK_ASM\n #include \"asm_support.h\"\n // now it has the check_asm stuff which is unexpected\n\nThe asm generator should have some support for splitting out the test generation by doing an extra include pass (it already includes things twice, once for dependencies, once again for the actual definitions. including things a 3rd time to generate the tests seems ok), though that wouldn\u0027t help with the parts of this file that aren\u0027t generated automatically.",
      "parentUuid": "4c122ddb_5e59033b",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcdc59e9_b0acfb8d",
        "filename": "runtime/asm_support.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-08T15:41:13Z",
      "side": 1,
      "message": "I am not sure how to do this, correctly, and keep the spirit of the file (definitions and their tests are next to each other). For the multipass, I would have to avoid the header guard. But then the client has to be really careful to remember to undef afterwards, and none of the included headers in this file must circle back around, and...\n\nNote that I am not super worried about having to have the #define be early in the files that want the function. There are only two of those, and the compiler will be mad if it\u0027s gone wrong, letting us know that it\u0027s missing the definition.\n\nBut I do understand your cleanliness and usability concern. Just have no good idea. Was your mentioning of a second header something like:\n\n  SECOND_HEADER_GUARD\n  #includes\n  #undef ASM_SUPPORT_HEADER_GUARD\n  #define ADD_TEST_EQ CHECK\n  CheckAsmSupport() {\n  #include asm_support\n  }\n  #undef ADD_TEST_EQ\n\nand then rely on redefinition of #defines being OK if they have the same value?",
      "parentUuid": "fb0b3b0c_622983b5",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42c927b2_4f97e103",
        "filename": "runtime/asm_support.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:43:17Z",
      "side": 1,
      "message": "I meant having asm_support.h and asm_support_test.h \n\nDoesn\u0027t seem worth the bother now, if I get around to moving rest of this file into the generator it would be much easier to split it up then.",
      "parentUuid": "bcdc59e9_b0acfb8d",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "008520e0_e0649f3a",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-09T15:43:17Z",
      "side": 1,
      "message": "Ok so hopefully this will never end up including #asm_support.h otherwise the below will break.",
      "revId": "99632c1388cfb5b8c699d68fbcdf25575c2cb73f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}