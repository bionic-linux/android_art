{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b7628c2c_90607bd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-09-26T08:38:30Z",
      "side": 1,
      "message": "I have originally intended for the method to be used as debug check (since it does not work on mac, and it uses linker iteration to self-reflect which feels kind of hacky). I would prefer if the entrypoints were enumerated explicitly and then the IsStub was used to make sure it is correct.\n\nHaving said that, it LGTM as-is as well.",
      "revId": "30fccad68a15158c8af66d349f98c55d990ac3ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92fdd2c7_9499323f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-09-26T10:38:08Z",
      "side": 1,
      "message": "@vmarko@google.com, David is suggesting to create a set of entrypoints (the ones created by the pattern matcher) instead of relying on IsStub. What do you think? Any preference?",
      "parentUuid": "b7628c2c_90607bd1",
      "revId": "30fccad68a15158c8af66d349f98c55d990ac3ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f26ae349_343719ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-26T11:11:31Z",
      "side": 1,
      "message": "And compare with hundreds of entrypoints to slow down unwinding? No, thank you!\n\nIf we move those functions to assembly, we can define symbols before and after the whole bunch and compare that range. But as long as they remain in C++, I don\u0027t know how to force the linker to put them together and between specified symbols.",
      "parentUuid": "92fdd2c7_9499323f",
      "revId": "30fccad68a15158c8af66d349f98c55d990ac3ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05047689_41fdb16a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-09-26T11:19:47Z",
      "side": 1,
      "message": "Not individual compares.  Build a static set or hashmap.",
      "revId": "30fccad68a15158c8af66d349f98c55d990ac3ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff121ca6_b275c52b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-26T12:01:12Z",
      "side": 1,
      "message": "| Not individual compares. Build a static set or hashmap.\n\nThat sounds better. Then the question is whether it should be static, or a member of `Jit`/`JitCodeCache`.",
      "parentUuid": "f26ae349_343719ab",
      "revId": "30fccad68a15158c8af66d349f98c55d990ac3ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}