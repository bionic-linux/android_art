{
  "comments": [
    {
      "key": {
        "uuid": "c9241a3c_9f08eb68",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "nit: This is quite overusing auto/decltype, can you replace with explicit types?",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5d5e5b7_a7041a60",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "make_pair is not necessary anymore\n\n    it-\u003esecond.push_back({dependent_method, dependent_header});",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abf83289_e19a9b69",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "nit: I thought statics have a s_ prefix?",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30c83327_4513e0dd",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "nit: reconsider using so many autos because we can\u0027t tell the type from just this function alone.",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f592a3d2_c15e4351",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "performance WARNING:\n\nmethod_headers is captured by value here, so it will copy the whole unordered_set. I don\u0027t know what \"auto dependent\" is but that\u0027s also copied by value (though if its a pair of references, it doesnt matter).\n\nprobably not what you intended.\n\nfix:\n   [\u0026method_headers](auto\u0026 dependent) { ....",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f2a706b_4f9501a7",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-25T15:06:18Z",
      "side": 1,
      "message": "Use ContainsElement() from stl_util.h .",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2c2d68f_fe52e0db",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-25T15:52:22Z",
      "side": 1,
      "message": "Actually, if method_headers is an unordered_set\u003c\u003e, it\u0027s way better to use\n\n  method_headers.find(dependent.second) !\u003d method_headers.end()\n\nor\n\n  method_headers.count(dependent.second) !\u003d 0u",
      "parentUuid": "7f2a706b_4f9501a7",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 66,
        "endChar": 65
      },
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61156b7d_25039ab0",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-05-25T12:01:32Z",
      "side": 1,
      "message": "Nit: I\u0027d move this to the new line with 4 space indent, so that std::find could fit on one line.",
      "range": {
        "startLine": 60,
        "startChar": 36,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039a2a92_f05a0d83",
        "filename": "runtime/cha.cc",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-25T15:38:55Z",
      "side": 1,
      "message": "(sidenote: this is an excellent use of auto because we can trivially tell from 548/549 that it\u0027s a pair\u003cArtMethod*,OatQuickMethodHeader*\u003e )",
      "revId": "99ac8694d54fa5da872c756d7febb5dde5d2224d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}