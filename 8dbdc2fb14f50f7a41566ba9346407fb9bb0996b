{
  "comments": [
    {
      "key": {
        "uuid": "53ef61ff_2ac2536a",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-08-27T18:58:23Z",
      "side": 1,
      "message": "the code and the comment below don\u0027t match up. Why do we only check in the zygote case? dex2oat allocates objects like Strings, that may end up as large object allocations.",
      "range": {
        "startLine": 410,
        "startChar": 65,
        "endLine": 412,
        "endChar": 81
      },
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9333997e_28b90f61",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-08-27T19:47:34Z",
      "side": 1,
      "message": "This was derived from talking with mathieuc and basically up for review. Valgrind consistently gives us a non-moving space before the image space. If that can be fixed, I\u0027d be fine with that, too.",
      "parentUuid": "53ef61ff_2ac2536a",
      "range": {
        "startLine": 410,
        "startChar": 65,
        "endLine": 412,
        "endChar": 81
      },
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7321c530_62064cf2",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-08-27T23:20:52Z",
      "side": 1,
      "message": "I can see that we can skip this no-gap check if there is no image (eg dex2oat).\n\nI don\u0027t see what the Valgrind case looks like. It\u0027s got an image, but the non-moving space comes before the image space? I don\u0027t see how that happens. Does it have a separate non-moving space (from the main space)? Can you clarify?\n\nIn any case, this check should be enabled as much as possible. Or else, we\u0027d have a large object being treated as immune and a GC crash.",
      "parentUuid": "9333997e_28b90f61",
      "range": {
        "startLine": 410,
        "startChar": 65,
        "endLine": 412,
        "endChar": 81
      },
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7321c530_a2fc644d",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-08-27T23:27:53Z",
      "side": 1,
      "message": "dex2oat has an image in the case that we\u0027re compiling an app.",
      "parentUuid": "7321c530_62064cf2",
      "range": {
        "startLine": 410,
        "startChar": 65,
        "endLine": 412,
        "endChar": 81
      },
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "931c79fc_ba449181",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-08-28T00:07:05Z",
      "side": 1,
      "message": "Running dex2oat under valgrind, it consistently makes it so that the non_moving_space_ has a lower address then the image space, so CheckNoGaps triggers a check.\n\nAnd yes, this was *with* an image, as I was trying to compile an app.",
      "parentUuid": "7321c530_62064cf2",
      "range": {
        "startLine": 410,
        "startChar": 65,
        "endLine": 412,
        "endChar": 81
      },
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7338e55c_950b94b8",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-08-28T00:43:05Z",
      "side": 1,
      "message": "With the current logic, the only time the compiler might attempt to immune the non moving space is if GSS is enabled. In this case separate_non_moving_space\u003d\u003dtrue and hopefully we would have that the space is right after the image.",
      "parentUuid": "931c79fc_ba449181",
      "revId": "8dbdc2fb14f50f7a41566ba9346407fb9bb0996b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}