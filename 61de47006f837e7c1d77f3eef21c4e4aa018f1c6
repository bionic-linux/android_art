{
  "comments": [
    {
      "key": {
        "uuid": "43308612_7ff2886b",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-03-30T18:49:17Z",
      "side": 1,
      "message": "Looks like it\u0027s better to change the order of the two tests.\nTest if (current-\u003eCovers(use-\u003eGetPosition())) first. If it fails, assert it\u0027s an env use and continue. Otherwise, do line 1416 for env use.",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ece2ce_2d958d41",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-30T21:12:23Z",
      "side": 1,
      "message": "Covers could be expensive, it might make sense to only pay if it\u0027s an environment use.",
      "parentUuid": "43308612_7ff2886b",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_36d5c23a",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-03-30T22:30:30Z",
      "side": 1,
      "message": "If we iterate through ranges not just intervals, we don\u0027t need to test Covers(). Just \u003c range-\u003eGetStart() instead since we already tested \u003c\u003d range-\u003eGetEnd(). We move to the next sibling when the current sibling runs out of ranges. Is it worth a try?",
      "parentUuid": "a3ece2ce_2d958d41",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3f1d6a3_cefde336",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-31T09:26:39Z",
      "side": 1,
      "message": "This code is iterating over intervals, which can have multiple ranges. And you might have holes between your ranges:\n\n[4, 41[ [52, 87(\n\nIf the environment use is at 43, it is after the start of the interval.",
      "parentUuid": "43308612_36d5c23a",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23cf1274_a16a5e5c",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2015-03-31T13:34:08Z",
      "side": 1,
      "message": "So my suggestion is to directly iterate through ranges, it\u0027s something like:\nrange \u003d current-\u003eGetFirstRange();\nwhile (range !\u003d nullptr) {\n  // update use\u0027s locations. if use is before\n  // range-\u003eGetStart(), it\u0027s in a hole and we can assert\n  // it must be env use since all real uses must be covered\n  // by ranges.\n\n  range \u003d range-\u003eGetNext();\n  if (range \u003d\u003d nullptr) {\n    current \u003d current-\u003eGetNextSibling();\n    if (current !\u003d nullptr) {\n      range \u003d current-\u003eGetFirstRange();\n    } else {\n      break;\n    }\n  }\n}\n\nThen there is no hole to deal with.",
      "parentUuid": "c3f1d6a3_cefde336",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83fb5e85_f2d7e041",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-31T15:00:26Z",
      "side": 1,
      "message": "Good point. Done.",
      "parentUuid": "23cf1274_a16a5e5c",
      "revId": "61de47006f837e7c1d77f3eef21c4e4aa018f1c6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}