{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e92aecee_c6889217",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-02-10T11:07:06Z",
      "side": 1,
      "message": "Vladimir, Nicolas: I still need to clear caches on GC, but if you have a minute, can you give it quick look?",
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97bbf76a_cad4cb1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-02-10T13:53:09Z",
      "side": 1,
      "message": "That\u0027s a pretty big CL to review :( it looks to me it will be a lot simpler if you have:\n1) A CL that removes the creation at dex2oat of dex caches\n2) A CL that rewrites the dex cache to dynamically allocated arrays (without growing or freeing)\n3) A CL that adds the dynamic growing and freeing logic.",
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4e68a64_ed5442df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-02-12T17:11:59Z",
      "side": 1,
      "message": "Partial review.",
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d66b94c5_45efe5af",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 9
      },
      "lineNbr": 4023,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-02-12T17:11:59Z",
      "side": 1,
      "message": "update",
      "range": {
        "startLine": 4023,
        "startChar": 12,
        "endLine": 4023,
        "endChar": 34
      },
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dab61006_5a163261",
        "filename": "runtime/class_linker.h",
        "patchSetId": 9
      },
      "lineNbr": 880,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-02-10T13:53:09Z",
      "side": 1,
      "message": "can you use unique_ptr of a data structure?",
      "range": {
        "startLine": 880,
        "startChar": 13,
        "endLine": 880,
        "endChar": 18
      },
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c938ddbc_6f7b4666",
        "filename": "runtime/mirror/dex_cache-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-02-12T17:11:59Z",
      "side": 1,
      "message": "I think this should be kWithoutReadBarrier and the same below.",
      "range": {
        "startLine": 48,
        "startChar": 37,
        "endLine": 48,
        "endChar": 55
      },
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dac918b_defcde2e",
        "filename": "runtime/mirror/dex_cache.cc",
        "patchSetId": 9
      },
      "lineNbr": 148,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-02-12T17:11:59Z",
      "side": 1,
      "message": "You should use `Runtime::Current()-\u003eGetThreadList()-\u003eRunCheckpoint(this);` as we do with the `ClassLinker::VisiblyInitializedCallback`.",
      "revId": "c2c2a8f84515b816078875418c2ebf1206610555",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}