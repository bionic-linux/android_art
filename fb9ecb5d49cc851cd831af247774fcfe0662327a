{
  "comments": [
    {
      "key": {
        "uuid": "dc08ccdb_7a35f951",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-02-06T18:39:28Z",
      "side": 1,
      "message": "minor nit [optional for consistency], I use \u0027Result \u003cvarname\u003e \u003d ...\u0027 everywhere else, you\u0027ll notice CmdlineParseResult has a move constructor so it\u0027s very cheap to do that.",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0be93ccf_1c00d5e4",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2015-02-16T13:52:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc08ccdb_7a35f951",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc08ccdb_1a383d4a",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-02-06T18:39:28Z",
      "side": 1,
      "message": "minor nit:\n\nIt\u0027s a bit redundant to have it both as an out-parameter and the return value, it\u0027s possible to get away with having only 2 parameters to ParseJdwpOption by making it a local:\n\n  JdwpOptions jdwp_options;\n\n(removing it from line 90)\n\nand can just do\n\n  const JdwpOptions\u0026 jdwp_options \u003d parse_attempt.GetValue();\n\nand change line 115 to \u0027return parse_attempt\u0027",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bdfb423_be18b91c",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2015-02-16T13:52:49Z",
      "side": 1,
      "message": "I don\u0027t quite follow you here: where jdwp_options should be declared then?\nWe pass it to ParseJdwpOption to build it with each option (x\u003dy). \nWe could make jdwp_options a field here so we can access it from ParseJdwpOption. Is it what you had in mind?",
      "parentUuid": "dc08ccdb_1a383d4a",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bb398fa_bd5d276e",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-02-17T18:11:30Z",
      "side": 1,
      "message": "So what I mean is, you can move the declaration from line 90 to line 105\n\n  Result parse_attempt \u003d ParseJdwpOption(\n        jdwp_option.substr(0, equals_pos),\n        jdwp_option.substr(equals_pos + 1));\n\n  if (parse_attempt.IsError()) {\n    return parse_attempt;\n  }\n  \n  const JDWP::JdwpOptions\u0026 jdwp_options \u003d parse_attempt.GetValue();\n \n  ...\n\nSee how by doing that you no longer need to pass in an extra parameter to \u0027ParseJdwpOption\u0027 (since it\u0027s already nested inside of the result)\n\nYou would also need to change line 119 to allocate automatic storage for it there\n\n  Result ParseJdwpOption(const std::string\u0026 name, const std::string\u0026 value) {\n      JDWP::JdwpOptions jdwp_options;\n      ....\n      return Result::Success(jdwp_options);\n  }",
      "parentUuid": "4bdfb423_be18b91c",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebb1480e_bbe227d7",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2015-02-17T18:34:00Z",
      "side": 1,
      "message": "Sorry but I don\u0027t understand how it can work if you declare the JdwpOptions object locally in ParseJdwpOption. This means you do not preserve its state with the options already parsed before (we loop on each option of the form x\u003dy).\n\nImagine you have something a string like \"option1\u003dvalue1,option2\u003dvalue2\". You will call ParseJdwpOption for each option (\"option1\u003dvalue1\" and \"option2\u003dvalue2\"). So you need to preserve the state of JdwpOptions between calls.\n\nDo I miss something?",
      "parentUuid": "6bb398fa_bd5d276e",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bb5bcf7_bfe33324",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-02-17T18:37:50Z",
      "side": 1,
      "message": "Oh, right, didn\u0027t notice that the loop was significant there sorry!\n\nIn that case this seems perfectly fine.",
      "parentUuid": "ebb1480e_bbe227d7",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bb5bcf7_7ffecbbe",
        "filename": "cmdline/cmdline_types.h",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-02-17T18:37:50Z",
      "side": 1,
      "message": "minor nit: Maybe return Result::SuccessNoValue() here then if this isn\u0027t the \"final\" value?\n\nThat\u0027s the pattern we use in the other parsers when a value is built up from multiple function calls into an out-parameter.",
      "revId": "fb9ecb5d49cc851cd831af247774fcfe0662327a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}