{
  "comments": [
    {
      "key": {
        "uuid": "0dac001b_96dbe041",
        "filename": "runtime/monitor.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1565058
      },
      "writtenOn": "2019-10-18T22:35:27Z",
      "side": 1,
      "message": "Consider adding a DCHECK that owner isn\u0027t null here? It wasn\u0027t there before, but it helps when reading. :-)",
      "revId": "0b2efc9b7bc7757eab3281a2c9b2c524de1b0a40",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f24e506_b39d2b20",
        "filename": "runtime/monitor.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-10-20T23:27:10Z",
      "side": 1,
      "message": "Interesting style question. I tend to read the dereference as a CHECK that it\u0027s not null. But opinions seem to vary.",
      "parentUuid": "0dac001b_96dbe041",
      "revId": "0b2efc9b7bc7757eab3281a2c9b2c524de1b0a40",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22877f6d_3d37d212",
        "filename": "runtime/monitor.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2019-10-21T17:22:01Z",
      "side": 1,
      "message": "Isn\u0027t dereferencing a null pointer undefined behavior? It would seem more correct to add an extra not-null CHECK?",
      "parentUuid": "6f24e506_b39d2b20",
      "revId": "0b2efc9b7bc7757eab3281a2c9b2c524de1b0a40",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "773947b4_2d27ba07",
        "filename": "runtime/monitor.cc",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-10-21T18:43:31Z",
      "side": 1,
      "message": "It is undefined behavior in C++. But we know that all sane implementations (on devices with MMUs) trap. ART has to trap to avoid Java null checks. (I did once work on a platform that didn\u0027t. And I think some old C implementations didn\u0027t so that \"\" and null could be the same. Both bad ideas.)\n\nBut I\u0027m OK with adding it if it\u0027s generally preferred.",
      "parentUuid": "22877f6d_3d37d212",
      "revId": "0b2efc9b7bc7757eab3281a2c9b2c524de1b0a40",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}