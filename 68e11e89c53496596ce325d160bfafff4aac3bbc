{
  "comments": [
    {
      "key": {
        "uuid": "db11db43_5a41551c",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 2
      },
      "lineNbr": 795,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-11T14:50:00Z",
      "side": 1,
      "message": "Add a comment that edx is caller-save (the equivalent arm64 comment says registers are \"free\").",
      "range": {
        "startLine": 795,
        "startChar": 4,
        "endLine": 795,
        "endChar": 59
      },
      "revId": "68e11e89c53496596ce325d160bfafff4aac3bbc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb3987d2_51d274dd",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 2
      },
      "lineNbr": 796,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-12T00:26:09Z",
      "side": 1,
      "message": "Also ebx is a caller save. So we can add a comment that edx and ebx are free and avoid \"pushl %ebx\" \"popl %ebx\" in the code.",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 796,
        "endChar": 4
      },
      "revId": "68e11e89c53496596ce325d160bfafff4aac3bbc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_52c0e1fd",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 2
      },
      "lineNbr": 801,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-12T00:26:09Z",
      "side": 1,
      "message": "MIRROR_OBJECT_ARRAY_COMPONENT_SIZE -\u003e COMPRESSED_REFERENCE_SIZE",
      "range": {
        "startLine": 801,
        "startChar": 23,
        "endLine": 801,
        "endChar": 57
      },
      "revId": "68e11e89c53496596ce325d160bfafff4aac3bbc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_326badc8",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 2
      },
      "lineNbr": 819,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-12T00:26:09Z",
      "side": 1,
      "message": "If\n\nesi -\u003e edi in lines 819 and 820,\nesi -\u003e ebx in lines 837, 840, 848 and 850,\nand reload the thread in ebx before line 864,\n\nit seems we could avoid saving/reloading esi (drop pushl/popl %esi) around this routine.",
      "range": {
        "startLine": 819,
        "startChar": 53,
        "endLine": 819,
        "endChar": 56
      },
      "revId": "68e11e89c53496596ce325d160bfafff4aac3bbc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b25eb9e_1cad1dab",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 2
      },
      "lineNbr": 843,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-12T00:26:09Z",
      "side": 1,
      "message": "Insert comment:\n\n// \"Point of no slow path\". Won\u0027t go to the slow path from here on. OK to clobber eax and ecx.\"",
      "range": {
        "startLine": 842,
        "startChar": 52,
        "endLine": 843,
        "endChar": 4
      },
      "revId": "68e11e89c53496596ce325d160bfafff4aac3bbc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}