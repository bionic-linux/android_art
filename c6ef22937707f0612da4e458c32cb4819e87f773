{
  "comments": [
    {
      "key": {
        "uuid": "319dc5d4_8d0ec118",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 791,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-30T17:05:49Z",
      "side": 1,
      "message": "boolean-\u003echar also satisfies the constraints.",
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae14f033_f9a5d7c7",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 791,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T18:11:01Z",
      "side": 1,
      "message": "Right; I added this case as well.",
      "parentUuid": "319dc5d4_8d0ec118",
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1da95a7_099ac93c",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-30T17:05:49Z",
      "side": 1,
      "message": "Maybe `Primitive::PrimitiveKind(input_type) \u003d\u003d Primitive::kPrimInt`? (Even though that includes the kPrimInt case handled above.)",
      "range": {
        "startLine": 793,
        "startChar": 45,
        "endLine": 796,
        "endChar": 81
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1da95a7_a9cf3d2e",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T18:11:01Z",
      "side": 1,
      "message": "I prefer the current version, which is in tune with the other following tests.  Plus the overlap with the first test (line 792), that you mentioned.",
      "parentUuid": "b1da95a7_099ac93c",
      "range": {
        "startLine": 793,
        "startChar": 45,
        "endLine": 796,
        "endChar": 81
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1a6cd26_0bc11dfd",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 799,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-30T16:14:04Z",
      "side": 1,
      "message": "We should never have result_type be kPrimBoolean, right? There\u0027s no bytecode instruction for it but can we generate it somehow? Might be worth a DCHECK",
      "range": {
        "startLine": 799,
        "startChar": 7,
        "endLine": 799,
        "endChar": 42
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1ae29f9_928b7ca2",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 799,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-30T17:05:49Z",
      "side": 1,
      "message": "I agree, the result_type should never be kPrimBoolean.",
      "parentUuid": "f1a6cd26_0bc11dfd",
      "range": {
        "startLine": 799,
        "startChar": 7,
        "endLine": 799,
        "endChar": 42
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1d7097d_eade478a",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 799,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T17:24:29Z",
      "side": 1,
      "message": "As discussed offline, this is probably not needed, as this routine is about widening integral conversions; the only relevant case (boolean â†’ boolean) is already covered by the test on line 792.",
      "parentUuid": "f1a6cd26_0bc11dfd",
      "range": {
        "startLine": 799,
        "startChar": 7,
        "endLine": 799,
        "endChar": 42
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1fbc56_f4cef87d",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 799,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T18:11:01Z",
      "side": 1,
      "message": "\u003e I agree, the result_type should never be kPrimBoolean.\n\nDone in PS3.",
      "parentUuid": "d1ae29f9_928b7ca2",
      "range": {
        "startLine": 799,
        "startChar": 7,
        "endLine": 799,
        "endChar": 42
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b1b559_319d7035",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-30T16:14:04Z",
      "side": 1,
      "message": "Do you need to test all these passes? Why not just before and after the instruction simplifier?",
      "range": {
        "startLine": 31,
        "startChar": 52,
        "endLine": 31,
        "endChar": 59
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1ae29f9_b2868098",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T17:24:29Z",
      "side": 1,
      "message": "Because we are checking a regression here (from a failure found while compiling an APK), I like to check all the passes where a relevant simplification has been performed.  Also, because this is Java code (and not Dex bytecode), it is easy for such tests to no longer exercise what they were written for in the first place; checking more passes (especially the builder) minimizes that risk IMO.",
      "parentUuid": "b1b1b559_319d7035",
      "range": {
        "startLine": 31,
        "startChar": 52,
        "endLine": 31,
        "endChar": 59
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71bbbd3b_4fa4cd76",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-30T16:14:04Z",
      "side": 1,
      "message": "Nit: CHECK-DAG (your code works, but let\u0027s not mix the CHECK kinds if not necessary)",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1da95a7_c9b711b0",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T17:24:29Z",
      "side": 1,
      "message": "I have taken the habit to use CHECK for ParameterValue instructions, as the order matters when there are more than one.  Even if those methods have a single argument, I decided to use CHECK to perpetuate this idiom.",
      "parentUuid": "71bbbd3b_4fa4cd76",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1116d0a_d606a26e",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-30T16:14:04Z",
      "side": 1,
      "message": "I\u0027d remove these. Showing the data-flow should be sufficient, shouldn\u0027t it?",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 52,
        "endChar": 47
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71bbbd3b_ef8821e7",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T17:24:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1116d0a_d606a26e",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 52,
        "endChar": 47
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1a6cd26_2bc4d90c",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-30T16:14:04Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 240,
        "startChar": 0,
        "endLine": 240,
        "endChar": 57
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11ac4106_8cad2764",
        "filename": "test/593-checker-boolean-to-integral-conversions/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-30T17:24:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1a6cd26_2bc4d90c",
      "range": {
        "startLine": 240,
        "startChar": 0,
        "endLine": 240,
        "endChar": 57
      },
      "revId": "c6ef22937707f0612da4e458c32cb4819e87f773",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}