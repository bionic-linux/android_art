{
  "comments": [
    {
      "key": {
        "uuid": "5572ea58_8d84e1ed",
        "filename": "compiler/optimizing/builder.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-05T19:20:48Z",
      "side": 1,
      "message": "Fwiw, it can be handy to have a div/mod node so that CSE can replace the node for cases like:\n\nfor ...\nint cur_val \u003d num  % base;\nint remainder \u003d num / base;\n\nthe codegen then needs to be smart about not generate one value or the other if its not used. On Intel both values are generated anyway.",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 122,
        "endChar": 43
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35165601_d457bcc8",
        "filename": "compiler/optimizing/builder.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-11-06T12:19:27Z",
      "side": 1,
      "message": "Agree and I\u0027ll probably change it like this when I get to the rem instruction.",
      "parentUuid": "5572ea58_8d84e1ed",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 122,
        "endChar": 43
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75752e3d_aecc3743",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1428,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-05T19:20:48Z",
      "side": 1,
      "message": "TODO: avoid branch overs and use slow-paths.",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 25
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35165601_9457041c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1428,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-06T09:22:19Z",
      "side": 1,
      "message": "Agree, the negl could probably be done on a slow path, so you\u0027d get something like:\n__ cmpl(second_reg, Immediate(-1))\n__ j(kNotEqual, slow_path)\n__ cdq\n__ idivl\n__ Bind(slow_path-\u003eexit)",
      "parentUuid": "75752e3d_aecc3743",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 25
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35165601_746ea89d",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1428,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-11-06T12:19:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35165601_9457041c",
      "range": {
        "startLine": 1425,
        "startChar": 0,
        "endLine": 1428,
        "endChar": 25
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15131213_f33e50e1",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1476,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-06T09:22:19Z",
      "side": 1,
      "message": "We might still after optimizations, so you have to check the value of the constant here.",
      "range": {
        "startLine": 1476,
        "startChar": 29,
        "endLine": 1476,
        "endChar": 34
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15131213_93a6fca0",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1476,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-11-06T12:19:27Z",
      "side": 1,
      "message": "I\u0027d argue that you should be able to avoid generating this but there\u0027s no downside of checking the value anyway :)",
      "parentUuid": "15131213_f33e50e1",
      "range": {
        "startLine": 1476,
        "startChar": 29,
        "endLine": 1476,
        "endChar": 34
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "357f3623_4c959f47",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 3
      },
      "lineNbr": 1355,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-05T19:20:48Z",
      "side": 1,
      "message": "// TODO: use slow paths and avoid branch overs.",
      "range": {
        "startLine": 1350,
        "startChar": 0,
        "endLine": 1355,
        "endChar": 21
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "950702cb_776eb09d",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 3
      },
      "lineNbr": 1355,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-11-06T12:19:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "357f3623_4c959f47",
      "range": {
        "startLine": 1350,
        "startChar": 0,
        "endLine": 1355,
        "endChar": 21
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "950702cb_5730cc09",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-11-06T09:22:19Z",
      "side": 1,
      "message": "Same comment as x86.",
      "range": {
        "startLine": 1403,
        "startChar": 25,
        "endLine": 1403,
        "endChar": 28
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15131213_7399a051",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-11-06T12:19:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "950702cb_5730cc09",
      "range": {
        "startLine": 1403,
        "startChar": 25,
        "endLine": 1403,
        "endChar": 28
      },
      "revId": "58f44adc2b04bde2a73be60b5c1ba173d1a0dbfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}