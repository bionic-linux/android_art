{
  "comments": [
    {
      "key": {
        "uuid": "f0e0b014_ef145d6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-21T11:23:29Z",
      "side": 1,
      "message": "I\u0027m sorry, I don\u0027t understand this part. Moving to the next level of cache doesn\u0027t need write permissions.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f990d6_ee96902a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1083288
      },
      "writtenOn": "2016-11-21T11:54:39Z",
      "side": 1,
      "message": "Probably, dc cvau not only moves to next level of cache, but also makes writes to main memory (as arm documentation says). Due to this instruction uses virtual address it need to translate it into physical address and also check permissions.",
      "parentUuid": "f0e0b014_ef145d6d",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f990d6_ae90982d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1083288
      },
      "writtenOn": "2016-11-21T11:56:51Z",
      "side": 1,
      "message": "We faced several crashes of such kind. In all cases pc points to this instruction and error code of SIGSEGV was SEGV_ACCERR",
      "parentUuid": "f0f990d6_ee96902a",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e0b014_afc895b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-21T13:00:19Z",
      "side": 1,
      "message": "Note that I am not doubting the fix. We here also came to the conclusion it would give us more guarantees to do the flush before the mprotect.\n\nBut I think the description you\u0027re giving here isn\u0027t what is happening. The instruction cache may contain old data at this point, so we flush it, and that cache not doing any updates doesn\u0027t need to write back in main memory.",
      "parentUuid": "f0f990d6_ae90982d",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f990d6_6edbc0d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1083288
      },
      "writtenOn": "2016-11-21T15:50:08Z",
      "side": 1,
      "message": "My thoughts were:\n1. We received several crashes described above.\n2. If pc points to \"dc cvau\" inside __aarch64_sync_cache_range in the JIT thread then the JIT thread crashes during flushing of caches.\n3. If error code is SEGV_ACCERR then the JIT thread tries to  write into memory which has no write permission. It also means that instruction \"dc cvau\" can do writes into memory. Arm documentation confirms that.\nThis commit fixes this issue.\n\n\u003e The instruction cache may contain old data at this point, so we flush it, and that cache not doing any updates doesn\u0027t need to write back in main memory.\n\nThe issue happens when we flush data cache in the JIT thread.\n\n\u003e But I think the description you\u0027re giving here isn\u0027t what is happening.\n\n\nI don\u0027t know how it works inside CPU. May be I wrong but, the issue happens on big.little architecture. As I know each core have own L1 cache and common L2 per cluster (4 cores). There is interconnect between L2 caches with support of coherency. For example JIT thread flushes caches on one cluster and this leads to write back from L1 cache into L2 cache. At this moment cache controller invalidates affected cache lines int another cluster and sends data into memory.\nI want to say again may be I wrong about CPU logic.\n\n\n\u003eBut I think the description you\u0027re giving here isn\u0027t what is happening.\n\nProbably we have different issues. Could you explain your opinion?",
      "parentUuid": "f0e0b014_afc895b5",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e0b014_d2fa6454",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-21T16:10:43Z",
      "side": 1,
      "message": "To confirm : when you mention the ART documentation, is it this specific line?\n\"The AArch64 Data Cache invalidate instruction by address, DC IVAC, requires write permission or else a permission fault is generated.\"\n\nIt\u0027s only referencing DC IVAC though, are you saying DC CVAU inherits from this?",
      "parentUuid": "f0f990d6_6edbc0d9",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f990d6_ce72b4c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1083288
      },
      "writtenOn": "2016-11-21T16:24:48Z",
      "side": 1,
      "message": "This line\n\"Cleaning a cache or cache line means writing the contents of cache lines that are marked as dirty, out to the next level of cache, or to main memory, and clearing the dirty bits in the cache line. This makes the contents of the cache line coherent with the next level of the cache or memory system. This is only applicable for data caches in which a write-back policy is used. This is also a way of making changes in the cache visible to the user of the outer memory domain, but is only available for data cache.\"\nfrom this http://infocenter.arm.com/help/index.jsp?topic\u003d/com.arm.doc.den0024a/BABJDBHI.html",
      "parentUuid": "f0e0b014_d2fa6454",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 30
      },
      "revId": "3ac37b1de35768d4841a7f31a27f959c28af3675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}