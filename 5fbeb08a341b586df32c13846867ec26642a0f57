{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7be3deb_5fc3d1c0",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-10-14T08:58:54Z",
      "side": 1,
      "message": "Maybe better to have this logic in `compiler_options_map-inl.h`, where we would define precedence between the sysprop and the command line flag.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 96,
        "endChar": 87
      },
      "fixSuggestions": [
        {
          "fixId": "a8318b7c_7023c11a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "compiler/driver/compiler_options.cc",
              "range": {
                "startLine": 84,
                "startChar": 0,
                "endLine": 97,
                "endChar": 0
              },
              "replacement": "  using android::base::GetUintProperty;\n  inliner_maximum_number_of_total_instructions_ \u003d GetUintProperty(\n      \"dalvik.inliner.max_num_total_instructions\",\n      kInlinerMaximumNumberOfTotalInstructions);\n  inliner_maximum_number_of_instructions_for_small_method_ \u003d GetUintProperty(\n      \"dalvik.inliner.max_num_instructions_for_small_method\",\n      kInlinerMaximumNumberOfInstructionsForSmallMethod);\n  inliner_maximum_number_of_cumulated_dex_registers_ \u003d GetUintProperty(\n      \"dalvik.inliner.max_num_cumulated_dex_registers\",\n      kInlinerMaximumNumberOfCumulatedDexRegisters);\n  inliner_maximum_number_of_recursive_calls_ \u003d GetUintProperty(\n      \"dalvik.inliner.max_num_recursive_calls\",\n      kInlinerMaximumNumberOfRecursiveCalls);\n  inliner_maximum_number_of_polymorphic_recursive_calls_ \u003d GetUintProperty(\n      \"dalvik.inliner.max_num_polymorphic_recursive_calls\",\n      kInlinerMaximumNumberOfPolymorphicRecursiveCalls);\n"
            }
          ]
        }
      ],
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "466a7e64_c62a7907",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T15:05:14Z",
      "side": 1,
      "message": "I tried that and ended up with really wonky logic for implementing the tri-state against sysprops (which themselves require passing a default when getting their values). I ended up with what\u0027s in the latest revision. PTAL.",
      "parentUuid": "a7be3deb_5fc3d1c0",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 96,
        "endChar": 87
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e116ea4a_51f42e3f",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-17T21:07:27Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "466a7e64_c62a7907",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 96,
        "endChar": 87
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3b4751c_612a6d72",
        "filename": "compiler/driver/compiler_options_map.def",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-10-14T08:58:54Z",
      "side": 1,
      "message": "You need also update code to read these options, see examples in `compiler_options_map-inl.h`.",
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b06c217b_a405a158",
        "filename": "compiler/driver/compiler_options_map.def",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T15:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3b4751c_612a6d72",
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2df0406_c2492327",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T12:34:51Z",
      "side": 1,
      "message": "Nicolas, do you know why we skip such methods? I think we can remove these two checks. We can do this in a follow-up CL.",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 82
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e856e827_21039eab",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-10-14T14:44:02Z",
      "side": 1,
      "message": "For methods too large that\u0027s to limit the time it takes to analyze. For try/catch is to avoid to know the boundaries of the try catch.\n\nSo all in all, it\u0027s to keep the analsys simple.",
      "parentUuid": "a2df0406_c2492327",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 82
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a3ce3e4_71cbc3df",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T14:58:40Z",
      "side": 1,
      "message": "\u003e For methods too large that\u0027s to limit the time it takes to analyze\n\nNot sure how much compile time we save by skipping these methods.\n\n\u003e For try/catch is to avoid to know the boundaries of the try catch.\n\nBut this is for marking methods as \"always throws\" so we should see at least one return instruction if the method doesn\u0027t always throw. Even if the `throw` is within a try/catch there should be another throw or return down the line at the end of the method.",
      "parentUuid": "e856e827_21039eab",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 82
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8684bd44_544b3cad",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-16T13:50:09Z",
      "side": 1,
      "message": "(resolving since this is not a blocker for submission)",
      "parentUuid": "6a3ce3e4_71cbc3df",
      "range": {
        "startLine": 433,
        "startChar": 26,
        "endLine": 433,
        "endChar": 82
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61862931_e71611e2",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 435,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T12:34:51Z",
      "side": 1,
      "message": "drive-by style: one per line.",
      "fixSuggestions": [
        {
          "fixId": "7b37d6f6_89d7a459",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "compiler/optimizing/inliner.cc",
              "range": {
                "startLine": 435,
                "startChar": 0,
                "endLine": 437,
                "endChar": 0
              },
              "replacement": " if (!accessor.HasCodeItem() ||\n     accessor.TriesSize() !\u003d 0 ||\n     accessor.InsnsSizeInCodeUnits() \u003e options_.InlinerMaximumNumberOfTotalInstructions()) {\n"
            }
          ]
        }
      ],
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7abb3d04_664790f0",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 435,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T15:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61862931_e71611e2",
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0cb66f0_6a3e4685",
        "filename": "compiler/optimizing/inliner.h",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-10-14T08:58:54Z",
      "side": 1,
      "message": "One line.",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 255,
        "endChar": 42
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b51dc95_30ed93c0",
        "filename": "compiler/optimizing/inliner.h",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T15:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0cb66f0_6a3e4685",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 255,
        "endChar": 42
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0121fae_1ebac418",
        "filename": "compiler/optimizing/inliner.h",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T15:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0cb66f0_6a3e4685",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 255,
        "endChar": 42
      },
      "revId": "5fbeb08a341b586df32c13846867ec26642a0f57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}