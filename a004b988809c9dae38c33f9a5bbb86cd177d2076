{
  "comments": [
    {
      "key": {
        "uuid": "9dc4c07e_421208e8",
        "filename": "runtime/arch/instruction_set_features.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2016-02-10T19:26:05Z",
      "side": 1,
      "message": "I think the name of this function is now meaningless. It is supposed to return the InstructionSetFeatures for the C++ program that\u0027s running. For example, if it\u0027s running on a x86 it\u0027ll tell me the level of SSE support. Doing this for anything other than the runtime ISA doesn\u0027t make sense. Why would a x86 have __ARM #defines? I believe you are just after a way to fake up a InstructionSetFeatures, why not use the FromVariant/FromBitmap routines that are used for this purpose in cross-compilation?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 42
      },
      "revId": "a004b988809c9dae38c33f9a5bbb86cd177d2076",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}