{
  "comments": [
    {
      "key": {
        "uuid": "928ac69d_dd17cb40",
        "filename": "compiler/dex/quick/mips64/mips64_lir.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2015-03-04T18:40:40Z",
      "side": 1,
      "message": "Wow, a giant copy-paste of the compiler too. Why not factor the code? Look at x86 for how to achieve this.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "321d9af7_f79f77db",
        "filename": "compiler/dex/quick/mips64/mips64_lir.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-04T20:16:58Z",
      "side": 1,
      "message": "I\u0027d prefer we get this in (so that there\u0027s not always the \"we\u0027re three weeks behind AOSP\") and iterate on it, with the clear understanding that if this is not refactored by, say, the end of March, I\u0027ll revert.\n\nx86 started out separate, too, if I remember correctly.",
      "parentUuid": "928ac69d_dd17cb40",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9271e61d_c5975a8d",
        "filename": "compiler/dex/quick/mips64/utility_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-03T16:02:18Z",
      "side": 1,
      "message": "This and below has been updated for readability in the mips backend. Please update.",
      "range": {
        "startLine": 73,
        "startChar": 47,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "929c86d9_d04222f7",
        "filename": "compiler/dex/quick/mips64/utility_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1068027
      },
      "writtenOn": "2015-03-04T18:22:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9271e61d_c5975a8d",
      "range": {
        "startLine": 73,
        "startChar": 47,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9271e61d_a507be14",
        "filename": "compiler/dex/quick/quick_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-03T05:46:17Z",
      "side": 1,
      "message": "Considering that the mips64 files still bear witness to being copied from mips (with large swaths being unmodified or trivial changes, e.g., renames from MIPS to MIPS64), what are the arguments that you can suddenly allow all those optimizations?",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 19
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2a43ecd_3f7967c7",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-03T10:19:17Z",
      "side": 1,
      "message": "This doesn\u0027t belong here.",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9271e61d_a59a5eb6",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-03T16:01:16Z",
      "side": 1,
      "message": "That\u0027s a bit unfair. Exactly this place had instruction-set decisions before...",
      "parentUuid": "d2a43ecd_3f7967c7",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b04e09_5b7c4337",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-03T16:08:06Z",
      "side": 1,
      "message": "I\u0027m not familiar with the old code. But looking at this change here, something does not look logical. Like we\u0027re not going to have JNI methods?",
      "parentUuid": "9271e61d_a59a5eb6",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9271e61d_08e6e732",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-03T16:14:53Z",
      "side": 1,
      "message": "GenericJNI works for Mips64. But it seems the JNI compiler doesn\u0027t. That was the situation for the other 64b backends in the beginning, too...",
      "parentUuid": "52b04e09_5b7c4337",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b04e09_9b508bb2",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-03T16:20:23Z",
      "side": 1,
      "message": "Erf, ok the code is kind of convoluted here. Maybe a InstructionSetHasJniCompiler would be better (and not require a comment. Without a comment the current code is hard to follow).",
      "parentUuid": "9271e61d_08e6e732",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "929c86d9_d05062b3",
        "filename": "compiler/driver/compiler_driver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2175,
      "author": {
        "id": 1068027
      },
      "writtenOn": "2015-03-04T18:22:14Z",
      "side": 1,
      "message": "We are working on enabling JNI compiler and we will update the patch as soon as it is finished. Until then, we will add a comment with an explanation.",
      "parentUuid": "52b04e09_9b508bb2",
      "range": {
        "startLine": 2175,
        "startChar": 4,
        "endLine": 2175,
        "endChar": 40
      },
      "revId": "5f48b2567449fed923a8c47c8d95ebead3a120d5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}