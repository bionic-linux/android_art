{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09033e48_70cbb36d",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-12T06:58:37Z",
      "side": 1,
      "message": "I would prefer to keep the `GET_VREG`, reserving the `GET_VREG_OBJECT` for the nterp-to-nterp invoke paths. (For references, the values in \"FP\" and \"REFS\" should be identical.)",
      "range": {
        "startLine": 164,
        "startChar": 6,
        "endLine": 164,
        "endChar": 21
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5486063_bb445852",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T21:56:01Z",
      "side": 1,
      "message": "It\u0027s LW vs LWU, so slightly different ops.\n\nSince the values are identical - if the primary purpose is to help GC, then why bother reading from xREFS at all, outside of GC code?",
      "parentUuid": "09033e48_70cbb36d",
      "range": {
        "startLine": 164,
        "startChar": 6,
        "endLine": 164,
        "endChar": 21
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdde7950_ba60b4e4",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-13T07:14:55Z",
      "side": 1,
      "message": "The nterp-to-nterp path uses `GET_VREG_OBJECT` to copy the required REFS, so that we correctly mark references without processing the shorty. The StringInit reference replacement also uses `GET_VREG_OBJECT` to avoid replacing an integral value with the new String. Other than that, arm64 has no reason to use `GET_VREG_OBJECT`.\n\nBut, as you point out, we have LW v. LWU on riscv64, so it makes sense to use `GET_VREG_OBJECT` in other contexts. It does not matter here but it shall matter for `iget*` and `iput*`.\n\nLet\u0027s submit this now as is, making this CL just a pure fix for the AMOSWAP clobbering. Feel free to change this to `GET_VREG_OBJECT` in a future CL.",
      "parentUuid": "e5486063_bb445852",
      "range": {
        "startLine": 164,
        "startChar": 6,
        "endLine": 164,
        "endChar": 21
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9176c3d6_ed136f05",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-12T06:58:37Z",
      "side": 1,
      "message": "We don\u0027t care about the old value, so this can be `zero` (X0).",
      "range": {
        "startLine": 189,
        "startChar": 19,
        "endLine": 189,
        "endChar": 21
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8a05299_1c8e3a1f",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T21:56:01Z",
      "side": 1,
      "message": "Ooh yeah",
      "parentUuid": "9176c3d6_ed136f05",
      "range": {
        "startLine": 189,
        "startChar": 19,
        "endLine": 189,
        "endChar": 21
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dfc74e9_cc8a993e",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-12T06:58:37Z",
      "side": 1,
      "message": "`zero`",
      "range": {
        "startLine": 191,
        "startChar": 19,
        "endLine": 191,
        "endChar": 29
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ddd371d_5dfcfea0",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T21:56:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dfc74e9_cc8a993e",
      "range": {
        "startLine": 191,
        "startChar": 19,
        "endLine": 191,
        "endChar": 29
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4ec99ee_14941806",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-12T06:58:37Z",
      "side": 1,
      "message": "I find this comment unnecessary, especially if we use `zero` as the result register for AMOSWAP.",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 197,
        "endChar": 74
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d63906c_1c928312",
        "filename": "runtime/interpreter/mterp/riscv64/object.S",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T21:56:01Z",
      "side": 1,
      "message": "A note of _some_ kind would be very helpful. The documentation for AMOSWAP is really bad. Remember it slipped by multiple engineers.",
      "parentUuid": "b4ec99ee_14941806",
      "range": {
        "startLine": 193,
        "startChar": 4,
        "endLine": 197,
        "endChar": 74
      },
      "revId": "7e9d0aaa3875b712104315b4f02b78f2ed723675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}