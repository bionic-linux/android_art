{
  "comments": [
    {
      "key": {
        "uuid": "ce02cd41_710bf81b",
        "filename": "compiler/dex/quick/dex_file_method_inliner.cc",
        "patchSetId": 18
      },
      "lineNbr": 296,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 296,
        "startChar": 103,
        "endLine": 296,
        "endChar": 105
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae075951_90965454",
        "filename": "compiler/dex/quick/dex_file_method_inliner.cc",
        "patchSetId": 18
      },
      "lineNbr": 298,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 298,
        "startChar": 99,
        "endLine": 298,
        "endChar": 101
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_b1144037",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 1126,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "How about adding a bool \u0027intrinsified\u0027 in LocationSummary?",
      "range": {
        "startLine": 1126,
        "startChar": 5,
        "endLine": 1126,
        "endChar": 9
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae52f94e_58d23d94",
        "filename": "compiler/optimizing/intrinsics_list.h",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Can we have this list be the main list of intrinsics instead? (hence changing the dex method inliner).",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae52f94e_b83b99ba",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 44,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Exact copy/paste? Bad smell...",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae075951_d090dc58",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 71,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "nit: Do an early return to avoid the indentation.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 22
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae52f94e_38d3091c",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "That\u0027s a style I\u0027m not familiar with. I would put the brace on the same line as the case. And the break within the block.",
      "range": {
        "startLine": 79,
        "startChar": 8,
        "endLine": 79,
        "endChar": 9
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_11d8ac34",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 152,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "I thought the ins were already at the right place? (see comment line 140).",
      "range": {
        "startLine": 152,
        "startChar": 4,
        "endLine": 152,
        "endChar": 10
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae52f94e_58e23de2",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 162,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Do you really need this? The result should be in the expected register, as you\u0027re intrisifying a call.",
      "range": {
        "startLine": 162,
        "startChar": 4,
        "endLine": 162,
        "endChar": 11
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae075951_300168fc",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 241,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Nit: one argument per line.",
      "range": {
        "startLine": 241,
        "startChar": 56,
        "endLine": 241,
        "endChar": 65
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae52f94e_98c33547",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 246,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "No need for ::Type (here and below).",
      "range": {
        "startLine": 246,
        "startChar": 20,
        "endLine": 246,
        "endChar": 24
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_51e234e2",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 294,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Location::Any()?",
      "range": {
        "startLine": 294,
        "startChar": 29,
        "endLine": 294,
        "endChar": 53
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_b1c60057",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 360,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "nit: I\u0027d find it more readable to have everything in the same if (that is, merge line 352-3 and 361-2.",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 360,
        "endChar": 16
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_11ff0c74",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 18
      },
      "lineNbr": 925,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "Not a lot of return false... Why do you want this bool to be returned?",
      "range": {
        "startLine": 925,
        "startChar": 3,
        "endLine": 925,
        "endChar": 14
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae075951_50434ce1",
        "filename": "compiler/optimizing/intrinsics_x86_64.h",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "The following declarations should be auto-generated.",
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae075951_b057189a",
        "filename": "compiler/optimizing/intrinsics_x86_64.h",
        "patchSetId": 18
      },
      "lineNbr": 106,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "ditto.",
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce02cd41_f1c088bb",
        "filename": "compiler/optimizing/register_allocator.cc",
        "patchSetId": 18
      },
      "lineNbr": 1100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-07T15:47:56Z",
      "side": 1,
      "message": "This is odd... Why would an input\u0027s location be invalid? Unused argument?",
      "range": {
        "startLine": 1100,
        "startChar": 12,
        "endLine": 1100,
        "endChar": 39
      },
      "revId": "07d772ac445054c45ac356410a0e79d191233afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}