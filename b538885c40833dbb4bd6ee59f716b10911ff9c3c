{
  "comments": [
    {
      "key": {
        "uuid": "63758ab8_6841bd67",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-03-27T21:37:19Z",
      "side": 1,
      "message": "Can you please elaborate on what you mean by \"fixed layout\" for the dex cache? I think that is the crucial concept I am not understanding here?",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a3ca80_0c863617",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-03-27T22:33:50Z",
      "side": 1,
      "message": "Ok, I talked to Andreas and he said that this probably means that you want the order of the DexCache arrays to be fixed relative to the 0th dexcache array. Seems like a good idea.",
      "parentUuid": "63758ab8_6841bd67",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_a5863f14",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 311,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-03-27T22:33:50Z",
      "side": 1,
      "message": "I think if you just call \"AssignImageBinSlot\" here (on each of the objects one after the other\") then it will do exactly what you want without having to do any of the other changes on 313-319 or 421-430",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_ce67c34e",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 311,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-03-28T00:59:29Z",
      "side": 1,
      "message": "If I do that, WalkFieldsInOrder() will stop on these arrays. So I would need to be 100% sure that each of the objects referenced by those arrays is reachable by some other path. I\u0027m not sure, especially about the strings.",
      "parentUuid": "43d246e8_a5863f14",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a3ca80_58470980",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 319,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-03-27T21:37:19Z",
      "side": 1,
      "message": "I took a closer look, and I\u0027m just not sure if there\u0027s a need to do this \"bin slot\" manipulation here?\n\nOnce it\u0027s added to the dex_cache_array_slots_, you already do a special check in AssignImageBinSlot when objects are arrays.\n\nIf you want the objects to be assigned in a specific order (and again, I\u0027m not sure I understand why that would matter?), then changing the visit logic would make more sense to me than adding out-of-band logic to move bins around.\n\n(in other words, removing all the bin_slot_sizes_ and image_end_ manipulations back to where they were before this CL)",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_ee64ff4b",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 319,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-03-28T00:59:29Z",
      "side": 1,
      "message": "You\u0027re right, I can leave the image_end_ update until AssignImageBinSlot(). Only the bin_slot_sizes_[kBinDexCacheArray] must be set here because of the DCHECK.",
      "parentUuid": "63a3ca80_58470980",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c55625_f40370c4",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 19
      },
      "lineNbr": 319,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-03-30T09:45:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63caea3a_ee64ff4b",
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63758ab8_a58f007e",
        "filename": "compiler/image_writer.h",
        "patchSetId": 19
      },
      "lineNbr": 299,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-03-27T21:37:19Z",
      "side": 1,
      "message": "Why does this say \"slots\" (in the comment or the name)?\n\nIn the code it\u0027s storing the values as the offset relative to the 0th image bin (i.e. the 0th element is at offset 0)",
      "range": {
        "startLine": 299,
        "startChar": 27,
        "endLine": 299,
        "endChar": 33
      },
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_8e71bb0c",
        "filename": "compiler/image_writer.h",
        "patchSetId": 19
      },
      "lineNbr": 299,
      "author": {
        "id": 1033066
      },
      "writtenOn": "2015-03-28T00:59:29Z",
      "side": 1,
      "message": "Right, the name is misleading. It\u0027s either offsets or indexes (see \"index\" in struct BinSlot).",
      "parentUuid": "63758ab8_a58f007e",
      "range": {
        "startLine": 299,
        "startChar": 27,
        "endLine": 299,
        "endChar": 33
      },
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_12cacc4c",
        "filename": "compiler/image_writer.h",
        "patchSetId": 19
      },
      "lineNbr": 299,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-03-30T09:45:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63caea3a_8e71bb0c",
      "range": {
        "startLine": 299,
        "startChar": 27,
        "endLine": 299,
        "endChar": 33
      },
      "revId": "b538885c40833dbb4bd6ee59f716b10911ff9c3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}