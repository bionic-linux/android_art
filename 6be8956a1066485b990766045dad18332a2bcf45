{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c70de9_91a5dde7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-07-23T12:39:26Z",
      "side": 1,
      "message": "Can you add a test to exercise this new code path (and make sure we don\u0027t regress on line coverage)?",
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8eda5510_c7aeaa94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1850729
      },
      "writtenOn": "2024-07-23T19:36:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b1c70de9_91a5dde7",
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37c50018_10debe2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1850729
      },
      "writtenOn": "2024-07-22T23:38:09Z",
      "side": 1,
      "message": "Hey @hboehm@google.com @ilkos@google.com @scianciulli@google.com - Need your help in more review.\n\nI\u0027ve updated the two CLs, one in `art` for the native code, the other in `libcore/libart` in VMRuntime.java. Both have passed presubmit.",
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "281d99c9_e5c5b6e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2024-07-23T00:32:55Z",
      "side": 1,
      "message": "I\u0027m probably not the right reviewer for making Value public. I don\u0027t know whether this violates some principle of the original design. Otherwise LGTM.",
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e7f696d_e87877a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2024-07-23T10:02:10Z",
      "side": 1,
      "message": "I think the change is acceptable, because it is effectively the only way to retrieve this information at the moment - there are similar counters (e.g., https://cs.android.com/android/platform/superproject/main/+/main:art/runtime/gc/heap.h;l\u003d1675;drc\u003d3796be3b545daae6b9a572b3860fbae2431dd5dc), but they usually don\u0027t distinguish between full heap or young generation collection, which seems to be quite an important distinction here.\n\nUnfortunately this makes the `Value()` method public for all metrics while it would be only needed for one - CCing @rpl@google.com to share his opinion on this.",
      "parentUuid": "281d99c9_e5c5b6e2",
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12240d0_5181c73a",
        "filename": "libartbase/base/metrics/metrics.h",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2024-07-23T12:39:26Z",
      "side": 1,
      "message": "Can you use `friend` instead of making this method `public` (and adjust the commit message)? I think that\u0027s the pattern we have tried to follow in this file.",
      "range": {
        "startLine": 332,
        "startChar": 0,
        "endLine": 332,
        "endChar": 74
      },
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19a9d95b_c6998c3f",
        "filename": "libartbase/base/metrics/metrics.h",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1850729
      },
      "writtenOn": "2024-07-23T19:36:42Z",
      "side": 1,
      "message": "That\u0027s a good proposal. However, I did face a few problems here: 1) `friend` requires a class and `dalvik_system_VMRuntime.cc` is a place for JNI calls, and there isn\u0027t really a class, and 2) `class ArtMetrics` itself is a `friend` class of `MetricCounter` so from within ArtMetrics we could access MetricsCounter, and so another option is to introduce something like `ArtMetrics.getValue(...)` but then again I guess that\u0027s less straightforward than exposing `MetricsCounter.Value()` to be public\n\nI understand the encapsulation/visibility concern of exposing Value(), however, is there any strong reason behind this?",
      "parentUuid": "d12240d0_5181c73a",
      "range": {
        "startLine": 332,
        "startChar": 0,
        "endLine": 332,
        "endChar": 74
      },
      "revId": "6be8956a1066485b990766045dad18332a2bcf45",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}