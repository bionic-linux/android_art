{
  "comments": [
    {
      "key": {
        "uuid": "0815f483_040eb61b",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 21,
        "startChar": 19,
        "endLine": 21,
        "endChar": 42
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_64032af4",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Move this C header inclusion before C++ ones, per the style guide.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_4408ae0c",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Nit: move first argument on the same line as method\u0027s name:\n\n  operator\u003d\u003d(const IntrusiveForwardListIterator\u003cOtherT1, OtherTraits\u003e\u0026 lhs,\n             const IntrusiveForwardListIterator\u003cOtherT2, OtherTraits\u003e\u0026 rhs);\n\n?",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 69
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_c413fe3a",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 136,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Maybe use\n\n  \u003d default;\n\n?",
      "range": {
        "startLine": 136,
        "startChar": 25,
        "endLine": 136,
        "endChar": 39
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_4441ce18",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "I know this is documented in std::forward_list, but maybe add as a reminder in a comment that the element pointed-to by `first` (as well as the element pointed-to by `last`) won\u0027t be moved?",
      "range": {
        "startLine": 230,
        "startChar": 2,
        "endLine": 233,
        "endChar": 40
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_245bf203",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 280,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Replace with\n\n  std::equal_to\u003cvalue_type\u003e()\n\n?",
      "range": {
        "startLine": 280,
        "startChar": 11,
        "endLine": 280,
        "endChar": 82
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_046076aa",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 299,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Replace with\n\n  std::less\u003cvalue_type\u003e()\n\n?",
      "range": {
        "startLine": 299,
        "startChar": 17,
        "endLine": 299,
        "endChar": 87
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_445a6efc",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 329,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 329,
        "startChar": 9,
        "endLine": 329,
        "endChar": 79
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_e448ba33",
        "filename": "compiler/utils/intrusive_forward_list.h",
        "patchSetId": 7
      },
      "lineNbr": 439,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Where is this used?",
      "range": {
        "startLine": 439,
        "startChar": 19,
        "endLine": 439,
        "endChar": 34
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_a497e2c2",
        "filename": "compiler/utils/intrusive_forward_list_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Alternatively, I think you can use this syntax to get rid of the linter error:\n\n  std::forward_list\u003cint\u003e ref({ 1, 2, 7 });",
      "range": {
        "startLine": 76,
        "startChar": 43,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0815f483_648e8ab4",
        "filename": "compiler/utils/intrusive_forward_list_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-04-19T15:04:31Z",
      "side": 1,
      "message": "Maybe document why you\u0027re disabling optimizations here?",
      "range": {
        "startLine": 82,
        "startChar": 35,
        "endLine": 82,
        "endChar": 59
      },
      "revId": "2f380654655ad177f1ed76102963d2d2fece72fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}