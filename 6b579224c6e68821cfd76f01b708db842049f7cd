{
  "comments": [
    {
      "key": {
        "uuid": "0530377d_7fe8231a",
        "filename": "runtime/instruction_set.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-04-28T16:32:11Z",
      "side": 1,
      "message": "Is this correct?  We push S registers currently, but do we push 64 bit registers on ARM64?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 77,
        "endChar": 15
      },
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e52c0330_15d2348f",
        "filename": "runtime/instruction_set.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-04-28T16:48:35Z",
      "side": 1,
      "message": "This is a copy paste of what was in quick_trampoline_entrypoints.cc. I guess the assumption is that we\u0027ll use D registers in quick/aarch64.",
      "parentUuid": "0530377d_7fe8231a",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 77,
        "endChar": 15
      },
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4516afdd_2157f437",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 640,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-04-28T16:32:11Z",
      "side": 1,
      "message": "spill_size would be a better name to be consistent",
      "range": {
        "startLine": 640,
        "startChar": 8,
        "endLine": 640,
        "endChar": 14
      },
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e52c0330_959404bf",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 640,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-04-28T16:48:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4516afdd_2157f437",
      "range": {
        "startLine": 640,
        "startChar": 8,
        "endLine": 640,
        "endChar": 14
      },
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c57378_f9ee776a",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-04-25T13:32:37Z",
      "side": 1,
      "message": "Why sizeof(uint32_t) used here? There is similar code in runtime.cc:\n\n    size_t frame_size \u003d RoundUp((__builtin_popcount(core_spills) /* gprs */ +\n                                 __builtin_popcount(fp_spills) /* fprs */ +\n                                 1 /* Method* */) * kX86_64PointerSize, kStackAlignment);\n\nIt means that in runtime.cc 8 bytes added instead of 4 bytes.",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a56ccb48_830f1ebf",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-04-25T14:30:43Z",
      "side": 1,
      "message": "Where in runtime.cc?\n\nThe filler is due to dex considerations, and dex registers are currently 4 bytes.",
      "parentUuid": "65c57378_f9ee776a",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5fec3bb_a5455e59",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-04-26T00:48:26Z",
      "side": 1,
      "message": "I mean runtime.cc:1054, function Runtime::CreateCalleeSaveMethod. For all 64-bit archs that function sets the frame size, and the spills calculated in another way, kArm64PointerSize/kX86_64PointerSize used instead of sizeof(uint32_t) for spill size calculation, also RoundUp used for whole frame size calculation.",
      "parentUuid": "a56ccb48_830f1ebf",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e52c0330_7557e8df",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-04-28T11:03:53Z",
      "side": 1,
      "message": "Code over there in runtime.cc:1054 is for computing the frame for callee save registers. It does not take care of virtual registers, contrary to here.",
      "parentUuid": "e5fec3bb_a5455e59",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4516afdd_e13fbcf7",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-04-28T16:32:11Z",
      "side": 1,
      "message": "What dex considerations?  What else is saved in the stack?",
      "parentUuid": "a56ccb48_830f1ebf",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c529bf20_744a8890",
        "filename": "runtime/stack.h",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-04-28T16:48:35Z",
      "side": 1,
      "message": "Dex considerations \u003d all virtual registers are 4 bytes. Not sure about you\u0027re other question. Files x86_lir.h and arm_lir.h describe what\u0027s in the stack.",
      "parentUuid": "4516afdd_e13fbcf7",
      "revId": "6b579224c6e68821cfd76f01b708db842049f7cd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}