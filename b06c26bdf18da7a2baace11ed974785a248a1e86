{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "64fd6568_0ce082b4",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 9
      },
      "lineNbr": 294,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-16T02:12:14Z",
      "side": 1,
      "message": "It\u0027s unclear to me what this means. Release how? Why is thiscalled \"reuse\"?",
      "range": {
        "startLine": 293,
        "startChar": 47,
        "endLine": 294,
        "endChar": 50
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef683bc8_755ecee0",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 9
      },
      "lineNbr": 294,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-11-18T20:07:50Z",
      "side": 1,
      "message": "\u0027reuse\u0027 terminology is used by mem-map to indicate a mapping which is not owned by mem-map in the sense that it will not unmap the mapping in the destructor.\n\nBy release here I mean unmapping.",
      "parentUuid": "64fd6568_0ce082b4",
      "range": {
        "startLine": 293,
        "startChar": 47,
        "endLine": 294,
        "endChar": 50
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2956ea48_70c70c6c",
        "filename": "libartbase/base/mem_map.h",
        "patchSetId": 9
      },
      "lineNbr": 294,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-22T01:23:05Z",
      "side": 1,
      "message": "Please just change the comment releasing --\u003e unmapping. Ideally that shuould be claified in the MemMap API as well, but that\u0027s a separate issue.",
      "parentUuid": "ef683bc8_755ecee0",
      "range": {
        "startLine": 293,
        "startChar": 47,
        "endLine": 294,
        "endChar": 50
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5de588b8_9d3d5e07",
        "filename": "runtime/barrier.h",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-16T02:12:14Z",
      "side": 1,
      "message": "I wish we could replace this API with std::barrier. But that was only added in C++20. And I\u0027m not sure it always has suddiciently similar functionality.",
      "range": {
        "startLine": 56,
        "startChar": 2,
        "endLine": 56,
        "endChar": 15
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a93ae0f_8212dc11",
        "filename": "runtime/base/gc_visited_arena_pool.h",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-16T02:12:14Z",
      "side": 1,
      "message": "General suggestion, not necessary for this CL: In a bunch of places, you use uint8_t* as a page address. It would be clearer to at least introduce a more specialized alias for uint8_t* like \"page_pointer\" for this case.",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 10
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6557f74f_cc973aa4",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-11-16T02:12:14Z",
      "side": 1,
      "message": "Only kFallbackmode is used as a file descriptor? This seems like an odd way to set these. Maybe just set them to -1, -2, and -3, with kFallbackMode last, and explaining that that one is used as a file descriptor?",
      "range": {
        "startLine": 56,
        "startChar": 2,
        "endLine": 58,
        "endChar": 55
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09e1422c_f8bb5e41",
        "filename": "runtime/gc/collector/mark_compact.h",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-11-18T20:07:50Z",
      "side": 1,
      "message": "Sure. Will address in the next patch.",
      "parentUuid": "6557f74f_cc973aa4",
      "range": {
        "startLine": 56,
        "startChar": 2,
        "endLine": 58,
        "endChar": 55
      },
      "revId": "b06c26bdf18da7a2baace11ed974785a248a1e86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}