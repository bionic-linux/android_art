{
  "comments": [
    {
      "key": {
        "uuid": "c6027e4d_c3bb384d",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-16T22:29:09Z",
      "side": 1,
      "message": "do you actually need this check? Why is cha_devirtualize special? I thought polymorphic inlining was the problem, but at this point you know you\u0027re not doing it.",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6587e4_ef9f5aba",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-16T22:43:18Z",
      "side": 1,
      "message": "yes, the polymorphic inlining is no longer an issue here; but I also check for cha_virtualize to make sure the analysis does not depend on CHA (which would mean we have to invalidate the always throws assumption when a single target was obtained at line 456.",
      "parentUuid": "c6027e4d_c3bb384d",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e537d67b_fc2c5e5a",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-01-17T00:36:09Z",
      "side": 1,
      "message": "I agree this check is needed since we are not tracking the CHA dependency (done in line 473). Another option is to track the dependency but I\u0027d rather keep the CHA dependency tracking with its single-purpose on inlining a cha-devirtualized call.",
      "parentUuid": "cf6587e4_ef9f5aba",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d418bf32_e116b2e9",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-17T00:38:19Z",
      "side": 1,
      "message": "Yes, I also thought that tracking the dependency is not really worth it (and muddies the water on cha quite a bit).",
      "parentUuid": "e537d67b_fc2c5e5a",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d146ba5_c5153672",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-17T09:21:10Z",
      "side": 1,
      "message": "OK, so I think you can just check !cha_devirtualize here?\n\nAlso please expand the comment that we need the cha_devirtualize check as we don\u0027t put the CHA guard. (And I agree no need to make it work by adding the dependency).",
      "parentUuid": "d418bf32_e116b2e9",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c36818_3bc668b7",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-01-17T09:34:40Z",
      "side": 1,
      "message": "Out of curiosity a question about the ordering: is it worth it to inline always-throwing methods?",
      "parentUuid": "2d146ba5_c5153672",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a371b2_51af9e13",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-01-17T09:48:15Z",
      "side": 1,
      "message": "We don\u0027t inline those, see line 1825 of this file.",
      "parentUuid": "c3c36818_3bc668b7",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6da79c7a_1dcd411d",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-17T18:07:54Z",
      "side": 1,
      "message": "The kotlin \"always throwing\" library method in particular is rather long, so inlining would hurt code size quite a bit. We are just interested in the fact that it never returns.\n\nNote that in the long run we may want to do other \"summary\" analysis of methods that we don\u0027t inline (e.g. does not change fields or the like).",
      "parentUuid": "c3c36818_3bc668b7",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0321b3d5_e1ac31fb",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2018-01-17T18:07:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d146ba5_c5153672",
      "range": {
        "startLine": 479,
        "startChar": 11,
        "endLine": 479,
        "endChar": 83
      },
      "revId": "7afc7f150b7ab4bebfc6c9978d50e0fcfc2d0b01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}