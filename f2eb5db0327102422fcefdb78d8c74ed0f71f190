{
  "comments": [
    {
      "key": {
        "uuid": "04803dc3_361498a3",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 409,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Do you plan on addressing this in a new patchset?",
      "range": {
        "startLine": 409,
        "startChar": 13,
        "endLine": 409,
        "endChar": 18
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_56bef453",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "I\u0027d move this check to the visitor itself, it\u0027s very instruction specific.",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 17
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_16c87ce8",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 422,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "This should be Location::Any, and the register allocator will figure it out.",
      "range": {
        "startLine": 422,
        "startChar": 34,
        "endLine": 422,
        "endChar": 50
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_377018eb",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 428,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "CHECK-\u003eDCHECK",
      "range": {
        "startLine": 428,
        "startChar": 2,
        "endLine": 428,
        "endChar": 7
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_f6ae201f",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "You should check if the compare instruction got materialized.",
      "range": {
        "startLine": 430,
        "startChar": 24,
        "endLine": 430,
        "endChar": 33
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_555a6c63",
        "filename": "compiler/optimizing/code_generator_arm.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Move this to the .cc file? It\u0027s only used there.",
      "range": {
        "startLine": 36,
        "startChar": 16,
        "endLine": 36,
        "endChar": 17
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_16e15c62",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 419,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Did something broke and required to change this? It should be Any.",
      "range": {
        "startLine": 419,
        "startChar": 34,
        "endLine": 419,
        "endChar": 50
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_3569f000",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "DCHECK",
      "range": {
        "startLine": 425,
        "startChar": 2,
        "endLine": 425,
        "endChar": 7
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_9757a435",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 426,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "You should check if the condition has been materialized.",
      "range": {
        "startLine": 426,
        "startChar": 11,
        "endLine": 426,
        "endChar": 14
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_755f6852",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 438,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "No, this is guarded by LocationsBuilderX86::VisitCondition, which is a contract between the codegen and the register allocator. You are guaranteed to have the inputs at the locations you requested.",
      "range": {
        "startLine": 438,
        "startChar": 13,
        "endLine": 438,
        "endChar": 14
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_3769f800",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 501,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "The following methods are very much alike. I\u0027d do the same sharing as you did with LocationsBuilderX86::VisitCondition.",
      "range": {
        "startLine": 501,
        "startChar": 34,
        "endLine": 501,
        "endChar": 44
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_d6da04a6",
        "filename": "compiler/optimizing/code_generator_x86.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Move to .cc.",
      "range": {
        "startLine": 36,
        "startChar": 17,
        "endLine": 36,
        "endChar": 29
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_b7542831",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Any",
      "range": {
        "startLine": 298,
        "startChar": 34,
        "endLine": 298,
        "endChar": 50
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_57434c79",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "DCHECK",
      "range": {
        "startLine": 304,
        "startChar": 2,
        "endLine": 304,
        "endChar": 7
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_7748d092",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Check if the condition has been materialized.",
      "range": {
        "startLine": 305,
        "startChar": 2,
        "endLine": 305,
        "endChar": 10
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_173dd4fb",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Add a helper for the codegen methods below.",
      "range": {
        "startLine": 368,
        "startChar": 5,
        "endLine": 368,
        "endChar": 35
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_d54d1ca9",
        "filename": "compiler/optimizing/code_generator_x86_64.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Move to cc file.",
      "range": {
        "startLine": 34,
        "startChar": 17,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_f54a988e",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 450,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Since the uses is a linked list, I\u0027d prefer adding a HasOnlyOneUse method in the Node class.",
      "range": {
        "startLine": 450,
        "startChar": 6,
        "endLine": 450,
        "endChar": 18
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_55434c79",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Maybe add a TODO that we could allow instructions in between but they should have no side effects. Alternatively, an optimization phase that moves instructions to their optimal place could also do it.",
      "range": {
        "startLine": 458,
        "startChar": 13,
        "endLine": 458,
        "endChar": 15
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_97300422",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 527,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "You actually already have IsCondition and IsIf defined line 530.",
      "range": {
        "startLine": 527,
        "startChar": 15,
        "endLine": 527,
        "endChar": 30
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_5ad4d156",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "I was told no space here.",
      "range": {
        "startLine": 763,
        "startChar": 63,
        "endLine": 763,
        "endChar": 64
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_7ad9958b",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 764,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 764,
        "startChar": 26,
        "endLine": 764,
        "endChar": 27
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_568834a3",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 839,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "Remove the IfCondition, and let the condition instruction return it (it statically knows it).",
      "range": {
        "startLine": 839,
        "startChar": 36,
        "endLine": 839,
        "endChar": 47
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_b52d00cb",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 907,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-06-18T14:21:41Z",
      "side": 1,
      "message": "NeedsMaterialization?",
      "range": {
        "startLine": 907,
        "startChar": 15,
        "endLine": 907,
        "endChar": 32
      },
      "revId": "f2eb5db0327102422fcefdb78d8c74ed0f71f190",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}