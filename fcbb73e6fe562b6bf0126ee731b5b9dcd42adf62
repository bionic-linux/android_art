{
  "comments": [
    {
      "key": {
        "uuid": "97662f11_7b419b5b",
        "filename": "compiler/jni/quick/x86/calling_convention_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-29T08:50:20Z",
      "side": 1,
      "message": "This still feels odd. I\u0027d DCHECK that after the if and if it trips, figure out why.",
      "range": {
        "startLine": 96,
        "startChar": 37,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37690307_3b0f7f2d",
        "filename": "compiler/jni/quick/x86/calling_convention_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-29T12:47:53Z",
      "side": 1,
      "message": "I was actually debugging through here, and IsCurrentParamALong() DOES return true for a reference parameter in x86.  I will have a look at why.",
      "parentUuid": "97662f11_7b419b5b",
      "range": {
        "startLine": 96,
        "startChar": 37,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37690307_1bb0c3dd",
        "filename": "compiler/jni/quick/x86/calling_convention_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-29T13:42:01Z",
      "side": 1,
      "message": "Here is the problem:\n  bool IsParamALong(unsigned int param) const {\n    DCHECK_LT(param, NumArgs());\n    if (IsStatic()) {\n      param++;  // 0th argument must skip return value at start of the shorty\n    } else if (param \u003d\u003d 0) {\n      return true;  // this argument\n    }\n    return shorty_[param] \u003d\u003d \u0027J\u0027;\n  }\n\nWhy does it return true for \u0027this argument\u0027?  I will try changing to false.",
      "parentUuid": "37690307_3b0f7f2d",
      "range": {
        "startLine": 96,
        "startChar": 37,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_1b365f13",
        "filename": "compiler/jni/quick/x86/calling_convention_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-29T08:50:20Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 133,
        "startChar": 47,
        "endLine": 133,
        "endChar": 71
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f79dab26_ded0e101",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-29T08:50:20Z",
      "side": 1,
      "message": "Please avoid double negatives.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37690307_7b19f775",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-29T12:47:53Z",
      "side": 1,
      "message": "NOt a double negative in my mind.  What about\nkSplitPairAcrossRegisterAndStack \u003d true for this case?\nkRegisterPairSpansLastArgumentRegisterAndStack \u003d true?",
      "parentUuid": "f79dab26_ded0e101",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_3b1483ec",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-29T12:59:07Z",
      "side": 1,
      "message": "Maybe it\u0027s 1.5 negative then :-) The thing is *Dont* \u003d whatever makes my mind always go to the positive.\n\nIn any case, arm doesn\u0027t split the long on our hardfloat ABI, why do you need that flag for x86?",
      "parentUuid": "37690307_7b19f775",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97070f52_f076c06d",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-29T13:24:01Z",
      "side": 1,
      "message": "ARM uses a different flag: kAlignPairRegister.  Unfortunately, this isn\u0027t applicable to X86.\n\nIs it better to just change the behaviour without a flag?  I didn\u0027t like that idea.",
      "parentUuid": "97662f11_3b1483ec",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578037c4_b9197bf3",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-29T13:47:48Z",
      "side": 1,
      "message": "I see. kSplitPairAcrossRegisterAndStack sounds good to me.\n\nI guess for arm it should be true on soft float. Oterhwise it\u0027s false for other archs except mips.",
      "parentUuid": "97070f52_f076c06d",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "fcbb73e6fe562b6bf0126ee731b5b9dcd42adf62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}