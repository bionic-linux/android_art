{
  "comments": [
    {
      "key": {
        "uuid": "c9fd3111_9fe3405f",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 344,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "This cannot happen by looking at the lines above.",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 36
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4fdb6d6_aea22ad0",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 344,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-25T14:08:02Z",
      "side": 1,
      "message": "It did somehow happen when I was removing the inputs to an instruction in the wrong order.\n\nAdding this check allowed me to go further and fail more gracefully later instead of segfaulting (this was on a debug build).",
      "parentUuid": "c9fd3111_9fe3405f",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 36
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b90ecb98_f6f8ccfe",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 344,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T14:13:22Z",
      "side": 1,
      "message": "I guess input-\u003eGetBlock()-\u003eGetPhis() got optimized.",
      "parentUuid": "e4fdb6d6_aea22ad0",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 36
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9285cd2c_ebfcede0",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "Why did you change the wording? Instructions don\u0027t have \"edges\", they\u0027re just part of lists.",
      "range": {
        "startLine": 350,
        "startChar": 29,
        "endLine": 351,
        "endChar": 68
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf539ab2_7c856fbc",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-25T14:08:02Z",
      "side": 1,
      "message": "I just wanted to disambiguate this case L350 vs L345\n\nIf you\u0027re ok with the 2 cases, can you please suggest some specific wording if not this?\n\nOtherwise I can just remove the first case, although it seems potentially helpful.",
      "parentUuid": "9285cd2c_ebfcede0",
      "range": {
        "startLine": 350,
        "startChar": 29,
        "endLine": 351,
        "endChar": 68
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4e92e58_cf461b81",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T14:13:22Z",
      "side": 1,
      "message": "The check whether block is null could say the input is not in any block.",
      "parentUuid": "bf539ab2_7c856fbc",
      "range": {
        "startLine": 350,
        "startChar": 29,
        "endLine": 351,
        "endChar": 68
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d5b088f_373e1970",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 7
      },
      "lineNbr": 1465,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "Add a \"\u003c\u003c\" to explain why obj should not be null.",
      "range": {
        "startLine": 1465,
        "startChar": 8,
        "endLine": 1465,
        "endChar": 31
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c8b9ea_24c50921",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 7
      },
      "lineNbr": 1223,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "Maybe add a comment also for what the debug check is about.",
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1a271e_82585b18",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 2450,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "That\u0027s an odd wording. I\u0027d drop the comment all together, RemoveAllInputs is just a general purpose helper.",
      "range": {
        "startLine": 2450,
        "startChar": 4,
        "endLine": 2450,
        "endChar": 66
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8f440d0_fb89733d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 2450,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-25T14:08:02Z",
      "side": 1,
      "message": "My intention was to stress that it\u0027s not really safe outside of prepare_for_register_allocation because dropping inputs like this blindly is dangerous (i.e. can affect correctness).",
      "parentUuid": "ba1a271e_82585b18",
      "range": {
        "startLine": 2450,
        "startChar": 4,
        "endLine": 2450,
        "endChar": 66
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfc59ba6_b623329e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 2450,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T14:13:22Z",
      "side": 1,
      "message": "Sure, just like things like RemoveInputAt and friends. These are helpers.",
      "parentUuid": "c8f440d0_fb89733d",
      "range": {
        "startLine": 2450,
        "startChar": 4,
        "endLine": 2450,
        "endChar": 66
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "297baeed_34794d8d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 2450,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-04-25T14:18:43Z",
      "side": 1,
      "message": "RemoveInputAt makes sense [outside of prepare_for_registers_allocation] for phis if removing an entire block, and for fences when removing a fence for a single object.\n\nI can delete L2450 altogether if there\u0027s no better way to word it?",
      "parentUuid": "cfc59ba6_b623329e",
      "range": {
        "startLine": 2450,
        "startChar": 4,
        "endLine": 2450,
        "endChar": 66
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f619b930_f2c05141",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 2450,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T14:20:58Z",
      "side": 1,
      "message": "I think bottom line is: these methods are just helpers :)\n\nYeah I suggest deleting that comment.",
      "parentUuid": "297baeed_34794d8d",
      "range": {
        "startLine": 2450,
        "startChar": 4,
        "endLine": 2450,
        "endChar": 66
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41102324_30f4b356",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 6582,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-25T13:18:03Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 6582,
        "startChar": 33,
        "endLine": 6582,
        "endChar": 34
      },
      "revId": "8e7e608f9d6242bd97f063dda95a39e36c07628c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}