{
  "comments": [
    {
      "key": {
        "uuid": "099ec717_2dca3ca7",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-09T19:55:34Z",
      "side": 1,
      "message": "Maybe use /proc/self/exe instead?",
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "014b9183_982e785b",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-09T20:39:36Z",
      "side": 1,
      "message": "/proc/self/exe is a direct link to the binary without any symlinks. This can mess up other parts of the test that require everything be below $ANDROID_BUILD_TOP if a symlink is present anywhere.\n\nBy using /proc/self/cmdline we get the actual command issued by the build-system.",
      "parentUuid": "099ec717_2dca3ca7",
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a9e3f8d_3bf49077",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-09T19:55:34Z",
      "side": 1,
      "message": "This isn\u0027t guaranteed to read everything. Better use ReadFully.",
      "range": {
        "startLine": 141,
        "startChar": 22,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c805d48d_ca1afe00",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-09T20:39:36Z",
      "side": 1,
      "message": "ReadFully will CHECK fail if the buffer size is larger than the file and since /proc/self/cmdline is a procfs file stat doesn\u0027t give an accurate file length.\n\nSince Read does TEMP_FAILURE_RETRY it all should be good though. \n\nAlso there is still a good fallback if it fails.",
      "parentUuid": "7a9e3f8d_3bf49077",
      "range": {
        "startLine": 141,
        "startChar": 22,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af8c0bd_c6d256ca",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-09T20:44:53Z",
      "side": 1,
      "message": "The TEMP_FAILURE_RETRY doesn\u0027t capture the case that a partial buffer is read (which is legal, as mentioned in the pread docs: \"Note that it is not an error for a successful call to transfer fewer bytes than requested (see read(2) and write(2)).\").\n\nSwitch to android::base::ReadFileToString, maybe?",
      "parentUuid": "c805d48d_ca1afe00",
      "range": {
        "startLine": 141,
        "startChar": 22,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56332680_956b5d2f",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-09T20:52:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1af8c0bd_c6d256ca",
      "range": {
        "startLine": 141,
        "startChar": 22,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc17ca63_fbe1e981",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-09T19:55:34Z",
      "side": 1,
      "message": "You\u0027re also null-terminating just the line above, which makes this comment somewhat superfluous.",
      "range": {
        "startLine": 143,
        "startChar": 8,
        "endLine": 144,
        "endChar": 28
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49e6b912_5b7dc324",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-09T20:39:36Z",
      "side": 1,
      "message": "I\u0027m null terminating what I read. The actual file will be like \u0027/name/of/exe\\0first-arg\\0second-arg\u0027. I put a null-byte above in case the name-of-exe is longer than pathmax.\n\nAdded additional context to the comment.",
      "parentUuid": "cc17ca63_fbe1e981",
      "range": {
        "startLine": 143,
        "startChar": 8,
        "endLine": 144,
        "endChar": 28
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07c000f1_8ba2449f",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-09T19:55:34Z",
      "side": 1,
      "message": "Isn\u0027t this assuming no parameters are passed?",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 43
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ee49094_4bbc54b7",
        "filename": "libartbase/base/common_art_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-09T20:39:36Z",
      "side": 1,
      "message": "parameters are separated by \u0027\\0\u0027s so the path will only be the first one (i.e. the command).",
      "parentUuid": "07c000f1_8ba2449f",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 43
      },
      "revId": "909ab47fec6426bdb32882b6c78c48975d67c0e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}