{
  "comments": [
    {
      "key": {
        "uuid": "7cd6320e_e020e294",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2404,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-18T11:01:06Z",
      "side": 1,
      "message": "Can we create a helper function for this and move the long comment there? (Instead of replicating it 4 times.)",
      "range": {
        "startLine": 2402,
        "startChar": 25,
        "endLine": 2404,
        "endChar": 62
      },
      "revId": "3677a091ba4fc4001a9fc33449f3a4929a1b7d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce47ef9_1b69bb8b",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2404,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-18T18:07:49Z",
      "side": 1,
      "message": "Nice suggestion; done in PS3.",
      "parentUuid": "7cd6320e_e020e294",
      "range": {
        "startLine": 2402,
        "startChar": 25,
        "endLine": 2404,
        "endChar": 62
      },
      "revId": "3677a091ba4fc4001a9fc33449f3a4929a1b7d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7141fdd6_7f258f9b",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2404,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-03-29T16:47:05Z",
      "side": 1,
      "message": "testing testing... is this thing on?",
      "parentUuid": "dce47ef9_1b69bb8b",
      "range": {
        "startLine": 2402,
        "startChar": 25,
        "endLine": 2404,
        "endChar": 62
      },
      "revId": "3677a091ba4fc4001a9fc33449f3a4929a1b7d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dccabe38_cb8b35db",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2447,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-17T12:33:55Z",
      "side": 1,
      "message": "you mean intrisify?",
      "range": {
        "startLine": 2447,
        "startChar": 17,
        "endLine": 2447,
        "endChar": 70
      },
      "revId": "3677a091ba4fc4001a9fc33449f3a4929a1b7d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ced36ca_2d0f4d86",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2447,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-17T13:54:04Z",
      "side": 1,
      "message": "I really meant replacing HInvoke* instructions by HIR constructs containing a floating-point HCompare instruction, akin to what we do for {Integer,Long}.compare() and {Integer,Long}.signum() (see art::InstructionSimplifierVisitor::SimplifyCompare).\n\n\"Intrinsify\" is a bit ambiguous to me here.  Does it mean recognizing and tagging a function call an intrinsic? or actually turning a HInvoke instruction into ad hoc assembly code? or both?",
      "parentUuid": "dccabe38_cb8b35db",
      "range": {
        "startLine": 2447,
        "startChar": 17,
        "endLine": 2447,
        "endChar": 70
      },
      "revId": "3677a091ba4fc4001a9fc33449f3a4929a1b7d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}