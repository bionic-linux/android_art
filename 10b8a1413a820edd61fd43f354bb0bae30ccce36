{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa249592_f78e2919",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-09-24T11:13:43Z",
      "side": 1,
      "message": "Thank you all.",
      "revId": "10b8a1413a820edd61fd43f354bb0bae30ccce36",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ed75dc_7cb2dd2d",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 2588,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-09-24T11:28:37Z",
      "side": 1,
      "message": "Nit: Names starting with an underscore \"in the global namespace\" are normally reserved for the language implementation (https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier).",
      "range": {
        "startLine": 2588,
        "startChar": 48,
        "endLine": 2588,
        "endChar": 53
      },
      "revId": "10b8a1413a820edd61fd43f354bb0bae30ccce36",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a572207c_779ff354",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 2604,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-09-24T11:34:18Z",
      "side": 1,
      "message": "The point with the \"do ... while(0)\" pattern is to leave out the final semicolon to force it to be added where the macro is used.",
      "range": {
        "startLine": 2604,
        "startChar": 11,
        "endLine": 2604,
        "endChar": 12
      },
      "revId": "10b8a1413a820edd61fd43f354bb0bae30ccce36",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc00ba7f_def5d101",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 3
      },
      "lineNbr": 2604,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2021-09-24T11:59:13Z",
      "side": 1,
      "message": "Good catch, I missed that.\n\nGenerally `do {...} while(0)` is needed not only for consistent semicolon, but to avoid unexpected control flow when using the macro in if/else constructs without braces:\n\nCase 1:\n\n  #define MACRO() \\\n    if (y) \\\n      do_something();\n\n  if (x)\n    MACRO();\n  else\n    do_something_else();\n\nThis will become:\n\n  if (x)\n    if (y)\n      do_something();\n  else\n    do_something_else();\n\nCase 2:\n\n  #define MACRO() \\\n    do_x(); \\\n    do_y();\n\n  if (x)\n    MACRO();\n\nThis will become:\n\n  if (x)\n    do_x();\n    do_y();\n\nThe compiler would probably catch that and we use braces anyway, but `do {...} while(0)` costs nothing and it allows one to use semicolon consistently regardless of the if/else context, so I always use it with multiline macros to avoid thinking about all possible contexts.",
      "parentUuid": "a572207c_779ff354",
      "range": {
        "startLine": 2604,
        "startChar": 11,
        "endLine": 2604,
        "endChar": 12
      },
      "revId": "10b8a1413a820edd61fd43f354bb0bae30ccce36",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "674f729f_65d9f4da",
        "filename": "test/831-unverified-bcp/smali-ex/NonVerifiedClass.smali",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-09-24T11:34:18Z",
      "side": 1,
      "message": "NB: I don\u0027t know Smali or the classloader internals well enough to vouch for that this test is sound.",
      "revId": "10b8a1413a820edd61fd43f354bb0bae30ccce36",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}