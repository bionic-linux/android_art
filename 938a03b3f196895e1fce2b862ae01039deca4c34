{
  "comments": [
    {
      "key": {
        "uuid": "723ff6b5_1793b391",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-01-21T20:08:30Z",
      "side": 1,
      "message": "Nice to have this enabled.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 4
      },
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2cb423b_4b02e527",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-01-22T21:02:36Z",
      "side": 1,
      "message": "I\u0027d like to have a rough expectation for myself - do you have a sense of how much slower the debug build is with this heap verification enabled than before?",
      "range": {
        "startLine": 9,
        "startChar": 33,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72b456b0_af527a50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-01-24T22:02:51Z",
      "side": 1,
      "message": "Adds ~100ms per GC iteration post gc (pre sweeping) verification.",
      "parentUuid": "d2cb423b_4b02e527",
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5244b256_def30952",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-01-21T20:08:30Z",
      "side": 1,
      "message": "I think this could/should be surrounded by\n\n  if (!Runtime::Current()-\u003eIsZygote() || !kMovingCollector) {\n\nas we won\u0027t use the post zygote non-moving space otherwise?",
      "range": {
        "startLine": 226,
        "startChar": 0,
        "endLine": 226,
        "endChar": 2
      },
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9202aa40_b11c4082",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-01-24T22:02:51Z",
      "side": 1,
      "message": "Currently this still happens for non-moving GC. I added the check for IsZygote though,",
      "parentUuid": "5244b256_def30952",
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5244b256_fe1dadc5",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-01-21T20:08:30Z",
      "side": 1,
      "message": "Is this the case for the java.lang.Class object? Leave a comment ?",
      "range": {
        "startLine": 796,
        "startChar": 8,
        "endLine": 796,
        "endChar": 20
      },
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2fdee74_72893860",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 796,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-01-24T22:02:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5244b256_fe1dadc5",
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2cb423b_0b337d0f",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-01-22T21:06:43Z",
      "side": 1,
      "message": "This should be \"collector_type\" instead of \"gc::kCollectorTypeGSS\". Currently, the GC type override (-Xgc) does not work. Will fix this.",
      "range": {
        "startLine": 597,
        "startChar": 36,
        "endLine": 597,
        "endChar": 57
      },
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9202aa40_d123c4b5",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-01-24T22:02:51Z",
      "side": 1,
      "message": "I see you fixed this, thanks.",
      "parentUuid": "d2cb423b_0b337d0f",
      "revId": "938a03b3f196895e1fce2b862ae01039deca4c34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}