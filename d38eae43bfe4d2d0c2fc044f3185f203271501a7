{
  "comments": [
    {
      "key": {
        "uuid": "40b5e28b_9146f853",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 8
      },
      "lineNbr": 5741,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "I\u0027d had\n\n  \u003c\u003c input_type \u003c\u003c \" -\u003e \" \u003c\u003c result_type;\n\nor something similar (here and elsewhere).",
      "range": {
        "startLine": 5741,
        "startChar": 70,
        "endLine": 5741,
        "endChar": 71
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c069937_2be99eaa",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 8
      },
      "lineNbr": 5741,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40b5e28b_9146f853",
      "range": {
        "startLine": 5741,
        "startChar": 70,
        "endLine": 5741,
        "endChar": 71
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e66469df_8e0d2379",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 8
      },
      "lineNbr": 3803,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "\u003c\u003c input_type;\n\n(Here and elsewhere.)",
      "range": {
        "startLine": 3803,
        "startChar": 50,
        "endLine": 3803,
        "endChar": 51
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "504765bc_cc95637e",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 8
      },
      "lineNbr": 3803,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e66469df_8e0d2379",
      "range": {
        "startLine": 3803,
        "startChar": 50,
        "endLine": 3803,
        "endChar": 51
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "284237ab_09f92d0a",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 8
      },
      "lineNbr": 6193,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Suggestion for a follow-up CL: move this logic into a GetLoadOperandType, as in the ARM code generator.",
      "range": {
        "startLine": 6167,
        "startChar": 0,
        "endLine": 6193,
        "endChar": 3
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05d7d8d8_2e5ed118",
        "filename": "compiler/optimizing/code_generator_mips.cc",
        "patchSetId": 8
      },
      "lineNbr": 6343,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Suggestion for a follow-up CL: move this logic into a GetStoreOperandType, as in the ARM code generator.",
      "range": {
        "startLine": 6321,
        "startChar": 0,
        "endLine": 6343,
        "endChar": 3
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3eedf043_20f6fc96",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2435,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Is this normal that kBool as `input_type` was dropped here?",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4291170e_46434c9f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2435,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "That\u0027s an implicit conversion. The DCHECK() above would have caught it.",
      "parentUuid": "3eedf043_20f6fc96",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e408e271_5c82f77c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2595,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Ditto?",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e49118b9_045132c8",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2595,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "e408e271_5c82f77c",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e601b40f_d3d0d924",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2625,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Ditto?",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f53175_5f621c08",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2625,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "e601b40f_d3d0d924",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b571acb0_21c04ee2",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2654,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Ditto?",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb2ac8ed_3b6330af",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2654,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "b571acb0_21c04ee2",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3993cb1_75accd0d",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2686,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Ditto?",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e88070f_1fd27e8a",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 8
      },
      "lineNbr": 2686,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "d3993cb1_75accd0d",
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0755bce9_26fca375",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1779,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Why this change? The original version was shorter and less error-prone IMO. If we want to make sure the numeric (shift) values associated with the enum values are preserved over time, we could check them in a test.",
      "range": {
        "startLine": 1766,
        "startChar": 0,
        "endLine": 1779,
        "endChar": 4
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2ea5c37_c0e039b0",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1779,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "Uint8 has been inserted in the middle of the enumeration, the old mapping is no longer valid. Only Java types are supported for side effects.",
      "parentUuid": "0755bce9_26fca375",
      "range": {
        "startLine": 1766,
        "startChar": 0,
        "endLine": 1779,
        "endChar": 4
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a626a731_013aa749",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1779,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T17:50:24Z",
      "side": 1,
      "message": "I see. What about assigning these numerical values directly to the enumeration definition instead then?",
      "parentUuid": "d2ea5c37_c0e039b0",
      "range": {
        "startLine": 1766,
        "startChar": 0,
        "endLine": 1779,
        "endChar": 4
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32d64eac_a23f119c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1779,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T18:01:02Z",
      "side": 1,
      "message": "I don\u0027t see keeping this code switch-free as a sufficient reason to pollute the definition of DataType::Type.",
      "parentUuid": "a626a731_013aa749",
      "range": {
        "startLine": 1766,
        "startChar": 0,
        "endLine": 1779,
        "endChar": 4
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7273908d_dccd106d",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T15:26:34Z",
      "side": 1,
      "message": "Perhaps we should mention that instructions like HVecHalvingAdd are always synthesized by the compiler, and thus cannot really be given a Dex PC location.",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fba4a4d_4820f37b",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T17:05:02Z",
      "side": 1,
      "message": "Such comment would be appropriate if we removed the dex pc parameter from a base class, such as HVecOperation or HVecBinaryOperation.",
      "parentUuid": "7273908d_dccd106d",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f37c3b5_eac36d13",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-10-02T17:12:56Z",
      "side": 1,
      "message": "I should probably have started this discussion earlier, but do we want to keep the dex pc location the same as the original sequential code, or is marking new code with kNoDexPc acceptable? With an upcoming peeling loop, vector loop and potential cleanup loop, we could have three copies of the same original loop. What is the best approach here? Depending on the answer we could try to get the original dex pc back, or I can cleanup some of the vector hierarchy to avoid passing this around.",
      "parentUuid": "4fba4a4d_4820f37b",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e874af7a_27fa7a7d",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-10-02T17:53:14Z",
      "side": 1,
      "message": "Good question. I can\u0027t remember whether we have a well defined rationale for this. If not, we should start drafting one. :)",
      "parentUuid": "9f37c3b5_eac36d13",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa163592_a080fa4e",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-10-02T18:01:02Z",
      "side": 1,
      "message": "I\u0027m OK with either approach. But please wait until this CL is submitted.",
      "parentUuid": "9f37c3b5_eac36d13",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a926fa7_7b2681d2",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 478,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-10-02T18:04:30Z",
      "side": 1,
      "message": "Yes of course. My intention was to free you from further changes around this parameter.\n\nAs is, my other pending CL already will give you a slight but manageable merge conflict. Apologies for that.",
      "parentUuid": "aa163592_a080fa4e",
      "range": {
        "startLine": 478,
        "startChar": 76,
        "endLine": 478,
        "endChar": 84
      },
      "revId": "d38eae43bfe4d2d0c2fc044f3185f203271501a7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}