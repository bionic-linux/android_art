{
  "comments": [
    {
      "key": {
        "uuid": "efa05d5c_9ca265bc",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1089,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-02-10T09:09:26Z",
      "side": 1,
      "message": "Can\u0027t the std::vector be a std::vector of Sirt?",
      "range": {
        "startLine": 1089,
        "startChar": 29,
        "endLine": 1089,
        "endChar": 37
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf48f97a_ec1bbf86",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1094,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-02-10T19:37:00Z",
      "side": 1,
      "message": "Is this function making sure GC not happening by not having a thread suspension point (which is asserted by Start/EndAssertNoThreadSuspension)?",
      "range": {
        "startLine": 1094,
        "startChar": 2,
        "endLine": 1094,
        "endChar": 14
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf7639c5_f3bcf0ec",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1126,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-02-10T09:09:26Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 1126,
        "startChar": 29,
        "endLine": 1126,
        "endChar": 37
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf7639c5_b3c67883",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1172,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-02-10T09:09:26Z",
      "side": 1,
      "message": "What classes? Is it the \"o\" parameter that is the problem? Shouldn\u0027t it be a Sirt then?",
      "range": {
        "startLine": 1172,
        "startChar": 49,
        "endLine": 1172,
        "endChar": 52
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f8d4df2_e061826b",
        "filename": "runtime/jdwp/object_registry.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-02-10T19:37:00Z",
      "side": 1,
      "message": "() after the struct type name?\n\nobject_to_entry_ takes a value of ObjectRegistryEntry (it copies) but id_to_entry_ needs a heap-allocated ObjectRegistryEntry. I think it\u0027d be clearer if we declare separate ObjectRegistryEntry for the two cases, as opposed to reusing the heap allocated ObjectRegistryEntry in terms of stack- vs heap-allocated.",
      "range": {
        "startLine": 63,
        "startChar": 35,
        "endLine": 63,
        "endChar": 36
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af83c5c3_e8788709",
        "filename": "runtime/native/dalvik_system_VMDebug.cc",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-02-10T19:37:00Z",
      "side": 1,
      "message": "We now use VisitObjects() instead of the live bitmap, right? Is this comment stale?",
      "range": {
        "startLine": 238,
        "startChar": 18,
        "endLine": 238,
        "endChar": 67
      },
      "revId": "412c7fced915fc8d4d5e4166e977d55c809168a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}