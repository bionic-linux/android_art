{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "913bd4e5_ca3728c2",
        "filename": "odrefresh/odr_metrics_record.cc",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-10-04T19:19:55Z",
      "side": 1,
      "message": "Nit: I don\u0027t think it\u0027s a convention in ART codebase to add `const` to primitive types.",
      "range": {
        "startLine": 81,
        "startChar": 15,
        "endLine": 81,
        "endChar": 20
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1a2c97b_0cadd32d",
        "filename": "odrefresh/odr_metrics_record.cc",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-10-05T14:47:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "913bd4e5_ca3728c2",
      "range": {
        "startLine": 81,
        "startChar": 15,
        "endLine": 81,
        "endChar": 20
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7c4e127_9dc8db9d",
        "filename": "odrefresh/odr_metrics_record.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-10-04T19:19:55Z",
      "side": 1,
      "message": "I would just use `std::optional\u003cExecResult\u003e` here to make things cleaner. I guess the existing enum fields have to be in primitive types because the enums are defined in odr_metrics.h, which this file doesn\u0027t have access to. In contrast, this file shouldn\u0027t have any problem with accessing exec_utils.h.\n\nHowever, this is just my personal preference, so it\u0027s totally optional.",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 51,
        "endChar": 44
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "053725e8_51b8906a",
        "filename": "odrefresh/odr_metrics_record.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-10-05T10:17:03Z",
      "side": 1,
      "message": "It might make things cleaner here, but it would change the code that invokes statsd to something like this:\n\n```\n// Write values to statsd. The order of values passed is the same as the order of the\n  // fields in OdrMetricsRecord.\n  int bytes_written \u003d art::metrics::statsd::stats_write(\n      metrics::statsd::ODREFRESH_REPORTED,\n      [...]\n      record.primary_bcp_dex2oat_result.has_value()\n        ? record.primary_bcp_dex2oat_result-\u003estatus\n        : -1,\n      record.primary_bcp_dex2oat_result.has_value()\n        ? record.primary_bcp_dex2oat_result-\u003eexit_code\n        : -1,\n      record.primary_bcp_dex2oat_result.has_value()\n        ? record.primary_bcp_dex2oat_result-\u003esignal\n        : 0,\n```\n\nI think having the conversion between std::optional\u003cExecResult\u003e and some integer values is inevitable, it\u0027s just a matter of where and how many times we want this conversion to happen - with these changes we will have:\n 1. a conversion from std::optional\u003cExecResult\u003e to ints while writing to file\n 2. a conversion from ints to std::optional\u003cExecResult\u003e while reading from file\n 3. a conversion from std::optional\u003cExecResult\u003e to ints while reporting to statsd\n \nwhile with the current implementation we would only have one, at the time of creating the OdrMetricsRecord objects - any thoughts?",
      "parentUuid": "a7c4e127_9dc8db9d",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 51,
        "endChar": 44
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6278a9db_fec355e0",
        "filename": "odrefresh/odr_metrics_record.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-10-05T10:29:39Z",
      "side": 1,
      "message": "I see what you mean. Alternatively, can we define a struct that contains\n\n```\n  int32_t status;\n  int32_t exit_code;\n  int32_t signal;\n```\n\nso that we can process them in odrefresh/odr_metrics.cc and odrefresh/odr_metrics_record.cc as a whole instead of having too many duplicate code?",
      "parentUuid": "053725e8_51b8906a",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 51,
        "endChar": 44
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49f5540_a28cd582",
        "filename": "odrefresh/odr_metrics_record.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-10-05T14:47:19Z",
      "side": 1,
      "message": "I have tried the struct approach in this revision, what do you think?",
      "parentUuid": "6278a9db_fec355e0",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 51,
        "endChar": 44
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78716b70_b076ee7c",
        "filename": "odrefresh/odr_metrics_record.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2022-10-05T15:05:04Z",
      "side": 1,
      "message": "Nice! Things look much simpler. Thanks.",
      "parentUuid": "b49f5540_a28cd582",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 51,
        "endChar": 44
      },
      "revId": "0047b926cca8480a63b460007756c6cae8ff41fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}