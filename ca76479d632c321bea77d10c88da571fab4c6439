{
  "comments": [
    {
      "key": {
        "uuid": "138ee5ef_232e941c",
        "filename": "runtime/base/mutex.h",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T22:19:46Z",
      "side": 1,
      "message": "Add comment about \"mutator_lock_ is never truly held by any mutator threads\".",
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73a3a180_c64b247c",
        "filename": "runtime/base/mutex.h",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "138ee5ef_232e941c",
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de8ff2ab_180dbd3e",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "Should this be CompareExchangeWeakSequentiallyConsistent() or CompareExchangeWeakRelease() as the lock release is removed?",
      "range": {
        "startLine": 130,
        "startChar": 45,
        "endLine": 130,
        "endChar": 71
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73a3a180_e648a081",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Yes, memory ordering should be imposed here. Thanks.",
      "parentUuid": "de8ff2ab_180dbd3e",
      "range": {
        "startLine": 130,
        "startChar": 45,
        "endLine": 130,
        "endChar": 71
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de8ff2ab_b83a09f7",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "I think it\u0027s cleaner to use a while loop here (also consistent with rest of the code).",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 144,
        "endChar": 63
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3333e921_8428e8bf",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de8ff2ab_b83a09f7",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 144,
        "endChar": 63
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be731e93_fb03a77a",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "Are these redundant (same as the outer if check)?",
      "range": {
        "startLine": 166,
        "startChar": 6,
        "endLine": 168,
        "endChar": 61
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53305d12_623dd67b",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Yes. These could be removed. Done.",
      "parentUuid": "be731e93_fb03a77a",
      "range": {
        "startLine": 166,
        "startChar": 6,
        "endLine": 168,
        "endChar": 61
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e65c2c2_a361088d",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "Should this be CompareExchangeWeakAcquire() as the lock acquire is removed?",
      "range": {
        "startLine": 173,
        "startChar": 56,
        "endLine": 173,
        "endChar": 82
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3333e921_642de4cd",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e65c2c2_a361088d",
      "range": {
        "startLine": 173,
        "startChar": 56,
        "endLine": 173,
        "endChar": 82
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be731e93_3e4c2d90",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "I don\u0027t understand how this lock acquire (and the one above with timeout) can succeed, given that mutator threads do not actually release the mutator_lock_ on suspend. Could you elaborate on this?",
      "range": {
        "startLine": 471,
        "startChar": 24,
        "endLine": 471,
        "endChar": 37
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "934c958c_ead843e8",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T22:19:46Z",
      "side": 1,
      "message": "I think I understand it now: the mutator_lock_ is never actually held by any mutator threads. When a thread starts, it will call TransitionFromSuspendedToRunnable(), which only registers but not acquires the mutator_lock_.\n\nThere should be a comment about this on the declaration of mutator_lock_.",
      "parentUuid": "be731e93_3e4c2d90",
      "range": {
        "startLine": 471,
        "startChar": 24,
        "endLine": 471,
        "endChar": 37
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53305d12_a22ebe46",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Yes. The objective of this CL is to remove the acquiring/releasing of the mutator_lock_ when a mutator thread enters/exits the kRunnable state. Now, the mutator_lock_ will not be truly held by any mutator threads. It would only be grabbed exclusively by the GC/debugger thread. The mutator_lock_ could be replaced by an ordinary Mutex but this would introduce too much effort. We just get it registered to fulfill the thread safety analysis in the ART code.\n\nDone.",
      "parentUuid": "934c958c_ead843e8",
      "range": {
        "startLine": 471,
        "startChar": 24,
        "endLine": 471,
        "endChar": 37
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eda409cd_41d689ed",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 537,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-05-18T22:39:01Z",
      "side": 1,
      "message": "Hopefully you meant \"this is safe ...\"?",
      "range": {
        "startLine": 537,
        "startChar": 37,
        "endLine": 537,
        "endChar": 52
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4089d5_7fb34fdb",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 537,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-05-19T06:55:08Z",
      "side": 1,
      "message": "Yes, should be \"this is safe\". Thanks!",
      "parentUuid": "eda409cd_41d689ed",
      "range": {
        "startLine": 537,
        "startChar": 37,
        "endLine": 537,
        "endChar": 52
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133a65f6_c0d2de75",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 537,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed4089d5_7fb34fdb",
      "range": {
        "startLine": 537,
        "startChar": 37,
        "endLine": 537,
        "endChar": 52
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e99fafb_25125462",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 582,
      "author": {
        "id": 1073545
      },
      "writtenOn": "2015-06-26T05:52:59Z",
      "side": 1,
      "message": "The body of this function doesn\u0027t seem to have changed  anything significant. Maybe just inline this function as before?",
      "range": {
        "startLine": 582,
        "startChar": 2,
        "endLine": 582,
        "endChar": 32
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133a65f6_a0cfdacf",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 2
      },
      "lineNbr": 582,
      "author": {
        "id": 1039961
      },
      "writtenOn": "2015-06-29T11:16:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e99fafb_25125462",
      "range": {
        "startLine": 582,
        "startChar": 2,
        "endLine": 582,
        "endChar": 32
      },
      "revId": "ca76479d632c321bea77d10c88da571fab4c6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}