{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64984503_487c21eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-26T10:39:48Z",
      "side": 1,
      "message": "Thanks. I\u0027ll only +1 here since I don\u0027t have an opinion on the symbols getting exported.",
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ff4b2b1_58ad764b",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-26T13:19:54Z",
      "side": 1,
      "message": "`dex2oat` and `oatdump` code is explicitly using `libelffile`. Why are we hiding the dependency and exporting these symbols in `libart-compiler` where we\u0027re not using them at all?",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f12c33_290bcb75",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-26T13:46:29Z",
      "side": 1,
      "message": "I think we use it in the compiler (e.g. the runtime/jit generates elf files in memory)",
      "parentUuid": "9ff4b2b1_58ad764b",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e868f95d_91517dd5",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1963262
      },
      "writtenOn": "2022-09-26T13:59:41Z",
      "side": 1,
      "message": "`libelffile` is used in `libart-compiler`:\nhttps://cs.android.com/android/platform/superproject/+/master:art/compiler/utils/assembler.h;l\u003d286\n\nI don\u0027t have a strong preference about how to link libelffile.\nWith exporting these syms size overhead in `libart-compiler` is ~0.1%, while dex2oat/oatdump size is slightly reduced without static linking to `libelffile`",
      "parentUuid": "d7f12c33_290bcb75",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da06dab_61c989d7",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-26T14:49:53Z",
      "side": 1,
      "message": "`libelffile` is used by `libart-compiler` but `BufferedOutputStream` and `FileOutputStream` are not.\n\nI\u0027d prefer to keep the dependencies on `libelffile` explicit.\n\nAnd if we want to export these symbols for some reason, they should be exported in `libart` which does not have a map file yet.",
      "parentUuid": "e868f95d_91517dd5",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "261353f2_343d5974",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-26T15:15:28Z",
      "side": 1,
      "message": "This list here is quite explicit, I think. That we cannot register direct dependencies (i.e. from dex2oat and oatdump) on libraries statically linked into other dependencies is an old Soong limitation. We already have that problem in various places, and the only way to discover them (besides comments in the build files that may or may not be stale and/or incomplete) is to try to sever the exports. At least with map files like this one it gets spelled out in a way that\u0027s actually checked at build time.\n\nMaybe open a ticket to track moving libelffile to libart (or possibly libartbase?), and add a TODO comment about that here?",
      "parentUuid": "6da06dab_61c989d7",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e97a0950_02fbc747",
        "filename": "compiler/libart-compiler.map",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-09-26T15:44:54Z",
      "side": 1,
      "message": "I don\u0027t understand what Soong limitation you\u0027re talking about. Right now `dex2oat`, `libart-compiler` and `libart` list `libelffile` as a static libary.",
      "parentUuid": "261353f2_343d5974",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "8e830b7edff2c5ee982a49f941983ef7b0b295c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}