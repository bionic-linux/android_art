{
  "comments": [
    {
      "key": {
        "uuid": "7b136aa2_338dc367",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T15:47:13Z",
      "side": 1,
      "message": "Not a big fan of adding new options :(\nCan we lock it down based on how you\u0027re compiling things? Eg If you have CriticalNative in your bootclasspath.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 39
      },
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd35eae3_394a542b",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T22:05:48Z",
      "side": 1,
      "message": "How about check here if the class is from the boot classpath *or* if we\u0027re not forked from the zygote? Would that cover things without the need to add a new flag?",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd7fd2d6_db7aeea0",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T22:07:55Z",
      "side": 1,
      "message": "Actually, just realized this will be invoked through dex2oat, which is not forked from the zygote.\n\nBut then we continue having the issue: apps can invoke dex2oat and pass the flag (and we\u0027ve seen some messing around).",
      "parentUuid": "cd35eae3_394a542b",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "539bd8ee_8246beda",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-03-07T22:25:13Z",
      "side": 1,
      "message": "Should I add this in as a verifier check instead and reject it there?",
      "parentUuid": "dd7fd2d6_db7aeea0",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c31215ca_65201fb8",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T22:55:25Z",
      "side": 1,
      "message": "But it looks to me there\u0027s no full-proof way for us to prevent apps from still trying it. If based on the flag, the verifier check has the same problems.",
      "parentUuid": "539bd8ee_8246beda",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbd49878_ce5f37cc",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-03-08T22:09:23Z",
      "side": 1,
      "message": "What if we detect that it\u0027s running as the non-shell/non-root user (on Android) and restrict it then?\n\n   if ((getusername(geteuid()) \u003d\u003d \"root\" || \"shell\") \u0026\u0026 ANDROID))\n     do_boot_classpath_check\n\n(there might be a similarly better way like checking if they\u0027re part of some application group).",
      "parentUuid": "c31215ca_65201fb8",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eedd9959_56a5e7f4",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2017-03-09T03:53:32Z",
      "side": 1,
      "message": "0 || AID_SHELL if we are allowed such a dependency\n\nit\u0027s in system/core/include/private/android_filesystem_config.h\n\nnot sure why it is \"private\" now. looks like that is just for non-system code",
      "parentUuid": "fbd49878_ce5f37cc",
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8d91056_3913f5fc",
        "filename": "runtime/runtime_options.def",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T22:05:48Z",
      "side": 1,
      "message": "If we do go with the flag option, could we piggy back on the  -Xexperimental instead?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 80
      },
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "618f95a8_955b7e81",
        "filename": "runtime/runtime_options.def",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-03-07T22:25:13Z",
      "side": 1,
      "message": "Sure, do you have any preference on name?\n\n   -Xexperimental:app-fast-native\n\nSound ok?",
      "parentUuid": "a8d91056_3913f5fc",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 80
      },
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1c26a1c_ff914e7c",
        "filename": "runtime/runtime_options.def",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-07T22:55:25Z",
      "side": 1,
      "message": "Yeah this would have my preference *if we were to add a flag*.",
      "parentUuid": "618f95a8_955b7e81",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 80
      },
      "revId": "f9e2235f9f2bdce1b4dccde230f6e84c865048ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}