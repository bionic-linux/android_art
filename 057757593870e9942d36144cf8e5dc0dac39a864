{
  "comments": [
    {
      "key": {
        "uuid": "4e4c2030_7ff597e1",
        "filename": "runtime/hidden_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-29T09:32:48Z",
      "side": 1,
      "message": "Add a comment about this.",
      "range": {
        "startLine": 58,
        "startChar": 52,
        "endLine": 58,
        "endChar": 57
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "824f709a_c690675c",
        "filename": "runtime/hidden_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 124,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2018-03-29T11:49:54Z",
      "side": 1,
      "message": "What is the intent here? This will filter out warnings in dex2oat but not verification at runtime. But verification at runtime will not see the methods which had only light grey uses at dex2oat. Given that we may or may not run dex2oat under various circumstances, this will log a fairly unpredictable set of APIs. That could be fine, just want to check what exactly you\u0027re trying to do here.",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 44
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84f63597_ebdcbf0f",
        "filename": "runtime/hidden_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2018-03-29T11:49:54Z",
      "side": 1,
      "message": "Why not log this as dumpable MemberSignature ? You would reduce the number of std::string conversions in MemberSignature constructor and we\u0027re not really gaining anything from splitting this into the components, are we?",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 132,
        "endChar": 24
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dec7af89_6324a32a",
        "filename": "runtime/hidden_api.cc",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2018-03-29T11:49:54Z",
      "side": 1,
      "message": "static_cast\u003cuint32_t\u003e(rand())",
      "range": {
        "startLine": 164,
        "startChar": 40,
        "endLine": 164,
        "endChar": 48
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43cb5e75_3c769958",
        "filename": "runtime/hidden_api.h",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2018-03-29T11:49:54Z",
      "side": 1,
      "message": "No need. We know that from the signature - fields\u0027 don\u0027t have brackets",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 23
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65bd1e51_835dc09e",
        "filename": "runtime/hidden_api.h",
        "patchSetId": 6
      },
      "lineNbr": 72,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-29T09:32:48Z",
      "side": 1,
      "message": "Won\u0027t that turn into false positives with the current flexible way to use this with am instrument?\n\nGiven we do print the method/field, we will be able to know which list it belongs to, so not sure why we need this?",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 23
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac6b54a7_c9614bf3",
        "filename": "runtime/hidden_api.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-29T09:32:48Z",
      "side": 1,
      "message": "no need.",
      "range": {
        "startLine": 116,
        "startChar": 1,
        "endLine": 116,
        "endChar": 8
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cdc34b4_0c11adba",
        "filename": "runtime/hidden_api.h",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-29T09:32:48Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 117,
        "startChar": 24,
        "endLine": 117,
        "endChar": 27
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d64c5dfc_299f7cc1",
        "filename": "runtime/runtime.h",
        "patchSetId": 6
      },
      "lineNbr": 1028,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-29T09:32:48Z",
      "side": 1,
      "message": "Could you follow-up in another CL with an HiddenApi abstraction? Runtime is getting quite populated with hidden api stuff now.",
      "range": {
        "startLine": 1008,
        "startChar": 0,
        "endLine": 1028,
        "endChar": 48
      },
      "revId": "057757593870e9942d36144cf8e5dc0dac39a864",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}