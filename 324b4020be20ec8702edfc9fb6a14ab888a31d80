{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "66a3c95f_cb4057b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-19T18:41:49Z",
      "side": 1,
      "message": "I think the question is, what if we re enable compact Dex. We need to remember to fix up this code path.",
      "tag": "mailMessageId\u003d\u003cCAGPRgkVH3OxLp4rOu_WdVfmVkLjP+CxaP6JRcpHwTRfqG8gfCA@mail.gmail.com\u003e",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdae31c8_4ebc4dd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-12-19T19:24:32Z",
      "side": 1,
      "message": "If we do that we\u0027d probably reintroduce the `ART_DEFAULT_COMPACT_DEX_LEVEL` define, so you could check for that as a static assertion. It wouldn\u0027t subsume the DCHECK.",
      "parentUuid": "66a3c95f_cb4057b1",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7162fb2_14fb7e19",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-12-19T18:23:32Z",
      "side": 1,
      "message": "I wonder if there could be a more friendly way to break if someone attempts to enable compact dex file. @mast@google.com any suggestion?",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b09fab85_fe2664aa",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-19T18:25:53Z",
      "side": 1,
      "message": "Well, I could also try to make it work (keeping the old expressions as well).\n\nHowever, for now, I am kind of happy with just getting DCHECK as reminder.",
      "parentUuid": "a7162fb2_14fb7e19",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52002ae9_b36ae3cf",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2023-12-19T18:26:43Z",
      "side": 1,
      "message": "I guess the question is whether we can do `static_assert` but I can\u0027t think of one.",
      "parentUuid": "b09fab85_fe2664aa",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57fbf1ca_63d80288",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 413,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-12-19T18:34:31Z",
      "side": 1,
      "message": "Shouldn\u0027t we fail (gracefully) when the caller tries to load a cdex? I haven\u0027t added code for that - in the experiment I focused on invalidating and blocking generation of them.",
      "parentUuid": "52002ae9_b36ae3cf",
      "revId": "324b4020be20ec8702edfc9fb6a14ab888a31d80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}