{
  "comments": [
    {
      "key": {
        "uuid": "ed32078f_8c0bea73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-14T11:06:13Z",
      "side": 1,
      "message": "Flake retrying.",
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e63851f6_6fceee34",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1997,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-14T12:58:27Z",
      "side": 1,
      "message": "cmpxchg requires the expected value to be in EAX so the new value must be elsewhere.",
      "range": {
        "startLine": 1997,
        "startChar": 9,
        "endLine": 1997,
        "endChar": 82
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "528c2dba_49ce87b4",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 1997,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-14T13:30:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e63851f6_6fceee34",
      "range": {
        "startLine": 1997,
        "startChar": 9,
        "endLine": 1997,
        "endChar": 82
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7301d782_71105ce9",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 2000,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-14T12:58:27Z",
      "side": 1,
      "message": "These look slightly odd because a temporary was specified as EAX for purpose, but is not passed through as an argument. Suggest commenting that EAX is a both an input and an output of cmpxchg and noting that we reserved EAX as a temporary so we know it is available.\n\nDCHECK_EQ(out, EAX);",
      "range": {
        "startLine": 2000,
        "startChar": 22,
        "endLine": 2000,
        "endChar": 25
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9c41b8_74695aef",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 2000,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-14T13:30:03Z",
      "side": 1,
      "message": "The DCHECK_EQ(out, EAX) is done on line 1976. I don\u0027t think it would be a good idea to move it here since the check has to be done for all cases",
      "parentUuid": "7301d782_71105ce9",
      "range": {
        "startLine": 2000,
        "startChar": 22,
        "endLine": 2000,
        "endChar": 25
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43fdb39e_3de74bdc",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 3625,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-14T12:58:27Z",
      "side": 1,
      "message": "For cmpxchg8b, this should be RegisterPairLcation(EAX, EDX).",
      "range": {
        "startLine": 3625,
        "startChar": 2,
        "endLine": 3625,
        "endChar": 51
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bbf3414_bd1b73eb",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 3625,
      "author": {
        "id": 1725700
      },
      "writtenOn": "2020-09-14T13:30:03Z",
      "side": 1,
      "message": "We don\u0027t treat register pair cases (int64 and float64) because of the parallel move problem (line 3590)",
      "parentUuid": "43fdb39e_3de74bdc",
      "range": {
        "startLine": 3625,
        "startChar": 2,
        "endLine": 3625,
        "endChar": 51
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35acdcee_a215826f",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 3625,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-14T14:13:09Z",
      "side": 1,
      "message": "Thanks braino on my part, 64-bit is on the common CAS path, but that\u0027s not available to VarHandles.",
      "parentUuid": "0bbf3414_bd1b73eb",
      "range": {
        "startLine": 3625,
        "startChar": 2,
        "endLine": 3625,
        "endChar": 51
      },
      "revId": "960bfeae1ad906af0dbea409683cf2a561a3ab91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}