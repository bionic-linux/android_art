{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "722205bf_366d7b68",
        "filename": "compiler/optimizing/constant_folding.cc",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-03-17T15:57:25Z",
      "side": 1,
      "message": "Related to this, I left a comment in the test file.",
      "range": {
        "startLine": 423,
        "startChar": 0,
        "endLine": 425,
        "endChar": 0
      },
      "revId": "3c6bba096b511f9720503c2a362731ac73ad1aa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe50f17b_61aa3c7c",
        "filename": "test/2046-checker-comparison/src/Main.java",
        "patchSetId": 4
      },
      "lineNbr": 289,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2023-03-17T15:57:25Z",
      "side": 1,
      "message": "I was expecting HGreaterThan but since the builder stage I see this. It is odd because these comparisons are not the same as GreaterThan for float. For example:\n```\nFloat.NaN \u003e Float.Nan // false\nFloat.NaN \u003c\u003d Float.Nan // false\nNot (Float.NaN \u003c\u003d Float.NaN) // true\n```\n\nOddly enough, the results are fine which either means: A) LessThanOrEqual codegen returns the opposite of what it should be for NaN, or B) there is some special case handling that I\u0027m missing. Same for other comparisons.\n\nThis is blocking some optimizations taking place. For example, this method should be returning constant 0 every time.\n\nFor completeness sake, here\u0027s an x86 excerpt of the disassembly:\n```\n      0 1 z6 LessThanOrEqual [f0,f0] dex_pc:6 block:B1 loop:none\n0x00000030:                 0F2EC0    \t       ucomiss xmm0, xmm0\n0x00000033:                   7604    \t       jbe/na +4 (0x00000039)\n0x00000035:                   33C0    \t       xor eax, eax\n0x00000037:                   EB05    \t       jmp +5 (0x0000003e)\n0x00000039:             B801000000    \t       mov eax, 1\n \u003c|@\n      0 1 z20 BooleanNot [z6] dex_pc:n/a block:B1 loop:none\n0x0000003e:                 83F001    \t       xor eax, 1\n \u003c|@\n      0 0 v10 Return [z20] dex_pc:9 block:B1 loop:none\n0x00000041:                     C3    \t       ret \n```",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 289,
        "endChar": 57
      },
      "revId": "3c6bba096b511f9720503c2a362731ac73ad1aa6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}