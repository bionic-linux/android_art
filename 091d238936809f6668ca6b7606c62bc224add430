{
  "comments": [
    {
      "key": {
        "uuid": "41307e12_c2c942d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-11T19:50:41Z",
      "side": 1,
      "message": "Duplication.",
      "range": {
        "startLine": 18,
        "startChar": 6,
        "endLine": 18,
        "endChar": 26
      },
      "revId": "091d238936809f6668ca6b7606c62bc224add430",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e155f239_d70e1c31",
        "filename": "compiler/dex/mir_method_info.cc",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-03-11T19:52:54Z",
      "side": 1,
      "message": "Just for my clarification:\n\nAren\u0027t we using a clone of the interface method as the miranda method? I don\u0027t remember code that changes the declaring class for the clone. So won\u0027t we simply get the miranda method?",
      "range": {
        "startLine": 104,
        "startChar": 60,
        "endLine": 105,
        "endChar": 62
      },
      "revId": "091d238936809f6668ca6b7606c62bc224add430",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6161021f_f34ed091",
        "filename": "compiler/dex/mir_method_info.cc",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-03-11T20:00:32Z",
      "side": 1,
      "message": "We don\u0027t populate the dex cache with the Miranda method though? So whatever we resolve wont have the miranda flag set.",
      "parentUuid": "e155f239_d70e1c31",
      "range": {
        "startLine": 104,
        "startChar": 60,
        "endLine": 105,
        "endChar": 62
      },
      "revId": "091d238936809f6668ca6b7606c62bc224add430",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}