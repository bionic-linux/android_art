{
  "comments": [
    {
      "key": {
        "uuid": "2bb2919f_94c4086d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 14
      },
      "lineNbr": 863,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-12-19T23:11:04Z",
      "side": 1,
      "message": "nit: Resets .... (use s form like the others)",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5a4c153_33870eb4",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 14
      },
      "lineNbr": 863,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-20T18:52:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bb2919f_94c4086d",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2378e022_ac86d61f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 14
      },
      "lineNbr": 1010,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-12-19T23:11:04Z",
      "side": 1,
      "message": "nit: Registers",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fbf061d_06bfa181",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 14
      },
      "lineNbr": 1010,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-20T18:52:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2378e022_ac86d61f",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b898929_40eb7650",
        "filename": "compiler/optimizing/superblock_cloner.cc",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-12-19T23:11:04Z",
      "side": 1,
      "message": "last request for this CL before we move on to the others; this introduces new superblock_cloner.* files, but no superblock_cloner_test.cc. Obviously, usage later will test this in full, but do you see chance to make a few unit tests for typical methods of the new classes in such a new test file?",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27a83864_88ace8e3",
        "filename": "compiler/optimizing/superblock_cloner.cc",
        "patchSetId": 14
      },
      "lineNbr": 17,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-20T18:52:45Z",
      "side": 1,
      "message": "You are right about the unit tests, have added a couple which test things not related to edges remapping (control flow adjustments \u0026 basicblock cloning).\n\nEdges remapping algorithms now are limitted to peeling and unrolling cases so I guess it\u0027s a good idea to test them together in peeling/unrolling routines CL (next one).",
      "parentUuid": "8b898929_40eb7650",
      "revId": "aef0c33f04c71525b9cb0e32c2c9f306da7cf2fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}