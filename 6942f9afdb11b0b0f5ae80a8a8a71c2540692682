{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09330646_503157c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-22T15:22:35Z",
      "side": 1,
      "message": "Comment if there is any file-size change.",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57192892_eeb78eb9",
        "filename": "compiler/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-09-22T16:58:24Z",
      "side": 1,
      "message": "Sigh, is this making us require an NDK review mast@ ?",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 46
      },
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f444d3d_2a782d57",
        "filename": "compiler/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-22T15:32:59Z",
      "side": 1,
      "message": "This means libelffile is being linked in repeatedly, both here and in dex2oat and others. What\u0027s the trade-off between extra bloat and extra exported symbols?",
      "range": {
        "startLine": 232,
        "startChar": 4,
        "endLine": 232,
        "endChar": 32
      },
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e2ae72_a0231189",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-22T15:22:35Z",
      "side": 1,
      "message": "We can not omit parameters for those as well?",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7ff42ca_23ed8c00",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1963262
      },
      "writtenOn": "2022-09-22T15:26:26Z",
      "side": 1,
      "message": "Those are templates, so it would look something like this (note the leading *): \n```\n*art::debug::WriteDebugInfo*;\n```\nI\u0027m not sure which option is better",
      "parentUuid": "15e2ae72_a0231189",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ea1aea_01e9ad1e",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-22T15:32:59Z",
      "side": 1,
      "message": "\u003e (note the leading *)\n\nSo the signatures matched by patterns are different than those matched by the quoted strings? What\u0027s in front of \"art::debug\" in that case?",
      "parentUuid": "a7ff42ca_23ed8c00",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ddd586f_f0f0b921",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2022-09-22T16:49:33Z",
      "side": 1,
      "message": "Or is the return type included only for templates?\n\nAnyway, I would prefer the shorter version, even with the leading `*`.",
      "parentUuid": "b7ea1aea_01e9ad1e",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dd69395_8adb0452",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1963262
      },
      "writtenOn": "2022-09-22T16:54:39Z",
      "side": 1,
      "message": "My understanding is as follows:\nWhen linker processes version_script entries in `extern \"C++\"` section it takes a mangled name:\n```\n_ZN3art5debug14WriteDebugInfoINS_10ElfTypes64EEEvPNS_10ElfBuilderIT_EERKNS0_9DebugInfoE\n```\nDemangles it:\n```\nvoid art::debug::WriteDebugInfo\u003cart::ElfTypes64\u003e(art::ElfBuilder\u003cart::ElfTypes64\u003e*, art::debug::DebugInfo const\u0026)\n```\nAnd matches against the entry, e.g.\n```\n*art::debug::WriteDebugInfo*;\n```\nThe leading `*` catches the return type.\n\nUsing `*` is only possible without quotes \"\". Using whitespace is not possible without quotes \"\".",
      "parentUuid": "8ddd586f_f0f0b921",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfcde225_fcebbbea",
        "filename": "compiler/libart-compiler.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1963262
      },
      "writtenOn": "2022-09-22T16:59:53Z",
      "side": 1,
      "message": "\u003eOr is the return type included only for templates?\n\nYes, it\u0027s a part of function signature for templates",
      "parentUuid": "3dd69395_8adb0452",
      "revId": "6942f9afdb11b0b0f5ae80a8a8a71c2540692682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}