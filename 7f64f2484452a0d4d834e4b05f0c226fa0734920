{
  "comments": [
    {
      "key": {
        "uuid": "20e17951_3e4b7c2e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-02-27T01:51:06Z",
      "side": 1,
      "message": "Give it a different title. This isn\u0027t the only test that uses/enforces runtime state, so rather something like \"Be tolerant of the runtime environment in test state functions\" or w/e.",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51b094ea_57517e55",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-28T13:06:47Z",
      "side": 1,
      "message": "This looks very odd. If the tests call the method, that must mean they\u0027re testing something ART specific. Can we make this explicit instead (and therefore assume we cannot run it under --jvm)?",
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32b7fb2c_0cdfb374",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-03-06T06:10:08Z",
      "side": 1,
      "message": "FYI, I think this comment looks a bit out of place, considering that we didn\u0027t do the same for non-JIT configurations on the Java level, instead electing to ignore that in native, just like this change is suggesting. So I think this is OK, as an incremental step...",
      "parentUuid": "51b094ea_57517e55",
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e27c23f_7cf5f9b8",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-06T09:16:14Z",
      "side": 1,
      "message": "I don\u0027t understand what you\u0027re saying :(\n\nI understand the value of running some tests under --jvm. But I\u0027d go with not spending cycles trying to make those tests pass if they load this ART-specific .so.",
      "parentUuid": "32b7fb2c_0cdfb374",
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec5321ee_dc89a13e",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2018-03-06T15:53:16Z",
      "side": 1,
      "message": "I\u0027ve been busy with higher priority items, but I want to circle around to this at some point.\n\nI can fix it to look up the java.vm.name system property, which should resolve your concern about it being explicit.",
      "parentUuid": "2e27c23f_7cf5f9b8",
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1834d90_8af25750",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-06T22:59:38Z",
      "side": 1,
      "message": "I\u0027d be just fine with tests that use the .so be listed as expected failures in knownfailures.json.",
      "parentUuid": "ec5321ee_dc89a13e",
      "revId": "7f64f2484452a0d4d834e4b05f0c226fa0734920",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}