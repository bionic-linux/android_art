{
  "comments": [
    {
      "key": {
        "uuid": "0a5b3b40_7089e184",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-19T19:36:17Z",
      "side": 1,
      "message": "I wonder why we didn\u0027t do this to begin with? Any reason that we originally wanted to get to inline cache roots via ArtMethod\u0027s?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 57
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_37f258d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-19T22:04:45Z",
      "side": 1,
      "message": "Mainly it felt to me that was the most natural way of doing it?\nClass -\u003e methods -\u003e ProfilingInfo.\n\nBut if someone can concurrently erase profiling info, then yeah, we shouldn\u0027t do it this way and ensure we hold the profiling info lock.",
      "parentUuid": "0a5b3b40_7089e184",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 57
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_1c7881f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-19T19:36:17Z",
      "side": 1,
      "message": "This is referring to loading 0xwilldie into a local variable (eg art_method-inl.h:468 in Base PS), right?",
      "range": {
        "startLine": 10,
        "startChar": 26,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_d7f67cc8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-19T22:04:45Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "0a5b3b40_1c7881f4",
      "range": {
        "startLine": 10,
        "startChar": 26,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_9c3a3119",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-19T19:36:17Z",
      "side": 1,
      "message": "I think the GC thread (when running GC) is treated as suspended and the checkpoint code (is it MarkCodeClosure?) for the GC thread is run by the thread driving the checkpoint rather than the GC thread itself.\n\nSo, is it more like the checkpoint is still run for the GC thread but not by the GC thread itself and so running the checkpoint doesn\u0027t ensure that the GC will see the updated (nulled) profiling info, that is, GC isn\u0027t in the middle of visiting a profiling info and is potentially preempted with a stale local variable?",
      "range": {
        "startLine": 14,
        "startChar": 50,
        "endLine": 15,
        "endChar": 54
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_f7f380d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-19T22:04:45Z",
      "side": 1,
      "message": "Correct. The thread initiating the MarkCodeClosure, will visit the stack of the GC thread.\n\nAnd yes, GC thread got preempted in the middle of visiting a ProfilingInfo.",
      "parentUuid": "0a5b3b40_9c3a3119",
      "range": {
        "startLine": 14,
        "startChar": 50,
        "endLine": 15,
        "endChar": 54
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_dc11c963",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-19T19:36:17Z",
      "side": 1,
      "message": "Is this referring to the FreeData call near the end of JitCodeCache::DoCollection?",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 17,
        "endChar": 43
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_9700049d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-19T22:04:45Z",
      "side": 1,
      "message": "Yes, the one line 749 of this PS.",
      "parentUuid": "0a5b3b40_dc11c963",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 17,
        "endChar": 43
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_e9f3acd5",
        "filename": "runtime/jit/profiling_info.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-07-19T22:07:03Z",
      "side": 1,
      "message": "Always visiting the inline caches seems like it would prevent class unloading in a lot of cases. Does class unloading test pass with jit + this change?",
      "range": {
        "startLine": 106,
        "startChar": 27,
        "endLine": 106,
        "endChar": 51
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_57ca6c74",
        "filename": "runtime/jit/profiling_info.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-19T22:12:37Z",
      "side": 1,
      "message": "I have b/29712509 on my plate.\n\nBut I have sort of anticipated this with:\nhttps://cs.corp.google.com/android/art/runtime/gc/heap.cc?rcl\u003dd429249ba9b12ce3d8a2c0ee6416bc325163e375\u0026l\u003d2713",
      "parentUuid": "0a5b3b40_e9f3acd5",
      "range": {
        "startLine": 106,
        "startChar": 27,
        "endLine": 106,
        "endChar": 51
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_7f208a04",
        "filename": "runtime/jit/profiling_info.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-07-19T23:03:28Z",
      "side": 1,
      "message": "A side question re: the ClearGcRootsInInlineCaches call there, did you mean kGcTypeFull or kGcTypePartial there? \n\nI think in a zygote-forked process, we usually do kGcTypePartial when it\u0027s not a sticky collection, and probably no kGcTypeFull at all. As a side note, it\u0027s always kGcTypeFull for the non-CMS collectors.",
      "parentUuid": "0a697be4_57ca6c74",
      "range": {
        "startLine": 106,
        "startChar": 27,
        "endLine": 106,
        "endChar": 51
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea8187c9_d9155799",
        "filename": "runtime/jit/profiling_info.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-20T11:06:32Z",
      "side": 1,
      "message": "Not sure. Seems Full was ok for you guys here:\nhttps://android-review.googlesource.com/#/c/206582/",
      "parentUuid": "0a5b3b40_7f208a04",
      "range": {
        "startLine": 106,
        "startChar": 27,
        "endLine": 106,
        "endChar": 51
      },
      "revId": "9ada13e80abf74aa66e980a27b06430df7b543cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}