{
  "comments": [
    {
      "key": {
        "uuid": "985112ab_bc0a4128",
        "filename": "compiler/optimizing/instruction_simplifier_arm64.cc",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-15T10:08:15Z",
      "side": 1,
      "message": "Maybe we could drop the `const\u0027 on art::HInstruction::side_effects_ to make instruction modifications (such as this one) easier (we don\u0027t have `const\u0027 qualifiers on other fields of art::HInstruction).   Nicolas, what do you think?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "985112ab_dcf62d8b",
        "filename": "compiler/optimizing/instruction_simplifier_arm64.cc",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-15T10:17:56Z",
      "side": 1,
      "message": "Why do we need that dependency for the array access?",
      "parentUuid": "985112ab_bc0a4128",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8470aeb_1e148df7",
        "filename": "compiler/optimizing/instruction_simplifier_arm64.cc",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-07-15T12:29:42Z",
      "side": 1,
      "message": "Currently the code will behave correctly even without this additional side effect. I am thinking about the following case for an hypothetical XYZ pass.\n\n    before XYZ pass\n\n    IntermediateAddress  (DependsOnGC)\n    ArrayGet             (None)\n    Div                  (ChangesGC)\n\nSince ArrayGet is not dependent on GC, nothing prevents the pass from reordering the Div before it, yielding\n\n    after XYZ pass\n\n    IntermediateAddress  (DependsOnGC)\n    Div                  (ChangesGC)\n    ArrayGet             (None)\n\nSo we want to prevent any IR that can trigger GC to be inserted between IntermediateAddress and any of its uses.",
      "parentUuid": "985112ab_dcf62d8b",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 43
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "985112ab_7c0d993d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 4424,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-15T10:08:15Z",
      "side": 1,
      "message": "What about nesting these instructions in an arm64 namespace?",
      "range": {
        "startLine": 4424,
        "startChar": 3,
        "endLine": 4424,
        "endChar": 31
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f0c2db_b005981c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 4428,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-15T10:08:15Z",
      "side": 1,
      "message": "Stray character?",
      "range": {
        "startLine": 4428,
        "startChar": 49,
        "endLine": 4428,
        "endChar": 50
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8fdf6c1_854702f2",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 7
      },
      "lineNbr": 4428,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-07-15T12:29:42Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "18f0c2db_b005981c",
      "range": {
        "startLine": 4428,
        "startChar": 49,
        "endLine": 4428,
        "endChar": 50
      },
      "revId": "c63c28030b404dbab8f12f10eb909b91876e28d4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}