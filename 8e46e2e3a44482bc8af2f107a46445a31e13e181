{
  "comments": [
    {
      "key": {
        "uuid": "34c3ee5c_6e0cb38b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T16:24:14Z",
      "side": 1,
      "message": "?\n\nUsually polymorphic inline (caching) isn\u0027t limited to the exact same target method.",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74ac86b5_3eb4c936",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T16:27:32Z",
      "side": 1,
      "message": "Yes, you can drop the usually. This is just the simplest implementation. More to come.",
      "parentUuid": "34c3ee5c_6e0cb38b",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14beeac6_a721928d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T16:30:21Z",
      "side": 1,
      "message": "Then please make this more expressive. \"the only method the profiling saw\" isn\u0027t very descriptive, and it doesn\u0027t state that support is partial :-)",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 52
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4c4527f_999bfbe8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T16:39:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14beeac6_a721928d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 52
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34520eae_7caa7992",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 6612,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-01-26T16:52:05Z",
      "side": 1,
      "message": "i think a switch is clearer. you don\u0027t need to wonder what the else branch value is.\n\nsame for the rest.",
      "range": {
        "startLine": 6612,
        "startChar": 2,
        "endLine": 6612,
        "endChar": 4
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4c1566d_9a49ad4c",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 6612,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T18:06:43Z",
      "side": 1,
      "message": "As discussed, I\u0027d agree with you if we did not have to have a default case: UNREACHABLE (which IIRC is required for sone of the compiler).",
      "parentUuid": "34520eae_7caa7992",
      "range": {
        "startLine": 6612,
        "startChar": 2,
        "endLine": 6612,
        "endChar": 4
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14beeac6_47835e2b",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 6612,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:11:44Z",
      "side": 1,
      "message": "If you cover all enum cases, you don\u0027t have to add a default case. Switch warnings are only enabled for covering all known values, not \"incorrect\" ones.\n\nNow whether you want the LOG(FATAL) in the \"other\" cases or not is up to you. I could argue you made the choice against it already...",
      "parentUuid": "f4c1566d_9a49ad4c",
      "range": {
        "startLine": 6612,
        "startChar": 2,
        "endLine": 6612,
        "endChar": 4
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54a782d1_dde3ab56",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 6612,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T18:12:54Z",
      "side": 1,
      "message": "When did the cover all cases was enough? gcc or clang used to complain.",
      "parentUuid": "14beeac6_47835e2b",
      "range": {
        "startLine": 6612,
        "startChar": 2,
        "endLine": 6612,
        "endChar": 4
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a43ebb_a4deda2d",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 6612,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-01-26T18:14:49Z",
      "side": 1,
      "message": "You only need a default case if you decide to not have explicit cases for known enum values. That is all that was ever enabled.\n\nIf you have an enum { A, B, C}, then you can do either:\n\n  case A:\n  case B:\n  case C:\n\nor\n\n  case A:\n  case B:\n  default:\n\nbut not\n\n  case A:\n  case B:",
      "parentUuid": "54a782d1_dde3ab56",
      "range": {
        "startLine": 6612,
        "startChar": 2,
        "endLine": 6612,
        "endChar": 4
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d49b728b_6185167a",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-01-26T16:52:05Z",
      "side": 1,
      "message": "It\u0027s not clear that this new Instruction evaluates to the dex pc of the methods. Either add a comment in nodes.h or consider changing the name.",
      "range": {
        "startLine": 457,
        "startChar": 58,
        "endLine": 457,
        "endChar": 73
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4c1566d_5a1f954a",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-01-26T16:55:05Z",
      "side": 1,
      "message": "sorry, supposed to be the \"method address\" instead of \"dex pc\"",
      "parentUuid": "d49b728b_6185167a",
      "range": {
        "startLine": 457,
        "startChar": 58,
        "endLine": 457,
        "endChar": 73
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4bb5ef1_582c3d6b",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T18:06:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4c1566d_5a1f954a",
      "range": {
        "startLine": 457,
        "startChar": 58,
        "endLine": 457,
        "endChar": 73
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54a782d1_fd3ae7a2",
        "filename": "test/566-polymorphic-inlining/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-01-26T16:52:05Z",
      "side": 1,
      "message": "fairly weak test, right? i.e. hard to tell that you actually inlined those from this tests. \n\nMaybe a $jit$inlined$ tag could help here.",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 16
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94a57ac9_ff209f45",
        "filename": "test/566-polymorphic-inlining/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-26T18:06:43Z",
      "side": 1,
      "message": "Pb is that this will be flaky again for debug builds which usually don\u0027t have a ProfilingInfo full when compiling.\n\nSo yes, it\u0027s weak, but we will hit it (as I\u0027m hitting it on my machine).",
      "parentUuid": "54a782d1_fd3ae7a2",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 16
      },
      "revId": "8e46e2e3a44482bc8af2f107a46445a31e13e181",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}