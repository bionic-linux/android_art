{
  "comments": [
    {
      "key": {
        "uuid": "3b2bc633_ee2e5a26",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-12-10T13:35:02Z",
      "side": 1,
      "message": "Why nested if here instead of conjunction (some conditions are grouped in the outer if, and some in the inner if)? Also, is this order of checks optimal in the sense that more lightweight or unlikely to be satisfied go first?\n\nIt seems that klass-\u003eIsVisiblyInitialized() can be factored out of the loop?",
      "range": {
        "startLine": 240,
        "startChar": 0,
        "endLine": 246,
        "endChar": 0
      },
      "revId": "eb75feb2c804bf90958dcd3a498e34f1a8a82e46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afb425b6_39923e71",
        "filename": "runtime/interpreter/mterp/nterp.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-12-10T13:35:02Z",
      "side": 1,
      "message": "Shouldn\u0027t this (and other small predicates) be defined as inline in a header? I see there is an alternative definition for stub, but that can be done in a header as well, no?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 36,
        "endChar": 1
      },
      "revId": "eb75feb2c804bf90958dcd3a498e34f1a8a82e46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c575be2c_eea2f6b0",
        "filename": "runtime/interpreter/mterp/nterp.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2019-12-10T13:35:02Z",
      "side": 1,
      "message": "Non-uniform casts (here a C-style cast, in other places C++-style casts).\n\nAlso \u0027-Wconversion -Wsign-conversion\u0027 would warn here because (at least on some targets) 8-byte unsigned is assigned to 4-byte signed. I would rather subtract pointers and use ptrdiff_t, then DCHECK it\u0027s non-negative and cast to size_t before comparison.",
      "range": {
        "startLine": 64,
        "startChar": 20,
        "endLine": 64,
        "endChar": 31
      },
      "revId": "eb75feb2c804bf90958dcd3a498e34f1a8a82e46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}