{
  "comments": [
    {
      "key": {
        "uuid": "d6345268_a2f77e7d",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-09T16:19:26Z",
      "side": 1,
      "message": "Instead of putting this \"hack\" here, could we just make those HInstructions generate simpler code with read barriers? And then we could have a follow-up change to have typed temporaries be understood by the register allocator.",
      "range": {
        "startLine": 329,
        "startChar": 7,
        "endLine": 340,
        "endChar": 83
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60ff2af_6d12b172",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-09T19:07:59Z",
      "side": 1,
      "message": "Sure, we can address this in a follow-up change.  Removed in PS3.",
      "parentUuid": "d6345268_a2f77e7d",
      "range": {
        "startLine": 329,
        "startChar": 7,
        "endLine": 340,
        "endChar": 83
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60ff2af_0a38bba8",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-06T09:53:46Z",
      "side": 1,
      "message": "I realized today that InvokeRuntime always calls RecordPcInfo, and after Tuesday\u0027s discussion, I think we probably do not need it.  I\u0027ll update this in the next patch set.",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 562,
        "endChar": 37
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "760646d1_f77c809c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-09T19:44:00Z",
      "side": 1,
      "message": "Not sure I understand the thing with RecordPcInfo. Can you clarify?",
      "parentUuid": "d60ff2af_0a38bba8",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 562,
        "endChar": 37
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db11db43_7ac7796c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-10T11:44:40Z",
      "side": 1,
      "message": "InvokeRuntime always calls RecordPcInfo, which records the Dex PC, the native PC, stack maps, etc. for this code location.\n\nHowever, I think we may actually not need to record this information, as that read barrier runtime entry point call shall never fail or be interrupted IIUC (meaning we may never use that information).\n\nIn this regard, I thought calling the ReadBarrierSlow or ReadBarrierForRootSlow entry points should be no different than calling the runtime to perform, say, a type conversion (e.g. calling the F2l entry point to perform a float-to-long conversion on x86), as this operation should not fail nor be interrupted, and for which RecordPCInfo is special-cased not to record any information.\n\nI\u0027ll investigate.",
      "parentUuid": "760646d1_f77c809c",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 562,
        "endChar": 37
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369daed4_f36be887",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-11-10T18:49:59Z",
      "side": 1,
      "message": "Thanks for the clarification. Yes, that sounds right.",
      "parentUuid": "db11db43_7ac7796c",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 562,
        "endChar": 37
      },
      "revId": "c22ccfc48d73112397607b9e726c15b4f700b9e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}