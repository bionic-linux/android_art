{
  "comments": [
    {
      "key": {
        "uuid": "b00a5412_9ecfdd64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-09-30T03:21:25Z",
      "side": 1,
      "message": "they did look nice though :-)",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0150830_bfe97fbe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-30T03:23:00Z",
      "side": 1,
      "message": "That\u0027s why I left \u0027em in code comments. :-)",
      "parentUuid": "b00a5412_9ecfdd64",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b00a5412_1efbcd8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-09-30T03:51:27Z",
      "side": 1,
      "message": "Does our GCC support them (with -std\u003dc++1y)? With Clang/libc++ you have full C++14 support.\n\nIf not, you could also use a user-defined literal (010101_b) if you want to keep them.",
      "parentUuid": "d0150830_bfe97fbe",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b00a5412_bed2a10c",
        "filename": "runtime/entrypoints/quick/quick_alloc_entrypoints.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-09-30T03:21:25Z",
      "side": 1,
      "message": "If this is needed for gc/allocator_type.h just add there?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0150830_ffeff7c1",
        "filename": "runtime/entrypoints/quick/quick_alloc_entrypoints.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-30T03:22:28Z",
      "side": 1,
      "message": "Locks...",
      "parentUuid": "b00a5412_bed2a10c",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0150830_1f8f4bba",
        "filename": "runtime/entrypoints/quick/quick_alloc_entrypoints.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-09-30T05:00:35Z",
      "side": 1,
      "message": "Ugh, so we were just missing the annotalysis before.. that\u0027s pretty bad.",
      "parentUuid": "d0150830_ffeff7c1",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "c8ccf68b805c92674545f63e0341ba47e8d9701c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}