#!/bin/bash
#
# Copyright 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


def run(ctx, args):
  agent = "libtiagent.so" if args.O else "libtiagentd.so"
  plugin = "libopenjdkjvmti.so" if args.O else "libopenjdkjvmtid.so"

  if args.interpreter:
    # On interpreter we are fully capable of providing the full jvmti api so we
    # have a slightly different expected output.
    # TODO We should really be changing this in the 'check' script.
    ctx.bash("patch -s expected-stdout.txt <interpreter-expected.patch")

  # Provide additional runtime options when running on device.
  runtime_options = []
  if not args.host:
    assert ctx.env.ANDROID_BUILD_TOP

    bitness_flag = "--64" if args.is64 else "--32"

    # Path to native libraries installed on the device for testing purposes.
    # TODO
    # test_native_lib_path=$("$ANDROID_BUILD_TOP/art/test/utils/get-device-test-native-lib-path" \
    #   "$bitness_flag")

    # The linker configuration used for dalvikvm(64) in the ART APEX requires us
    # to pass the full path to the agent to the runtime when running on device.
    agent = f"{test_native_lib_path}/{agent}"

    # The above agent path is an absolute one; append the root directory to the
    # library path so that the agent can be found via the `java.library.path`
    # system property (see method `Main.find` in
    # test/909-attach-agent/src-art/Main.java).
    runtime_options = [f"-Djava.library.path={test_native_lib_path}:/"]

  ctx.env.ANDROID_LOG_TAGS = "*:f"
  ctx.default_run(
      args,
      android_runtime_option=[
          "-Xplugin:${plugin}", "-Xcompiler-option", "--debuggable"
      ],
      runtime_options=runtime_options,
      args=["agent:${agent}=909-attach-agent"])

  ctx.default_run(
      args,
      android_runtime_option=["-Xcompiler-option", "--debuggable"],
      runtime_options=runtime_options,
      args=["agent:${agent}=909-attach-agent"])

  ctx.default_run(
      args,
      runtime_options=runtime_options,
      args=["agent:${agent}=909-attach-agent"],
      external_log_tags=True)

  ctx.default_run(
      args,
      runtime_options=runtime_options,
      args=["agent:${agent}=909-attach-agent", "disallow-debugging"],
      external_log_tags=True)
