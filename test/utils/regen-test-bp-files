#! /bin/bash
#
# Copyright 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Regenerate ART run-tests Blueprint files.

# This script handles only a subset of ART run-tests at the moment; additional
# cases will be added later.

set -e

if [[ -z "$ANDROID_BUILD_TOP" ]]; then
  echo 'ANDROID_BUILD_TOP environment variable is empty; did you forget to run `lunch`?'
  exit 1
fi

cd "$ANDROID_BUILD_TOP/art"

tests_dir=test
num_gen_bp_files=0
num_tests=0

while read test; do
  : $((++num_tests))

  bp_file="$tests_dir/$test/Android.bp"

  # Remove any previously generated file.
  rm -f "$bp_file"

  # Ignore tests with non-default build rules.
  [[ -f "$tests_dir/$test/build" ]] && continue
  # Ignore tests with no `src` directory.
  [[ -d "$tests_dir/$test/src" ]] || continue
  # Ignore tests with sources outside the `src` directory.
  [[ -d "$tests_dir/$test/smali" ]] && continue
  [[ -d "$tests_dir/$test/jasmin" ]] && continue
  [[ -d "$tests_dir/$test/src-art" ]] && continue
  [[ -d "$tests_dir/$test/src2" ]] && continue
  [[ -d "$tests_dir/$test/src-multidex" ]] && continue
  [[ -d "$tests_dir/$test/smali-multidex" ]] && continue
  [[ -d "$tests_dir/$test/jasmin-multidex" ]] && continue
  [[ -d "$tests_dir/$test/smali-ex" ]] && continue
  [[ -d "$tests_dir/$test/src-ex" ]] && continue
  [[ -d "$tests_dir/$test/src-dex2oat-unresolved" ]] && continue
  # Ignore test with a copy of `sun.misc.Unsafe`.
  [[ -f "$tests_dir/$test/src/sun/misc/Unsafe.java" ]] && continue
  # Ignore tests with Hidden API specs.
  [[ -f "$tests_dir/$test/hiddenapi-flags.csv" ]] && continue

  cat >"$bp_file" <<EOF
java_test {
    name: "art-run-test-$test",
    defaults: ["art-run-test-defaults"],
    srcs: [
        "src/**/*.java",
    ],
}
EOF
  : $((++num_gen_bp_files))
done <<< $(ls -1 $tests_dir | grep -E '^[0-9]{3,4}-')

percentage=$((num_gen_bp_files * 100 / num_tests))

echo "Generated Blueprint files for $num_gen_bp_files ART run-tests ouf of $num_tests" \
  "($percentage%)."
