{
  "comments": [
    {
      "key": {
        "uuid": "ee879b09_232d9aac",
        "filename": "test/914-hello-obsolescence/src/art/Test914.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-02-01T12:56:52Z",
      "side": 1,
      "message": "Any ideas how to avoid the reflection? Unfortunately \"import Main\" does not work.",
      "revId": "88aac8508dc244fac1ec6b6c0500ae8bf16f010a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab9847fa_2b1c57db",
        "filename": "test/914-hello-obsolescence/src/art/Test914.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-02-01T12:58:19Z",
      "side": 1,
      "message": "Probably because that file is meant to also be used by CTS? Which makes me think maybe we cannot use libarttest ?",
      "parentUuid": "ee879b09_232d9aac",
      "revId": "88aac8508dc244fac1ec6b6c0500ae8bf16f010a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab601edd_6bd779a1",
        "filename": "test/914-hello-obsolescence/src/art/Test914.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2019-02-04T16:00:44Z",
      "side": 1,
      "message": "That would preclude writing a decent regression test as this needs to go through compiled code and debuggable implies that we\u0027re starting in the interpreter.",
      "parentUuid": "ab9847fa_2b1c57db",
      "revId": "88aac8508dc244fac1ec6b6c0500ae8bf16f010a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a64f4a38_f4917158",
        "filename": "test/914-hello-obsolescence/src/art/Test914.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-02-01T13:05:00Z",
      "side": 1,
      "message": "Although I do not expect the implementation of art::ComputeModifiedUtf8Hash to change, this seems brittle. Should assert somewhere (in native code) that\n\n  art::ComputeModifiedUtf8Hash(\"foo\") \u003d\u003d art::ComputeModifiedUtf8Hash(\"foo\")\n\n?",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 73
      },
      "revId": "88aac8508dc244fac1ec6b6c0500ae8bf16f010a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d00702_055522a1",
        "filename": "test/914-hello-obsolescence/src/art/Test914.java",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-08-13T17:36:37Z",
      "side": 1,
      "message": "\u003e Although I do not expect the implementation of art::ComputeModifiedUtf8Hash to change, this seems brittle. Should assert somewhere (in native code) that\n\u003e \n\u003e   art::ComputeModifiedUtf8Hash(\"foo\") \u003d\u003d art::ComputeModifiedUtf8Hash(\"foo\")\n\u003e \n\u003e ?\n\nI meant\n\n  art::ComputeModifiedUtf8Hash(\"foo\") \u003d\u003d art::ComputeModifiedUtf8Hash(\"fpP\")\n\nâ€¦",
      "parentUuid": "a64f4a38_f4917158",
      "range": {
        "startLine": 104,
        "startChar": 15,
        "endLine": 104,
        "endChar": 73
      },
      "revId": "88aac8508dc244fac1ec6b6c0500ae8bf16f010a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}