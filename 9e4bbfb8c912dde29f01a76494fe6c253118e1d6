{
  "comments": [
    {
      "key": {
        "uuid": "5f656276_dd27fd9c",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-05-31T09:12:18Z",
      "side": 1,
      "message": "Please add a comment - this is ironically making the API weird.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 53
      },
      "revId": "9e4bbfb8c912dde29f01a76494fe6c253118e1d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d0bcdf2_c0606052",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-31T09:33:59Z",
      "side": 1,
      "message": "What about\n\n  const CodeInfo code_info \u003d (accessor.HasCodeItem() \u0026\u0026 mi-\u003ecode_info !\u003d nullptr)\n      ? CodeInfo(mi-\u003ecode_info)\n      : CodeInfo();\n\n(You\u0027d need an extra constructor for invalid code info.)",
      "parentUuid": "5f656276_dd27fd9c",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 53
      },
      "revId": "9e4bbfb8c912dde29f01a76494fe6c253118e1d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9742934_70f641a5",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-05-31T09:49:00Z",
      "side": 1,
      "message": "Could do. I thought you don\u0027t like invalid objects :-)\n\nNote that the weirdness happens only due to the splitting of the API changes, it disappears again in the next CL, sine DexRegisterMap is completely self contained there.",
      "parentUuid": "0d0bcdf2_c0606052",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 53
      },
      "revId": "9e4bbfb8c912dde29f01a76494fe6c253118e1d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1d8cc87_05874aca",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-10-02T13:29:19Z",
      "side": 1,
      "message": "As to not liking invalid objects, I don\u0027t like unnecessary std::unique_ptr\u003c\u003e indirection either. We should start using std::optional\u003c\u003e but that\u0027s C++17.",
      "parentUuid": "d9742934_70f641a5",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 53
      },
      "revId": "9e4bbfb8c912dde29f01a76494fe6c253118e1d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fb6994_036f7cef",
        "filename": "compiler/debug/elf_debug_info_writer.h",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-10-02T13:32:20Z",
      "side": 1,
      "message": "PS: I believe this CL can be reverted now.",
      "parentUuid": "d1d8cc87_05874aca",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 53
      },
      "revId": "9e4bbfb8c912dde29f01a76494fe6c253118e1d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}