{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3140af46_adf0d804",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-12-09T01:20:33Z",
      "side": 1,
      "message": "LGTM, modulo some nits. Lokesh should probably be aware of this as well.",
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ffae9bb_634db63b",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-12-09T01:20:33Z",
      "side": 1,
      "message": "I think it\u0027s easier to read and more consistent with \u003c\u003c below to use this to start the next line.",
      "range": {
        "startLine": 262,
        "startChar": 42,
        "endLine": 262,
        "endChar": 43
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e55f7c6e_1ebd6cc8",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "I think breaking the line after the operator is the prevalent style for everything other than \"\u003c\u003c\". (Breaking before the operator is used in very few places in ART.)",
      "parentUuid": "3ffae9bb_634db63b",
      "range": {
        "startLine": 262,
        "startChar": 42,
        "endLine": 262,
        "endChar": 43
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29fb894a_de932e80",
        "filename": "runtime/thread-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-10T13:38:39Z",
      "side": 1,
      "message": "Marking as resolved.",
      "parentUuid": "e55f7c6e_1ebd6cc8",
      "range": {
        "startLine": 262,
        "startChar": 42,
        "endLine": 262,
        "endChar": 43
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fb4715e_551f0342",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T09:27:17Z",
      "side": 1,
      "message": "This confused me: are we running the flip function of another thread?",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cfbf0e3_a89975e9",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "A thread can run a checkpoints on itself while Runnable; in that case we should not see \"flip function flags\" here. When the thread is not Runnable, the requesting thread makes sure it\u0027s suspended (see DCHECK above) and runs the checkpoint on its behalf; this is the only case where we need to protect against \"flip function\" races.",
      "parentUuid": "9fb4715e_551f0342",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ce843f7_f3555321",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T15:40:07Z",
      "side": 1,
      "message": "Can you add that as a comment?",
      "parentUuid": "8cfbf0e3_a89975e9",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "578f3ec8_5850abdf",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T16:34:32Z",
      "side": 1,
      "message": "This is documented at `ThreadList::RunCheckpoint()`.",
      "parentUuid": "4ce843f7_f3555321",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de7875da_caaa4399",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T18:45:35Z",
      "side": 1,
      "message": "Hmm, OK, maybe point to that method for the comment? Or add a quick \"DCHECK(... ) \u003c\u003c RunCheckpoint should be called on a different thread\" ?",
      "parentUuid": "578f3ec8_5850abdf",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4892ee66_fc265867",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1562,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-10T10:28:29Z",
      "side": 1,
      "message": "Your proposed wording is very misleading, checkpoints often run on the thread itself (but they should not reach this particular path).\n\nI expanded the comment above a little bit.",
      "parentUuid": "de7875da_caaa4399",
      "range": {
        "startLine": 1562,
        "startChar": 0,
        "endLine": 1562,
        "endChar": 25
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c10065e_29bed3af",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1787,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-12-09T01:20:33Z",
      "side": 1,
      "message": "Seems like an odd name, since it ensures the flip function is run, and I think it always succeeds at that.",
      "range": {
        "startLine": 1787,
        "startChar": 13,
        "endLine": 1787,
        "endChar": 33
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f5ebdb2_c70a3043",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1787,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "Renamed to `EnsureFlipFunctionStarted()` and changed comment at declaration.",
      "parentUuid": "3c10065e_29bed3af",
      "range": {
        "startLine": 1787,
        "startChar": 13,
        "endLine": 1787,
        "endChar": 33
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36fba44c_72498ea0",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1821,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-12-09T01:20:33Z",
      "side": 1,
      "message": "The comment seems redundant.\n\nMight be a little clearer if this went into the critical section. But I think it\u0027s OK either way.",
      "range": {
        "startLine": 1821,
        "startChar": 4,
        "endLine": 1821,
        "endChar": 81
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f684ff4d_b5ad5012",
        "filename": "runtime/thread.cc",
        "patchSetId": 2
      },
      "lineNbr": 1821,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "Obsolete. It was rewritten in PS3 with an additional flag, so please check the new comments there.",
      "parentUuid": "36fba44c_72498ea0",
      "range": {
        "startLine": 1821,
        "startChar": 4,
        "endLine": 1821,
        "endChar": 81
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1730b2cf_7572fecb",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T09:27:17Z",
      "side": 1,
      "message": "Are we saying it\u0027s ok to run the flip function for a given thread more than once?",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 82
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7e05950_b30132aa",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "No, but one thread may need to wait while another thread is running it. See description of the new flags.",
      "parentUuid": "1730b2cf_7572fecb",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 82
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d65a2242_4810599c",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T15:40:07Z",
      "side": 1,
      "message": "Oh, so TryToFlip may return without having executed the flip, but also without having the flip function finished running?",
      "parentUuid": "f7e05950_b30132aa",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 82
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a226617_fdcafc53",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T16:34:32Z",
      "side": 1,
      "message": "Yes, and it was renamed as `EnsureFlipFunctionStarted()` in PS3/PS4 based on Hans\u0027s comment. I hope the new name better reflects the semantics.",
      "parentUuid": "d65a2242_4810599c",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 82
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45cccd7b_fbfb1875",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T18:45:35Z",
      "side": 1,
      "message": "Yes, thanks!",
      "parentUuid": "8a226617_fdcafc53",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 82
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767af187_0aa8fef6",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 1392,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-09T09:27:17Z",
      "side": 1,
      "message": "nit: add a comment on why",
      "range": {
        "startLine": 1392,
        "startChar": 52,
        "endLine": 1392,
        "endChar": 77
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f3f6b85_e958825a",
        "filename": "runtime/thread.h",
        "patchSetId": 2
      },
      "lineNbr": 1392,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-09T15:20:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "767af187_0aa8fef6",
      "range": {
        "startLine": 1392,
        "startChar": 52,
        "endLine": 1392,
        "endChar": 77
      },
      "revId": "9323183f8fb38b7a230811388525f7fdc04d634e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}