{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9b008e3e_a06724db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-01-09T16:22:07Z",
      "side": 1,
      "message": "The behaviour change also leaks out into platform code through `DexUseManagerLocal.getSecondaryDexContainerFileUseInfo`.",
      "range": {
        "startLine": 22,
        "startChar": 62,
        "endLine": 23,
        "endChar": 59
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ed71506_167a393c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-01-09T17:47:44Z",
      "side": 1,
      "message": "I don\u0027t think so. `getSecondaryDexContainerFileUseInfo` calls `getSecondaryDexInfo`, which calls `getSecondaryDexInfoImpl` with `false /* checkDexFile */`, in which case `visibility` is always `FileVisibility.OTHER_READABLE`, so this change is a no-op to it.",
      "parentUuid": "9b008e3e_a06724db",
      "range": {
        "startLine": 22,
        "startChar": 62,
        "endLine": 23,
        "endChar": 59
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c388557e_e6f27638",
        "filename": "libartservice/service/java/com/android/server/art/DexUseManagerLocal.java",
        "patchSetId": 5
      },
      "lineNbr": 318,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-01-09T16:22:07Z",
      "side": 1,
      "message": "Nit: Maybe remove this assignment entirely, as the variable only is used a couple of times. Optional.",
      "range": {
        "startLine": 317,
        "startChar": 16,
        "endLine": 318,
        "endChar": 56
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed59852_fd3a9de3",
        "filename": "libartservice/service/java/com/android/server/art/DexUseManagerLocal.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-01-09T16:22:07Z",
      "side": 1,
      "message": "The removal of the visibility filter means we can get here more often than before, can\u0027t it? Doesn\u0027t that e.g. lead to less compilation than we used to have?\n\nOn a more generic note, I find it harder to reason about the distinct CLCs and ABIs when the filter is removed, because they\u0027re created from sets that may make them larger than before, and iiuc potentially less correct. That means one needs to spend time figuring out whether the effects from the incorrectness on callers are benign, which isn\u0027t trivial.\n\nWhat about adding another flag instead to skip the visibility filter in DumpHelper?",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 336,
        "endChar": 73
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dc606e5_47782993",
        "filename": "libartservice/service/java/com/android/server/art/DexUseManagerLocal.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-01-09T17:47:44Z",
      "side": 1,
      "message": "As I said in the CL description, secondary dexopter is mostly run during the bg dexopt job (see the usage of `FLAG_FOR_SECONDARY_DEX` in [`defaultDexoptFlags`](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/model/ArtFlags.java;l\u003d151;drc\u003d03144b13b3489be8e5fcde799d08fcf30bd00b19)), and the job calls `DexUseManagerLocal.cleanup` at the very begining to prune dex use info including loaders, so this change has almost no impact.",
      "parentUuid": "7ed59852_fd3a9de3",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 336,
        "endChar": 73
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce6b2fa2_449a088f",
        "filename": "libartservice/service/java/com/android/server/art/DexUseManagerLocal.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-01-09T20:09:21Z",
      "side": 1,
      "message": "Sure, but my point is that it\u0027s hard to reason about it. The effect of this change is that this method starts to behave subtly wrong, and then there\u0027s a motivation in the commit message that it\u0027s unlikely to matter. For one, it\u0027s not clear to me how the cleanup that\u0027s (sometimes) done beforehand affects the visibility filter - exactly how does the removal of obsolete dex infos make that filtering a no-op? But foremost it\u0027s a global characteristic in the current ART Service that it mostly doesn\u0027t matter. It\u0027s hard to confirm that\u0027s true (and frankly I\u0027d rather spend my time on other things), and it\u0027s hard to ensure that it remains true as the code changes anywhere in these code paths. It\u0027s a lot simpler to ensure that the method just DTRT in isolation.\n\nSomething like this may be motivated if the benefit is substantial, but I don\u0027t see any substantial win here - it\u0027s easy enough to just add a flag around the visibility filter instead.\n\nHowever it\u0027d be a different matter if you argue that the visibility filter is really not the correct thing to do. If that\u0027s the case then please update the commit message with that.",
      "parentUuid": "5dc606e5_47782993",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 336,
        "endChar": 73
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5191ad0_94c17f3f",
        "filename": "libartservice/service/java/com/android/server/art/DexUseManagerLocal.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-01-10T01:33:05Z",
      "side": 1,
      "message": "During the cleanup, we use [exactly the same condition](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/DexUseManagerLocal.java;l\u003d805-812;drc\u003d0fb0b42523681e150297c466a1b289aff74c648d) as the filter uses to remove loaders. That\u0027s why the filtering is effectively a no-op after the cleanup takes place.\n\nI don\u0027t see it as \"this method starts to behave subtly wrong\". This method operates on the current data. If something has changed, we should run the cleanup to update the current data, rather than adding complicated logic here. The cleanup is run daily, so this method is eventually correct in any case, not to mention that we do run the cleanup right before secondary dexopt during bg dexopt job. Even if the cleanup is run after secondary dexopt, secondary dexopt will still be correct after a day.\n\nIn the CL description, I mentioned 3 drawbacks of the filtering:\n\n1. It added unnecessary complexity in the method itself.\n2. It prevented DumpHelper from reusing the method.\n3. It can also be surprising when the method is used by others in the future as this behavior is subtle and not well-documented.\n\nAdding a flag can address #2 but #1 and #3 would still exist.\n\nAlso, as the comment [here](https://cs.android.com/android/platform/superproject/main/+/main:art/libartservice/service/java/com/android/server/art/DexUseManagerLocal.java;l\u003d805-812;drc\u003d0fb0b42523681e150297c466a1b289aff74c648d) said, the filtering is only useful in an edge case:\n\n1. A secondary dex file owned by package A was other-readable.\n2. Another package B loaded it.\n3. The secondary dex file was changed to non-other-readable at some point.\n4. Package B can no longer load it.\n\nHow often does this happen in reality? I don\u0027t think it often happens. I think it\u0027s an edge case.\n\nAlso, the filtering is incomplete. It doesn\u0027t cover a more common case, where a package loads a secondary dex file but is then removed. For this more common case, we fully rely on the cleanup.\n\nAll I wanted to say is that the filtering yields low ROI, so I prefer to remove it. I regret that I added it in the first place. It doesn\u0027t exist in the legacy code. In fact, the legacy code doesn\u0027t even have the cleanup. If the legacy code hits the edge case that I mentioned above, it will behave \"wrong\" forever.",
      "parentUuid": "ce6b2fa2_449a088f",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 336,
        "endChar": 73
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e49fa0fa_5f3b9565",
        "filename": "libartservice/service/javatests/com/android/server/art/DexUseManagerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-01-09T16:22:07Z",
      "side": 1,
      "message": "Please update.",
      "range": {
        "startLine": 90,
        "startChar": 7,
        "endLine": 90,
        "endChar": 80
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "556a7003_5173bc48",
        "filename": "libartservice/service/javatests/com/android/server/art/DexUseManagerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-01-09T17:47:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e49fa0fa_5f3b9565",
      "range": {
        "startLine": 90,
        "startChar": 7,
        "endLine": 90,
        "endChar": 80
      },
      "revId": "87fee33c460c7dfad6fda4492adca12b20b88940",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}