{
  "comments": [
    {
      "key": {
        "uuid": "84d6ed80_44594211",
        "filename": "compiler/dex/quick/x86/assemble_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1010712
      },
      "writtenOn": "2014-07-02T17:58:13Z",
      "side": 1,
      "message": "Is it REX?",
      "revId": "72216071d2c9a128eadff3b0ce93782cc29f2685",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64dbb9ad_ef9ad55f",
        "filename": "compiler/dex/quick/x86/assemble_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-07-02T18:02:19Z",
      "side": 1,
      "message": "Manual says:\nREX.W + 0F B6 /r MOVZX r64, r/m8* RM Valid N.E. Move byte to quadword, zero-extension.",
      "parentUuid": "84d6ed80_44594211",
      "revId": "72216071d2c9a128eadff3b0ce93782cc29f2685",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d54179_c74edef4",
        "filename": "compiler/dex/quick/x86/assemble_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1010712
      },
      "writtenOn": "2014-07-02T18:52:07Z",
      "side": 1,
      "message": "Ok.  REX.W works to write a 64-bit register.  movzbl (zero extended from 1 byte to 4 bytes) (without REX.W) may work too, because the upper 32 bits of a 64-bit register are automatically zero.  Thanks!",
      "parentUuid": "64dbb9ad_ef9ad55f",
      "revId": "72216071d2c9a128eadff3b0ce93782cc29f2685",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}