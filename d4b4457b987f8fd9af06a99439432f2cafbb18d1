{
  "comments": [
    {
      "key": {
        "uuid": "e27a7932_8d43788a",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-02-29T19:04:39Z",
      "side": 1,
      "message": "Do these support read barriers?",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82affd8e_2c6bab83",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-02-29T23:43:46Z",
      "side": 1,
      "message": "Does it need to? The strings are in the boot image, so never collected nor moved.",
      "parentUuid": "e27a7932_8d43788a",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22ef3134_5fa0e66a",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-03-01T21:46:59Z",
      "side": 1,
      "message": "I think so. If we don\u0027t have a read barrier there, the string could be a from-space (white) object and the to-space invariant (mutators see only gray or black objects and we may miss correctly marking objects without it) would break and the checks would fail. Once it\u0027s broken, anything transitively reachable/loaded through it like the string class, etc... would have the same issue because loading from a white object won\u0027t trigger the read barrier. This is still the case even if an object is in the image or non-moving as non-moving objects can (transitively) point to moving objects. This is sort of a principle with a Baker-style read barrier.\n\nThat doesn\u0027t necessarily mean there aren\u0027t specific cases where we could remove read barriers. But that would likely need to be done with care and proper checks and assertions, I would think. Currently, I am not sure if it\u0027s safe.\n\nIs it hard to have read barriers implemented there? If we choose not implementing read barriers there, I\u0027d ask that we disable these string load optimizations for the read barrier build for now and consider enabling them in the future.",
      "parentUuid": "82affd8e_2c6bab83",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62eda937_22c190a2",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-03-01T22:33:02Z",
      "side": 1,
      "message": "OK, good catch. Then yeah, I agree the safest would be to disable those optimizations for now.",
      "parentUuid": "22ef3134_5fa0e66a",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c209f5de_5d48ef2a",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-03-02T17:25:58Z",
      "side": 1,
      "message": "Agreed; we should disable the optimization when `kEmitCompilerReadBarrier` is true.\n\nI can implement those read barriers later in a follow-up CL.",
      "parentUuid": "62eda937_22c190a2",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02730d96_b4ea2054",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 6067,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-07T19:04:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c209f5de_5d48ef2a",
      "range": {
        "startLine": 6052,
        "startChar": 0,
        "endLine": 6067,
        "endChar": 13
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22c49160_3e2aed15",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-02-27T14:25:09Z",
      "side": 1,
      "message": "String.",
      "range": {
        "startLine": 5489,
        "startChar": 32,
        "endLine": 5489,
        "endChar": 49
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e26d19b5_337c6846",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 5489,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-07T19:04:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22c49160_3e2aed15",
      "range": {
        "startLine": 5489,
        "startChar": 32,
        "endLine": 5489,
        "endChar": 49
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02c30d5c_c8f69f40",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-02-27T14:25:09Z",
      "side": 1,
      "message": "IsSameDexFile",
      "range": {
        "startLine": 173,
        "startChar": 9,
        "endLine": 173,
        "endChar": 50
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e26d19b5_5379e454",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-07T19:04:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02c30d5c_c8f69f40",
      "range": {
        "startLine": 173,
        "startChar": 9,
        "endLine": 173,
        "endChar": 50
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22c49160_5e1fa9f2",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-02-27T14:25:09Z",
      "side": 1,
      "message": "unused?",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 31
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e29439c3_7b2f9f67",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-07T19:04:49Z",
      "side": 1,
      "message": "With --force-determinism we have an extra pass to do this but without that flag I think we need to actually resolve the string. Also, note that this is CHECK() rather than DCHECK() to abort on OOM - unlike the ignorant CompilerDriver which would delay the abort until the next AssertNoPendingException().",
      "parentUuid": "22c49160_5e1fa9f2",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 31
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2b881d5_621f6cf3",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-02-27T14:25:09Z",
      "side": 1,
      "message": "Seems like a useful method worth moving to the Heap class (if not already there?)?",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 267,
        "endChar": 1
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e26d19b5_33c1c8a2",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-03-07T19:04:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2b881d5_621f6cf3",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 267,
        "endChar": 1
      },
      "revId": "d4b4457b987f8fd9af06a99439432f2cafbb18d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}