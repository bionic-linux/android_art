{
  "comments": [
    {
      "key": {
        "uuid": "e497b25c_428d7257",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "Can you remove this, and change the backend to crash if it\u0027s volatile?",
      "range": {
        "startLine": 674,
        "startChar": 12,
        "endLine": 674,
        "endChar": 23
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "047cc62c_4b0d8559",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1030338
      },
      "writtenOn": "2014-12-12T19:01:07Z",
      "side": 1,
      "message": "FYI: I have added ARM64 support for volatile and rem in my tree. I will push the patch on Monday after a bit more testing.",
      "parentUuid": "e497b25c_428d7257",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_f90c7332",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "Then we wouldn\u0027t be able to compile the boot image for arm64 anymore. Crashing will also break the tests.\n\nI think it\u0027s ok to leave as is till Serban pushes the patch.",
      "parentUuid": "047cc62c_4b0d8559",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_d96d3771",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-15T21:22:43Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "641ca21f_f90c7332",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84819619_4779aeb5",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 2
      },
      "lineNbr": 737,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 737,
        "startChar": 4,
        "endLine": 737,
        "endChar": 11
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e497b25c_228a6e41",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2561,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "quiet c++ warnings.",
      "range": {
        "startLine": 2561,
        "startChar": 49,
        "endLine": 2561,
        "endChar": 50
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24162a01_174db639",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2561,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e497b25c_228a6e41",
      "range": {
        "startLine": 2561,
        "startChar": 49,
        "endLine": 2561,
        "endChar": 50
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2420ea81_47d93006",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2564,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-15T22:33:23Z",
      "side": 1,
      "message": "I think there is room for future improvement here, but this is fine for now.  I think we concluded that LoadAny could, in many cases, be safely be mapped to ISHLD if available.  But that\u0027s probably not true for volatile loads on ARM, in that it doesn\u0027t address IRIW issues?  In the future we should replace many (all?) usages of LoadAny with acquire on v8.",
      "range": {
        "startLine": 2564,
        "startChar": 25,
        "endLine": 2564,
        "endChar": 33
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41215094_555c8c42",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2564,
      "author": {
        "id": 1030338
      },
      "writtenOn": "2014-12-16T09:43:09Z",
      "side": 1,
      "message": "I have implemented both variants for ARM64 - dmb and acquire-release.",
      "parentUuid": "2420ea81_47d93006",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84819619_677eb2a0",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2574,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "What is this comment for?",
      "range": {
        "startLine": 2574,
        "startChar": 61,
        "endLine": 2574,
        "endChar": 69
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_5699f454",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2574,
      "author": {
        "id": 1030338
      },
      "writtenOn": "2014-12-15T10:17:28Z",
      "side": 1,
      "message": "Typo - barrier (applies to the other backends too).",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24162a01_b7ba0294",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2574,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "641ca21f_5699f454",
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4adf2fd_35cf1a3d",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2574,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "removed. It was mostly to remember me that I should look into why we need another variant of store store.",
      "parentUuid": "84819619_677eb2a0",
      "range": {
        "startLine": 2574,
        "startChar": 61,
        "endLine": 2574,
        "endChar": 69
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84819619_8782c628",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2632,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "Is the store atomic? (same question for other load/store of 64bits values).",
      "range": {
        "startLine": 2632,
        "startChar": 9,
        "endLine": 2632,
        "endChar": 22
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_1914cf35",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 2632,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "it isn\u0027t. Thanks and done!",
      "parentUuid": "84819619_8782c628",
      "range": {
        "startLine": 2632,
        "startChar": 9,
        "endLine": 2632,
        "endChar": 22
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44231e8e_aef63bed",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 2
      },
      "lineNbr": 3251,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-15T22:33:23Z",
      "side": 1,
      "message": "Class initialization check is presumably handled elsewhere?",
      "range": {
        "startLine": 3251,
        "startChar": 2,
        "endLine": 3251,
        "endChar": 64
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a453fafb_f0a5800f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2677,
      "author": {
        "id": 1013855
      },
      "writtenOn": "2014-12-15T18:36:57Z",
      "side": 1,
      "message": "Should be easy to add support for this - we just need an sfence.",
      "range": {
        "startLine": 2677,
        "startChar": 86,
        "endLine": 2677,
        "endChar": 99
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44731e24_05033203",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2748,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "This does not work with volatile, as the load must be atomic.",
      "range": {
        "startLine": 2747,
        "startChar": 7,
        "endLine": 2748,
        "endChar": 89
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a45e9afb_1ba13f32",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2748,
      "author": {
        "id": 1013855
      },
      "writtenOn": "2014-12-15T18:36:57Z",
      "side": 1,
      "message": "Interestingly enough, just from a bit of inspection on Quick code, it appears it is doing the same thing.",
      "parentUuid": "44731e24_05033203",
      "range": {
        "startLine": 2747,
        "startChar": 7,
        "endLine": 2748,
        "endChar": 89
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24162a01_97bf0684",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2748,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "thanks and done!",
      "parentUuid": "44731e24_05033203",
      "range": {
        "startLine": 2747,
        "startChar": 7,
        "endLine": 2748,
        "endChar": 89
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2420ea81_078818b2",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2410,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2014-12-15T22:33:23Z",
      "side": 1,
      "message": "Again, this should be an sfence.",
      "range": {
        "startLine": 2410,
        "startChar": 61,
        "endLine": 2410,
        "endChar": 99
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44731e24_c5911a5f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2127,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "No need to check volatile. Just like we don\u0027t check the field type, they are both is implied by the field offset being the same.",
      "range": {
        "startLine": 2127,
        "startChar": 12,
        "endLine": 2127,
        "endChar": 24
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_7921838f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2127,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "indeed.",
      "parentUuid": "44731e24_c5911a5f",
      "range": {
        "startLine": 2127,
        "startChar": 12,
        "endLine": 2127,
        "endChar": 24
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "211e1c5a_b7640202",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2127,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2014-12-16T16:28:27Z",
      "side": 1,
      "message": "Suggestion: if we rely solely on the field offset, shouldn\u0027t we DCHECK somewhere that the `field_info_` fields (and the `is_volatile_` fields) are equal?",
      "parentUuid": "44731e24_c5911a5f",
      "range": {
        "startLine": 2127,
        "startChar": 12,
        "endLine": 2127,
        "endChar": 24
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e497b25c_e25a4648",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2143,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-12-11T09:07:48Z",
      "side": 1,
      "message": "Please move this to field_info.",
      "range": {
        "startLine": 2143,
        "startChar": 13,
        "endLine": 2143,
        "endChar": 25
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641ca21f_591e4757",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 2143,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-12-15T18:39:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e497b25c_e25a4648",
      "range": {
        "startLine": 2143,
        "startChar": 13,
        "endLine": 2143,
        "endChar": 25
      },
      "revId": "f59140c7c5f66c3d8dfa88b8c70ffe954408b4bb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}