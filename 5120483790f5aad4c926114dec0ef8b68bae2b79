{
  "comments": [
    {
      "key": {
        "uuid": "42c98578_4ae9a3cf",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 143,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-25T16:09:10Z",
      "side": 1,
      "message": "Reordered arguments.  I found it highly irritating that the parameters were in random order.  The order is now the same as the order used in memory which is also the order of fields in StackMapEncoding.",
      "range": {
        "startLine": 143,
        "startChar": 46,
        "endLine": 143,
        "endChar": 58
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22c49160_5ea089bc",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 490,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-25T16:09:10Z",
      "side": 1,
      "message": "Finish rebase - CheckCodeInfo needed to be adjusted to the API change.",
      "range": {
        "startLine": 490,
        "startChar": 43,
        "endLine": 490,
        "endChar": 67
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c283b51b_b092a0ce",
        "filename": "runtime/stack_map.cc",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-02-25T17:16:18Z",
      "side": 1,
      "message": "The encoding is part of the code info, so it should not be dumped at the same level.",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 22
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42c98578_2ae62794",
        "filename": "runtime/stack_map.cc",
        "patchSetId": 9
      },
      "lineNbr": 114,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-26T01:43:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c283b51b_b092a0ce",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 22
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62b209f8_5d65ebab",
        "filename": "runtime/stack_map.h",
        "patchSetId": 9
      },
      "lineNbr": 661,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-25T16:09:10Z",
      "side": 1,
      "message": "* I made this into a helper class since I want to reuse the logic for CodeInfo.\n* It also reduces repetition.  I was worried about mixing the wrong *BitOffset, *BitSize and check_max somewhere.\n* The check_max is replaced with min_value.  It is equivalent in size, but it is much faster to calculate.  It also allow for more then one magic value, which I might need later.\n* The Load/Store code is intentionally kept in header to allow for inclining.",
      "range": {
        "startLine": 661,
        "startChar": 7,
        "endLine": 661,
        "endChar": 20
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c283b51b_90959cbb",
        "filename": "runtime/stack_map.h",
        "patchSetId": 9
      },
      "lineNbr": 722,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-02-25T17:16:18Z",
      "side": 1,
      "message": "Isn\u0027t this also unnecessary? I would expect the values to be smaller than the \"size.\"",
      "range": {
        "startLine": 722,
        "startChar": 37,
        "endLine": 722,
        "endChar": 65
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2bd19cb_dc14a165",
        "filename": "runtime/stack_map.h",
        "patchSetId": 9
      },
      "lineNbr": 722,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-26T01:43:35Z",
      "side": 1,
      "message": "Good point.",
      "parentUuid": "c283b51b_90959cbb",
      "range": {
        "startLine": 722,
        "startChar": 37,
        "endLine": 722,
        "endChar": 65
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22c49160_dee1f9e5",
        "filename": "runtime/stack_map.h",
        "patchSetId": 9
      },
      "lineNbr": 754,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-02-25T17:16:18Z",
      "side": 1,
      "message": "The what?",
      "range": {
        "startLine": 754,
        "startChar": 55,
        "endLine": 754,
        "endChar": 59
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c283b51b_102e0c43",
        "filename": "runtime/stack_map.h",
        "patchSetId": 9
      },
      "lineNbr": 754,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-26T01:43:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22c49160_dee1f9e5",
      "range": {
        "startLine": 754,
        "startChar": 55,
        "endLine": 754,
        "endChar": 59
      },
      "revId": "5120483790f5aad4c926114dec0ef8b68bae2b79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}