{
  "comments": [
    {
      "key": {
        "uuid": "1ef3f042_438e0e28",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 229,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "hold?",
      "range": {
        "startLine": 229,
        "startChar": 18,
        "endLine": 229,
        "endChar": 27
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0293b99_16a0245d",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 229,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ef3f042_438e0e28",
      "range": {
        "startLine": 229,
        "startChar": 18,
        "endLine": 229,
        "endChar": 27
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb9a504_bb31d97e",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 249,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "checked",
      "range": {
        "startLine": 249,
        "startChar": 29,
        "endLine": 249,
        "endChar": 30
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0eb78ca_304b8f28",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 249,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ceb9a504_bb31d97e",
      "range": {
        "startLine": 249,
        "startChar": 29,
        "endLine": 249,
        "endChar": 30
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704332d4_744a054c",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "Can you actually copy the same comment as lines 228-229?",
      "range": {
        "startLine": 253,
        "startChar": 9,
        "endLine": 253,
        "endChar": 86
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd5408d_c004ba2a",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "704332d4_744a054c",
      "range": {
        "startLine": 253,
        "startChar": 9,
        "endLine": 253,
        "endChar": 86
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cef49e0_32d25862",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 1069,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "This could get a bit more comments, like \"In the general case....\". Why would we have code \u003d\u003d GetQuickInstrumentationEntryPoint if instrumentation and interpreter stubs are not installed?",
      "range": {
        "startLine": 1063,
        "startChar": 0,
        "endLine": 1069,
        "endChar": 5
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c060296f_766c60a1",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 1069,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cef49e0_32d25862",
      "range": {
        "startLine": 1063,
        "startChar": 0,
        "endLine": 1069,
        "endChar": 5
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8c00b6e_54f57c22",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 1090,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "Same for adding comments what the logic is here.",
      "range": {
        "startLine": 1077,
        "startChar": 0,
        "endLine": 1090,
        "endChar": 16
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c66f613_02b5660a",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 7
      },
      "lineNbr": 1090,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8c00b6e_54f57c22",
      "range": {
        "startLine": 1077,
        "startChar": 0,
        "endLine": 1090,
        "endChar": 16
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab2a3241_25685d8a",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 7
      },
      "lineNbr": 749,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-13T21:00:03Z",
      "side": 1,
      "message": "You should not do this. The saved entry point is a marker we\u0027re doing GC.",
      "range": {
        "startLine": 748,
        "startChar": 0,
        "endLine": 749,
        "endChar": 65
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86a87f97_b03d2813",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 7
      },
      "lineNbr": 749,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-14T16:04:41Z",
      "side": 1,
      "message": "yeah that\u0027s why we look at and use the saved entrypoint first. if it isn\u0027t there we try to get it from the jit directly since we couldn\u0027t do that when the instrumentation code was removed.",
      "parentUuid": "ab2a3241_25685d8a",
      "range": {
        "startLine": 748,
        "startChar": 0,
        "endLine": 749,
        "endChar": 65
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04614801_257d78d8",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 7
      },
      "lineNbr": 749,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-15T13:06:15Z",
      "side": 1,
      "message": "I wasn\u0027t clear: you should not do this, as it messes with how GC is done, and it\u0027s a no-go to do this kind of query when a method is entered in the interpreter.",
      "parentUuid": "86a87f97_b03d2813",
      "range": {
        "startLine": 748,
        "startChar": 0,
        "endLine": 749,
        "endChar": 65
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28d450e4_77bba018",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 7
      },
      "lineNbr": 749,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-06-15T16:35:07Z",
      "side": 1,
      "message": "Can you expand. I don\u0027t see how it messes with the jit gc at all. Find compiled code bails if a jit-gc is in progress and in that cases the saved entrypoint would be there anyway.\n\nWhat is wrong with doing this query? It\u0027s not time we have a map that we use so it should be fairly fast and rare anyway (if no tracing is going on this is never cleared except for jit-gc which sets the \u0027SavedEntryPoint\u0027).",
      "parentUuid": "04614801_257d78d8",
      "range": {
        "startLine": 748,
        "startChar": 0,
        "endLine": 749,
        "endChar": 65
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad168b1_f63459a9",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 7
      },
      "lineNbr": 749,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-06-15T16:40:14Z",
      "side": 1,
      "message": "The intent of this code is a contract between JIT and interpreter that whenever the interpreter enters with a saved entry point, we want to update the method\u0027s entrypoint. There is no contract that if the JIT has it in its data structure, then we should update it (examples like deopt could also be a reason why the entrypoint is interpreter and the JIT has a method).\n\nYou\u0027re going to do that query for each method entry of a specific method, at the point it has profiling info, and until it has JITted code. It is not cheap to lock and lookup.",
      "parentUuid": "28d450e4_77bba018",
      "range": {
        "startLine": 748,
        "startChar": 0,
        "endLine": 749,
        "endChar": 65
      },
      "revId": "facf08bbd5144b19c14892507ede4377e03304a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}