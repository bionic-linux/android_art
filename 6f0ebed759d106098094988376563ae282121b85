{
  "comments": [
    {
      "key": {
        "uuid": "3b43d7e3_bdfc7f29",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 2150,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-01T15:29:12Z",
      "side": 1,
      "message": "Not a bug but please consider using something else than a colon as a separator.\n\nChecker does not interpret it in any special way, but nonetheless it would be nice to keep the format as a list of \"attr:value\" pairs. This will print \"method_load_kind:unknown:1234\".",
      "range": {
        "startLine": 2150,
        "startChar": 20,
        "endLine": 2150,
        "endChar": 28
      },
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db347b68_a50ea87a",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 2150,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-01T16:21:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b43d7e3_bdfc7f29",
      "range": {
        "startLine": 2150,
        "startChar": 20,
        "endLine": 2150,
        "endChar": 28
      },
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b43d7e3_7dffd71b",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-01T15:29:12Z",
      "side": 1,
      "message": "I\u0027d suggest splitting this into two passes:\n\n1) test that there is just one base (CHECK, CHECK-NOT)\n2) test that the base is just before the If (CHECK base, CHECK-NEXT If)",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b5293ad_fcdc4998",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-01T16:21:56Z",
      "side": 1,
      "message": "Done. I didn\u0027t even know there\u0027s a \"CHECK-NEXT\".",
      "parentUuid": "3b43d7e3_7dffd71b",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b0c6fc0_27a85af7",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-01T15:29:12Z",
      "side": 1,
      "message": "ditto",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b0c6fc0_a76c4aa0",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-01T16:21:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b0c6fc0_27a85af7",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b3e8348_2358547d",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-01T15:29:12Z",
      "side": 1,
      "message": "Any chance we could get a test with a loop too?",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db347b68_654e60bc",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-12-01T16:21:56Z",
      "side": 1,
      "message": "Looks a bit difficult. Do we want to rely on specific instruction ordering, such as\n\n    CHECK:      ArrayLength\n    CHECK-NEXT: X86ComputeBaseMethodAddress\n    CHECK-NEXT: Goto\n\nas a pre-header for a range-based loop?",
      "parentUuid": "9b3e8348_2358547d",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb4cdf15_1b81fb68",
        "filename": "test/552-checker-sharpening/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-01T16:47:15Z",
      "side": 1,
      "message": "I\u0027d suggest using a simple loop where you know that the body is just one block and showing that the base is not in it.\n\n  xyz; // put something here to make B1 the pre-header\n  while (true) {\n    foo();\n  }\n\nand then you can check for:\n\n  CHECK: Base\n  CHECK: begin_block\n  CHECK: Invoke\n\nor even verify all the blocks:\n\n  CHECK: begin_block  // entry block\n  CHECK: begin_block  // pre-header\n  CHECK: Base\n  CHECK: begin_block  // loop body\n  CHECK: Invoke\n  CHECK-NOT: begin_block\n\nWe should just start printing the block number with each instruction. Would make things much easier.",
      "parentUuid": "db347b68_654e60bc",
      "revId": "6f0ebed759d106098094988376563ae282121b85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}