{
  "comments": [
    {
      "key": {
        "uuid": "346221c1_77a330c5",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Shouldn\u0027t that be ObjectReference?",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_7ae875af",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "What is ObjectReference? Something that the GC can walk over and fix up? We don\u0027t need that here, this will be a direct pointer that will be determined by the ImageWriter rather than the GC.",
      "parentUuid": "346221c1_77a330c5",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692a00c1_4ca0cf0c",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-20T12:59:49Z",
      "side": 1,
      "message": "It\u0027s more the size I\u0027m worried about: we say here it\u0027s 32bits because ObjectReference is 32bits, but it could be 64bits some time in the future.",
      "parentUuid": "346221c1_7ae875af",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692a00c1_ccab1fed",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-21T13:34:14Z",
      "side": 1,
      "message": "As long as the boot image is in low 4GiB, even 64-bit references do not make a difference here.",
      "parentUuid": "692a00c1_4ca0cf0c",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09318482_b677c8ba",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-21T13:48:11Z",
      "side": 1,
      "message": "Any way to guard the code here that the boot image is in low 4G?",
      "parentUuid": "692a00c1_ccab1fed",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291ac803_376f387c",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 3799,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-21T14:05:28Z",
      "side": 1,
      "message": "There\u0027s a DCHECK() in VisitLoadClass().",
      "parentUuid": "09318482_b677c8ba",
      "range": {
        "startLine": 3799,
        "startChar": 14,
        "endLine": 3799,
        "endChar": 22
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_37829817",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 5
      },
      "lineNbr": 2437,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Isn\u0027t this preventing you from GVN\u0027ing the same class but reference from different dex files? Which is what you\u0027re trying to achieve with line 2443?",
      "range": {
        "startLine": 2437,
        "startChar": 5,
        "endLine": 2437,
        "endChar": 50
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "545f95f9_9b6c6fbb",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 5
      },
      "lineNbr": 2437,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Yes, I\u0027ve got a little mental TODO scheduled for this and HLoadString::InstructionDataEquals() that I\u0027d like to address in a follow-up CL. But it will also require a rethink of the hash codes, so that\u0027s really too much for this CL.",
      "parentUuid": "346221c1_37829817",
      "range": {
        "startLine": 2437,
        "startChar": 5,
        "endLine": 2437,
        "endChar": 50
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692a00c1_8ca12711",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 5
      },
      "lineNbr": 2437,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-20T12:59:49Z",
      "side": 1,
      "message": "OK. Please add at least some comment that would make sure no one gets surprised by this.",
      "parentUuid": "545f95f9_9b6c6fbb",
      "range": {
        "startLine": 2437,
        "startChar": 5,
        "endLine": 2437,
        "endChar": 50
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a94cf814_db6dd3b9",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 5
      },
      "lineNbr": 2437,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-21T13:34:14Z",
      "side": 1,
      "message": "Added a TODO. (Did not file a bug as I consider this really low priority.)",
      "parentUuid": "692a00c1_8ca12711",
      "range": {
        "startLine": 2437,
        "startChar": 5,
        "endLine": 2437,
        "endChar": 50
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_f78f403d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 5388,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "It has to be an invariant that HInstruction can only be in use/def relations, not in raw fields of other HInstruction.\n\nI think  you can add this to the inputs a build time, and then remove it when sharpening?",
      "range": {
        "startLine": 5388,
        "startChar": 0,
        "endLine": 5388,
        "endChar": 67
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94658dc6_00c46afa",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 5
      },
      "lineNbr": 5388,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Discussed offline. For the record, special_input_ is just the backing storage for the input record (similar to HTemplateInstruction\u003c1\u003e::inputs_) and it\u0027s used just like for any other instruction.",
      "parentUuid": "346221c1_f78f403d",
      "range": {
        "startLine": 5388,
        "startChar": 0,
        "endLine": 5388,
        "endChar": 67
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "545f95f9_7b115b49",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Maybe just say we\u0027re going to call the runtime anyway, so might was well just get the class as a return value of the runtime call.",
      "range": {
        "startLine": 159,
        "startChar": 7,
        "endLine": 159,
        "endChar": 52
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_3aeefdbd",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 159,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "545f95f9_7b115b49",
      "range": {
        "startLine": 159,
        "startChar": 7,
        "endLine": 159,
        "endChar": 52
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_577f0cfa",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Maybe add: \u003c\u003c \"a load class shouldn\u0027t have been optimized before sharpening\" ?",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 171,
        "endChar": 38
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7468199f_dc2ee137",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "346221c1_577f0cfa",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 171,
        "endChar": 38
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_777c1005",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 181,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "I\u0027d move this 2 lines below to have the stack allocated objects first, motivating the new block.",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 58
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d499c5fa_ff947b4f",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 181,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "346221c1_777c1005",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 58
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_ba8a0d28",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Isn\u0027t that going to be prevented by the call line 248 anyway?",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 194,
        "endChar": 69
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "545f95f9_3b30c3e3",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "The compiler_driver_test is special and I\u0027d rather handle it here than spreading it around all the codegens.",
      "parentUuid": "346221c1_ba8a0d28",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 194,
        "endChar": 69
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_1a9a1979",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Maybe add a comment: \"we only put direct addresses of class from the boot image\".\n\nAlso, maybe add a comment on classes from an app image?",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d420e584_c41a7e72",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Hm, app image... are objects in the app image movable? Maybe I should actually check if runtime-\u003eGetHeap()-\u003eIsMovableObject(klass)?",
      "parentUuid": "346221c1_1a9a1979",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692a00c1_6c9b13de",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-20T12:59:49Z",
      "side": 1,
      "message": "Yeah, I think you can use this.",
      "parentUuid": "d420e584_c41a7e72",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6920402e_b977bfba",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-21T13:34:14Z",
      "side": 1,
      "message": "But then the kBootImageAddress becomes very misleading. Should I rename it to kDirectAddress? I\u0027d like to postpone that to a follow-up CL.",
      "parentUuid": "692a00c1_6c9b13de",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6920402e_f954570e",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-21T13:48:11Z",
      "side": 1,
      "message": "Sure. I\u0027d add a TODO then.",
      "parentUuid": "6920402e_b977bfba",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291ac803_17723461",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-21T14:05:28Z",
      "side": 1,
      "message": "Done; new bug filed.",
      "parentUuid": "6920402e_f954570e",
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346221c1_3a97dd51",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-06-16T15:07:15Z",
      "side": 1,
      "message": "Please file a bug instead, these TODOs get lost.",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 38
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "545f95f9_fbee4b26",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 5
      },
      "lineNbr": 221,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-06-16T18:00:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "346221c1_3a97dd51",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 221,
        "endChar": 38
      },
      "revId": "a90991514c796fb2f478aaebed6f8d16e676de89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}