{
  "comments": [
    {
      "key": {
        "uuid": "95f14f3a_03297eaa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-08T16:26:23Z",
      "side": 1,
      "message": "Please extend this. It is not immediately apparent why it\u0027s OK to set it to true concurrently...",
      "range": {
        "startLine": 12,
        "startChar": 18,
        "endLine": 12,
        "endChar": 51
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e13a33c6_08c87243",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-08T22:56:14Z",
      "side": 1,
      "message": "Will do. Sorry for lack of context, this change was a FYI follow-up on private conversations.",
      "parentUuid": "95f14f3a_03297eaa",
      "range": {
        "startLine": 12,
        "startChar": 18,
        "endLine": 12,
        "endChar": 51
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d37b45cb_a2bb6a09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-03-08T16:40:41Z",
      "side": 1,
      "message": "Does this include jsr166-tests?\n\nThese look like the ones most likely to expose an issue.",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482b9ead_f829443c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-08T22:56:14Z",
      "side": 1,
      "message": "Yes it does.",
      "parentUuid": "d37b45cb_a2bb6a09",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76cb2125_ad82d5e2",
        "filename": "compiler/optimizing/intrinsics_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 2728,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-03-08T16:40:41Z",
      "side": 1,
      "message": "For the reader, these intrinsics would slightly clearer with a comment along the lines of \"Get thread\u0027s interrupted flag and clear it as described by java.lang.Thread.interrupted()\".",
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0193afa4_dccf0e80",
        "filename": "runtime/thread.cc",
        "patchSetId": 1
      },
      "lineNbr": 2255,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2017-03-09T00:39:04Z",
      "side": 1,
      "message": "In addition to Orion\u0027s comment, it seems that this also just introduces a data race with Interrupted(), which it seems can read this concurrently from the target thread.\n\nThere may be a way to do this by turning interrupted into an atomic, but the ways I can immediately think of run into memory ordering issues. Consider the (admittedly absurd) case in which two threads interrupt each other, and then call interrupt(). One has to see the flag set. Seq_cst atomic operations and an exchange in Interrupted might do, but is that a win?",
      "range": {
        "startLine": 2255,
        "startChar": 2,
        "endLine": 2255,
        "endChar": 28
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98bf3e85_8715534f",
        "filename": "runtime/thread.cc",
        "patchSetId": 1
      },
      "lineNbr": 2255,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-09T14:02:30Z",
      "side": 1,
      "message": "Yes, please see PS2 for thread.cc, which now conditionally updates the flag. I believe this makes us safe.",
      "parentUuid": "0193afa4_dccf0e80",
      "range": {
        "startLine": 2255,
        "startChar": 2,
        "endLine": 2255,
        "endChar": 28
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734a6d5f_db08db1c",
        "filename": "runtime/thread.h",
        "patchSetId": 1
      },
      "lineNbr": 580,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-03-08T16:40:41Z",
      "side": 1,
      "message": "Straying whitespace needs rounding up and dressing down.",
      "range": {
        "startLine": 580,
        "startChar": 0,
        "endLine": 580,
        "endChar": 2
      },
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a30f41dc_2879b466",
        "filename": "runtime/thread.h",
        "patchSetId": 1
      },
      "lineNbr": 1433,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-03-08T16:40:41Z",
      "side": 1,
      "message": "is_interrupted might be slightly less grammatically ambiguous, the field above is is_gc_marking, but fine as-is also.",
      "revId": "0fd504032cdc88a1462df4ba9c0fe4eac4dd120e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}