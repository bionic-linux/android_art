{
  "comments": [
    {
      "key": {
        "uuid": "cdf3c519_581485c6",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-26T10:21:04Z",
      "side": 1,
      "message": "I haven\u0027t completely followed everything, but how are we handling deduped method?",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_2e24dbda",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-05-26T12:15:30Z",
      "side": 1,
      "message": "First deduped method gets symbol with [DEDUPED] suffix, other deduped methods with the same address have no symbols to save space (see WriteDebugSymbols below).  Methods are not deduped in the first pace if --debuggable is set.",
      "parentUuid": "cdf3c519_581485c6",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed8889a6_c5536ef1",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-26T13:02:57Z",
      "side": 1,
      "message": "Ok, so:\n1) Debuggable is not set: we can get something irrelevant as a stack, but the irrelevant names are marked [DEDUPED]\n2) Debuggable is set: we get correct stack trace with correct names.\n\nIs that correct?\n\nIf a developer gets a crash, will the DEDUPED be visible to her? Will it be obvious what is going on? Wouldn\u0027t it be better to not print a method name to not be confusing? Should we care?",
      "parentUuid": "2d0c61ed_2e24dbda",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3c519_9331ce9b",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-05-26T13:28:15Z",
      "side": 1,
      "message": "Correct.\n\n(However, the names will be available only if dex2oat was run with --include-debug-symbols;  or with --include-cfi with this CL)\n\nThe [DEDUPED] suffix is part of the symbol name, so I believe it should be visible in all tools.\n\nDo you mean the deduped methods just have just [DEDUPED] as the method name and nothing else?  Well, on one hand, the printed name has at least 50% chance being wrong and thus misleading.  On the other hand, it must be a function with the exact same behavior so it is still somewhat informative.  I can persuaded either way, and not including the name saves us a bit of space.",
      "parentUuid": "ed8889a6_c5536ef1",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_4e430f22",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-26T13:30:43Z",
      "side": 1,
      "message": "Good point about same behavior. Maybe reverse the name then to:\n\n[DEDUPED from MyClass.MyMethod]\n\n?",
      "parentUuid": "cdf3c519_9331ce9b",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed8889a6_e54eb219",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-05-26T13:45:32Z",
      "side": 1,
      "message": "Is that more informative then the suffix?\nWhat about: DUPLICATE of MyClass.MyMethod\nHowever, I think current suffix works just fine.\nI am still somewhat curious what others think about removing the name altogether.  I do not have strong opinion either way.",
      "parentUuid": "2d0c61ed_4e430f22",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d0c61ed_ee28233b",
        "filename": "compiler/elf_writer_quick.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-26T13:48:48Z",
      "side": 1,
      "message": "IMO, the [DEDUPED] suffix is confusing, and not helping the user/developer. DUPLICATE works for me, as long as it is clear that there\u0027s little chance it is this method.",
      "parentUuid": "ed8889a6_e54eb219",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 51
      },
      "revId": "030daa8b0766e8601eb55e7dcf37ce8cea64ab6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}