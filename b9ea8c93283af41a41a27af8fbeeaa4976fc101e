{
  "comments": [
    {
      "key": {
        "uuid": "f1cc087f_22c1ee5c",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2016-02-02T12:54:00Z",
      "side": 1,
      "message": "Should we move this into some utility class so we can use it in other places as well?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 43,
        "endChar": 2
      },
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91d90c41_9fddb334",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-02T14:44:22Z",
      "side": 1,
      "message": "Hmmm... I kind of like that the DWARF code is self contained.\nI am happy to put it to some ART utility file as well.\n\nI am also considering removing the hashing altogether and doing something else.  But I will need to measure performance of that.",
      "parentUuid": "f1cc087f_22c1ee5c",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 43,
        "endChar": 2
      },
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "517cf4a3_9806f936",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2016-02-02T12:54:00Z",
      "side": 1,
      "message": "Why do you add 2 attribute list end marker?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 89,
        "endChar": 49
      },
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1d6100b_40efcedb",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-02T14:44:22Z",
      "side": 1,
      "message": "That is how DWARF defines the end of attribute list.",
      "parentUuid": "517cf4a3_9806f936",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 89,
        "endChar": 49
      },
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "712ad87b_1162aeba",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2016-02-02T12:54:00Z",
      "side": 1,
      "message": "I would prefer to not push and pop the abbrev table terminator every time we are adding a new entry. Can we just move it to some finalization code?",
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1110bc94_03efcedc",
        "filename": "compiler/dwarf/debug_abbrev_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-02-02T14:44:22Z",
      "side": 1,
      "message": "I am not sure whether complexity of finalization code is worth it (in particular, making sure it is called).\nNot that there so few abbrevs that the cost of doing this is basically irrelevant.",
      "parentUuid": "712ad87b_1162aeba",
      "revId": "b9ea8c93283af41a41a27af8fbeeaa4976fc101e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}