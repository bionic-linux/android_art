{
  "comments": [
    {
      "key": {
        "uuid": "1ab2acf6_f738a0dc",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-12T12:54:00Z",
      "side": 1,
      "message": "Please document this (especially since it\u0027s the default implementation, \"doing nothing\").",
      "range": {
        "startLine": 214,
        "startChar": 19,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_97a76421",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-07-12T14:08:42Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "1ab2acf6_f738a0dc",
      "range": {
        "startLine": 214,
        "startChar": 19,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_77e1f0d4",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-12T08:57:52Z",
      "side": 1,
      "message": "So this is 8 right? Worth just making it a GetRegSizeFor...() and put this RoundUp logic in the caller?",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 59
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_77a3b016",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-07-12T14:08:42Z",
      "side": 1,
      "message": "It is 8 indeed.\n\nI don\u0027t think we want to push the RoundUp in the caller: I am not sure other archs want to round up that part of the stack.",
      "parentUuid": "1ab2acf6_77e1f0d4",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 59
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_777c9053",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-12T14:15:21Z",
      "side": 1,
      "message": "But RoundUp(slots_size, 4) should return you slots_slize for other archs, right?",
      "parentUuid": "1ab2acf6_77a3b016",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 59
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_37d4d851",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-07-12T14:34:56Z",
      "side": 1,
      "message": "Oh I think see what you mean now. Your suggestion would of course work.\n\nI am not a fan of introducing a `RoundUp` call for all archs. Even if it does nothing, it looks like it enforces something (when no alignment is actually needed). In that way I like that the current default implementation clearly does nothing.\n\nNote that I also tried to not have any `if (isa \u003d\u003d arm64)` in arch-independent code. Otherwise we could just have a few lines under `if (isa \u003d\u003d arm64)` at the call site if you prefer.",
      "parentUuid": "1ab2acf6_777c9053",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 59
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab2acf6_575b0ce0",
        "filename": "compiler/optimizing/code_generator_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-12T14:46:49Z",
      "side": 1,
      "message": "That would make things local, instead of introducing a new virtual for only one specific use. I think whatever we choose, having things local is better.",
      "parentUuid": "1ab2acf6_37d4d851",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 59
      },
      "revId": "f939220f979c8dd2563a3aaf0e790c038f7d815e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}