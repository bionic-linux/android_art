{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d14de9f7_561633b7",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-01-30T15:16:23Z",
      "side": 1,
      "message": "Nit: ART APEX.",
      "range": {
        "startLine": 343,
        "startChar": 24,
        "endLine": 343,
        "endChar": 35
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a2aa1d6_d668f995",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-30T18:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d14de9f7_561633b7",
      "range": {
        "startLine": 343,
        "startChar": 24,
        "endLine": 343,
        "endChar": 35
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e106a18f_82160b2e",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-01-30T10:08:11Z",
      "side": 1,
      "message": "a special",
      "range": {
        "startLine": 350,
        "startChar": 27,
        "endLine": 350,
        "endChar": 35
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f177e24_ee2876de",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-30T18:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e106a18f_82160b2e",
      "range": {
        "startLine": 350,
        "startChar": 27,
        "endLine": 350,
        "endChar": 35
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7740dd_be75f031",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-01-30T10:08:11Z",
      "side": 1,
      "message": "!\u003d nullptr",
      "range": {
        "startLine": 362,
        "startChar": 6,
        "endLine": 362,
        "endChar": 27
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6cf0c4c_9a939e0f",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-30T18:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa7740dd_be75f031",
      "range": {
        "startLine": 362,
        "startChar": 6,
        "endLine": 362,
        "endChar": 27
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9c88f84_3d9bb430",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2023-01-30T10:08:11Z",
      "side": 1,
      "message": "Could we move this after ART\u0027s handlers, to line 393?",
      "range": {
        "startLine": 351,
        "startChar": 2,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "275989a3_bac403b7",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-30T18:10:53Z",
      "side": 1,
      "message": "It looks like in practice this is fine, I\u0027m just a little worried about bad interactions particularly with the native bridge.\n\nI\u0027ve updated the code and moved it below, but do you think it\u0027s possible that one of the special handlers could mistakenly \"handle\" a SEGV on the heap?",
      "parentUuid": "d9c88f84_3d9bb430",
      "range": {
        "startLine": 351,
        "startChar": 2,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb5da4e6_1ced340f",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-01-30T21:25:22Z",
      "side": 1,
      "message": "These would be faults on unmapped or protected pages in the scudo heap? AFAIK, our handlers look for very specific faults, e.g. on the zero page from ART generated code. But Nicolas may know more.",
      "parentUuid": "275989a3_bac403b7",
      "range": {
        "startLine": 351,
        "startChar": 2,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0794f505_6a311212",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-30T21:49:54Z",
      "side": 1,
      "message": "For more context: GWP-ASan is a separate heap allocator that sits alongside scudo, and steals a very small %% of native malloc()\u0027s from scudo, instrumenting them to find heap-use-after-free and heap-buffer-overflow.",
      "parentUuid": "fb5da4e6_1ced340f",
      "range": {
        "startLine": 351,
        "startChar": 2,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6edda432_1a8e5e14",
        "filename": "sigchainlib/sigchain.cc",
        "patchSetId": 3
      },
      "lineNbr": 365,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-01-30T22:13:33Z",
      "side": 1,
      "message": "So these would be faults in a region mapped by GWP-ASan, and well-separated from other mappings?\n\nI would be surprised if it mattered for correctness which handler is tried first. It probably does matter for performance that we try ART\u0027s handlers first,as Nicolas suggested. I think suspend checks and soon userfaulfd faults will go through here, and both are hopefully much more frequent than yours, and somewhat performance-critical.",
      "parentUuid": "0794f505_6a311212",
      "range": {
        "startLine": 351,
        "startChar": 2,
        "endLine": 365,
        "endChar": 0
      },
      "revId": "a0e452bb979ea8605d3ef706785ed57ae09461e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}