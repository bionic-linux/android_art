{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "64741270_0076147f",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-11-29T11:50:08Z",
      "side": 1,
      "message": "For devices that do monitor JNI invocations, this is going to have undesirable performance side effects.",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0341effc_e1a21c77",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T12:01:10Z",
      "side": 1,
      "message": "The other option is to increase the managed code size for arm64 by doing TST+BEQ/BNE.\n\nNote that monitoring JNI invocations already has undesirable performance side effects for JNI invocations. We\u0027re just adding a bit more for managed code, nterp and @FastNative. (For @FastNative, this is insignificant compared to the performance improvements since the last release.)",
      "parentUuid": "64741270_0076147f",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "310bd667_a29f8c40",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-11-29T12:04:31Z",
      "side": 1,
      "message": "Yeah, but the monitoring was implemented with the decision / tradeoff to only affect JNI invocations, nothing else.",
      "parentUuid": "0341effc_e1a21c77",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b751cb_f0966700",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T12:10:43Z",
      "side": 1,
      "message": "Well, the trade-off you\u0027re advocating is an implementation that does not affect non-JNI code but affects _all_ JNI code even if the monitoring is disabled (because we would always have to check the extra flag from somewhere else).",
      "parentUuid": "310bd667_a29f8c40",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "354ecfbc_d23fcc7c",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T12:14:05Z",
      "side": 1,
      "message": "If we decide to go with TST+BEQ/BNE, the only cost we shall incur is managed code size increase which could be mitigated by implementing implicit suspend checks.",
      "parentUuid": "97b751cb_f0966700",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e38e48_7c6fb3d0",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-11-29T13:56:06Z",
      "side": 1,
      "message": "Re: tradeoff: true, with your new CL, it will affect all JNI code. But given you\u0027re changing the goal post on JNI code (in the right direction!), I think the tradeoff should remain on the JNI side, instead of spilling the monitoring issue to more places in the code base.\n\nI think we could go with something just affect JNI, and then reach out to the OEM which requested the monitoring feature to let them know about the tradeoff and whether it\u0027s still something they\u0027re willing to take. Given all the improvements you\u0027ve made, we could consider making the monitoring a static option, eg system property (the request was for monitoring apps JNI code).",
      "parentUuid": "354ecfbc_d23fcc7c",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0642382b_43dc0098",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T15:39:17Z",
      "side": 1,
      "message": "I think we should take the hit on the arm64 (and x86/x86-64) compiled code size.\n\n  https://android-review.googlesource.com/1905055\n\nAnd then we should finally implement implicit suspend checks for arm64.",
      "parentUuid": "35e38e48_7c6fb3d0",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bdb1ad9_d0107c90",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 4
      },
      "lineNbr": 1611,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-03T12:37:10Z",
      "side": 1,
      "message": "https://android-review.googlesource.com/1905055 has been submitted and this CL has been rebased and this particular change reverted.",
      "parentUuid": "0642382b_43dc0098",
      "range": {
        "startLine": 1609,
        "startChar": 0,
        "endLine": 1611,
        "endChar": 85
      },
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd42dd3c_f625d6d0",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 4
      },
      "lineNbr": 316,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-11-29T11:50:08Z",
      "side": 1,
      "message": "why only changing this on arm64? Also, why doing this change at all?",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "320c3af0_5ad1fac7",
        "filename": "runtime/interpreter/mterp/arm64ng/main.S",
        "patchSetId": 4
      },
      "lineNbr": 316,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T12:03:27Z",
      "side": 1,
      "message": "For consistency with the other callers of `art_quick_test_suspend`.",
      "parentUuid": "fd42dd3c_f625d6d0",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7aad11d_79c4b912",
        "filename": "runtime/thread.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-11-29T11:50:08Z",
      "side": 1,
      "message": "Not really fund of putting such minor debugging feature into first-class thread state knowledge.\n\nCould we for now just make the JNI code have an extra check (for example checking a dedicated tls value) before going slow path? We could make this a memory neutral change by saving an entrypoint.\n\nWe can discuss about how best to handle this in a follow-up.",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "621e7bb1_316dba48",
        "filename": "runtime/thread.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-11-29T15:39:17Z",
      "side": 1,
      "message": "There are 20 unused bits and I want to use two of them. First, the `kMonitorJniEntryExit` which can be reused also for instrumentation. Second, I want to mark the \"flip function\" with another flag unless I determine that I can reuse the `kCheckpointRequest` for that; this shall be needed for inlining the `JniMethodEnd()`.",
      "parentUuid": "b7aad11d_79c4b912",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5e150d3_15f4feeb",
        "filename": "runtime/thread.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-12-03T12:37:10Z",
      "side": 1,
      "message": "Are you OK with this after https://android-review.googlesource.com/1905055 has been submitted?",
      "parentUuid": "621e7bb1_316dba48",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52b50107_b0e2cf70",
        "filename": "runtime/thread.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-12-03T13:36:14Z",
      "side": 1,
      "message": "Yes, assuming Hans is OK as well.",
      "parentUuid": "c5e150d3_15f4feeb",
      "revId": "be600044ce18f1182d064b257afc6700be61150e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}