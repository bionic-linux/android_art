{
  "comments": [
    {
      "key": {
        "uuid": "19f8a337_00600867",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-03-27T09:08:51Z",
      "side": 1,
      "message": "// ... for T.\n// count in in T sized units.\n// copies are ... .",
      "range": {
        "startLine": 167,
        "startChar": 25,
        "endLine": 167,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "590f7b24_0395b1b1",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T15:04:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19f8a337_00600867",
      "range": {
        "startLine": 167,
        "startChar": 25,
        "endLine": 167,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f904af03_dfb8bfa6",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2014-03-27T09:08:51Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 180,
        "startChar": 14,
        "endLine": 180,
        "endChar": 24
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "590f7b24_e3a19d13",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T15:04:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f904af03_dfb8bfa6",
      "range": {
        "startLine": 180,
        "startChar": 14,
        "endLine": 180,
        "endChar": 24
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f8a337_2009c4c0",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-03-27T06:28:29Z",
      "side": 1,
      "message": "I wonder about this comment. Do you expect that this Memmove/Memcpy can happen in parallel with access to this array resulting in reading part of the value?",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 206,
        "endChar": 63
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f91d8f5d_ba74e911",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T07:00:10Z",
      "side": 1,
      "message": "Yes, its the tearing effect that must be avoided.",
      "parentUuid": "19f8a337_2009c4c0",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 206,
        "endChar": 63
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99ec937b_64a24496",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-03-27T06:28:29Z",
      "side": 1,
      "message": "you can extend this check by \" || std::abs(dst_pos - src_pos) \u003e\u003d count",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "590f7b24_20330b25",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T07:00:10Z",
      "side": 1,
      "message": "I prefer to leave this covered by the copy forward logic below otherwise the code has to re-test it.",
      "parentUuid": "99ec937b_64a24496",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f904af03_df767f62",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1040038
      },
      "writtenOn": "2014-03-27T07:05:56Z",
      "side": 1,
      "message": "ok to me, my point was just you said memcpy is more efficient then memmove, so additional check could give one more chance for memcpy.",
      "parentUuid": "590f7b24_20330b25",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19218395_69b7ad6b",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T15:04:05Z",
      "side": 1,
      "message": "We still do forward copies for the possible cases below, for the byte copy case I expect memmove to do a faster overlap check and copy.",
      "parentUuid": "f904af03_df767f62",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99ec937b_c4deb0f4",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2014-03-27T09:10:39Z",
      "side": 1,
      "message": "const bool",
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19218395_89b2097a",
        "filename": "runtime/mirror/array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-27T15:04:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99ec937b_c4deb0f4",
      "revId": "720ba92e50109d6c634382670cedc7b25716a1b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}