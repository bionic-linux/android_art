{
  "comments": [
    {
      "key": {
        "uuid": "878b4716_e198e53e",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "This looks odd. I guess you don\u0027t care which address? But then the mirror::Class can be moved..",
      "range": {
        "startLine": 80,
        "startChar": 29,
        "endLine": 80,
        "endChar": 66
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85baae7c_72442817",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "Yeah, in this case, I don\u0027t care which address.  I wouldn\u0027t want to hit the same one by chance though.\n\nIs there some \"unique identifier address\" for the type that doesn\u0027t move?\n\nAlternatively, I can just pass 0, and deal with it in the call.",
      "parentUuid": "878b4716_e198e53e",
      "range": {
        "startLine": 80,
        "startChar": 29,
        "endLine": 80,
        "endChar": 66
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5308fc41_09811212",
        "filename": "compiler/jit/jit_compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T13:17:05Z",
      "side": 1,
      "message": "I think the vtable has been suggested before.\n\nBut what about the other types?",
      "parentUuid": "85baae7c_72442817",
      "range": {
        "startLine": 80,
        "startChar": 29,
        "endLine": 80,
        "endChar": 66
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfb933ca_4b85970f",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "a?",
      "range": {
        "startLine": 36,
        "startChar": 31,
        "endLine": 36,
        "endChar": 32
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b112cc02_69b56ff0",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfb933ca_4b85970f",
      "range": {
        "startLine": 36,
        "startChar": 31,
        "endLine": 36,
        "endChar": 32
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3cbac78_8f8f6563",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "What\u0027s the overflow story?",
      "range": {
        "startLine": 126,
        "startChar": 35,
        "endLine": 126,
        "endChar": 54
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3ffa6f_9fcf24f0",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "I don\u0027t think there is any issue.\n1) I would be impressed if we ever overflowed\n2) For the most part the field is used to detect change. So as long as the profiler pools the field, we are fine.\n3) If the counter is used as actual counter for optimizations, the overflow is trivial to handle.",
      "parentUuid": "a3cbac78_8f8f6563",
      "range": {
        "startLine": 126,
        "startChar": 35,
        "endLine": 126,
        "endChar": 54
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb4acb5f_2056d959",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T13:17:05Z",
      "side": 1,
      "message": "OK, please add that as a comment around the declaration of action_counter_.",
      "parentUuid": "ba3ffa6f_9fcf24f0",
      "range": {
        "startLine": 126,
        "startChar": 35,
        "endLine": 126,
        "endChar": 54
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d1a0127_ed440218",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "Add a helper for this, eg LockActionCounter(descriptor).",
      "range": {
        "startLine": 138,
        "startChar": 30,
        "endLine": 138,
        "endChar": 70
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31df06ed_801519bb",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d1a0127_ed440218",
      "range": {
        "startLine": 138,
        "startChar": 30,
        "endLine": 138,
        "endChar": 70
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af3ec6b4_3d3591a4",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "Ditto about helper.",
      "range": {
        "startLine": 152,
        "startChar": 2,
        "endLine": 152,
        "endChar": 74
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a4f99e_d55750ad",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af3ec6b4_3d3591a4",
      "range": {
        "startLine": 152,
        "startChar": 2,
        "endLine": 152,
        "endChar": 74
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "764b6cb4_12c233df",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "Add a comment.",
      "range": {
        "startLine": 163,
        "startChar": 1,
        "endLine": 163,
        "endChar": 55
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f85ab39_a7ca4d51",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "That is just being defensive.\nCan the dex file be potentially registered twice from the class linker?",
      "parentUuid": "764b6cb4_12c233df",
      "range": {
        "startLine": 163,
        "startChar": 1,
        "endLine": 163,
        "endChar": 55
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afbbb876_999a9325",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T13:17:05Z",
      "side": 1,
      "message": "Confirmed with Vladimir that no. Though it\u0027s ok if you want to be defensive, but please add that as a comment.",
      "parentUuid": "1f85ab39_a7ca4d51",
      "range": {
        "startLine": 163,
        "startChar": 1,
        "endLine": 163,
        "endChar": 55
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b189ea73_731398ba",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "there",
      "range": {
        "startLine": 175,
        "startChar": 8,
        "endLine": 175,
        "endChar": 9
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ed8f0b7_f9a9e38b",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b189ea73_731398ba",
      "range": {
        "startLine": 175,
        "startChar": 8,
        "endLine": 175,
        "endChar": 9
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f08ecaf_aad09228",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T12:44:53Z",
      "side": 1,
      "message": "Why not just a reference?",
      "range": {
        "startLine": 191,
        "startChar": 78,
        "endLine": 191,
        "endChar": 81
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd8ef6a1_f9497ba9",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-02-16T13:12:34Z",
      "side": 1,
      "message": "No strong reason, it felt like a little better API.\n1) The previous version might make it seem like the caller should keep the vector alive (when contrasted with the dex file).\n2) This passes the ownership, and let\u0027s this methods deal with the implementation details.  For example, future implementation might be avoid the copy without changing the callers.",
      "parentUuid": "8f08ecaf_aad09228",
      "range": {
        "startLine": 191,
        "startChar": 78,
        "endLine": 191,
        "endChar": 81
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5ca94e3_b25af758",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-16T13:17:05Z",
      "side": 1,
      "message": "We don\u0027t use \u0027\u0026\u0026\u0027 much, and TBH I dislike the overhead of remembering what it does. So if you can avoid it, great :)",
      "parentUuid": "dd8ef6a1_f9497ba9",
      "range": {
        "startLine": 191,
        "startChar": 78,
        "endLine": 191,
        "endChar": 81
      },
      "revId": "a2e04165fcdf3ef7939064471cfeef3b8d12aff4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}