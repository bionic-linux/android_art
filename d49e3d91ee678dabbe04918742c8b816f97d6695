{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e359b2c_15f89e97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "A couple of fencing issues, one repeated in all architectures. Otherwise LGTM. Thanks!",
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed4006f6_7773e726",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 3318,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "That doesn\u0027t actually suffice for an ARM64 volatile load, since a release store followed by an ordinary load followed by a fence still allows the store and load to be reordered. Unfortunately, I think this is observable by implementing Dekker\u0027s with Reference.clear() and Reference.refersTo(). (It\u0027s tempting to say you get what you deserve if you do that, but ...)\n\nSo I think we need an acquire load above, plus a fence somewhere near here to replace the one below. Unfortunate, but probably not a big deal.",
      "range": {
        "startLine": 3318,
        "startChar": 62,
        "endLine": 3318,
        "endChar": 88
      },
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "defdb73b_aebd18aa",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 3338,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "Same issue as in the armv7 case.",
      "range": {
        "startLine": 3338,
        "startChar": 4,
        "endLine": 3338,
        "endChar": 97
      },
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5247746_3a7933b5",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 3
      },
      "lineNbr": 2607,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "This presumably corresponds to\n\natomic_thread_fence(std::memory_order_acquire);\n\nin Reference_refersTo0? That\u0027s ordering the load of other (which precedes the code generated here), and the load of the forwarding address, which has also happened above. So I don\u0027t think this does the trick. On the other hand, in the ARMv7 case, we already have a fence that does above. So if I\u0027m reading this correctly, we can just delete this, and point out that the fence above does double duty.",
      "range": {
        "startLine": 2607,
        "startChar": 4,
        "endLine": 2607,
        "endChar": 97
      },
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b658e3f_26e0b928",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 3
      },
      "lineNbr": 3210,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "Same issue as armv7, though it\u0027s less important here.",
      "range": {
        "startLine": 3209,
        "startChar": 1,
        "endLine": 3210,
        "endChar": 97
      },
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898bc042_fe02d718",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 3
      },
      "lineNbr": 2755,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2021-02-03T02:03:51Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2755,
        "startChar": 4,
        "endLine": 2755,
        "endChar": 97
      },
      "revId": "d49e3d91ee678dabbe04918742c8b816f97d6695",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}