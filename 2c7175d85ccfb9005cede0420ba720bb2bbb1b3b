{
  "comments": [
    {
      "key": {
        "uuid": "89fb8b33_3ebc4911",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4716,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-09-15T17:25:53Z",
      "side": 1,
      "message": "Maybe add a kReturnReg? same for longs and other backends.",
      "range": {
        "startLine": 4716,
        "startChar": 25,
        "endLine": 4716,
        "endChar": 27
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44209a82_27735471",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4722,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-09-15T17:25:53Z",
      "side": 1,
      "message": "just a note that I had to implement this for unresolved fields:)  The interface is a bit different though.",
      "range": {
        "startLine": 4722,
        "startChar": 4,
        "endLine": 4722,
        "endChar": 17
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_05ef152e",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4722,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-15T22:57:14Z",
      "side": 1,
      "message": "Yours isn\u0027t merged, yet, though, right?",
      "parentUuid": "44209a82_27735471",
      "range": {
        "startLine": 4722,
        "startChar": 4,
        "endLine": 4722,
        "endChar": 17
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9f4cf41_0247ec88",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4722,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-09-16T14:27:25Z",
      "side": 1,
      "message": "Nope, not merged yet. We shouldn\u0027t wait for each other here . I can have a cleanup CL and unify stuff. Just wanting to point out that we need to do a similar stuff in some other place.",
      "parentUuid": "44725a92_05ef152e",
      "range": {
        "startLine": 4722,
        "startChar": 4,
        "endLine": 4722,
        "endChar": 17
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e467cecb_a5f749f8",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4722,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-16T15:55:36Z",
      "side": 1,
      "message": "What do you think about the new version that uses the parallel move resolver.\n\nI have also thought about a generic way to do the pairs: I could simply distinguish by asking the location whether it\u0027s a pair. So it would boil down to something like:\n\n HParallelMove ...\n if (target.IsPair()) {\n   move.addMove(src.low(),target.low(),To32Type(type),...)\n   move.addMove(src.high(),target.high(),To32Type(type),...)\n } else {\n   move.addMove(src, target, type, ...)\n }\n resolver-\u003eemit(move);",
      "parentUuid": "a9f4cf41_0247ec88",
      "range": {
        "startLine": 4722,
        "startChar": 4,
        "endLine": 4722,
        "endChar": 17
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "691f3755_98193983",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 4722,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-09-16T16:24:40Z",
      "side": 1,
      "message": "That\u0027s definitely better in this case as it removes duplication. For the other case (fpu \u003c-\u003e reg) I wasn\u0027t convinced about extending the resolver to handle it (just to avoid shooting ourselves in the foot, since it\u0027s a special case). \n\nI am more inclined to have a generic wrapper MoveLocation(dst, src). Produces less code :). arm64/mips64 already implements this.",
      "parentUuid": "e467cecb_a5f749f8",
      "range": {
        "startLine": 4722,
        "startChar": 4,
        "endLine": 4722,
        "endChar": 17
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9ea475e_616eb63b",
        "filename": "compiler/optimizing/intrinsics_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-09-15T17:25:53Z",
      "side": 1,
      "message": "Do we consider out to be available as a temporary? If so add a note. Otherwise we don\u0027t need to do this if out is the return register?",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 37
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0465c2c3_84a887c2",
        "filename": "compiler/optimizing/intrinsics_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-15T22:57:14Z",
      "side": 1,
      "message": "It\u0027s possible that out is a temp. Assumption here is that the callee will take care of out being already right.",
      "parentUuid": "e9ea475e_616eb63b",
      "range": {
        "startLine": 70,
        "startChar": 15,
        "endLine": 70,
        "endChar": 37
      },
      "revId": "2c7175d85ccfb9005cede0420ba720bb2bbb1b3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}