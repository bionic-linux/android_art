{
  "comments": [
    {
      "key": {
        "uuid": "e7cf4774_e3903c83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-01T10:34:13Z",
      "side": 1,
      "message": "Add bug: 69667779.",
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97b08403_5171b2ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-01T10:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7cf4774_e3903c83",
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ddbf65d_7eaf86c5",
        "filename": "compiler/optimizing/scheduler_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-01T10:34:13Z",
      "side": 1,
      "message": "Please make this a instr-\u003eIsVecOperation for being extra secure.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 165,
        "endChar": 41
      },
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446c2b06_389f2353",
        "filename": "compiler/optimizing/scheduler_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-01T10:52:33Z",
      "side": 1,
      "message": "If we do that, VecInstructions within simd loops won\u0027t be scheduled.\n\nNote, now it\u0027s secure in terms of scheduling as when a new vec instruction is introduced one will have to add it to  FOR_EACH_SCHEDULED_COMMON_INSTRUCTION (in this file) otherwise the whole instruction\u0027s block will not be scheduled.",
      "parentUuid": "6ddbf65d_7eaf86c5",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 165,
        "endChar": 41
      },
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2affb2b7_0bea95e3",
        "filename": "compiler/optimizing/scheduler_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-01T10:58:24Z",
      "side": 1,
      "message": "... and also add it to this list. I\u0027d feel much better if we just make all vec instructions a barrier.\n\nRight now, what kind of vec instructions are safe to schedule?",
      "parentUuid": "446c2b06_389f2353",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 165,
        "endChar": 41
      },
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5595e08f_7d32918b",
        "filename": "compiler/optimizing/scheduler_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-12-01T11:19:15Z",
      "side": 1,
      "message": "It is safe to schedule those VecInstructions which can\u0027t be live across an invoke or a slowpath other than SuspendCheckSlowPath. It is automatically true for those whose live range doesn\u0027t exceed the SIMD loop boundaries (as we don\u0027t have invokes/other slowpaths in a SIMD loop).\n\n(for SuspendCheck we do:\nlocations-\u003eSetCustomSlowPathCallerSaves(GetGraph()-\u003eHasSIMD() ? RegisterSet::AllFpu() : RegisterSet::Empty()); )\n\nAgain, \"if we just make all vec instructions a barrier\" that will mean that no two VecInstructions be reordered in respect to each other; thus effectively SIMD loops won\u0027t be scheduled.",
      "parentUuid": "2affb2b7_0bea95e3",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 165,
        "endChar": 41
      },
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10c84046_834a882a",
        "filename": "compiler/optimizing/scheduler_arm64.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-12-01T11:36:10Z",
      "side": 1,
      "message": "I\u0027d still feel much safer for now to just disable any vec operation to be scheduled. Diagnosing the problem wasn\u0027t trivial, and I\u0027d much prefer not opening a chance of hitting it again.\n\nAart, WDYT?",
      "parentUuid": "5595e08f_7d32918b",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 165,
        "endChar": 41
      },
      "revId": "ab47963610e8d42154234f8bec741c6a6a009f03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}