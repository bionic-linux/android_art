{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f73fd7bb_3afdd9f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-05-07T09:30:39Z",
      "side": 1,
      "message": "Other than the below comment, LGTM.",
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494ef0a7_c897b44f",
        "filename": "test/2040-huge-native-alloc/huge_native_buf.cc",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-05-07T10:38:23Z",
      "side": 1,
      "message": "Nit: 2021",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8be838cf_a2d6fe2b",
        "filename": "test/2040-huge-native-alloc/huge_native_buf.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-05-07T10:38:23Z",
      "side": 1,
      "message": "Nit: Remove space.",
      "range": {
        "startLine": 33,
        "startChar": 28,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0865591b_bc3b0c66",
        "filename": "test/2040-huge-native-alloc/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-05-07T09:30:39Z",
      "side": 1,
      "message": "Wouldn\u0027t this get optimized out by the compiler? Maybe have a static variable to hold the buffer each time?",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 5
      },
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e1c8dab_6b82e79b",
        "filename": "test/2040-huge-native-alloc/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2021-05-07T10:38:23Z",
      "side": 1,
      "message": "In theory, yes, but I don\u0027t think that this would happen in practice, because AFAIU there is no logic in the compiler that would try to optimize BufferHolder\u0027s finalizer.\n\nAlso, I think keeping references to the allocated BufferHolder objects might defeat the purpose of this test.",
      "parentUuid": "0865591b_bc3b0c66",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 5
      },
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d51dd8_b6fd88ca",
        "filename": "test/2040-huge-native-alloc/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2021-05-07T11:43:00Z",
      "side": 1,
      "message": "I\u0027m not a code optimization expert, but looking at this code snippet it looks so obvious that the objects aren\u0027t being held, so why not eliminate it ðŸ˜Š\n\nI was suggesting having a single static holder and overwriting it in the loop.",
      "parentUuid": "2e1c8dab_6b82e79b",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 5
      },
      "revId": "f0538363ad2f224ea68c8c88ce37902ef636873e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}