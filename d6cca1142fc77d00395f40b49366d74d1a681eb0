{
  "comments": [
    {
      "key": {
        "uuid": "6b0d3644_5c6d7e6f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-25T11:43:31Z",
      "side": 1,
      "message": "Bionic libs have special bind mounts to appear in /system/lib after the APEX is mounted. That\u0027s why they are in the \"bionic\" subdirectory in the APEX - it\u0027s just for storage, they\u0027re never loaded from there. Does this mean libclang_rt needs the same thing? +jiyong",
      "range": {
        "startLine": 10,
        "startChar": 28,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "897b9e62_5fe7f218",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-04-25T12:55:46Z",
      "side": 1,
      "message": "The special bind mount no longer exists. Nevertheless, I don\u0027t think we have to have the clang library in the same directory as libc and its friends. AFAIK, no one is hard-coding the path /system/lib/libclang_rt.hwasan-arm64-android.so. It is always accessed via its SONAME. So ld,config.txt is enough to locate the library under /apex/com.android.runtime/lib/",
      "parentUuid": "6b0d3644_5c6d7e6f",
      "range": {
        "startLine": 10,
        "startChar": 28,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8927697e_ab268202",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-04-26T07:07:50Z",
      "side": 1,
      "message": "Makes sense. This required adding /apex/com.android.runtime/${LIB} to search paths in various ld.config.txt files.",
      "parentUuid": "897b9e62_5fe7f218",
      "range": {
        "startLine": 10,
        "startChar": 28,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35624151_ffaf1415",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-25T11:43:31Z",
      "side": 1,
      "message": "Does this work in non-hwasan builds?",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229041ae_c1c59dcd",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-04-25T12:55:46Z",
      "side": 1,
      "message": "I think in that case (or when this is built for x86), this entry is silently ignored because the lib is disabled then.\nHowever, as I commented in the soong change, this looks dangerous as it allows people to reference disable module without being notified.\n\nI think you need to amend apex.go to support things like\n\ntarget: {\n    arm64: {\n        native_shared_libs: [...]\n    }\n}",
      "parentUuid": "35624151_ffaf1415",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb4f74f_6cf8b374",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-04-26T07:07:50Z",
      "side": 1,
      "message": "Hmm, that wouldn\u0027t be quite right either. The reason is that we don\u0027t need or want to ship the HWASAN runtime in a non-HWASANified runtime APEX. Basically what we want is: if libc depends on HWASAN, then we need to ship the HWASAN runtime in the runtime APEX.\n\nSince this seemed too special-purpose to be expressed in a .bp file, I decided to implement it directly in soong.\n\nAs a result, the changes to ART are no longer required and I\u0027ve abandoned this change.",
      "parentUuid": "229041ae_c1c59dcd",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c74e1c3b_777fb9ec",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-04-26T10:12:28Z",
      "side": 1,
      "message": "\u003e if libc depends on HWASAN, then we need to ship the HWASAN runtime in the runtime APEX.\n\nI believe that is already done by the build system. If not, it\u0027s a build system bug. Please file me a bug.",
      "parentUuid": "efb4f74f_6cf8b374",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac299cf7_0dc0d240",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-04-26T19:33:29Z",
      "side": 1,
      "message": "It is done by the build system in the case where the library is not an LL-NDK library. LL-NDK libraries are either placed in an APEX via a direct dependency or in /system/${LIB} (if not in an APEX). The HWASAN runtime is an LL-NDK library, but it was not properly specified as such (because it needs a stub to be specified in the library rule). That\u0027s what my change to prebuilts/clang fixes. As a result, it is not directly depended on by an APEX, so without my changes to Soong it is placed in /system/${LIB}, which is not what we want.\n\nWe could imagine implementing a rule such as \"if an APEX directly depends on an LL-NDK library, all of the indirect dependencies of the LL-NDK library are treated as direct dependencies, and thus placed in the APEX\". But that doesn\u0027t always seem like the right thing to do. (Imagine two APEXes, A and B, that each provide an LL-NDK library, where A\u0027s library depends on B\u0027s library. That doesn\u0027t mean that A should also package B\u0027s library.) That tells me that HWASAN is a special case and it ought to be implemented in Soong.",
      "parentUuid": "c74e1c3b_777fb9ec",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22868f5_aefbfca4",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-04-29T06:58:26Z",
      "side": 1,
      "message": "Hmm, that\u0027s weird. Since the HWASAN runtime libraries are currently reporting false for cc.IsStubs(), it should be included to any APEX that has direct or indirect dependencies to it.\n\n\u003e \"if an APEX directly depends on an LL-NDK library, all of the indirect dependencies of the LL-NDK library are treated as direct dependencies, and thus placed in the APEX\"\n\nThis works except for the indirect dependencies which themselves are stubs, isn\u0027t it?",
      "parentUuid": "ac299cf7_0dc0d240",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae3663bb_7a0a723d",
        "filename": "build/apex/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-04-29T22:58:30Z",
      "side": 1,
      "message": "\u003e Since the HWASAN runtime libraries are currently reporting false for cc.IsStubs(), it should be included to any APEX that has direct or indirect dependencies to it.\n\nYes but this means that HWASAN runtimes are currently being included in all APEXes, not just com.android.runtime.*. Because we have multiple copies of the runtime, it could lead to the runtime being loaded multiple times, which is one of the things that I\u0027m trying to fix.\n\n\u003e This works except for the indirect dependencies which themselves are stubs, isn\u0027t it?\n\nI don\u0027t know how the interaction between stubs and real libraries works, but I\u0027ve only ever seen the real library being depended on internally. Anyway, it still doesn\u0027t solve the problem of where to place each LL-NDK library.",
      "parentUuid": "d22868f5_aefbfca4",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11179575_58740a45",
        "filename": "build/apex/art_apex_test.py",
        "patchSetId": 2
      },
      "lineNbr": 450,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-04-25T11:43:31Z",
      "side": 1,
      "message": "So the old file pattern was wrong here?",
      "range": {
        "startLine": 450,
        "startChar": 49,
        "endLine": 450,
        "endChar": 56
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c3ac8b_94634959",
        "filename": "build/apex/art_apex_test.py",
        "patchSetId": 2
      },
      "lineNbr": 450,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-04-26T07:07:50Z",
      "side": 1,
      "message": "As a consequence of the previous revision of this change, the hwasan runtime was moved to the bionic directory, requiring this test update. But now that the runtime has been moved back, this change is no longer necessary.",
      "parentUuid": "11179575_58740a45",
      "range": {
        "startLine": 450,
        "startChar": 49,
        "endLine": 450,
        "endChar": 56
      },
      "revId": "d6cca1142fc77d00395f40b49366d74d1a681eb0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}