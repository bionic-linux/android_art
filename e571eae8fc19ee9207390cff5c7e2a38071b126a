{
  "comments": [
    {
      "key": {
        "uuid": "ce3acdc4_b4d06e08",
        "filename": "compiler/driver/compiler_driver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "maybe CHECK !\u003d nullptr before dereferencing?",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 44
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_577ca455",
        "filename": "compiler/driver/compiler_driver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-05T23:07:54Z",
      "side": 1,
      "message": "This is checked in the creation in common_runtime_test...",
      "parentUuid": "ce3acdc4_b4d06e08",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 44
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e3065e8_7a18a5e6",
        "filename": "compiler/driver/compiler_driver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "I\u0027ll add the extra check here anyway. It won\u0027t hurt anything.",
      "parentUuid": "ce3acdc4_577ca455",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 44
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e3065e8_65aa4a66",
        "filename": "compiler/driver/compiler_driver_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e3065e8_7a18a5e6",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 44
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1b056c_d628a2f1",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "and here? I guess maybe not, if we assert it in the super class setup.",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 49
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5eb12a_d3af7e9f",
        "filename": "compiler/oat_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e1b056c_d628a2f1",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 49
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_94d32ae3",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "should be unneeded since the -inl.h is included",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2199bcf9_23408963",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-05T23:56:39Z",
      "side": 1,
      "message": "This is needed for the DexFileUniquePtrs typedef.\nShould I put the typedef there instead?",
      "parentUuid": "ce3acdc4_94d32ae3",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e52c124_86154a61",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2199bcf9_23408963",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1b056c_1941ab68",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "I might keep a comment like the removed one for this as well: \"// Needs to be before since it accesses the runtime.\"",
      "range": {
        "startLine": 453,
        "startChar": 4,
        "endLine": 453,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e29e184_577266d2",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-05T23:56:39Z",
      "side": 1,
      "message": "The comment \u0027Needs to be before since it accesses the runtime\u0027 made no sense to me. What needs to be before what since what accesses the runtime?\n\nPerhaps I could clarify the comment: class_path_files_ and opened_dex_files_ must be deleted before the runtime because ~Runtime tears down MemMap which is needed by ~DexFile, and LogCompletionTime before ~Runtime because LogCompletionTime accesses the runtime.",
      "parentUuid": "0e1b056c_1941ab68",
      "range": {
        "startLine": 453,
        "startChar": 4,
        "endLine": 453,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5eb12a_b3bc0ada",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e29e184_577266d2",
      "range": {
        "startLine": 453,
        "startChar": 4,
        "endLine": 453,
        "endChar": 21
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1b056c_b93bd708",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 1115,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-05T23:07:54Z",
      "side": 1,
      "message": "Is this necessary? Couldn\u0027t we push the unique-ptr change through? I didn\u0027t see any big hurdles, and a local call to the function for class_path_files_ seems more contained.",
      "range": {
        "startLine": 1115,
        "startChar": 8,
        "endLine": 1115,
        "endChar": 61
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_9ad351e3",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 1115,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-05T23:52:39Z",
      "side": 1,
      "message": "Resolved in personal discussion. This is fine.",
      "parentUuid": "0e1b056c_b93bd708",
      "range": {
        "startLine": 1115,
        "startChar": 8,
        "endLine": 1115,
        "endChar": 61
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e29e184_b1519aa5",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 1198,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "we prefer not to wrap before 100 chars",
      "range": {
        "startLine": 1198,
        "startChar": 0,
        "endLine": 1198,
        "endChar": 29
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e3065e8_7ac305cd",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 1198,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "Not 80 chars, like the google style guide says? Okay.",
      "parentUuid": "6e29e184_b1519aa5",
      "range": {
        "startLine": 1198,
        "startChar": 0,
        "endLine": 1198,
        "endChar": 29
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e3065e8_e5b51abe",
        "filename": "dex2oat/dex2oat.cc",
        "patchSetId": 1
      },
      "lineNbr": 1198,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e3065e8_7ac305cd",
      "range": {
        "startLine": 1198,
        "startChar": 0,
        "endLine": 1198,
        "endChar": 29
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_745d66c6",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "does this lose some const? I assume so.",
      "range": {
        "startLine": 249,
        "startChar": 35,
        "endLine": 249,
        "endChar": 52
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_3aafc575",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-05T23:56:39Z",
      "side": 1,
      "message": "Yes, because it transfers ownership of the dex files.",
      "parentUuid": "ce3acdc4_745d66c6",
      "range": {
        "startLine": 249,
        "startChar": 35,
        "endLine": 249,
        "endChar": 52
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5eb12a_90bfbc9c",
        "filename": "runtime/class_linker.h",
        "patchSetId": 1
      },
      "lineNbr": 725,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "Should these be guarded by a lock?\n\nThey are only modified during class linker initialization. After that, boot_class_path_ is read only, and opened_dex_files_ is never read. So they don\u0027t need a lock? Should I add a comment to the code to that effect?",
      "range": {
        "startLine": 724,
        "startChar": 0,
        "endLine": 725,
        "endChar": 38
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_cb6109f3",
        "filename": "runtime/common_runtime_test.h",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "Why do these functions require the mutator_lock_?",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 113,
        "endChar": 97
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e29e184_b4186899",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-01-05T22:32:05Z",
      "side": 1,
      "message": "we have been moving away from this type of typedef\u0027ing. I\u0027m not sure if that is good or bad, looking for others opinions.\n\nOnce upon a time I did actually have one for a vector of dex files but it was removed at one point to improve readability. I used to follow google3 like style of always having a typedef for containers like this, but slowly over time those have been removed as well.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 55,
        "endChar": 56
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_3786c0fb",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-05T23:07:54Z",
      "side": 1,
      "message": "What we\u0027re losing is precision. DexFileUniquePtr doesn\u0027t state in the name that the DexFile pointer is const, for example.\n\nI think Ian was the biggest proponent of writing the actual types instead of aliases. I don\u0027t have an opinion on what\u0027s better.",
      "parentUuid": "6e29e184_b4186899",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 55,
        "endChar": 56
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_0b6831d7",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "I\u0027ll remove the typedefs. I think that will make it easier to read and recognize that we are working with std::vectors and std::unique_ptrs instead of some other kind of container or representation of pointers. The biggest downside from my point of view is that not using typedefs will lead to some long lines in the code.",
      "parentUuid": "ce3acdc4_3786c0fb",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 55,
        "endChar": 56
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5eb12a_33a01aa9",
        "filename": "runtime/dex_file.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce3acdc4_0b6831d7",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 55,
        "endChar": 56
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce3acdc4_f7a838ea",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 628,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-05T23:07:54Z",
      "side": 1,
      "message": "This is not your fault, but Google style recommends using pointers for anything that changes, and only const\u0026, and some team members defend that. I wonder whether we should move to something consistent...",
      "range": {
        "startLine": 628,
        "startChar": 34,
        "endLine": 628,
        "endChar": 62
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee5eb12a_b0c2c030",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 628,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T16:27:31Z",
      "side": 1,
      "message": "I\u0027ll fix this. I think there\u0027s a similar occurrence in dex2oat for me to fix too.",
      "parentUuid": "ce3acdc4_f7a838ea",
      "range": {
        "startLine": 628,
        "startChar": 34,
        "endLine": 628,
        "endChar": 62
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e52c124_c632220d",
        "filename": "runtime/runtime.cc",
        "patchSetId": 1
      },
      "lineNbr": 628,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2015-01-06T17:51:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee5eb12a_b0c2c030",
      "range": {
        "startLine": 628,
        "startChar": 34,
        "endLine": 628,
        "endChar": 62
      },
      "revId": "e571eae8fc19ee9207390cff5c7e2a38071b126a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}