{
  "comments": [
    {
      "key": {
        "uuid": "8781d2f4_86508811",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-08-21T08:33:39Z",
      "side": 1,
      "message": "More context here might be appreciated.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 11,
        "endChar": 14
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c09b0a98_2f3d1caa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-22T11:17:30Z",
      "side": 1,
      "message": "Done.\n\nThe testing was done using the follow up CLs.",
      "parentUuid": "8781d2f4_86508811",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 11,
        "endChar": 14
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d60aa86_4382c931",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-08-21T08:33:39Z",
      "side": 1,
      "message": "Does a more traditional pattern with non-const Alloc/Free make this harder to write?",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 169,
        "endChar": 80
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e7c3528_7f89e9cd",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-22T11:17:30Z",
      "side": 1,
      "message": "The difference is alloc/free in JIT potentially returns read-only memory.\n\nThe \"const\" is technically redundant.  It just adds compile-time checks.",
      "parentUuid": "0d60aa86_4382c931",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 169,
        "endChar": 80
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56831c8e_2061f325",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2019-08-23T14:48:28Z",
      "side": 1,
      "message": "Sorry, I\u0027m not following.\n\nThe alloc/free in JIT applies to a heap in the current process? If so, it\u0027d seem less surprising to return the writable data in the first place from the Alloc\u0027s(), then flip to the read-only variant where it makes sense. No unusual const in the Alloc / Free paths here?",
      "parentUuid": "0e7c3528_7f89e9cd",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 169,
        "endChar": 80
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb7f190f_3628c744",
        "filename": "runtime/jit/debugger_interface.cc",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-08-25T08:33:59Z",
      "side": 1,
      "message": "Is it clear why the other Alloc/Free below needs the const?\n\nThis particular pair uses heap malloc/free so returns writable memory,\nbut the signature of the methods still needs to be the same.",
      "parentUuid": "56831c8e_2061f325",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 169,
        "endChar": 80
      },
      "revId": "fbd7d0727c9d40da69bb76d5934154d28b9f4284",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}