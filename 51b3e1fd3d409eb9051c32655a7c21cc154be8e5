{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9b440190_872a3048",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "The name `EncodeInt6()` I suggested before  (similar to the existing `EncodeInt5()`) would better express the intent and we could move the `DCHECK(IsInt\u003c6\u003e(imm));` inside that helper. For example, `CAddi()` and `CAddiw()` currently lack that `DCHECK()`.\n\nOn the other hand, I can see now that the `CLui()` is rather special and needs a different `DCHECK()`.",
      "range": {
        "startLine": 841,
        "startChar": 21,
        "endLine": 841,
        "endChar": 33
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de7a065e_65159f09",
        "filename": "compiler/utils/riscv64/assembler_riscv64.cc",
        "patchSetId": 5
      },
      "lineNbr": 900,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "Unnecessary, the same `DCHECK()` is at the start of `EmitCI()`. But feel free to keep this if you want.",
      "range": {
        "startLine": 900,
        "startChar": 2,
        "endLine": 900,
        "endChar": 50
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7baa893a_dbe61e6f",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 5
      },
      "lineNbr": 2111,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "Style: `kWidth`.",
      "range": {
        "startLine": 2111,
        "startChar": 20,
        "endLine": 2111,
        "endChar": 25
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df1b231a_5e37ab21",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 5
      },
      "lineNbr": 2116,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "I\u0027d prefer `offset` in line with the function name.",
      "range": {
        "startLine": 2116,
        "startChar": 55,
        "endLine": 2116,
        "endChar": 57
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70f7988_055e21cb",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 5
      },
      "lineNbr": 2140,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "This should be `52_6` and we can simplify the code below. (Let the `EmitCM()` split it between the bits 3 and 2.)",
      "range": {
        "startLine": 2140,
        "startChar": 41,
        "endLine": 2140,
        "endChar": 47
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1951575_13a55496",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 5
      },
      "lineNbr": 2144,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "5",
      "range": {
        "startLine": 2144,
        "startChar": 18,
        "endLine": 2144,
        "endChar": 19
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4de4bc37_18ad763e",
        "filename": "compiler/utils/riscv64/assembler_riscv64.h",
        "patchSetId": 5
      },
      "lineNbr": 2158,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-02-13T16:19:03Z",
      "side": 1,
      "message": "5",
      "range": {
        "startLine": 2158,
        "startChar": 18,
        "endLine": 2158,
        "endChar": 19
      },
      "revId": "51b3e1fd3d409eb9051c32655a7c21cc154be8e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}