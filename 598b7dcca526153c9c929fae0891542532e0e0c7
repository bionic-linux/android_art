{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd1f9e0_e8209414",
        "filename": "runtime/interpreter/unstarted_runtime.cc",
        "patchSetId": 3
      },
      "lineNbr": 1682,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-22T08:54:13Z",
      "side": 1,
      "message": "Move this after `UnstartedJdkUnsafePutObjectVolatile` (same order as in the `unstarted_runtime_list.h`).",
      "revId": "598b7dcca526153c9c929fae0891542532e0e0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8f24495_7c887580",
        "filename": "runtime/interpreter/unstarted_runtime_list.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-22T08:54:13Z",
      "side": 1,
      "message": "Maybe add a TODO for cleaning up these `@Deprecated(since\u003d\"12\", forRemoval\u003dtrue)` methods.",
      "range": {
        "startLine": 83,
        "startChar": 4,
        "endLine": 83,
        "endChar": 32
      },
      "revId": "598b7dcca526153c9c929fae0891542532e0e0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c024ddb1_6242d0f7",
        "filename": "runtime/mirror/method_type.cc",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-22T08:54:13Z",
      "side": 1,
      "message": "I\u0027d prefer to keep this include first, to make sure the header file itself includes everything it needs.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 28
      },
      "revId": "598b7dcca526153c9c929fae0891542532e0e0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db2f6705_5213a8e2",
        "filename": "test/2265-const-method-type-cached/smali/ReturnMethodType.smali",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-09-22T08:54:13Z",
      "side": 1,
      "message": "I prefer `jasmin/*.j` over `smali/*.smali`, assuming there is a Java bytecode corresponding to the dex `const-method-type`.\n\nIf you keep smali, you must add the test to `knownfailures.json` for RI. If you rewrite in jasmin, you need to check if the RI has the same behavior - if not, update `knownfailures.json` anyway.",
      "revId": "598b7dcca526153c9c929fae0891542532e0e0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}