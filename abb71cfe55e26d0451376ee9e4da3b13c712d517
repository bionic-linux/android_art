{
  "comments": [
    {
      "key": {
        "uuid": "9c2ba1c2_c8af8278",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-03-10T23:24:13Z",
      "side": 1,
      "message": "Not 64 bit safe, method_obj-\u003eGetClass\u003ckVerifyNone\u003e() is 64 bit safe.",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fce81dcd_5fca4f38",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-03-11T01:26:23Z",
      "side": 1,
      "message": "I copied this code from elsewhere.  Maybe that is not 64-bit safe as well.  But, why is this not 64 bit safe?  They are all pointers.",
      "parentUuid": "9c2ba1c2_c8af8278",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_06db4b05",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-11T01:35:39Z",
      "side": 1,
      "message": "As a hard rule you shouldn\u0027t touch raw pointers in the Java heap without going through the mirror accessors. Doing so works around our ability to assert the sanity of the heap (which this code was originally a part of). Whilst Mathieu is correct that this isn\u0027t 64 bit correct, you shouldn\u0027t ever be using naked pointers into the heap without using mirror. The only exception being the GC (of which heap is part). This is also why we assert that you are holding the mutator lock.",
      "parentUuid": "fce81dcd_5fca4f38",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fce81dcd_d421d22d",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-03-12T19:34:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c2ba1c2_06db4b05",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cf1d5a2_0bcd12a3",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-03-10T23:24:13Z",
      "side": 1,
      "message": "Use VerifyClassClass? The current method you are doing is not 64 bit safe due to the class being a compressed pointer.",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf7d997_28ff3217",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-03-11T01:26:23Z",
      "side": 1,
      "message": "I will look into the compressed pointers stuff.  Wasn\u0027t aware of it.",
      "parentUuid": "3cf1d5a2_0bcd12a3",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_afc4c251",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1036486
      },
      "writtenOn": "2014-03-12T19:34:55Z",
      "side": 1,
      "message": "I\u0027m going to try VerifyClassClass(mirror::Class* c).  That looks like it might work",
      "parentUuid": "dcf7d997_28ff3217",
      "revId": "abb71cfe55e26d0451376ee9e4da3b13c712d517",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}