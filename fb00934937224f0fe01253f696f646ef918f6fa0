{
  "comments": [
    {
      "key": {
        "uuid": "4b0c370e_3de4925b",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T09:30:50Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 207,
        "startChar": 48,
        "endLine": 207,
        "endChar": 62
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c739a3_86b6d425",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T15:33:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b0c370e_3de4925b",
      "range": {
        "startLine": 207,
        "startChar": 48,
        "endLine": 207,
        "endChar": 62
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a9b6d76_4d731719",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T09:30:50Z",
      "side": 1,
      "message": "Is there any reason why HDeoptimize has SideEffects::All()? I would expect AllReads() to be enough.",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd08476c_d85ae1f0",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T15:33:11Z",
      "side": 1,
      "message": "I believe we need it to prevent splitting of reads since HDeoptimize is actually a predicated never-return instruction so any sort of splitting would cause problems.",
      "parentUuid": "3a9b6d76_4d731719",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3667062b_1ab7e0a9",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T15:39:44Z",
      "side": 1,
      "message": "What do you mean by \"splitting of reads\"?",
      "parentUuid": "fd08476c_d85ae1f0",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e1ec23f_da5479f9",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T15:43:18Z",
      "side": 1,
      "message": "I mean things like stack-allocating objects that are then read both before and after the deoptimize and similar things..",
      "parentUuid": "3667062b_1ab7e0a9",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1b43939_e202c48f",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T15:52:27Z",
      "side": 1,
      "message": "We\u0027re not stack-allocating objects at the moment. And even if we were, I don\u0027t see how that affects anything. Even if we reordered reads across a Deopt (we cannot reorder and earlier read after Deopt if that read is an environment use of the Deopt), everything should be OK. And AllReads would prevent moving stores across deopts.",
      "parentUuid": "8e1ec23f_da5479f9",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0540bd_97310269",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T15:55:46Z",
      "side": 1,
      "message": "And AllReads does not prevent GVN from eliminating reads after the Deopt with a replacement from before the Deopt.",
      "parentUuid": "f1b43939_e202c48f",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f86e234d_e82b20f8",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T16:00:09Z",
      "side": 1,
      "message": "AIUI with load-store elimination we do end up eliding the allocation of some objects and doing all operations on the stack.\n\nWRT AllReads. I guess that makes sense, I\u0027d want to look at it more closely though.\n\nAnyway this seems like something that should be explored separately. As you say it shouldn\u0027t make any difference here and this type of change is needed regardless of what the \u0027real\u0027 side-effects are.",
      "parentUuid": "f1b43939_e202c48f",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10e8eb16_aab1a25d",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-04-06T16:01:30Z",
      "side": 1,
      "message": "Well, the answer may be in https://android-review.googlesource.com/355337 but I would need to refresh my memory by looking at it thoroughly.",
      "parentUuid": "8a0540bd_97310269",
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d54626e_ce31abe1",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-06T09:24:06Z",
      "side": 1,
      "message": "I think you could just check if (!HDeoptimize()) here and avoid the changes lines 200-213?",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "631e6644_b71f2c02",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T15:33:11Z",
      "side": 1,
      "message": "No we need to Add the deoptimize node to be able to deduplicate it.",
      "parentUuid": "3d54626e_ce31abe1",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c3a11f3_77e7b1a0",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-06T16:57:13Z",
      "side": 1,
      "message": "Erf, my comment isn\u0027t at the right place, I meant line 515.",
      "parentUuid": "631e6644_b71f2c02",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d44e694d_2eaf71d3",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-06T16:57:58Z",
      "side": 1,
      "message": "And I\u0027ll rephrase again as it\u0027s getting very confusing:\n\n\"You could just check if (!HDeoptimize()) line 515 and avoid the changes lines 200-213?",
      "parentUuid": "0c3a11f3_77e7b1a0",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44750344_b140b036",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-04-06T17:08:06Z",
      "side": 1,
      "message": "I\u0027m still not sure what you mean.\n\nIf you are suggesting changing to line 514 to:\n\n```\n  if (!current-\u003eIsDeoptimize()) {\n    set-\u003eKill(current-\u003eGetSideEffects());\n  }\n```\n\nthough it will not work since there are 2 issues that prevented the removal of the redundant deoptimize. The first is that we didn\u0027t add the deoptimize instructions (line 500) and the second is that the deoptimizes were removed by other instructions due the loop back-edge.",
      "parentUuid": "d44e694d_2eaf71d3",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d01287_39bfe497",
        "filename": "compiler/optimizing/gvn.cc",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2020-04-07T13:04:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "44750344_b140b036",
      "range": {
        "startLine": 518,
        "startChar": 11,
        "endLine": 518,
        "endChar": 12
      },
      "revId": "fb00934937224f0fe01253f696f646ef918f6fa0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}