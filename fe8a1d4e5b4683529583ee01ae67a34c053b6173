{
  "comments": [
    {
      "key": {
        "uuid": "b140d043_50182cc4",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-29T11:03:45Z",
      "side": 1,
      "message": "It\u0027s a matter of personal taste, but I\u0027d use the RegisterFrom helper here, as we do in compiler/optimizing/code_generator_arm64.cc:\n\n  Register op1_reg \u003d RegisterFrom(op1, type);\n  Register op2_reg \u003d RegisterFrom(op2, type);\n\n(and pass `type` instead of `is_long` to this method).",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 293,
        "endChar": 71
      },
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1116843_5a7955a3",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-01-29T12:05:57Z",
      "side": 1,
      "message": "Three instructions are necessary, but we can spare one conditional instruction by using an arithmetic shift.\n\n__ Sub(out, op1, op2, SetFlags);\n__ Asr(out, out, op1.size() - 1);\n// At this point `out` contains:\n//   * -1 if op1 \u003c op2\n//   * 0 otherwise\n// Now fix the result when op1 \u003e op2.\n__ Cinc(out, out, gt);",
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "112fdc8d_6b8ea11e",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-01-29T12:17:50Z",
      "side": 1,
      "message": "This doesn\u0027t work due to arithmetic overflows: INT_MIN \u003c INT_MAX but (INT_MIN - INT_MAX) \u003e\u003e 31 \u003d\u003d 0.",
      "parentUuid": "f1116843_5a7955a3",
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71fc982b_de1fa548",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-01-29T13:15:32Z",
      "side": 1,
      "message": "You are right it would only work for unsigned arithmetic.\n\nThen would this sequence be clearer?\n\n    __ Cmp();\n    __ Cset(out, ne);      // If not equal, the result is -1 or +1.\n    __ Cneg(out, out, lt); // Negate +1 to -1 when op1 \u003c op2.",
      "parentUuid": "112fdc8d_6b8ea11e",
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1116843_9a8ecde4",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2016-01-29T13:26:14Z",
      "side": 1,
      "message": "Not even sure it would work for unsigned arithmetic. I need to double check all this. Anyway it does not matter here.",
      "parentUuid": "71fc982b_de1fa548",
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d139c4d1_712578ec",
        "filename": "compiler/optimizing/intrinsics_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-29T11:03:45Z",
      "side": 1,
      "message": "Nit: extra white space.",
      "range": {
        "startLine": 297,
        "startChar": 18,
        "endLine": 297,
        "endChar": 28
      },
      "revId": "fe8a1d4e5b4683529583ee01ae67a34c053b6173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}