{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "01963eef_b8a83302",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 6548,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2024-04-30T09:58:17Z",
      "side": 1,
      "message": "Should this be super_class-\u003eShouldHaveImt()? I just looked at ShouldHaveImt and we have a special case for abstract array classes (``(IsAbstract\u003ckVerifyFlags\u003e() \u0026\u0026 IsArrayClass\u003ckVerifyFlags\u003e())``). Do we miss checking against some abstract array classes if we skip all abstract classes?",
      "range": {
        "startLine": 6548,
        "startChar": 11,
        "endLine": 6548,
        "endChar": 36
      },
      "revId": "55fbd2347156312a7f4b5afdc1818af699eae831",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52920b25_50346ed2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 6548,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-04-30T10:01:03Z",
      "side": 1,
      "message": "Given the super class of an array is always j.l.Object, `super_class` will never be an array here.",
      "parentUuid": "01963eef_b8a83302",
      "range": {
        "startLine": 6548,
        "startChar": 11,
        "endLine": 6548,
        "endChar": 36
      },
      "revId": "55fbd2347156312a7f4b5afdc1818af699eae831",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26304a0e_71fea495",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 6549,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-30T10:10:42Z",
      "side": 1,
      "message": "`DCHECK(super_class-\u003eHasSuperClass())` before this.",
      "range": {
        "startLine": 6549,
        "startChar": 33,
        "endLine": 6549,
        "endChar": 46
      },
      "revId": "55fbd2347156312a7f4b5afdc1818af699eae831",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de31e65b_4655dbed",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 6582,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-30T10:10:42Z",
      "side": 1,
      "message": "DCHECK_IMPLIES(runtime-\u003eGetHeap()-\u003eFindSpaceFromObject(imt_owner, /*fail_ok\u003d*/true) \u003d\u003d nullptr,\n                   linear_alloc-\u003eContains(klass-\u003eGetImt(kRuntimePointerSize)));\n\nand drop the `if (kIsDebugBuild)`.",
      "range": {
        "startLine": 6581,
        "startChar": 4,
        "endLine": 6582,
        "endChar": 86
      },
      "revId": "55fbd2347156312a7f4b5afdc1818af699eae831",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}