{
  "comments": [
    {
      "key": {
        "uuid": "7b1bfc4b_8a029e67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-07-12T09:18:56Z",
      "side": 1,
      "message": "Why do we need to define a priority order?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98199a7c_af78e946",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-12T22:33:09Z",
      "side": 1,
      "message": "This was my line of thought:\n\nIf there\u0027s a ClassA in both smali and jasmin directories what does it do?\n\n1) Undefined behavior, e.g. crash error or sometimes it will work sometimes not\n2) Detect it and reject it\n3) Combine in some well-defined order\n\n#1 seems undesirable because we want to get consistent results\n#2 seems undesirable because we often want to intentionally test \"partial compilation\" / \"binary compatibility\" behavior (classes change after they are recompiled)\n#3 seems nice if we want to test something dex-specific but have the test also keep working on the RI\n\nThough mostly its because we want not-1, not-2 behavior, 3 is the only leftover reasonable choice. Upon that all I did was mention that in the comments to disambiguate it from #1.",
      "parentUuid": "7b1bfc4b_8a029e67",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84718e15_d388a5ef",
        "filename": "test/064-field-access/jasmin/SubClassUsingInaccessibleField.j",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-07-12T09:43:12Z",
      "side": 1,
      "message": "Drop one blank line.",
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb571a83_be6dfeed",
        "filename": "test/064-field-access/jasmin/SubClassUsingInaccessibleField.j",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-12T22:33:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84718e15_d388a5ef",
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6fcd93_3aa06b28",
        "filename": "test/etc/default-build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-07-12T09:43:12Z",
      "side": 1,
      "message": "Add jasmin-multidex support.",
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8425c875_9d95db64",
        "filename": "test/etc/default-build",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-12T22:33:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf6fcd93_3aa06b28",
      "revId": "2706c28d2b60c682cc1304d18b8fc00ac4954490",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}