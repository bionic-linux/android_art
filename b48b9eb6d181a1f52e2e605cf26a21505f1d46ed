{
  "comments": [
    {
      "key": {
        "uuid": "3c52b523_90cfb9a1",
        "filename": "compiler/common_compiler_test.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-03-01T04:40:12Z",
      "side": 1,
      "message": "might have left as ERROR if not FATAL, since its pretty serious if it isn\u0027t there",
      "range": {
        "startLine": 243,
        "startChar": 3,
        "endLine": 243,
        "endChar": 16
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c8801e4_9bd4a332",
        "filename": "compiler/common_compiler_test.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-01T04:49:11Z",
      "side": 1,
      "message": "Given we only have host working, and for host cache flushes aren\u0027t necessary a warning seemed appropriate.",
      "parentUuid": "3c52b523_90cfb9a1",
      "range": {
        "startLine": 243,
        "startChar": 3,
        "endLine": 243,
        "endChar": 16
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_5ebf0ab2",
        "filename": "compiler/common_compiler_test.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1010121
      },
      "writtenOn": "2014-03-01T10:22:51Z",
      "side": 1,
      "message": "We can fix this properly. Clang does have access to libgcc, which provides __clear_cache (without the __builtin_ prefix, but with the same functionality otherwise).\n\nIMO this should be\n#if GCC_VERSION \u003e\u003d 40303\n__builtin___clear_cache....\n#elif defined(__clang__)\n__clear_cache(reinterpret_cast.....\n#else\nLOG(FATAL) \u003c\u003c \"UNIMPLEMENTED...\n#endif",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 243,
        "endChar": 49
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_70e67d99",
        "filename": "compiler/common_compiler_test.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-01T18:59:54Z",
      "side": 1,
      "message": "Agreed, what\u0027s the status of __clear_cache with compiler-rt?",
      "parentUuid": "7c58ad41_5ebf0ab2",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 243,
        "endChar": 49
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c58ad41_e3150999",
        "filename": "runtime/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-01T03:17:46Z",
      "side": 1,
      "message": "Note for the uninitiated,  we can\u0027t just use LOCAL_CLANG as the result of the define are eval-ed meaning the eval time version of LOCAL_CLANG rather than the version where the other definitions occur is used.",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 306,
        "endChar": 37
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_50d94167",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 864,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-03-01T04:40:12Z",
      "side": 1,
      "message": "curious",
      "range": {
        "startLine": 864,
        "startChar": 33,
        "endLine": 864,
        "endChar": 74
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_f0bf0ddd",
        "filename": "runtime/gc/collector/mark_sweep.cc",
        "patchSetId": 1
      },
      "lineNbr": 864,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-03-01T04:49:11Z",
      "side": 1,
      "message": "comparison of different types, const !\u003d non-const. Definitely a curious one.",
      "parentUuid": "3c52b523_50d94167",
      "range": {
        "startLine": 864,
        "startChar": 33,
        "endLine": 864,
        "endChar": 74
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c52b523_30dec551",
        "filename": "runtime/zip_archive_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-03-01T04:40:12Z",
      "side": 1,
      "message": "yeah, clang!",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 57
      },
      "revId": "b48b9eb6d181a1f52e2e605cf26a21505f1d46ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}