{
  "comments": [
    {
      "key": {
        "uuid": "a3df33aa_7722e1d3",
        "filename": "runtime/barrier.h",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2018-12-07T09:48:19Z",
      "side": 1,
      "message": "Can this use RETURNS_CAPABILITY(lock_)?\n\nThe REQUIRES(GetLock()) pattern reads awkwardly. \n\nhttps://clang.llvm.org/docs/ThreadSafetyAnalysis.html#private-mutexes",
      "range": {
        "startLine": 80,
        "startChar": 2,
        "endLine": 80,
        "endChar": 19
      },
      "revId": "365a64b2085392f4d625725793f10f50f191853c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b59ee68c_2b2911b4",
        "filename": "runtime/barrier.h",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-12-07T20:43:43Z",
      "side": 1,
      "message": "Note that this doesn\u0027t make it better because of the unique_ptr. I haven\u0027t found a way to just use lock_ consistently (because the annotations don\u0027t understand !*lock_), so I thought that a consistent GetLock looks better than lock_.get() everywhere.\n\n(Obviously I could drop the unique_ptr and use a straight pointer, if you prefer.)",
      "parentUuid": "a3df33aa_7722e1d3",
      "range": {
        "startLine": 80,
        "startChar": 2,
        "endLine": 80,
        "endChar": 19
      },
      "revId": "365a64b2085392f4d625725793f10f50f191853c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}