{
  "comments": [
    {
      "key": {
        "uuid": "d1941fa8_46ebf123",
        "filename": "tools/ahat/src/heapdump/AhatClassInstance.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "You can remove this and replace src with AhatClassInstance.this below.",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a291dfa2_545fad76",
        "filename": "tools/ahat/src/heapdump/AhatClassObj.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 34
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73571d49_27191d08",
        "filename": "tools/ahat/src/heapdump/AhatInstance.java",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "This might be clearer as\n\nreturn mHardReverseReferences !\u003d null ? mHardReverseReferences : Collections.emptyList()\n\nand similarly with getSoftReverseReferences().",
      "range": {
        "startLine": 279,
        "startChar": 4,
        "endLine": 283,
        "endChar": 16
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a1425b1_00ab8216",
        "filename": "tools/ahat/src/heapdump/DominatorReferenceIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "This implementation requires that you call hasNext() before every call to next(), which is very weird behavior for an Iterator.  It also is supposed to throw NoSuchElementException if called when there\u0027s no next element.  You could fix both problems by wrapping with a hasNext() call:\n\nif (hasNext()) {\n  // current code\n} else {\n  throw new NoSuchElementException();\n}",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 30
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1945a954_eebff6a1",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-07-19T11:00:45Z",
      "side": 1,
      "message": "Given that this is a standalone dominators computation, it\u0027s probably worth moving into its own package, e.g. com.android.ahat.dominators.",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ed9d021_e6ec9393",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "No need to mark this static, interfaces are always static.",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 32
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f99f73d0_614d75f7",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "nit: node\u0027s",
      "range": {
        "startLine": 56,
        "startChar": 19,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cc9ad7a_9558e44f",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "Is it possible we\u0027ll have to deal with more than 2 billion nodes in a heap dump?  I assume not, but it\u0027s worth considering.",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 18
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d41e66eb_f21db0c8",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "Should this say \"domid \u003c domS.id\"?",
      "range": {
        "startLine": 82,
        "startChar": 18,
        "endLine": 82,
        "endChar": 34
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1c62bf_4d9beaf2",
        "filename": "tools/ahat/src/heapdump/DominatorsComputation.java",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "Similarly, srcS.id \u003c this.id?",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f7b9248_cedadb1d",
        "filename": "tools/ahat/test/DominatorsTest.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1042885
      },
      "writtenOn": "2017-07-19T15:56:45Z",
      "side": 1,
      "message": "General comment on this file: The ASCII art for the object relationships is super helpful.  Nicely done.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 12
      },
      "revId": "03225baa008a9aa3f0a2dbcceebf16ea90b11db9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}