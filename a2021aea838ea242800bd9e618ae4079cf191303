{
  "comments": [
    {
      "key": {
        "uuid": "b0598aea_4b52596c",
        "filename": "runtime/art_method.h",
        "patchSetId": 2
      },
      "lineNbr": 545,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "Why not memcpy()?",
      "range": {
        "startLine": 545,
        "startChar": 4,
        "endLine": 545,
        "endChar": 11
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705392ca_699721c2",
        "filename": "runtime/check_jni.cc",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "Check that m-\u003eGetDeclaringClass() is a Class.\nCheck if m is in m-\u003eGetDeclaringClass()-\u003e{direct,virtual}_methods_.",
      "range": {
        "startLine": 1008,
        "startChar": 7,
        "endLine": 1008,
        "endChar": 31
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0598aea_2eeb6bf4",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 2534,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "This initializes only the first element of the array. Use std::fill_n().",
      "range": {
        "startLine": 2532,
        "startChar": 0,
        "endLine": 2534,
        "endChar": 6
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705392ca_29336971",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 3792,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 3792,
        "startChar": 2,
        "endLine": 3792,
        "endChar": 96
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7011d208_13a66c8b",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 4642,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "Pasted \"std::vector\" by mistake?",
      "range": {
        "startLine": 4642,
        "startChar": 44,
        "endLine": 4642,
        "endChar": 55
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0598aea_8e2b7faf",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 4670,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "!miranda_methods.empty()",
      "range": {
        "startLine": 4670,
        "startChar": 6,
        "endLine": 4670,
        "endChar": 29
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0598aea_ae30bb17",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 4685,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "I\u0027m not a big fan of the post-increment operator. I\u0027d prefer \"++out\" on its own later.",
      "range": {
        "startLine": 4685,
        "startChar": 8,
        "endLine": 4685,
        "endChar": 15
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0598aea_4e26e7e5",
        "filename": "runtime/stride_iterator.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "Add std::iterator\u003c\u003e as a base class (or specialize std::iterator_traits\u003c\u003e).",
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705392ca_e9feb1e5",
        "filename": "runtime/utils.h",
        "patchSetId": 2
      },
      "lineNbr": 597,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-30T20:22:12Z",
      "side": 1,
      "message": "The name should better reflect that it specifies the range [begin_it, end_it). (\"IteratorRange\"? That doesn\u0027t sound right.)",
      "range": {
        "startLine": 597,
        "startChar": 6,
        "endLine": 597,
        "endChar": 18
      },
      "revId": "a2021aea838ea242800bd9e618ae4079cf191303",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}