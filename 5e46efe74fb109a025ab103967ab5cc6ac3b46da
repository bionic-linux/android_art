{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8fad5d8_ab04d6d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:24:09Z",
      "side": 1,
      "message": "Thanks! lgtm.",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "878807a0_15529b41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-04T09:59:22Z",
      "side": 1,
      "message": "Vladimir, OK to land this?",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00240f74_72210e27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-07T14:33:33Z",
      "side": 1,
      "message": "Vladimir and I chatted and agreed we are going to not land this and use another bit in access flags for the feature this CL was used for (clean memory for boot image ArtMethod).\n\nI did a pmd run with the CL, the method ArtMethod::GetDexFile mentioned in https://android-review.googlesource.com/328772 isn\u0027t in the top hot method anymore:\n\n     1.72%     1.72%  PmdThread 19     libart.so                  [.] art::CodeInfo::DecodeInlineInfoOnly                                                                                           ◆\n     1.45%     1.45%  HeapTaskDaemon   libart.so                  [.] art::gc::collector::ConcurrentCopying::Process\u003ctrue\u003e                                                                          ▒\n     1.39%     1.39%  PmdThread 19     boot.oat                   [.] oatexec+0xffffffff9011ed7c                                                                                                    ▒\n     0.95%     0.95%  PmdThread 19     libart.so                  [.] art::OatQuickMethodHeader::GetFrameInfo                                                                                       ▒\n     0.81%     0.81%  PmdThread 19     libart.so                  [.] art::CodeInfo::GetStackMapForNativePcOffset                                                                                   ▒\n     0.68%     0.68%  HeapTaskDaemon   libart.so                  [.] art::gc::collector::ConcurrentCopying::Copy                                                                                   ▒\n     0.67%     0.67%  main             libz-host.so               [.] inflate_fast                                                                                                                  ▒\n     0.53%     0.53%  PmdThread 19     libart.so                  [.] art::OatQuickMethodHeader::Contains                                                                                           ▒\n     0.52%     0.52%  HeapTaskDaemon   libc-2.33.so               [.] 0x0000000000080113                                                                                                            ▒\n     0.51%     0.51%  PmdThread 19     libart.so                  [.] art::StackVisitor::WalkStack\u003c(art::StackVisitor::CountTransitions)0\u003e                                                          ▒\n     0.51%     0.51%  HeapTaskDaemon   libart.so                  [.] art::gc::space::RegionSpace::PoisonDeadObjectsInUnevacuatedRegion",
      "parentUuid": "878807a0_15529b41",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddbc7f18_807ba62d",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-02T09:53:11Z",
      "side": 1,
      "message": "This immediately slows down `ArtMethod::GetDexCache()`. Did you measure the impact on essentially everything?\n\n(Except the new method linking where I\u0027m deliberately avoiding `ArtMethod::GetDexCache()` and go through the declaring class.)",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 412,
        "endChar": 1
      },
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0163a702_cb1f9a06",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-02T12:11:42Z",
      "side": 1,
      "message": "I\u0027m waiting on a golem run for this, any other benchmark you think I should run?\n\nI could also introduce a global flag on whether obsolete methods actually exist, what do you think?",
      "parentUuid": "ddbc7f18_807ba62d",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 412,
        "endChar": 1
      },
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83605543_ac7cab79",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-03T10:21:58Z",
      "side": 1,
      "message": "FYI, golem results don\u0027t show much change:\nhttps://golem.corp.goog/Revision?repository\u003dart\u0026revision\u003d17959\u0026patch\u003d16781",
      "parentUuid": "0163a702_cb1f9a06",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 412,
        "endChar": 1
      },
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403c744d_5574645b",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-02-03T16:12:51Z",
      "side": 1,
      "message": "What\u0027s this \"pmd benchmark\" that Mathieu was looking at for https://android-review.googlesource.com/328772 ?",
      "parentUuid": "83605543_ac7cab79",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 412,
        "endChar": 1
      },
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e59ec4c_132201ee",
        "filename": "runtime/art_method-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-03T17:47:21Z",
      "side": 1,
      "message": "It\u0027s still there on golem, and runs for jit / aot configurations. The patch run doesn\u0027t show a difference.",
      "parentUuid": "403c744d_5574645b",
      "range": {
        "startLine": 406,
        "startChar": 0,
        "endLine": 412,
        "endChar": 1
      },
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f627b8e_11966e42",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:24:09Z",
      "side": 1,
      "message": "just for my understanding, I suppose there aren\u0027t any free bits elsewhere to encode the stack frame size right?",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6738ab20_ef70f39b",
        "filename": "runtime/art_method.cc",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-02-07T14:39:13Z",
      "side": 1,
      "message": "We could special case the stack walking to understand an obsolete native method. Looks like it was decided it wasn\u0027t worth it at the time of obsolete method implementation.",
      "parentUuid": "7f627b8e_11966e42",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c523991c_ab66af9c",
        "filename": "runtime/instrumentation.cc",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1894735
      },
      "writtenOn": "2022-02-02T09:24:09Z",
      "side": 1,
      "message": "Maybe a DCHECK here that it is InvokeObsoleteMethodStub?",
      "revId": "5e46efe74fb109a025ab103967ab5cc6ac3b46da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}