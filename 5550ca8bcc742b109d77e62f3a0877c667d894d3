{
  "comments": [
    {
      "key": {
        "uuid": "b57c2af2_0e850fff",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-10-06T12:50:18Z",
      "side": 1,
      "message": "in",
      "range": {
        "startLine": 68,
        "startChar": 41,
        "endLine": 68,
        "endChar": 44
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953c86f3_9c5034d7",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-02T22:18:14Z",
      "side": 1,
      "message": "Why is this reading with the read barrier enabled?",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55eccecd_9322e434",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-10-05T07:59:36Z",
      "side": 1,
      "message": "You mean disabled? The cache is a root (always visited through ArtMethod), so I was assuming you wouldn\u0027t need a read barrier. Class unloading probably invalidates that, but I think it was still a WIP when this CL was started.",
      "parentUuid": "953c86f3_9c5034d7",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b6d3ced_7dfaf3a9",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-05T18:31:06Z",
      "side": 1,
      "message": "Yes, I mean disabled.\n\nGenerally, the GC roots that we visit concurrently need read barriers (particularly \"GcRoot\" ones, that\u0027s the primary reason that we invented the GcRoot type.)\n\nThis one is no different than ArtMethod::declaring_class_. So, I think this one should have the read barrier enabled.",
      "parentUuid": "55eccecd_9322e434",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "957f26e6_cd993d6f",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-10-06T08:30:38Z",
      "side": 1,
      "message": "So if this one needs a read barrier, how about the inline cache in compiled code? The compiled code will look like:\n\nr0 \u003d load the cache\nr1 \u003d load the class from r0\nr2 \u003d load the class from receiver\nr3 \u003d compare r1 and r2\ndeopt if r3 is false\n... // continue\n\nWill we need a read barrier when executing r1?",
      "parentUuid": "2b6d3ced_7dfaf3a9",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb66c411_0dae216f",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-06T17:53:31Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "957f26e6_cd993d6f",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b06c3d16_f6c36067",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-10-07T08:33:17Z",
      "side": 1,
      "message": "Any ways to prevent this? We are special casing thread stacks, could we also special case the cache?",
      "parentUuid": "eb66c411_0dae216f",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03c51f4_734c8833",
        "filename": "runtime/jit/profiling_info.cc",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-07T19:40:47Z",
      "side": 1,
      "message": "Not that I can think of.\n\nAs inlined caches can be accessed by multiple threads concurrently (not owned by a single thread), they\u0027d have to be handled in a pause, rather than an async per-thread checkpoint way, unlike stack slots. Also as there are a lot of inline caches which is roughly O(# of call sites) which is typically more than O(# of stack slots), it\u0027d increase the pause time quite a bit, which I\u0027d avoid. So I don\u0027t think it\u0027s realistic to special case them. \n\nNote we need a read barrier when loading r2 as well.",
      "parentUuid": "b06c3d16_f6c36067",
      "range": {
        "startLine": 94,
        "startChar": 54,
        "endLine": 94,
        "endChar": 73
      },
      "revId": "5550ca8bcc742b109d77e62f3a0877c667d894d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}