{
  "comments": [
    {
      "key": {
        "uuid": "442238d2_4f4a793f",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-11-09T18:12:47Z",
      "side": 1,
      "message": "Isn\u0027t this bad? The JIT threshold is configurable. So I don\u0027t think this should be constant.",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 86
      },
      "revId": "afdf8673174974bb7f8ee78c8717d24f970f44b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4f737f3_fe5ca25f",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-09T18:30:25Z",
      "side": 1,
      "message": "This should work pretty well with the configurable thresholds (regardless of their magnitude).  That was the point.  It still does the checks fairly often.  It might be delayed a bit, but not much (to be precise, at most 1/2^5 longer \u003d 3% for this constant).\n\nDifferent viewpoint: It is exactly precise with nice round binary numbers, and will round up the thresholds slightly otherwise.  For example if the threshold is at 10000, it will get triggered only after 10240 samples.\n\nThe exponential back-off part: It checks the most significant bits of the current count.  Meaning for low number (\u003c32) it will do the check every single time.  For (\u003c64) every other time, etc... the period keeps increasing.... At 100000 it will be checking every 512th time.",
      "parentUuid": "442238d2_4f4a793f",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 86
      },
      "revId": "afdf8673174974bb7f8ee78c8717d24f970f44b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07480099_7c8b0cf2",
        "filename": "runtime/jit/jit.h",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-09T18:35:27Z",
      "side": 1,
      "message": "Example (in binary):\nold_count   \u003d 0000000101010001\nnew_count \u003d 0000000101101010\nmsb_mask \u003d 0000000111110000\nHence the count changed within the top most significant bits of the old count, and we will do full check.",
      "parentUuid": "c4f737f3_fe5ca25f",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 86
      },
      "revId": "afdf8673174974bb7f8ee78c8717d24f970f44b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}