{
  "comments": [
    {
      "key": {
        "uuid": "8ba36cb2_f086e02a",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-16T18:34:23Z",
      "side": 1,
      "message": "Why adding this? Can\u0027t we get fetch it from the method instead?",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "635b2573a2aebd37036955f6fd75453c7bbbffd9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b705c17_c4e03e1e",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T16:11:00Z",
      "side": 1,
      "message": "We can probably get the number N of dex registers used in a (whole) method from the method itself, but the highlighted setting is a per-stack map value, meaning it can be different for each stack map (I only encountered cases where this number of dex registers was either N or 0 though).  Is there a way to get this information from the method?",
      "parentUuid": "8ba36cb2_f086e02a",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "635b2573a2aebd37036955f6fd75453c7bbbffd9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1acbc_802c96bb",
        "filename": "compiler/optimizing/stack_map_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T16:41:08Z",
      "side": 1,
      "message": "As discussed offline, we probably don\u0027t need to save the number of saved registers per stack map, by using a special value (say 0 or -1) for the DexRegisterMapOffset field.",
      "parentUuid": "0b705c17_c4e03e1e",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 165,
        "endChar": 64
      },
      "revId": "635b2573a2aebd37036955f6fd75453c7bbbffd9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a802f_8d8f4143",
        "filename": "oatdump/oatdump.cc",
        "patchSetId": 1
      },
      "lineNbr": 874,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2015-02-17T10:23:28Z",
      "side": 1,
      "message": "Native methods have no GC map. I think you also need to know the method is not native.",
      "range": {
        "startLine": 874,
        "startChar": 8,
        "endLine": 874,
        "endChar": 40
      },
      "revId": "635b2573a2aebd37036955f6fd75453c7bbbffd9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b705c17_249112eb",
        "filename": "oatdump/oatdump.cc",
        "patchSetId": 1
      },
      "lineNbr": 874,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-02-17T16:11:00Z",
      "side": 1,
      "message": "This shouldn\u0027t be an issue, as native methods should have a vmap offset equal to zero in the `oat_method\u0027 object, meaning `raw_code_info\u0027 would be null; thus vmap data would not be inspected for such methods.",
      "parentUuid": "2b8a802f_8d8f4143",
      "range": {
        "startLine": 874,
        "startChar": 8,
        "endLine": 874,
        "endChar": 40
      },
      "revId": "635b2573a2aebd37036955f6fd75453c7bbbffd9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}