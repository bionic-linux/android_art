{
  "comments": [
    {
      "key": {
        "uuid": "1d41c6d7_ffc8bf89",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 764,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T13:57:01Z",
      "side": 1,
      "message": "Doesn\u0027t this point to the interface method id? How come the CHECK at https://android-review.googlesource.com/#/c/245772/6/test/609-checker-inline-interface/src/Main.java@54 matches the method name?",
      "range": {
        "startLine": 764,
        "startChar": 10,
        "endLine": 764,
        "endChar": 49
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d0f22b2_d047f43d",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 764,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-06T14:01:20Z",
      "side": 1,
      "message": "It won\u0027t thanks for pointing that. Forgot to re-run the test after Roland\u0027s change. Reverting.",
      "parentUuid": "1d41c6d7_ffc8bf89",
      "range": {
        "startLine": 764,
        "startChar": 10,
        "endLine": 764,
        "endChar": 49
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdd95270_b1d23adb",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 770,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T13:57:01Z",
      "side": 1,
      "message": "Mixing range-based loop with the index looks odd. I think it should just use the index.\n\n  for (size_t index \u003d 0; index !\u003d inputs.size(); ++index) { ... }\n\nNote: No need to store inputs.size() in a local variable; just rely on scalarization.",
      "range": {
        "startLine": 767,
        "startChar": 0,
        "endLine": 770,
        "endChar": 7
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd519aaa_7c711958",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 770,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-06T14:50:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdd95270_b1d23adb",
      "range": {
        "startLine": 767,
        "startChar": 0,
        "endLine": 770,
        "endChar": 7
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d0f22b2_b04da088",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 863,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-07-06T12:40:01Z",
      "side": 1,
      "message": "Not directly related to this CL, but I noticed this while reading some of this file\u0027s code: is this normal that this case does not end with `return false;`?  Is so, I think that deserves a comment.",
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d0c66bf_8a94ab57",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 6
      },
      "lineNbr": 863,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-06T13:10:00Z",
      "side": 1,
      "message": "Oh, thanks, I think this felt through the cracks because of line 866 and 869. Will fix in another CL.",
      "parentUuid": "7d0f22b2_b04da088",
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d41c6d7_5fd8cb52",
        "filename": "test/478-checker-clinit-check-pruning/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 512,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-06T13:57:01Z",
      "side": 1,
      "message": "Strange to use plural here compared to singular in all other places.",
      "range": {
        "startLine": 512,
        "startChar": 28,
        "endLine": 512,
        "endChar": 34
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdd4f22f_9c0acd75",
        "filename": "test/478-checker-clinit-check-pruning/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 512,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-06T14:50:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d41c6d7_5fd8cb52",
      "range": {
        "startLine": 512,
        "startChar": 28,
        "endLine": 512,
        "endChar": 34
      },
      "revId": "d9faceaa8da92f4a56c2907de949081bd42faf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}