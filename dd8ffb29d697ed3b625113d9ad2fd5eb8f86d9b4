{
  "comments": [
    {
      "key": {
        "uuid": "0dd1393f_4d9eb478",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "remove whitespace",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 0
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_55a19fbd",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_4d9eb478",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 0
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_958cd76c",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "comment convention is that they are sentences and should end with a full-stop. The comments below too.",
      "range": {
        "startLine": 65,
        "startChar": 60,
        "endLine": 65,
        "endChar": 68
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_359e2378",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_958cd76c",
      "range": {
        "startLine": 65,
        "startChar": 60,
        "endLine": 65,
        "endChar": 68
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_55963f7a",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "1 line of whitespace.",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_0214070c",
        "filename": "compiler/dex/compiler_enums.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_55963f7a",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_479e9178",
        "filename": "compiler/dex/mir_graph.h",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "Rearrange to place the bit fields together.  We are sensitive to the size of the RegLocation struct - it needs to stay 64 bits to allow it to be passed in registers when possible (which is why you see it passed by value all over the place).",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_ad28a86c",
        "filename": "compiler/dex/mir_graph.h",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "2dd43d2d_479e9178",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_d5fecfd7",
        "filename": "compiler/dex/mir_graph.h",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dd43d2d_479e9178",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_cd22c48e",
        "filename": "compiler/dex/mir_graph.h",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "full-stop.",
      "range": {
        "startLine": 335,
        "startChar": 38,
        "endLine": 335,
        "endChar": 41
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_15144725",
        "filename": "compiler/dex/mir_graph.h",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_cd22c48e",
      "range": {
        "startLine": 335,
        "startChar": 38,
        "endLine": 335,
        "endChar": 41
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_3f2f2273",
        "filename": "compiler/dex/quick/gen_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 1843,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T15:59:16Z",
      "side": 1,
      "message": "Is there a better location for this?",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_0d42fc2c",
        "filename": "compiler/dex/quick/gen_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 1843,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "Sentence for comments. Although quick hasn\u0027t been following this pattern, the pattern is supposed to be that comments for functions appear at their declaration and not definition.",
      "parentUuid": "cdcac190_3f2f2273",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_c2be0fb7",
        "filename": "compiler/dex/quick/gen_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 1843,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Made into a sentence.   I am just following the rest of the file :-)",
      "parentUuid": "0dd1393f_0d42fc2c",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_8d5cccd9",
        "filename": "compiler/dex/quick/gen_loadstore.cc",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "This might be the right time to rethink the \"pair\" notion at a higher level.  I don\u0027t much like the \"low !\u003d high\" test here (though given the current setup it isn\u0027t unreasonable).  Rather than change that all in this CL, though, I should do it in a new CL.  Something like reworking MarkLive() and MarkPair to operate on RegLocations rather than individual registers so we can hide the physical storage.  The original notion behind RegLocations was to abstract away the physical location of a value, and it may make life cleaner for everyone if we also use it to hide more of the architecture-dependent storage quirks.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_9575f7a4",
        "filename": "compiler/dex/quick/gen_loadstore.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "comment as to what low_reg !\u003d high_reg implies",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 268,
        "endChar": 44
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_a2c4334d",
        "filename": "compiler/dex/quick/gen_loadstore.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_9575f7a4",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 268,
        "endChar": 44
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_92bbcdf5",
        "filename": "compiler/dex/quick/gen_loadstore.cc",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "use DCHECK",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_ad8c286c",
        "filename": "compiler/dex/quick/gen_loadstore.cc",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_92bbcdf5",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_173d6fa5",
        "filename": "compiler/dex/quick/mir_to_lir.cc",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T15:59:16Z",
      "side": 1,
      "message": "Factoring out the code, to allow overriding",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_a228b36c",
        "filename": "compiler/dex/quick/mir_to_lir.cc",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "0dd1393f_173d6fa5",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_8d4e0c52",
        "filename": "compiler/dex/quick/mir_to_lir.h",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "Comments are sentences...",
      "range": {
        "startLine": 510,
        "startChar": 0,
        "endLine": 510,
        "endChar": 39
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_554bdf42",
        "filename": "compiler/dex/quick/mir_to_lir.h",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_8d4e0c52",
      "range": {
        "startLine": 510,
        "startChar": 0,
        "endLine": 510,
        "endChar": 39
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_f741d328",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T15:59:16Z",
      "side": 1,
      "message": "Is DCHECK_NE better?",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_a77565a4",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "0dd1393f_f741d328",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_d5d36f44",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "The DCHECK_NE will give you the failing values. We prefer to use CHECK as DCHECK is only used in libartd phone boots and when running unit tests (ie you get much better coverage with a CHECK). eng builds don\u0027t imply libartd.",
      "parentUuid": "2dd43d2d_a77565a4",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_c255ef10",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dd43d2d_a77565a4",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_cd97642f",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "The compiler generally goes with DCHECK.  We get decent coverage with host cross builds using dex2oatd, and want to avoid the extra on-device cost of CHECKs.",
      "parentUuid": "cdcac190_d5d36f44",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_addae834",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 811,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "comment to explain the test",
      "range": {
        "startLine": 811,
        "startChar": 0,
        "endLine": 811,
        "endChar": 38
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_d5080ff4",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 811,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_addae834",
      "range": {
        "startLine": 811,
        "startChar": 0,
        "endLine": 811,
        "endChar": 38
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_b5d8f35f",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 1066,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "comment to explain the test",
      "range": {
        "startLine": 1066,
        "startChar": 0,
        "endLine": 1066,
        "endChar": 36
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_62805bdf",
        "filename": "compiler/dex/quick/ralloc_util.cc",
        "patchSetId": 1
      },
      "lineNbr": 1066,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_b5d8f35f",
      "range": {
        "startLine": 1066,
        "startChar": 0,
        "endLine": 1066,
        "endChar": 36
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_4de114ed",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "full-stop",
      "range": {
        "startLine": 355,
        "startChar": 31,
        "endLine": 355,
        "endChar": 32
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_2d8258ee",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "0dd1393f_4de114ed",
      "range": {
        "startLine": 355,
        "startChar": 31,
        "endLine": 355,
        "endChar": 32
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_f208c1f3",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "The \"fp\" field says nothing about what register class is being used to store the value (that is inferred from the physical register number).  Rather, it specifies what type being used.  So, do not change it here.  It\u0027s perfectly reasonable to have .fp set in a regloc, but the value is contained in core registers.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_c23bafae",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "full-stop",
      "range": {
        "startLine": 367,
        "startChar": 0,
        "endLine": 367,
        "endChar": 44
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_0d879cfd",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "2dd43d2d_c23bafae",
      "range": {
        "startLine": 367,
        "startChar": 0,
        "endLine": 367,
        "endChar": 44
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_122e9dac",
        "filename": "compiler/dex/quick/x86/fp_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "As above, don\u0027t change the .fp flag here.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_f52b0b12",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "Don\u0027t try to use the fp flag in a RegLocation to determine the register class of the physical storage.  Again, that tells how the value is being used - not how it is being held.  Use IsFpReg() on the physical register in question to determine its register class.  UpdateLoc\u0027s job is to determine if the Dalvik value in question currently exists in valid physical registers.  It\u0027s perfectly reasonable for a Dalvik int value to be held in an fp register, or a double value to be held in a pair of core registers.  UpdateLoc just finds the nearest valid location for the value - other code is responsible for making sure that the value is in the right kind of register, and correct if not.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_84a144c1",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-11T03:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_f52b0b12",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_55c87f8d",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 570,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "comments are sentences, here and below.",
      "range": {
        "startLine": 570,
        "startChar": 0,
        "endLine": 570,
        "endChar": 37
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_95adf785",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 570,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_55c87f8d",
      "range": {
        "startLine": 570,
        "startChar": 0,
        "endLine": 570,
        "endChar": 37
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_c20baf7c",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "As above, don\u0027t use loc.fp in this manner.  I think you probably just want to use reg_class here.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_50108d63",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-11T03:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dd43d2d_c20baf7c",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_4d4d94ab",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "ditto - lose the loc.fp.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_0870aa64",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-11T03:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_4d4d94ab",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_2805a62c",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 721,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "Add a TODO to unify the EvalLoc and UpdateLoc routines.  I think it should be doable once I clean up the pair mess, and historically these routines have been the source of subtle bugs.  I\u0027m a bit queasy at having multiple copies of them.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_02ebe7d4",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 743,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-01-10T20:10:06Z",
      "side": 1,
      "message": "scary, yet more todos for AllocTempDouble (currently an assert that AllocTempDouble returns a double register fails).",
      "range": {
        "startLine": 743,
        "startChar": 23,
        "endLine": 743,
        "endChar": 26
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_62597be7",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 743,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Where is that assert, so that I can fix it?",
      "parentUuid": "2dd43d2d_02ebe7d4",
      "range": {
        "startLine": 743,
        "startChar": 23,
        "endLine": 743,
        "endChar": 26
      },
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_e2622b2f",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 743,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "+1.  I really don\u0027t like this - but it\u0027s the fault of the \"pair\" mechanism.  Add a TODO to revisit this after the pair cleanup.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_359bc3e1",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T21:25:20Z",
      "side": 1,
      "message": "Invalid use of rl.fp.  Also add a TODO to reunify this with the main routine.  As far as I can tell, the only significant difference is the DCHECK that makes sure pair is set on the high reg.  That should cease to be an issue with the pair reworking.",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_286b667e",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-11T03:53:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdcac190_359bc3e1",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_b20369d5",
        "filename": "compiler/dex/quick/x86/utility_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "DCHECK_EQ",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd43d2d_e2810b38",
        "filename": "compiler/dex/quick/x86/utility_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd1393f_b20369d5",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdcac190_b23c89df",
        "filename": "compiler/dex/quick/x86/utility_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-01-10T18:50:14Z",
      "side": 1,
      "message": "If this is a placeholder, use UNIMPLEMENTED(FATAL)",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd1393f_6d6f30d3",
        "filename": "compiler/dex/quick/x86/utility_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2014-01-10T21:17:22Z",
      "side": 1,
      "message": "forgotten code :-)",
      "parentUuid": "cdcac190_b23c89df",
      "revId": "dd8ffb29d697ed3b625113d9ad2fd5eb8f86d9b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}