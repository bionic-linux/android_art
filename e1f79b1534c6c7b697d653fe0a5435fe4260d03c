{
  "comments": [
    {
      "key": {
        "uuid": "ee652062_e6673677",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-05-30T15:56:38Z",
      "side": 1,
      "message": "I still have a bad feeling about this.\nI would feel a little better if this method was static (with needed data passed by argument).",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21155de6_cf78e5d5",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-05-30T16:41:37Z",
      "side": 1,
      "message": "Quick check of the hunch:\nI think this is regressing C++ interpreter performance by 5%.",
      "parentUuid": "ee652062_e6673677",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9a4da87_47937733",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-30T16:57:43Z",
      "side": 1,
      "message": "Why would it, though? This code itself should never be executed. So this sounds like Clang \u003d bad?",
      "parentUuid": "21155de6_cf78e5d5",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68ed3d8_ffad7160",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-05-30T17:03:40Z",
      "side": 1,
      "message": "Args \u003d variables live in registers and clang is happy.\nInstance \u003d variables are access via \u0027this\u0027 pointer so they must be push to stack.\nEven thought the call is never executed, forcing things to live on stack has wider consequences beyond this statement. \n\nI think it is C++\u0027s fault.  It is one of those \"someone might took pointer to your variable in the call and modified it later\".  So C++ semantics requires whole lot of extra re-loading from memory to be sure.\n\nAnyway, regression fixed in last PS, with the addition of the static.",
      "parentUuid": "b9a4da87_47937733",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47202203_c70bf0d2",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-05-30T17:07:12Z",
      "side": 1,
      "message": "I am hoping to gradually refactor the switch interpreter into a state where it is not stressing the compiler so much, and to make it less fragile in cases like this.  I do agree that the regression was non-obvious.",
      "parentUuid": "f68ed3d8_ffad7160",
      "range": {
        "startLine": 56,
        "startChar": 17,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18558453_63547928",
        "filename": "runtime/interpreter/interpreter_switch_impl-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2019-05-30T16:20:12Z",
      "side": 1,
      "message": "Out of curiosity: This call can not be inside the lambda (to avoid the std::vector, etc..)?",
      "range": {
        "startLine": 70,
        "startChar": 8,
        "endLine": 70,
        "endChar": 21
      },
      "revId": "e1f79b1534c6c7b697d653fe0a5435fe4260d03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}