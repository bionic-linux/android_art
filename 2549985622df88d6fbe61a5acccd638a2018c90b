{
  "comments": [
    {
      "key": {
        "uuid": "60e4244c_9a82768f",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 13
      },
      "lineNbr": 398,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-01T14:05:21Z",
      "side": 1,
      "message": "This makes me think that you should find another way to notify it\u0027s megamorphic. Not having data in the inline cache for the JIT is a sign that the code is never hit, so could be optimized away with a HDeoptimize.",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 398,
        "endChar": 38
      },
      "revId": "2549985622df88d6fbe61a5acccd638a2018c90b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02da3372_dc8ce7cf",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 13
      },
      "lineNbr": 398,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-01T19:42:10Z",
      "side": 1,
      "message": "Not entirely true.\n\nIt can also be that the types are from a dex file that we don\u0027t track.  For example framework, libcore or a shared library. \n\nTo figure that out accurately we\u0027d need to add another bit to the profile.  Can be done, but not as part of this CL.\n\nLet me know if you still prefer to be explicit about the inline cache type (we can also change more, once we get there).",
      "parentUuid": "60e4244c_9a82768f",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 398,
        "endChar": 38
      },
      "revId": "2549985622df88d6fbe61a5acccd638a2018c90b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50f2791e_c95a7128",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 13
      },
      "lineNbr": 398,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-03-02T14:31:13Z",
      "side": 1,
      "message": "Ah right. So what you want is actually a way to differentiate \"code was hit, but you won\u0027t be able to inline\" (class in an other dex file, or inline cache megamorphic), and \"code was never hit\". Can we infer that from the current profile format?\n\nAlso, remind me: if you cannot encode a type id from another dex file, what do you do for the AOT inline cache? I think you should make it megamorphic, or empty.",
      "parentUuid": "02da3372_dc8ce7cf",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 398,
        "endChar": 38
      },
      "revId": "2549985622df88d6fbe61a5acccd638a2018c90b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "328abdc2_8726c61e",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 13
      },
      "lineNbr": 398,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-02T23:07:03Z",
      "side": 1,
      "message": "\u003e Ah right. So what you want is actually a way to differentiate \"code\n \u003e was hit, but you won\u0027t be able to inline\" (class in an other dex\n \u003e file, or inline cache megamorphic), and \"code was never hit\". Can\n \u003e we infer that from the current profile format?\n\nNope, not yet.\n\n \u003e Also, remind me: if you cannot encode a type id from another dex\n \u003e file, what do you do for the AOT inline cache? I think you should\n \u003e make it megamorphic, or empty.\n\nThat\u0027s a good point. Right now we might make it monomophic... We should make it megamorphic. Filed b/35927981 to address that.",
      "parentUuid": "50f2791e_c95a7128",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 398,
        "endChar": 38
      },
      "revId": "2549985622df88d6fbe61a5acccd638a2018c90b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}