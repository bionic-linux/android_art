{
  "comments": [
    {
      "key": {
        "uuid": "aa62d821_cd6e8dce",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 961,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-05-08T17:33:24Z",
      "side": 1,
      "message": "I worry that in the LPAE case we may not generated an ldrd here (or strd below) if the displacement is large. We don\u0027t generally get large classes, arrays are non-volatile, so the problem isn\u0027t huge. I think the condition should be something like: \"!HasLpae() || DisplacementFitsLdrd(displacement)\".\n\nAlternatively we could require LoadBaseDisp for k64 to never do two k32 loads.",
      "range": {
        "startLine": 961,
        "startChar": 0,
        "endLine": 961,
        "endChar": 71
      },
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ae0a8ae_a35e12c9",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 961,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-05-08T17:43:05Z",
      "side": 1,
      "message": "Since https://android-review.googlesource.com/#/c/93523/1/compiler/dex/quick/arm/utility_arm.cc it will always be LDRD/STRD, possibly preceded by an ADD. (The ADD itself could be more than a single instruction for displacements over 256KiB.)",
      "parentUuid": "aa62d821_cd6e8dce",
      "range": {
        "startLine": 961,
        "startChar": 0,
        "endLine": 961,
        "endChar": 71
      },
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa62d821_2752c224",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-05-08T13:45:21Z",
      "side": 1,
      "message": "My memory could be a bit faulty here, but I think that the clrex is not necessary.  I recall discussing with Ian a while back.  Ian, do you recall?",
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaa49887_f7e6084e",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-05-08T13:56:14Z",
      "side": 1,
      "message": "I also think it\u0027s not strictly necessary. The question is whether the performance is better with or without it. I\u0027m not a CPU engineer to know how much work the CPU has to do when another core tries to use LDREX/STREX while this one holds an exclusive lock.",
      "parentUuid": "aa62d821_2752c224",
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa62d821_4d4d5d81",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-05-08T17:33:24Z",
      "side": 1,
      "message": "The clrex shouldn\u0027t be used. clrex was added for the problem of a context switch possibly getting the exclusive flag of the previous context. clrex clears that flag and was run of part of the code starting the freshly swapped in context (ie its really an instruction meant for kernel privileges).",
      "parentUuid": "aaa49887_f7e6084e",
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaa49887_176ba471",
        "filename": "compiler/dex/quick/arm/utility_arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-05-08T17:43:05Z",
      "side": 1,
      "message": "Shall do.",
      "parentUuid": "aa62d821_4d4d5d81",
      "revId": "fce23341590f11c7382435aaba07d9b0f9077a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}