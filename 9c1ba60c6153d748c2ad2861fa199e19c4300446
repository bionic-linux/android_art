{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd5149c_74e385b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-06-10T21:16:18Z",
      "side": 1,
      "message": "this seems unlikely to be related to the libc++fs change?!\n```\n Build fingerprint: \u0027generic/cf_x86_64_phone/vsoc_x86_64:13/TM/11946648:userdebug/dev-keys\u0027 \n Revision: \u00270\u0027 \n ABI: \u0027x86_64\u0027 \n Timestamp: 2024-06-10 20:19:36.280969160+0000 \n Process uptime: 1s \n Cmdline: /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests --gtest_print_time \n pid: 6920, tid: 6920, name: main  \u003e\u003e\u003e /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests \u003c\u003c\u003c \n uid: 0 \n signal 6 (SIGABRT), code -1 (SI_QUEUE), fault addr -------- \n Abort message: \u0027InitWithoutImage: Class mismatch for Ljava/lang/String;. This is most likely the result of a broken build. Make sure that libcore and art projects match. \n  \n ----- class \u0027Ljava/lang/String;\u0027 cl\u003d0x0 ----- \n   objectSize\u003d808 (224 from super) \n   access\u003d0x0000.0011 \n   super\u003d\u0027java.lang.Class\u003cjava.lang.Object\u003e\u0027 (cl\u003d0x0) \n   interfaces (3): \n      0: java.lang.Class\u003cjava.io.Serializable\u003e (cl\u003d0x0) \n      1: java.lang.Class\u003cjava.lang.Comparable\u003e (cl\u003d0x0) \n      2: java.lang.Class\u003cjava.lang.CharSequence\u003e (cl\u003d0x0) \n   class not yet loaded \n  \n ----- class \u0027Ljava/lang/String;\u0027 cl\u003d0x0 ----- \n   objectSize\u003d720 (224 from super) \n   access\u003d0x0000.0011 \n   super\u003d\u0027java.lang.Class\u003cjava.lang.Object\u003e\u0027 (cl\u003d0x0) \n   interfaces (3): \n      0: java.lang.Class\u003cjava.io.Serializable\u003e (cl\u003d0x0) \n      1: java.lang.Class\u003cjava.lang.Comparable\u003e (cl\u003d0x0) \n      2: java.lang.Class\u003cjava.lang.CharSequence\u003e (cl\u003d0x0) \n   vtable (63 entries, 11 in super): \n      0: char java.lang.String.charAt(int) \n      1: java.util.stream.IntStream java.lang.String.chars() \n      2: int java.lang.String.codePointAt(int) \n      3: int java.lang.String.codePointBefore(int) \n      4: int java.lang.String.codePointCount(int, int) \n      5: java.util.stream.IntStream java.lang.String.codePoints() \n      6: int java.lang.String.compareTo(java.lang.Object) \n      7: int java.lang.String.compareTo(java.lang.String) \n      8: int java.lang.String.compareToIgnoreCase(java.lang.String) \n      9: java.lang.String java.lang.String.concat(java.lang.String) \n     10: boolean java.lang.String.contains(java.lang.CharSequence) \n     11: boolean java.lang.String.contentEquals(java.lang.CharSequence) \n     12: boolean java.lang.String.contentEquals(java.lang.StringBuffer) \n     13: boolean java.lang.String.endsWith(java.lang.String) \n     14: boolean java.lang.String.equals(java.lang.Object) \n     15: boolean java.lang.String.equalsIgnoreCase(java.lang.String) \n     16: void java.lang.String.getBytes(int, int, byte[], int) \n     17: byte[] java.lang.String.getBytes() \n     18: byte[] java.lang.String.getBytes(java.lang.String) \n     19: byte[] java.lang.String.getBytes(java.nio.charset.Charset) \n     20: void java.lang.String.getChars(int, int, char[], int) \n     21: void java.lang.String.getChars(char[], int) \n     22: void java.lang.String.getCharsNoCheck(int, int, char[], int) \n     23: int java.lang.String.hashCode() \n     24: int java.lang.String.indexOf(int) \n     25: int java.lang.String.indexOf(int, int) \n     26: int java.lang.String.indexOf(java.lang.String) \n     27: int java.lang.String.indexOf(java.lang.String, int) \n     28: java.lang.String java.lang.String.intern() \n     29: boolean java.lang.String.isBlank() \n     30: boolean java.lang.String.isEmpty() \n     31: int java.lang.String.lastIndexOf(int) \n     32: int java.lang.String.lastIndexOf(int, int) \n     33: int java.lang.String.lastIndexOf(java.lang.String) \n     34: int java.lang.String.lastIndexOf(java.lang.String, int) \n     35: int java.lang.String.length() \n     36: java.util.stream.Stream java.lang.String.lines() \n     37: boolean java.lang.String.matches(java.lang.String) \n     38: int java.lang.String.offsetByCodePoints(int, int) \n     39: boolean java.lang.String.regionMatches(int, java.lang.String, int, int) \n     40: boolean java.lang.String.regionMatches(boolean, int, java.lang.String, int, int) \n     41: java.lang.String java.lang.String.repeat(int) \n     42: java.lang.String java.lang.String.replace(char, char) \n     43: java.lang.String java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence) \n     44: java.lang.String java.lang.String.replaceAll(java.lang.String, java.lang.String) \n     45: java.lang.String java.lang.String.replaceFirst(java.lang.String, java.lang.String) \n     46: java.lang.String[] java.lang.String.split(java.lang.String) \n     47: java.lang.String[] java.lang.String.split(java.lang.String, int) \n     48: boolean java.lang.String.startsWith(java.lang.String) \n     49: boolean java.lang.String.startsWith(java.lang.String, int) \n     50: java.lang.String java.lang.String.strip() \n     51: java.lang.String java.lang.String.stripLeading() \n     52: java.lang.String java.lang.String.stripTrailing() \n     53: java.lang.CharSequence java.lang.String.subSequence(int, int) \n     54: java.lang.String java.lang.String.substring(int) \n     55: java.lang.String java.lang.String.substring(int, int) \n     56: char[] java.lang.String.toCharArray() \n     57: java.lang.String java.lang.String.toLowerCase() \n     58: java.lang.String java.lang.String.toLowerCase(java.util.Locale) \n     59: java.lang.String java.lang.String.toString() \n     60: java.lang.String java.lang.String.toUpperCase() \n     61: java.lang.String java.lang.String.toUpperCase(java.util.Locale) \n     62: java.lang.String java.lang.String.trim() \n   direct methods (48 entries): \n      0: void java.lang.String.\u003cclinit\u003e() \n      1: void java.lang.String.\u003cinit\u003e() \n      2: void java.lang.String.\u003cinit\u003e(int, int, char[]) \n      3: void java.lang.String.\u003cinit\u003e(java.lang.String) \n      4: void java.lang.String.\u003cinit\u003e(java.lang.StringBuffer) \n      5: void java.lang.String.\u003cinit\u003e(java.lang.StringBuilder) \n      6: void java.lang.String.\u003cinit\u003e(byte[]) \n      7: void java.lang.String.\u003cinit\u003e(byte[], int) \n      8: void java.lang.String.\u003cinit\u003e(byte[], int, int) \n      9: void java.lang.String.\u003cinit\u003e(byte[], int, int, int) \n     10: void java.lang.String.\u003cinit\u003e(byte[], int, int, java.lang.String) \n     11: void java.lang.String.\u003cinit\u003e(byte[], int, int, java.nio.charset.Charset) \n     12: void java.lang.String.\u003cinit\u003e(byte[], java.lang.String) \n     13: void java.lang.String.\u003cinit\u003e(byte[], java.nio.charset.Charset) \n     14: void java.lang.String.\u003cinit\u003e(char[]) \n     15: void java.lang.String.\u003cinit\u003e(char[], int, int) \n     16: void java.lang.String.\u003cinit\u003e(int[], int, int) \n     17: void java.lang.String.checkBoundsBeginEnd(int, int, int) \n     18: void java.lang.String.checkBoundsOffCount(int, int, int) \n     19: void java.lang.String.checkIndex(int, int) \n     20: java.lang.String java.lang.String.copyValueOf(char[]) \n     21: java.lang.String java.lang.String.copyValueOf(char[], int, int) \n     22: java.lang.String java.lang.String.doRepeat(int) \n     23: java.lang.String java.lang.String.doReplace(char, char) \n     24: java.lang.String java.lang.String.fastSubstring(int, int) \n     25: java.lang.String java.lang.String.format(java.lang.String, java.lang.Object[]) \n     26: java.lang.String java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]) \n     27: int java.lang.String.indexOf(java.lang.String, java.lang.String, int) \n     28: int java.lang.String.indexOf(char[], int, int, java.lang.String, int) \n     29: int java.lang.String.indexOf(char[], int, int, char[], int, int, int) \n     30: int java.lang.String.indexOfNonWhitespace() \n     31: int java.lang.String.indexOfSupplementary(int, int) \n     32: java.lang.String java.lang.String.join(java.lang.CharSequence, java.lang.Iterable) \n     33: java.lang.String java.lang.String.join(java.lang.CharSequence, java.lang.CharSequence[]) \n     34: int java.lang.String.lastIndexOf(java.lang.String, java.lang.String, int) \n     35: int java.lang.String.lastIndexOf(char[], int, int, java.lang.String, int) \n     36: int java.lang.String.lastIndexOf(char[], int, int, char[], int, int, int) \n     37: int java.lang.String.lastIndexOfSupplementary(int, int) \n     38: boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder) \n     39: java.lang.String java.lang.String.valueOf(char) \n     40: java.lang.String java.lang.String.valueOf(double) \n     41: java.lang.String java.lang.String.valueOf(float) \n     42: java.lang.String java.lang.String.valueOf(int) \n     43: java.lang.String java.lang.String.valueOf(long) \n     44: java.lang.String java.lang.String.valueOf(java.lang.Object) \n     45: java.lang.String java.lang.String.valueOf(boolean) \n     46: java.lang.String java.lang.String.valueOf(char[]) \n     47: java.lang.String java.lang.String.valueOf(char[], int, int) \n   static fields (3 entries): \n      0: java.util.Comparator java.lang.String.CASE_INSENSITIVE_ORDER \n      1: java.io.ObjectStreamField[] java.lang.String.serialPersistentFields \n      2: long java.lang.String.serialVersionUID \n   instance fields (2 entries): \n      0: int java.lang.String.count \n      1: int java.lang.String.hash\u0027 \n     rax 0000000000000000  rbx 0000000000001b08  rcx 00007ccc5fa140ed  rdx 0000000000000006 \n     r8  bfbc00000012810c  r9  bfbc00000012810c  r10 00007ffd94c9bb40  r11 0000000000000217 \n     r12 00007ccb0f3fca30  r13 000060f0f79ed2b4  r14 00007ffd94c9bb38  r15 0000000000001b08 \n     rdi 0000000000001b08  rsi 0000000000001b08 \n     rbp 0000000000000000  rsp 00007ffd94c9bb30  rip 00007ccc5fa140ed \n backtrace: \n       #00 pc 000000000005f0ed  /apex/com.android.runtime/lib64/bionic/libc.so (abort+205) (BuildId: d5ea6ee82324bf660434a89b617da74e) \n       #01 pc 00000000009568a9  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::Runtime::Abort(char const*)+1497) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #02 pc 000000000025ab4d  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::base::SetAborter(std::__1::function\u003cvoid (char const*)\u003e\u0026\u0026)::$_0::__invoke(char const*)+61) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #03 pc 000000000025a27c  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::base::LogMessage::~LogMessage()+492) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #04 pc 00000000006005d3  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::ClassLinker::CheckSystemClass(art::Thread*, art::Handle\u003cart::mirror::Class\u003e, char const*)+659) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #05 pc 00000000006016aa  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::ClassLinker::InitWithoutImage(std::__1::vector\u003cstd::__1::unique_ptr\u003cart::DexFile const, std::__1::default_delete\u003cart::DexFile const\u003e \u003e, std::__1::allocator\u003cstd::__1::unique_ptr\u003cart::DexFile const, std::__1::default_delete\u003cart::DexFile const\u003e \u003e \u003e \u003e, std::__1::basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e*)+4186) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #06 pc 000000000095d121  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::Runtime::Init(art::RuntimeArgumentMap\u0026\u0026)+21233) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #07 pc 000000000095fcb6  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::Runtime::Create(std::__1::vector\u003cstd::__1::pair\u003cstd::__1::basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e, void const*\u003e, std::__1::allocator\u003cstd::__1::pair\u003cstd::__1::basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e, void const*\u003e \u003e \u003e const\u0026, bool)+118) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #08 pc 0000000000b4f947  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::CommonRuntimeTestImpl::SetUp()+2567) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #09 pc 000000000028d332  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (art::CommonCompilerDriverTest::SetUp()+34) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #10 pc 000000000033b586  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (testing::Test::Run()+118) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #11 pc 000000000033c3b8  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (testing::TestInfo::Run()+424) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #12 pc 000000000033d214  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (testing::TestSuite::Run()+820) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #13 pc 000000000034c03d  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (testing::internal::UnitTestImpl::RunAllTests()+2621) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #14 pc 000000000034b49b  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (testing::UnitTest::Run()+139) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #15 pc 0000000000b6274f  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::gtest_extras::Isolate::ChildProcessFn(std::__1::tuple\u003cstd::__1::basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e, std::__1::basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e \u003e const\u0026)+1055) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #16 pc 0000000000b62b61  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::gtest_extras::Isolate::LaunchTests()+945) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #17 pc 0000000000b63ea8  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::gtest_extras::Isolate::RunAllTests()+872) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #18 pc 0000000000b6648e  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (android::gtest_extras::Isolate::Run()+2750) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #19 pc 0000000000b5b7cc  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (IsolateMain+4732) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #20 pc 0000000000b5a4b8  /data/local/tmp/art_standalone_dex2oat_tests/art_standalone_dex2oat_tests (main+104) (BuildId: 54c36b541f2fd391e1f43248273e1613) \n       #21 pc 0000000000050706  /apex/com.android.runtime/lib64/bionic/libc.so (__libc_init+86) (BuildId: d5ea6ee82324bf660434a89b617da74e) \n```",
      "revId": "9c1ba60c6153d748c2ad2861fa199e19c4300446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}