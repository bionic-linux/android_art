{
  "comments": [
    {
      "key": {
        "uuid": "2461e61f_f6b23ec9",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 5
      },
      "lineNbr": 661,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-04T09:16:40Z",
      "side": 1,
      "message": "ArtMethod",
      "range": {
        "startLine": 661,
        "startChar": 2,
        "endLine": 661,
        "endChar": 6
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d222e7_55dfdecd",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 5
      },
      "lineNbr": 674,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-04T09:16:40Z",
      "side": 1,
      "message": "Probably want to figure this one out :-)",
      "range": {
        "startLine": 673,
        "startChar": 0,
        "endLine": 674,
        "endChar": 39
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_79ef812e",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 5
      },
      "lineNbr": 674,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-08T16:16:27Z",
      "side": 1,
      "message": "It\u0027s just ugly to test, that\u0027s all. I\u0027ll have to chain deopts to be sure... :-)\n\nIt should work, as there\u0027s a transition frame in-between.",
      "parentUuid": "04d222e7_55dfdecd",
      "range": {
        "startLine": 673,
        "startChar": 0,
        "endLine": 674,
        "endChar": 39
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d222e7_75e462a1",
        "filename": "runtime/thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 235,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-04T09:16:40Z",
      "side": 1,
      "message": "why this flag when it\u0027s only for the debug version?",
      "range": {
        "startLine": 235,
        "startChar": 6,
        "endLine": 235,
        "endChar": 20
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44141a88_84629b4a",
        "filename": "runtime/thread.cc",
        "patchSetId": 5
      },
      "lineNbr": 235,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-08T16:16:27Z",
      "side": 1,
      "message": "By default the other users pull here and assume that the returned frame was pushed with the given type. In that case an assert is what we want (could argue it should be a CHECK instead of a DCHECK).\n\nFor the deopt transition, I\u0027m reusing the interpreter bridge. To then check whether it\u0027s from deopt, I try to get the top of the stack and see whether it\u0027s a single-frame deopt frame. This must not abort - because it may fail, e.g., when there\u0027s no top frame (e.g., when we\u0027re doing a normal managed-\u003einterpreted transition).\n\n\nThere are two alternatives: add another function to inspect the type of the top of the stack (also requires a \"none\" type added to the enum, or an option-type), or add another assembly bridge for single-frame deopt and not share with the regular interpreter bridge. This was the minimal change, and consistent with a couple of other places.",
      "parentUuid": "04d222e7_75e462a1",
      "range": {
        "startLine": 235,
        "startChar": 6,
        "endLine": 235,
        "endChar": 20
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2461e61f_d6af425f",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 611,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-09-04T09:16:40Z",
      "side": 1,
      "message": "If this was for inlining, the try/catch is currently Quick compiled so it won\u0027t work.",
      "range": {
        "startLine": 611,
        "startChar": 8,
        "endLine": 611,
        "endChar": 32
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0484e2ca_3a19c081",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 5
      },
      "lineNbr": 611,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-08T16:16:27Z",
      "side": 1,
      "message": "It should inline inside the Forward2 function, though, shouldn\u0027t it, and that\u0027s what I don\u0027t see.",
      "parentUuid": "2461e61f_d6af425f",
      "range": {
        "startLine": 611,
        "startChar": 8,
        "endLine": 611,
        "endChar": 32
      },
      "revId": "3abea7e48f8dc2b6d84332301b88a76e2c73acab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}