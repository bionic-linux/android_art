{
  "comments": [
    {
      "key": {
        "uuid": "169a6aee_f0a3c8d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-11-20T17:28:43Z",
      "side": 1,
      "message": "x86 doesn\u0027t special handle the shifts by 1. So I don\u0027t think this mention is appropriate here.",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 39
      },
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db11db43_6e41f71c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-20T17:35:23Z",
      "side": 1,
      "message": "x86 does special-handle Shl(x,1), see InstructionCodeGeneratorX86::GenerateShlLong(). This paragraph is about that particular case, not the other two shifts.",
      "parentUuid": "169a6aee_f0a3c8d6",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 39
      },
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b4e7783_f985bfbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-11-20T17:38:16Z",
      "side": 1,
      "message": "Oki. Thought you refer to the other shifts as well.",
      "parentUuid": "db11db43_6e41f71c",
      "range": {
        "startLine": 18,
        "startChar": 36,
        "endLine": 18,
        "endChar": 39
      },
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bfc0b2b_47f624bd",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1072549
      },
      "writtenOn": "2015-11-20T16:56:59Z",
      "side": 1,
      "message": "Vladimir, is there any example in particular that you have in mind when you mention that this is not helping?",
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b5c6f36_d339b7ae",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-11-20T17:01:39Z",
      "side": 1,
      "message": "For example the merge of shifts into binary operations!",
      "parentUuid": "5bfc0b2b_47f624bd",
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d67c5259_968efcde",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-11-20T17:26:27Z",
      "side": 1,
      "message": "I\u0027m just saying that I\u0027m not aware of any place where it would help.\n\nBtw., I see code size increase (Nexus 5: boot.oat +4KiB) but I believe it\u0027s due to register allocation as add-long declares kNoOutputOverlap while shl-long conservatively says kOutputOverlap even for constant shifts. Since the current register allocator never generates partial overlap, we could use kNoOutputOverlap instead.",
      "parentUuid": "7b5c6f36_d339b7ae",
      "revId": "f9d741e32c6f1629ce70eefc68d3363fa1cfd696",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}