{
  "comments": [
    {
      "key": {
        "uuid": "9403eb5a_9b007b71",
        "filename": "compiler/optimizing/load_store_analysis.cc",
        "patchSetId": 36
      },
      "lineNbr": 176,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "`const auto\u0026` was better here, we do not want to copy ArenaVector\u003c\u003e.\n\n(Though I sometimes explicitly create an `ArrayRef\u003cHBasicBlock* const\u003e` to reference the predecessors/successors.)",
      "range": {
        "startLine": 176,
        "startChar": 6,
        "endLine": 176,
        "endChar": 10
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550fe4f8_0b2ff35d",
        "filename": "compiler/optimizing/load_store_analysis_test.cc",
        "patchSetId": 36
      },
      "lineNbr": 1578,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "\"arr\" would imply array but you\u0027re not testing an array here. Also, class name should be different from variable name.",
      "range": {
        "startLine": 1578,
        "startChar": 3,
        "endLine": 1578,
        "endChar": 16
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a95582_8884797e",
        "filename": "compiler/optimizing/load_store_analysis_test.cc",
        "patchSetId": 36
      },
      "lineNbr": 1705,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "The test is writing 0.",
      "range": {
        "startLine": 1705,
        "startChar": 14,
        "endLine": 1705,
        "endChar": 15
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8173b643_ab911991",
        "filename": "compiler/optimizing/load_store_analysis_test.cc",
        "patchSetId": 36
      },
      "lineNbr": 1708,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "I\u0027d say that the call_func prevents the elimination of this store.",
      "range": {
        "startLine": 1708,
        "startChar": 3,
        "endLine": 1708,
        "endChar": 86
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6945e5f9_da807fc4",
        "filename": "compiler/optimizing/load_store_analysis_test.cc",
        "patchSetId": 36
      },
      "lineNbr": 1812,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "The test writes the value 0 (not 1) to a field (not array element).",
      "range": {
        "startLine": 1812,
        "startChar": 5,
        "endLine": 1812,
        "endChar": 15
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ccbdb1_c1afaf49",
        "filename": "test/530-checker-lse/src/Main.java",
        "patchSetId": 36
      },
      "lineNbr": 3754,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-10-02T16:06:46Z",
      "side": 1,
      "message": "I really don\u0027t know what\u0027s the behavior of CHECK-NOT after CHECK-DAG. For assertions like these, I prefer to have a separate CHECK-START, CHECK: NewInstance, CHECK-NOT: NewInstance to assert the right number of NewInstance. And then similar separate blocks for the other instructions you want to count. (But I would not bother for the \"before\" part and do that only for \"after\".) See for example $noinline$testNestedLoop6.",
      "range": {
        "startLine": 3754,
        "startChar": 6,
        "endLine": 3754,
        "endChar": 16
      },
      "revId": "b119f1fd56fe27f32134f403d76a7d137ee9d8a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}