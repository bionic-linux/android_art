{
  "comments": [
    {
      "key": {
        "uuid": "5724f2f2_35915356",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-05-18T23:45:21Z",
      "side": 1,
      "message": "But don\u0027t we have a force_interpreter flag we passed to the interpreter?",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5724f2f2_f5de9be6",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-05-18T23:57:35Z",
      "side": 1,
      "message": "Do you mean the stay_in_interpreter flag I introduced or something else? Either way, (1) it does not seem trivial to get that information from there to here and (2) will that be fool proof? just testing that we need or don\u0027t need the interpreter when invoking the method does not guarantee we need that here later,does it?",
      "parentUuid": "5724f2f2_35915356",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5724f2f2_352af36f",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-05-19T00:06:16Z",
      "side": 1,
      "message": "You could avoid doing the call to this method if the flag is set.\n\nWe should make it full proof. Flag is set: never leave the interpreter. Flag is not set: we can optimize.",
      "parentUuid": "5724f2f2_f5de9be6",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5724f2f2_95711f9b",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-05-19T00:08:28Z",
      "side": 1,
      "message": "Is not future-proof, though. Seb worked hard on getting changes in to speed up debugging experience, and you\u0027d *want* OSR after the debugger lost interest...\n\n(Just devil\u0027s advocate, as I advocated for the opposite before...)",
      "parentUuid": "5724f2f2_352af36f",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5724f2f2_7c98d3d9",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-05-19T03:15:15Z",
      "side": 1,
      "message": "But then we optimize the less likely case (and in fact by introducing a bit more overhead for the more likely case). I think we still need the call since the debugger may become attached after the method is called (so flag not set), but we return somehow back into the method while single-stepping and exceeding the threshold.",
      "parentUuid": "5724f2f2_352af36f",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97374a6b_271a9e5d",
        "filename": "runtime/jit/jit.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-05-19T17:55:59Z",
      "side": 1,
      "message": "OK, I think this is fine. Please add a comment that we could selectively disable osr when we\u0027re single stepping, but that\u0027s currently hard to know at this point.",
      "parentUuid": "5724f2f2_7c98d3d9",
      "range": {
        "startLine": 447,
        "startChar": 0,
        "endLine": 451,
        "endChar": 5
      },
      "revId": "3a2df94cbc1e96c4621228611c7ad91fd832819c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}