{
  "comments": [
    {
      "key": {
        "uuid": "8cda0f7f_21ea4c1d",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T20:46:33Z",
      "side": 1,
      "message": "Add a comment that we do not optimize for debuggable as we support obsolete methods.",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 93
      },
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c9418dc_8522baca",
        "filename": "compiler/optimizing/sharpening.cc",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T20:55:10Z",
      "side": 1,
      "message": "Done",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35c48a37_e5f172d5",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T20:46:33Z",
      "side": 1,
      "message": "This isn\u0027t the case anymore, is it? The method header is the one owned by the obsolete method, and you do update the jit code cache with the obsolete method. So the DCHECK below should and must hold.",
      "range": {
        "startLine": 1143,
        "startChar": 40,
        "endLine": 1146,
        "endChar": 57
      },
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "033990f3_95507a9a",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T20:55:10Z",
      "side": 1,
      "message": "Done",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "380f418d_d2ce7add",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T21:43:56Z",
      "side": 1,
      "message": "This is actually needed since the StackVisitor::WalkStack method calls this with a copy of the method that is being obsoleted. If it already saw a frame of the method then the QuickMethodHeader expected from the PC (which was updated) will be different then the one expected from the method itself (which wasn\u0027t).",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a459c50_8ad44303",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T22:17:17Z",
      "side": 1,
      "message": "I\u0027m confused here: the PC belongs to an obsolete method right? So the method_code_map should have the mapping to the obsolete method.\n\nI\u0027m also confused about the comment saying \"recured\". Why would recursion affect anything?",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edd35a61_940c6863",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T22:30:13Z",
      "side": 1,
      "message": "\u003e I\u0027m confused here: the PC belongs to an obsolete method right? So the method_code_map should have the mapping to the obsolete method.\n\u003e \n\u003e I\u0027m also confused about the comment saying \"recured\". Why would recursion affect anything?\n\nI changed the comment to hopefully be clearer about the problem. Here is another explanation.\n\nOK so we have stack\n\n| ABC\n| FOO\n| HIJ\n| FOO\n| FOO\n\nwe start iterating through it and FOO is made obsolete. After visiting the first frame FOO frame the stack is\n\n| ABC\n| Foo-Obsolete\n| HIJ\n| FOO\n| FOO\n\nand we have updated method code map to change the PC\u0027s from FOO to FOO-Obsolete\n\nOn the next FOO frame we see FOO but it has FOO-Obsoletes PC since we are going to change the method from FOO to FOO-Obsolete.\n\nThis caused a DCHECK failure here.",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f379059_1d13ea07",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 7
      },
      "lineNbr": 1146,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T22:36:34Z",
      "side": 1,
      "message": "Ah, so this is happening when we *install* the new class and walking the stack trying to find obsolete methods? Not during regular (eg exception throwing, GC, ...) stack walking?\n\nIf that\u0027s correct, then please add this as a comment. Could you somehow DCHECK it?",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3042f437_8a537a2b",
        "filename": "test/941-recurive-obsolete-jit/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 121,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T20:46:33Z",
      "side": 1,
      "message": "JIT code being GC\u0027ed.",
      "range": {
        "startLine": 121,
        "startChar": 73,
        "endLine": 121,
        "endChar": 85
      },
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2b98fd5_687b2810",
        "filename": "test/941-recurive-obsolete-jit/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 121,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T20:55:10Z",
      "side": 1,
      "message": "Done",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b32679a_08d32648",
        "filename": "test/943-private-recursive-jit/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-02-01T20:46:33Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 134,
        "startChar": 70,
        "endLine": 134,
        "endChar": 85
      },
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd079b7e_9a985156",
        "filename": "test/943-private-recursive-jit/src/Main.java",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-02-01T20:55:10Z",
      "side": 1,
      "message": "Done",
      "revId": "d18c7a4b53b92865d946f6109d6266d5d171ccdf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}