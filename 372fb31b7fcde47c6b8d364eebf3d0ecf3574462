{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7a72130a_318d6e6c",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T05:48:41Z",
      "side": 1,
      "message": "It\u0027s this line that causes dwarfdump to exit 1.",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86861e93_599c5ae6",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-12T22:10:27Z",
      "side": 1,
      "message": "```\nerror: decoding the FDE opcodes into rows failed\nerror: DW_CFA_def_cfa_offset found when CFA rule was not RegPlusOffset\n```\nfrom\nhttps://llvm.org/doxygen/DWARFDebugFrame_8cpp_source.html line 751\n\nWe do a CFI_DEF_CFA with a dwarf expression here, then later when calling shorty we use cfi_adjust_cfa_offset. Apparently the toolchain does not like that sequence.\n\ndwarfdump worked when swapping the two expressions, so CFI_DEF_CFA with a register is the last one. WDYT? \n\nWe don\u0027t clobber $spills_sp in the surrounding contexts, but if we did, we\u0027d need to have a CFI expression about it, right?",
      "parentUuid": "7a72130a_318d6e6c",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcadec3d_b6859dbb",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-13T00:35:12Z",
      "side": 1,
      "message": "044-proxy had this error message:\n+10-12 22:32:14.049 1011389 1011389 E unwind  : Attempt to set new register, but cfa is not already set to a register.\n\nthat was with PS8, the message looks related to this code.",
      "parentUuid": "86861e93_599c5ae6",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8b27666_57e072b1",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-13T07:27:11Z",
      "side": 1,
      "message": "Remove all CFI directives from `{SETUP,RESTORE}_SAVE_ARGS_ONLY_FRAME` (use plain instructions instead of INCREMENT/DECREMENT/SAVE/RESTORE macros). Then try moving the `.cfi_def_cfa_register $spills_sp` back, after the `mv sp, $z1`.\n\n(Maybe rename `{SETUP,RESTORE}_SAVE_ARGS_ONLY_FRAME` to `{SPILL,RESTORE}_ALL_ARGUMENTS` to align naming with arm64.)",
      "parentUuid": "fcadec3d_b6859dbb",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48632d6e_4bfb7137",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-17T01:09:42Z",
      "side": 1,
      "message": "That doesn\u0027t work either. \n\nCan we express \"how to get CFA\" in terms of SP, after SP is incremented by the statically-unknown nterp frame size? Or define \"how to get SP\" in terms of CFA? \n\nLike: instead of INCREASE_FRAME\u0027s .cfi_adjust_cfa_offset,\n.cfi_escape 0x16, 0x2, 6, 0x72, 0x0, 0x1c, 0x9c, 0x16, 0x1c\n\u003d CFI_VAL_EXPRESSION with SP: push SP+0, CFA-(SP+0) is offset, SP is defined as CFA-offset\n\nbut the .cfi_rel_offset statements after that don\u0027t seem to take that into account, despite being defined against SP. \n\nI could try state SP, A0, A1, etc in terms of an xREFS dwarf expression, would that be best?",
      "parentUuid": "f8b27666_57e072b1",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01202f6f_756d6b52",
        "filename": "runtime/interpreter/mterp/riscv64/invoke.S",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-17T13:35:36Z",
      "side": 1,
      "message": "The `.cfi_def_cfa_register $spills_sp` below may silence the `check_cfi` but it also provides the wrong CFI information. Please move it back and fix `{SETUP,RESTORE}_SAVE_ARGS_ONLY_FRAME` as I suggested before.\n\nI tried it locally and didn\u0027t get any errors. (I did when I moved `.cfi_def_cfa_register $spills_sp` and deliberately left `{SETUP,RESTORE}_SAVE_ARGS_ONLY_FRAME` unchanged.)",
      "parentUuid": "48632d6e_4bfb7137",
      "revId": "372fb31b7fcde47c6b8d364eebf3d0ecf3574462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}