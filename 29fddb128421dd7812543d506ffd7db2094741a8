{
  "comments": [
    {
      "key": {
        "uuid": "85dc6a18_c744c9e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Are you close to getting a regression test, or do you need help? We have a few examples of class unloading in our run-tests already.",
      "range": {
        "startLine": 9,
        "startChar": 25,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99f5030a_8950808a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1121591
      },
      "writtenOn": "2018-02-09T14:29:57Z",
      "side": 1,
      "message": "Well, I have some concerns about how a test shall be written.\nFrom this thread:\nhttps://groups.google.com/forum/#!topic/android-art/ruYhOes2BVU\n\u003eI\u0027m not quite sure, how to rewrite my reproducer as a gtest/java test (and do I need to?). The thing is, the test shall fail in case of a specific chain of events. If, for example, a classloader is not unloaded, there would be no crash so the test will pass. But that would not mean that the problem is actually fixed. And it\u0027s also not cool to force a test fail if a classloader for some reason is not unloaded, because it\u0027s another subsystem that can have its logic changed.",
      "parentUuid": "85dc6a18_c744c9e5",
      "range": {
        "startLine": 9,
        "startChar": 25,
        "endLine": 9,
        "endChar": 50
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ff1da64_8310a2df",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-02-08T19:08:00Z",
      "side": 1,
      "message": "not needed.",
      "range": {
        "startLine": 80,
        "startChar": 31,
        "endLine": 80,
        "endChar": 34
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2009147f_f9f6b349",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Please add a high level comment on why you can use kWithoutReadBarrier for the accessors below.",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c7d96fb_42dd5ecb",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1121591
      },
      "writtenOn": "2018-02-09T14:29:57Z",
      "side": 1,
      "message": "Done.\nIn .h",
      "parentUuid": "2009147f_f9f6b349",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b0dfa30_33087201",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Add a comment why \u0027super\u0027 and not \u0027klass\u0027.",
      "range": {
        "startLine": 105,
        "startChar": 22,
        "endLine": 105,
        "endChar": 27
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74601503_4e0e2c07",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Add a comment why only the super vtable (and you\u0027re not walking the chain and iterating over all their vtable).",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a42a53d_f816fcbd",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-02-08T19:08:00Z",
      "side": 1,
      "message": "We should DCHECK here that super_method doesn\u0027t have single implementation. \"Seems like\" is too fuzzy.",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5affb24_67bffdcc",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1121591
      },
      "writtenOn": "2018-02-09T14:29:57Z",
      "side": 1,
      "message": "I don\u0027t think we should DCHECK it. \"if\" condition already assumes it.",
      "parentUuid": "0a42a53d_f816fcbd",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "519ffb22_6d4ca66f",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-02-09T19:59:55Z",
      "side": 1,
      "message": "The if condition has multiple tests. Even when it falls to the else branch due to failing other tests, super_method should not have single implementation here.",
      "parentUuid": "b5affb24_67bffdcc",
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b44c4847_e971aa53",
        "filename": "runtime/cha.cc",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-02-08T19:08:00Z",
      "side": 1,
      "message": "defined",
      "range": {
        "startLine": 145,
        "startChar": 54,
        "endLine": 145,
        "endChar": 60
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "839f4f35_67152dcd",
        "filename": "runtime/cha.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2018-02-08T19:08:00Z",
      "side": 1,
      "message": "\"interface method\" here is kind of misleading. I\u0027d just say:\nreset the single-implementation methods in all its superclasses and superinterfaces if the single-implementation methods are in `alloc`.",
      "range": {
        "startLine": 114,
        "startChar": 22,
        "endLine": 114,
        "endChar": 42
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "128c8fb0_1ac726c3",
        "filename": "runtime/cha.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Can you expand the comment explaining where is the class from?",
      "range": {
        "startLine": 114,
        "startChar": 50,
        "endLine": 114,
        "endChar": 55
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ac52fc_13e28576",
        "filename": "runtime/cha.h",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "can you be more explicit?",
      "range": {
        "startLine": 115,
        "startChar": 32,
        "endLine": 115,
        "endChar": 41
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58fed753_9298fd80",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1175,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "Pass this in the constructor.",
      "range": {
        "startLine": 1175,
        "startChar": 4,
        "endLine": 1175,
        "endChar": 68
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c8678be_44fb0c74",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1182,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-02-09T11:12:07Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 1181,
        "startChar": 1,
        "endLine": 1182,
        "endChar": 16
      },
      "revId": "29fddb128421dd7812543d506ffd7db2094741a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}