{
  "comments": [
    {
      "key": {
        "uuid": "2b47db3f_b21db8d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1013855
      },
      "writtenOn": "2015-01-27T19:19:17Z",
      "side": 1,
      "message": "Just primitive types or are you going to differentiate between reference types?",
      "range": {
        "startLine": 15,
        "startChar": 30,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_58ddbd1b",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "This should just be in the Hoptimization list.",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 251,
        "endChar": 21
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578037c4_f6886037",
        "filename": "compiler/optimizing/type_analysis.cc",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "Maybe rename this to reference_type_propagation, and the other one primitive_type_propagation?",
      "range": {
        "startLine": 17,
        "startChar": 10,
        "endLine": 17,
        "endChar": 24
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_d8d0ed01",
        "filename": "compiler/optimizing/type_analysis.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "I don\u0027t understand this. HNullCheck already returns no.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 22,
        "endChar": 44
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_78e201df",
        "filename": "compiler/optimizing/type_analysis.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "No, this pass is propagating types from SSA. Another optimization should take care of \"SSA-ing\" field/array accesses.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 82
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578037c4_96856c1e",
        "filename": "compiler/optimizing/type_analysis.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "Since primitive_type_propagation only needs to reason on phis, I don\u0027t think it\u0027s worth the trouble. This pass can potentially propagate types to other instructions than phis.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 67
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_98da751e",
        "filename": "compiler/optimizing/type_analysis.cc",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "Please add: See also the phi handling in VisitBasicBlock.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 73
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97662f11_b8d739f5",
        "filename": "test/444-checker-nce/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T11:04:52Z",
      "side": 1,
      "message": "Nice test!",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "d1631933abf77f2809ba3076cab69887db8ee7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}