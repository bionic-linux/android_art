{
  "comments": [
    {
      "key": {
        "uuid": "fea9478c_c90cc732",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-09-22T16:55:33Z",
      "side": 1,
      "message": "Add documentation to this class. We should do that better in our source in general, but in this particular case, there is no cloner.cc file this belongs to, so for future readers, this is extra important.",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b49780f5_68cd29e4",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fea9478c_c90cc732",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bdb4874_93f3785d",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 32,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "/* out */ HBasicBlock** header_p, /* out */ HBasicBlock** body_p",
      "range": {
        "startLine": 32,
        "startChar": 34,
        "endLine": 32,
        "endChar": 78
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd8b1f09_9a7188cb",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 32,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bdb4874_93f3785d",
      "range": {
        "startLine": 32,
        "startChar": 34,
        "endLine": 32,
        "endChar": 78
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ec26adf_6b63114b",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "HBasicBlock* loop_header",
      "range": {
        "startLine": 71,
        "startChar": 31,
        "endLine": 71,
        "endChar": 55
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07f4b663_c1d4adc6",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ec26adf_6b63114b",
      "range": {
        "startLine": 71,
        "startChar": 31,
        "endLine": 71,
        "endChar": 55
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0da762_282ec9a4",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Suggestion: Add syntactic sugar to HBasicBlock to add several instructions at once:\n\n  AddInstructions(std::initializer_list\u003cHInstruction*\u003e instructions);",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3174dce_ea27d320",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Currently a lot of *_test files use this boiler-plate approach (e.g. bounds_check_elimination_test). So a proper fix would mean a separate patch which fixes all the occasions.",
      "parentUuid": "bd0da762_282ec9a4",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 86,
        "endChar": 65
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3e58a4c_fe43bdcc",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "each?",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 34
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9037ee1_a1a86b9b",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3e58a4c_fe43bdcc",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 34
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d9f90eb_415394bb",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "You could also used the shorter:\n\n    ArenaVector\u003cHInstruction*\u003e current_locals({phi, const_128, parameter_},\n                                              allocator_.Adapter(kArenaAllocInstruction));\n\nhere.",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 41
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50bdab49_47706ca4",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d9f90eb_415394bb",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 41
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95ed9a24_0750aa21",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 169,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "size_t",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 169,
        "endChar": 5
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b06feeb_eb2ddfb4",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 169,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95ed9a24_0750aa21",
      "range": {
        "startLine": 169,
        "startChar": 2,
        "endLine": 169,
        "endChar": 5
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54357d57_6224169d",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "This is very similar to lines 171â€“178; refactor this pattern in its own method, or better, implement a class derived from HGraphDelegateVisitor.",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 186,
        "endChar": 5
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae7544fc_cd413212",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54357d57_6224169d",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 186,
        "endChar": 5
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4170b148_57a124e0",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 190,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-09-22T16:55:33Z",
      "side": 1,
      "message": "nit: ASSERT is typically used if running the rest of the test depends on the value. So a last one by definition should be an EXPECT_TRUE (although I can see you want symmetry with L167). Likewise, is L189 really an ASSERT or an EXPECT?",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "649a490d_c78ee9fd",
        "filename": "compiler/optimizing/cloner_test.cc",
        "patchSetId": 8
      },
      "lineNbr": 190,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4170b148_57a124e0",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e8affc1_79cb1f5e",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Don\u0027t forget to remove this test. :)",
      "range": {
        "startLine": 133,
        "startChar": 75,
        "endLine": 133,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75b9d268_1ed29f5b",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-09-22T16:55:33Z",
      "side": 1,
      "message": "I like the idea of preserving how to do this somewhere. Do we have a mechanism for a test that is only run by hand or could we somehow put this in a test that generates all nodes by reflection or something of the sort?",
      "parentUuid": "6e8affc1_79cb1f5e",
      "range": {
        "startLine": 133,
        "startChar": 75,
        "endLine": 133,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3cf726a_eb869fdf",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-24T12:24:49Z",
      "side": 1,
      "message": "Usually we guard such code with a compile-time condition, disabled by default; e.g.:\n\n  // \u003cDocumentation goes here.\u003e\n  static constexpr bool kCondition \u003d false;\n\n  // ...\n\n  if (kCondition) {\n     // Test code here.\n  }\n\nSometimes, such a condition is hooked to `kIsDebugBuild` (however I\u0027m not sure we want to do this here).",
      "parentUuid": "75b9d268_1ed29f5b",
      "range": {
        "startLine": 133,
        "startChar": 75,
        "endLine": 133,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bea8745d_5433cf7e",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3cf726a_eb869fdf",
      "range": {
        "startLine": 133,
        "startChar": 75,
        "endLine": 133,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "023fdaba_f78c454f",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 8
      },
      "lineNbr": 2856,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Maybe refactor this into a ReplaceAndRemovePhiWith method?",
      "range": {
        "startLine": 2852,
        "startChar": 0,
        "endLine": 2856,
        "endChar": 26
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9394416e_5b7af1bb",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 8
      },
      "lineNbr": 2856,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "023fdaba_f78c454f",
      "range": {
        "startLine": 2852,
        "startChar": 0,
        "endLine": 2856,
        "endChar": 26
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a878419_1fe840d1",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 8
      },
      "lineNbr": 2863,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Exercise and verify this in compiler/optimizing/cloner_test.cc.",
      "range": {
        "startLine": 2863,
        "startChar": 8,
        "endLine": 2863,
        "endChar": 60
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cefe560_b7e3023c",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 8
      },
      "lineNbr": 2863,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a878419_1fe840d1",
      "range": {
        "startLine": 2863,
        "startChar": 8,
        "endLine": 2863,
        "endChar": 60
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7af0ece9_664f938e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "This macro is only used in other macro definitions; I would replace its uses with its definition, and remove it.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "400343d4_952b772e",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7af0ece9_664f938e",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fb7cb6e_c03d9793",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1475,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Indentation for visibility qualifiers is a single space (here and below).",
      "range": {
        "startLine": 1475,
        "startChar": 0,
        "endLine": 1475,
        "endChar": 2
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "694a615f_89e305ec",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 1475,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "As it resides in a macro LINT doesn\u0027t recognize it as qualifier (Weird number of spaces at line-start.  Are you using a 2-space indent?) I suggest we keep is as it is.",
      "parentUuid": "1fb7cb6e_c03d9793",
      "range": {
        "startLine": 1475,
        "startChar": 0,
        "endLine": 1475,
        "endChar": 2
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97b21f7e_8df939ee",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 2184,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "I\u0027d put the HIR instruction type (and its id) at the end of the error message, to mimic what we do in other places of the compiler:\n\n  LOG(FATAL) \u003c\u003c \"Clonning is not implemented for the instruction \" \u003c\u003c DebugName() \u003c\u003c \" \" \u003c\u003c GetId();",
      "range": {
        "startLine": 2184,
        "startChar": 4,
        "endLine": 2184,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "666b334c_c32bded2",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 2184,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97b21f7e_8df939ee",
      "range": {
        "startLine": 2184,
        "startChar": 4,
        "endLine": 2184,
        "endChar": 85
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03c2f08_86243455",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 2515,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "I would encapsulate this redundant pattern in a macro, much the same way we use `DISALLOW_COPY_AND_ASSIGN` (here and in other nodes_*.h files).",
      "range": {
        "startLine": 2515,
        "startChar": 2,
        "endLine": 2515,
        "endChar": 95
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea2e89d9_637d1eb9",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 2515,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f03c2f08_86243455",
      "range": {
        "startLine": 2515,
        "startChar": 2,
        "endLine": 2515,
        "endChar": 95
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62b9693c_320ef0a3",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 7253,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-22T12:19:18Z",
      "side": 1,
      "message": "Please document this new function (or just move the corresponding comment from compiler/optimizing/nodes.cc to this file.)",
      "range": {
        "startLine": 7253,
        "startChar": 14,
        "endLine": 7253,
        "endChar": 38
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec1461ef_5b7d07c5",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 8
      },
      "lineNbr": 7253,
      "author": {
        "id": 1089808
      },
      "writtenOn": "2017-10-09T19:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62b9693c_320ef0a3",
      "range": {
        "startLine": 7253,
        "startChar": 14,
        "endLine": 7253,
        "endChar": 38
      },
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1300ce79_ff93ed89",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 130,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-09-22T16:55:33Z",
      "side": 1,
      "message": "this begs for a macro definition\n\nEXPLICT_CONSTRUCTOR(HVecOperation);\n\nor something like that",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c839782_0107e007",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 8
      },
      "lineNbr": 130,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-10-09T23:34:08Z",
      "side": 1,
      "message": "just for the records, this is done too",
      "parentUuid": "1300ce79_ff93ed89",
      "revId": "fa0d2b30efec77f980408a489f0192f64dad4b73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}