{
  "comments": [
    {
      "key": {
        "uuid": "d75bdac0_18957145",
        "filename": "test/162-method-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-11T15:23:48Z",
      "side": 1,
      "message": "BTW, doesn\u0027t it just let you put different art-specific code into src-art directory [with the same class name]? To avoid this whole separate runtime check?",
      "revId": "8124324346f74ee4d14cfa3a52b1f8ecf858d98c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "702b09a2_b0cd9f9d",
        "filename": "test/162-method-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-07-12T09:38:54Z",
      "side": 1,
      "message": "The description says\n\n  # .java files in src-art get compiled with libcore on the bootclasspath\n\nThat\u0027s not what I need here. I want to run the code and have a few cases (currently one) where I want to ignore the RI behavior if run with --jvm.",
      "parentUuid": "d75bdac0_18957145",
      "revId": "8124324346f74ee4d14cfa3a52b1f8ecf858d98c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "903c658b_8a96fe96",
        "filename": "test/162-method-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-12T15:04:54Z",
      "side": 1,
      "message": "The theory I was considering was to refactor invokeUserTest to a different file:\n\n   src-art\\invokeUserTest.java -\u003e used with ART\n   src\\invokeUserTest.java -\u003e used with RI\n\nAlthough maybe default-build doesn\u0027t work this way and it will try to build with src-art regardless (if so that\u0027s a bug I should fix)",
      "parentUuid": "702b09a2_b0cd9f9d",
      "revId": "8124324346f74ee4d14cfa3a52b1f8ecf858d98c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b8df6ee_541b666f",
        "filename": "test/162-method-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-07-12T15:09:37Z",
      "side": 1,
      "message": "But that would hide the divergence from the reader of the class Main. Not so good for readability.",
      "parentUuid": "903c658b_8a96fe96",
      "revId": "8124324346f74ee4d14cfa3a52b1f8ecf858d98c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595ea5b0_05fd6246",
        "filename": "test/162-method-resolution/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-07-12T15:13:49Z",
      "side": 1,
      "message": "So we could probably have\n\n   src-art\\file.java\n   src-ri\\file.java\n\n?\n\nOr are you just suggesting splitting it out into more than 1 file is what\u0027s hiding the divergence?",
      "parentUuid": "1b8df6ee_541b666f",
      "revId": "8124324346f74ee4d14cfa3a52b1f8ecf858d98c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}