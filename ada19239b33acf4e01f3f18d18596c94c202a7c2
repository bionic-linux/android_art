{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2f074290_5b6831cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-11-06T20:57:32Z",
      "side": 1,
      "message": "that\u0027s a \"TODO\" though, right? that should be fixed?",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "ada19239b33acf4e01f3f18d18596c94c202a7c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d6d165c_76e17deb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1991362
      },
      "writtenOn": "2024-11-08T08:42:12Z",
      "side": 1,
      "message": "ART does several optimization tricks like this one, where it reads the opcode, which would make this work non-trivial and would require redesign ART at those places. For this reason making ART generated code execute-only is not planned at the moment.",
      "parentUuid": "2f074290_5b6831cc",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "ada19239b33acf4e01f3f18d18596c94c202a7c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97c08d23_0236b151",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1991362
      },
      "writtenOn": "2024-11-08T09:19:46Z",
      "side": 1,
      "message": "There is a similar one in read barrier, it reads the opcode of the load instruction that triggered the read barrier to figure out the id of the destination register. Then it adds the needed content of the moved object to that register. This is a quite frequent code, adding just 1-2 instructions to the fast path part would cause significant performance hit, so this would need a major redesign, if doable at all (however I am not in the ART team, so this is just my understanding of this problem)",
      "parentUuid": "5d6d165c_76e17deb",
      "range": {
        "startLine": 14,
        "startChar": 23,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "ada19239b33acf4e01f3f18d18596c94c202a7c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}