{
  "comments": [
    {
      "key": {
        "uuid": "3bbd6c31_8b7bf655",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-08-25T01:37:51Z",
      "side": 0,
      "message": "Don\u0027t care either way, but this kind of optimization is not worth it for a test.\n\nAlso taking a const function\u0026 is not always desirable, it doesn\u0027t allow through lambdas that would mutate captured variables.",
      "revId": "40061b46518bac0308279c2998af31f8a31f2efc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d5a413_f1b7593b",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-08-25T01:44:05Z",
      "side": 0,
      "message": "I\u0027d rather add the \u0026 (and I\u0027m not aware how to do the default nicely with lambdas - I guess a second function?) then add a NOLINT.",
      "parentUuid": "3bbd6c31_8b7bf655",
      "revId": "40061b46518bac0308279c2998af31f8a31f2efc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17dc48e7_7cc49167",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-08-25T02:52:10Z",
      "side": 0,
      "message": "In this case it would\u0027ve been cleaner to have an optional parameter that is not invoked when it\u0027s not set. Think java listeners.\n\n\n    void foo(Function f) {\n       if (f !\u003d null) {\n          f.apply(...);\n       }\n    }",
      "parentUuid": "c2d5a413_f1b7593b",
      "revId": "40061b46518bac0308279c2998af31f8a31f2efc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3481de28_b08203da",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-08-25T16:11:46Z",
      "side": 0,
      "message": "This isn\u0027t really pretty in C++, IMHO, and means that you have to put a lambda into a variable so you can take a pointer, right?\n\nI instead went with the two functions approach.",
      "parentUuid": "17dc48e7_7cc49167",
      "revId": "40061b46518bac0308279c2998af31f8a31f2efc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbe2f0ac_72301d0b",
        "filename": "dex2oat/dex2oat_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-08-25T17:28:23Z",
      "side": 0,
      "message": "std::optional\u003cstd::function\u003c...\u003e\u003e",
      "parentUuid": "3481de28_b08203da",
      "revId": "40061b46518bac0308279c2998af31f8a31f2efc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}