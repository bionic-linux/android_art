{
  "comments": [
    {
      "key": {
        "uuid": "cae3c748_c749d214",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 681,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "As the type parameters `I` and `T` are constrained (`I` should be an instruction type, while `T` should be a slow path code type), I would give them more explicit names, e.g `InstructionType` and `SlowPathCodeType` respectively.\n\nIt would make some lines below (e.g. line 704) easier to read.",
      "range": {
        "startLine": 680,
        "startChar": 0,
        "endLine": 681,
        "endChar": 56
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a54ffaf_697e41be",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 683,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "Nit: template \u003ctypename I\u003e",
      "range": {
        "startLine": 683,
        "startChar": 0,
        "endLine": 683,
        "endChar": 20
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa2db12_718b7206",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 684,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "What about adding this check:\n\n  static_assert(std::is_base_of\u003cHInstruction, I\u003e::value,\n                \"I is not a subclass of art::HInstruction\");\n\nhere?",
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca6e677a_0fb9c9ea",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 686,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "Drop?",
      "range": {
        "startLine": 686,
        "startChar": 0,
        "endLine": 686,
        "endChar": 17
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a68ef71_aaff4fc9",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "template \u003ctypename T\u003e",
      "range": {
        "startLine": 693,
        "startChar": 2,
        "endLine": 693,
        "endChar": 22
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae3c748_27e23e2e",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 694,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "What about adding these checks:\n\n    static_assert(std::is_base_of\u003cSlowPathCode, T\u003e::value,\n                  \"T is not a subclass of art::SlowPathCode\");\n    static_assert(std::is_constructible\u003cT, I*\u003e::value,\n                  \"T is not constructible from I*\");\n\nhere?",
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae3c748_67ec4620",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 697,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-08T12:44:18Z",
      "side": 1,
      "message": "Do you actually enforce this anywhere? From what I can tell it relies on the fact that no type `I` will ever generate slow paths of two different types `T` and that\u0027s not true. HInstanceOf on arm64 can already emit ReadBarrierForHeapReferenceSlowPathARM64 followed by TypeCheckSlowPathARM64. Neither of these has the required T(I*) constructor but it still looks like a dangerous implicit assumption. It would be safer to have `T` a template on the whole class but then you wouldn\u0027t be able to have the common InstructionCodeGenerator class.",
      "range": {
        "startLine": 696,
        "startChar": 65,
        "endLine": 697,
        "endChar": 17
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a2b8319_77860a3f",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 702,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-08T10:42:43Z",
      "side": 1,
      "message": "const auto\u0026 it : candidates\n?",
      "range": {
        "startLine": 702,
        "startChar": 11,
        "endLine": 702,
        "endChar": 69
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a31fb81_dca06564",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "down_cast",
      "range": {
        "startLine": 704,
        "startChar": 29,
        "endLine": 704,
        "endChar": 40
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2c372e_9bf2f3c1",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 719,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "Could we use\n\n  iter-\u003esecond.emplace_back(instruction, slow_path);\n\nhere?",
      "range": {
        "startLine": 719,
        "startChar": 4,
        "endLine": 719,
        "endChar": 67
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa2db12_71625216",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 726,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "preamble? (or prerequisite?)",
      "range": {
        "startLine": 726,
        "startChar": 40,
        "endLine": 726,
        "endChar": 49
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a54ffaf_89961d31",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-08T10:42:43Z",
      "side": 1,
      "message": "HaveSame?",
      "range": {
        "startLine": 727,
        "startChar": 7,
        "endLine": 727,
        "endChar": 12
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a54ffaf_49e7c5ce",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const I*",
      "range": {
        "startLine": 727,
        "startChar": 26,
        "endLine": 727,
        "endChar": 28
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a68ef71_0a069ba4",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 727,
        "startChar": 39,
        "endLine": 727,
        "endChar": 40
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa2db12_b1d2faf6",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 727,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const I*",
      "range": {
        "startLine": 727,
        "startChar": 33,
        "endLine": 727,
        "endChar": 35
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a31fb81_1c625d15",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-08T10:42:43Z",
      "side": 1,
      "message": "HaveSameStackMap?",
      "range": {
        "startLine": 740,
        "startChar": 7,
        "endLine": 740,
        "endChar": 20
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa2db12_f1dc820c",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 740,
        "startChar": 34,
        "endLine": 740,
        "endChar": 35
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a31fb81_9cc18d0a",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const I*",
      "range": {
        "startLine": 740,
        "startChar": 21,
        "endLine": 740,
        "endChar": 23
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eae08b3e_45893c4e",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "const I*",
      "range": {
        "startLine": 740,
        "startChar": 28,
        "endLine": 740,
        "endChar": 30
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae3c748_87586adc",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 763,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-08T12:44:18Z",
      "side": 1,
      "message": "Nit: Less vague name please.",
      "range": {
        "startLine": 763,
        "startChar": 68,
        "endLine": 763,
        "endChar": 72
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2c372e_1bd02321",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 3
      },
      "lineNbr": 776,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-08T10:42:43Z",
      "side": 1,
      "message": "missing \".\"",
      "range": {
        "startLine": 776,
        "startChar": 71,
        "endLine": 776,
        "endChar": 76
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a2b8319_f799baa4",
        "filename": "test/561-shared-slowpaths/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-08T10:42:43Z",
      "side": 1,
      "message": "Please add checker tests that we only have one slow path.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca6e677a_cf3e5109",
        "filename": "test/561-shared-slowpaths/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-08T12:44:18Z",
      "side": 1,
      "message": "+1 because this doesn\u0027t actually show that any sharing is taking place. That said, the test would have to be more concise, or \"unit\" if you will, to get a case where the register maps are actually equal.\n\nx86: first loop shared, second loop not\nx86_64: two out of three shared in first loop, none in second loop\narm: two shared in first loop, all shared in second",
      "parentUuid": "2a2b8319_f799baa4",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a68ef71_2a035f95",
        "filename": "test/561-shared-slowpaths/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "Nit: int z;",
      "range": {
        "startLine": 39,
        "startChar": 4,
        "endLine": 39,
        "endChar": 12
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae3c748_c71712d7",
        "filename": "test/561-shared-slowpaths/src/Main.java",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2016-01-08T11:55:05Z",
      "side": 1,
      "message": "OOB? (And likewise below.)",
      "range": {
        "startLine": 69,
        "startChar": 13,
        "endLine": 69,
        "endChar": 16
      },
      "revId": "83c73e47b8a51a97133b1ce4a3de5aff46f5351f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}