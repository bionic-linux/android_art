{
  "comments": [
    {
      "key": {
        "uuid": "26864fc9_f52ce626",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-14T06:07:53Z",
      "side": 1,
      "message": "This syntax seems to be misleading. Why don\u0027t you support a list type?\n\npermitted_path \u003d [\n    # some comment\n    /data,\n    # some comment\n    /system/framework,\n    # some comment\n    /apex/com.android.art/javalib,\n]",
      "range": {
        "startLine": 7,
        "startChar": 15,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a91d0f6c_9a5198fc",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-14T06:15:05Z",
      "side": 1,
      "message": "I just chose the easy syntax to parse (similar to linker) as I thought it would be enough. Do you think we should support better structure such as json?",
      "parentUuid": "26864fc9_f52ce626",
      "range": {
        "startLine": 7,
        "startChar": 15,
        "endLine": 7,
        "endChar": 16
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f421d3c_b920322e",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-08-14T12:49:21Z",
      "side": 1,
      "message": "Shouldn\u0027t these be in their respective APEXes?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d239b5_ff2c5abd",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-18T01:24:28Z",
      "side": 1,
      "message": "I don\u0027t think so. For example, if libnativeloader updates to use com.android.statsd, then it should be updated from ART APEX not statsd APEX. There should be some way to verify if references are allowed, but still references should be defined from using side for any update case.",
      "parentUuid": "2f421d3c_b920322e",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "764c92b9_8a504c6b",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-08-19T00:01:22Z",
      "side": 1,
      "message": "libnativeloader is only a conduit, and the namespaces and libraries hardcoded there should go away (b/150767721). For the statsd example, the real origin of the dependency is here in the statsd APEX: http://cs/android/frameworks/base/apex/statsd/framework/java/android/util/StatsLog.java?l\u003d41",
      "parentUuid": "77d239b5_ff2c5abd",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff64b3c7_ed1d9dc5",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-19T00:28:53Z",
      "side": 1,
      "message": "I\u0027m trying to think in generic. In case of library, we specify which libraries should be linked from using side not from being used side. In case of ART, I agree that the list should not be static within codebase, but list of modules would better be generated from linkerconfig or any other ART binaries during init. I\u0027m not sure if we should specify which APEX modules can link to self just because of ART sample because most of other APEX modules would still export namespace with fixed string in the code.",
      "parentUuid": "764c92b9_8a504c6b",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d415d22_21a92e75",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-08-19T19:01:51Z",
      "side": 1,
      "message": "Sorry, I still don\u0027t get your point. I don\u0027t think these namespace settings should be here because ART isn\u0027t the source of their need to be visible:\n\n- com.android.i18n: Apps need to load libicuuc.so and libicui18n.so which are in public.libraries.txt. It\u0027s up to the i18n APEX to ensure that works.\n\n- com.android.conscrypt: As we discussed in a mail thread, this is just grandfathered in. It doesn\u0027t need a visibility flag at all.\n\n- com.android.neuralnetworks: Same as i18n.\n\n- com.android.os.statsd isn\u0027t in here, so that\u0027s good. I guess it needs to be visible, but in that case there\u0027s Java in the statsd APEX that loads a JNI lib in the same APEX, so it\u0027s that APEX that needs to make it visible for the load to work.\n\nAre you arguing that ART is actually the root cause for any of these visibility needs? Or it isn\u0027t but it\u0027s ART\u0027s responsibility to make them visible anyway?",
      "parentUuid": "ff64b3c7_ed1d9dc5",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0f2dc41_57fb7982",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-20T00:56:36Z",
      "side": 1,
      "message": "Sorry that I made some miscommunication. This change makes some APEX to be visible from specific APEX linker configuration, not from all APEX modules. The reason I did it was because it is more intuitive, and if we make namespaces visible from all APEX modules then later there will be lots of unused visible APEX namespaces from most of APEX modules. \n\nIf needed we need to add extra logic to check if the APEX module itself can be visible or not, but for now I think it is more practical to just specify list of visible APEX modules (including self) in the APEX configuration.",
      "parentUuid": "7d415d22_21a92e75",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cd63cbd_1ccf77dc",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-08-20T01:23:38Z",
      "side": 1,
      "message": "You mean these visibilities only apply to the linker config used by ART binaries? Then it needs to be duplicated in the platform linker config. Also, if some new APEX comes along that like statsd needs to load its own JNI from its own java code, both platform and ART linker configs would have to add it, don\u0027t they?",
      "parentUuid": "c0f2dc41_57fb7982",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cab4fa19_d18846cc",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-20T01:35:24Z",
      "side": 1,
      "message": "For now, this only targets APEX modules, not platform. I\u0027m also planning to make platform to make it as independent as possible, but for now this only targets APEX modules.\n\nIn case of ART APEX, I think we should handle ART APEX as special case in linkerconfig anyway. If ART works to generate visible APEX module list in runtime, then I think we should (1) make linkerconfig aware of the logic and do the same thing in runtime to get list of visible APEX modules for ART APEX or (2) create an ART binary to let linkerconfig know about list of visible APEX modules.",
      "parentUuid": "4cd63cbd_1ccf77dc",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48c73700_5dd86222",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-08-20T13:27:41Z",
      "side": 1,
      "message": "If this is temporary until the platform case is addressed then I\u0027m fine with it, but I\u0027d like to understand the intended end state:\n\nI believe we are discussing two different approaches:\n\n1. Control visibility per linker config, i.e. namespaces can have different visibilities for different binaries. The visibilities are configured centrally by the owner of the linker config for now. Later there will be a binary (possibly in ART) that linkerconfig will query to know which namespaces are to be visible. This is how I understand your suggestion, correct?\n\n2. Control visibility with each namespace, so the owner of the namespace decides whether it\u0027s visible, and that\u0027s then propagated into all linker configs that include the namespace. This would fit the four cases I listed earlier at least, where it is the namespace owner that\u0027s either themselves the namespace visibility user, or has the most knowledge of the users.\n\nNow, for #1, how would the binary come up with the visible namespaces for libnativeloader? It\u0027d need to know that there is a JNI lib in each namespace, and it\u0027d have to query each APEX for that info. I.e. instead of exporting a flag saying \"my namespace is visible\", each APEX has to export a flag saying \"I\u0027ve got a JNI lib in my namespace\". For the use cases listed above, those flags would end up in the same APEXes as the visibility flags in option #2.\n\nThe drawbacks with that binary is that it\u0027s an extra step that adds complexity, and it only works for visibility that is due to JNI lib access (i.e. if someone else wants to use android_get_exported_namespace for their own reasons they\u0027d have to set up their own binary and query method). The benefit is that linker configs that won\u0027t use libnativeloader (i.e. probably all APEXes except ART) don\u0027t get unnecessary visibility flags.\n\nI wonder if the benefit outweighs the cost of the extra complexity. Which linker configs are we talking about that wouldn\u0027t get the superfluous visibility flags, and what failure modes in them do we avoid?\n\n[I\u0027m happy to chat, feel free to schedule a GVC if you like.]",
      "parentUuid": "cab4fa19_d18846cc",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bb63740_fcb243b3",
        "filename": "build/apex/linker.config",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2020-08-31T05:57:56Z",
      "side": 1,
      "message": "Based on the discussion over GVC, I just updated to configure permitted paths only from extra configuration file. PTAL.",
      "parentUuid": "48c73700_5dd86222",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "0228bfe8e05cf437706f95e52df48022139b1989",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}