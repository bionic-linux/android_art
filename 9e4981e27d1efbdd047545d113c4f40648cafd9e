{
  "comments": [
    {
      "key": {
        "uuid": "ade97f6b_7f4ac8c6",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 1896,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2016-11-29T18:47:45Z",
      "side": 1,
      "message": "As vmarko commented, need to check that user-\u003eInputAt(1) isn\u0027t reference. StringBuffer.append() allows a StringBuffer() to be the parameter (not always this object).\n\nAnd if it\u0027s in env use for an HDeoptimize, we still need to keep reference around. We also need to make sure HDeoptimize isn\u0027t created after the fact of removal. Right now lse does this and it\u0027s close to the end of optimizations. It\u0027s safe to do it in the the pass of simplifier after bce, but does it miss the loop optimization that can remove the loop?\n\nAlso if we cascade string buffer append, does the HasUses() test prevent the removal since the second append counts as a use of the return value of the first append?",
      "range": {
        "startLine": 1896,
        "startChar": 15,
        "endLine": 1896,
        "endChar": 64
      },
      "revId": "9e4981e27d1efbdd047545d113c4f40648cafd9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ade97f6b_3fb1e095",
        "filename": "compiler/optimizing/instruction_simplifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 1984,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2016-11-29T18:47:45Z",
      "side": 1,
      "message": "New in what sense? The newly added string buffer intrinsics? Or does \u0027new\u0027 mean some form of instance creation? Need a less confusing name.",
      "range": {
        "startLine": 1984,
        "startChar": 14,
        "endLine": 1984,
        "endChar": 17
      },
      "revId": "9e4981e27d1efbdd047545d113c4f40648cafd9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}