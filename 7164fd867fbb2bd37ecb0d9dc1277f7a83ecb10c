{
  "comments": [
    {
      "key": {
        "uuid": "2920f050_acf92fe4",
        "filename": "test/636-arm64-veneer-pool/build",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-02-03T11:57:48Z",
      "side": 1,
      "message": "I disabled building with Jack to have this reduced test case be as close as possible to the original crash on the affected app (which I believe has been compiled with javac + dx).\n\nIf you re-enable Jack, you still get a crash, but a different one:\n\n  external/vixl/src/aarch64/assembler-aarch64.h:2675: static Instr vixl::aarch64::Assembler::ImmTestBranch(int64_t): assertion \"IsInt14(imm14)\" failed\n\nwith this stack trace:\n\n  #0  0x00007ffff61d0c37 in __GI_raise (sig\u003dsig@entry\u003d6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n  #1  0x00007ffff61d4028 in __GI_abort () at abort.c:89\n  #2  0x00007ffff61c9bf6 in __assert_fail_base (fmt\u003d0x7ffff631a3b8 \"%s%s%s:%u: %s%sAssertion `%s\u0027 failed.\\n%n\", assertion\u003dassertion@entry\u003d0x7ffff5e7f930 \u003c.L.str.523\u003e \"IsInt14(imm14)\", \n      file\u003dfile@entry\u003d0x7ffff5e7eae5 \u003c.L.str.490\u003e \"external/vixl/src/aarch64/assembler-aarch64.h\", line\u003dline@entry\u003d2675, \n      function\u003dfunction@entry\u003d0x7ffff5e7f93f \u003c.L__PRETTY_FUNCTION__._ZN4vixl7aarch649Assembler13ImmTestBranchEl\u003e \"static Instr vixl::aarch64::Assembler::ImmTestBranch(int64_t)\") at assert.c:92\n  #3  0x00007ffff61c9ca2 in __GI___assert_fail (assertion\u003d0x7ffff5e7f930 \u003c.L.str.523\u003e \"IsInt14(imm14)\", file\u003d0x7ffff5e7eae5 \u003c.L.str.490\u003e \"external/vixl/src/aarch64/assembler-aarch64.h\", line\u003d2675, \n      function\u003d0x7ffff5e7f93f \u003c.L__PRETTY_FUNCTION__._ZN4vixl7aarch649Assembler13ImmTestBranchEl\u003e \"static Instr vixl::aarch64::Assembler::ImmTestBranch(int64_t)\") at assert.c:101\n  #4  0x00007ffff5dfaa00 in ImmTestBranch (imm14\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/assembler-aarch64.h:2675\n  #5  vixl::aarch64::Instruction::SetBranchImmTarget (this\u003d\u003coptimized out\u003e, target\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/instructions-aarch64.cc:375\n  #6  0x00007ffff5e2b40e in vixl::aarch64::VeneerPool::Emit (this\u003d\u003coptimized out\u003e, option\u003d\u003coptimized out\u003e, amount\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/macro-assembler-aarch64.cc:288\n  #7  0x00007ffff5e2c362 in vixl::aarch64::MacroAssembler::CheckEmitPoolsFor (this\u003d0x7fffefcfc798, amount\u003d4) at external/vixl/src/aarch64/macro-assembler-aarch64.cc:396\n  #8  0x00007ffff74cd640 in Open (masm\u003d0x7fffefcfc7d0, size\u003d4, size_policy\u003dvixl::CodeBufferCheckScope::kMaximumSize, pool_policy\u003dvixl::EmissionCheckScope::kBlockPools, this\u003d\u003coptimized out\u003e)\n      at external/vixl/src/aarch64/../code-generation-scopes-vixl.h:218\n  #9  Open (masm\u003d0x7fffefcfc7d0, size\u003d4, size_policy\u003dvixl::CodeBufferCheckScope::kMaximumSize, this\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/../code-generation-scopes-vixl.h:180\n  #10 EmissionCheckScope (masm\u003d0x7fffefcfc7d0, size\u003d4, size_policy\u003dvixl::CodeBufferCheckScope::kMaximumSize, this\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/../code-generation-scopes-vixl.h:156\n  #11 SingleEmissionCheckScope (this\u003d\u003coptimized out\u003e, masm\u003d0x7fffefcfc7d0) at external/vixl/src/aarch64/macro-assembler-aarch64.h:507\n  #12 vixl::aarch64::MacroAssembler::Mov (this\u003d0x7fffefcfc798, rd\u003d..., rn\u003d..., discard_mode\u003d\u003coptimized out\u003e) at external/vixl/src/aarch64/macro-assembler-aarch64.h:1631\n  #13 0x00007ffff74b5320 in art::arm64::CodeGeneratorARM64::MoveLocation (this\u003d0x7fffefcfc1d8, destination\u003d..., source\u003d..., dst_type\u003d\u003coptimized out\u003e) at art/compiler/optimizing/code_generator_arm64.cc:1509\n  #14 0x00007ffff7361f6b in art::ParallelMoveResolverNoSwap::PerformMove (this\u003d0x7fffefcfc650, index\u003d\u003coptimized out\u003e) at art/compiler/optimizing/parallel_move_resolver.cc:470\n  #15 0x00007ffff7361742 in art::ParallelMoveResolverNoSwap::EmitNativeCode (this\u003d\u003coptimized out\u003e, parallel_move\u003d\u003coptimized out\u003e) at art/compiler/optimizing/parallel_move_resolver.cc:319\n  #16 0x00007ffff72d5c7a in art::CodeGenerator::Compile (this\u003d\u003coptimized out\u003e, allocator\u003d\u003coptimized out\u003e) at art/compiler/optimizing/code_generator.cc:258\n  #17 0x00007ffff735b67e in art::OptimizingCompiler::TryCompile (this\u003d\u003coptimized out\u003e, arena\u003d\u003coptimized out\u003e, code_allocator\u003d\u003coptimized out\u003e, code_item\u003d\u003coptimized out\u003e, access_flags\u003d\u003coptimized out\u003e, \n      invoke_type\u003d\u003coptimized out\u003e, class_def_idx\u003d\u003coptimized out\u003e, method_idx\u003d\u003coptimized out\u003e, class_loader\u003d..., dex_file\u003d..., dex_cache\u003d..., method\u003d\u003coptimized out\u003e, osr\u003d\u003coptimized out\u003e, \n      handles\u003d0x7fffffffc930) at art/compiler/optimizing/optimizing_compiler.cc:1023\n  #18 0x00007ffff735bef6 in art::OptimizingCompiler::Compile (this\u003d0x5555555ce730, code_item\u003d0x7fffefd40f78, access_flags\u003d1, invoke_type\u003dart::kVirtual, class_def_idx\u003d\u003coptimized out\u003e, \n      method_idx\u003d\u003coptimized out\u003e, jclass_loader\u003d..., dex_file\u003d..., dex_cache\u003d...) at art/compiler/optimizing/optimizing_compiler.cc:1054\n  #19 0x00007ffff72a04ca in art::CompileMethod (self\u003d0x5555555bf9f0, driver\u003d0x5555555ce4a0, code_item\u003d0x7fffefd40f78, access_flags\u003d\u003coptimized out\u003e, invoke_type\u003d\u003coptimized out\u003e, class_def_idx\u003d1217, \n      method_idx\u003d\u003coptimized out\u003e, class_loader\u003d..., dex_file\u003d..., dex_to_dex_compilation_level\u003d\u003coptimized out\u003e, compilation_enabled\u003d\u003coptimized out\u003e, dex_cache\u003d...)\n      at art/compiler/driver/compiler_driver.cc:681\n  #20 0x00007ffff72b5c27 in art::CompileClassVisitor::Visit (this\u003d\u003coptimized out\u003e, class_def_index\u003d\u003coptimized out\u003e) at art/compiler/driver/compiler_driver.cc:2621\n  #21 0x00007ffff72b1efa in art::ParallelCompilationManager::ForAllClosure::Run (this\u003d\u003coptimized out\u003e, self\u003d\u003coptimized out\u003e) at art/compiler/driver/compiler_driver.cc:1663\n  #22 0x00007ffff7c3402c in art::ThreadPool::Wait (this\u003d\u003coptimized out\u003e, self\u003d\u003coptimized out\u003e, do_work\u003d\u003coptimized out\u003e, may_hold_locks\u003d\u003coptimized out\u003e) at art/runtime/thread_pool.cc:227\n  #23 0x00007ffff72a7985 in art::ParallelCompilationManager::ForAll (this\u003d\u003coptimized out\u003e, begin\u003d93824992672240, end\u003d\u003coptimized out\u003e, visitor\u003d\u003coptimized out\u003e, work_units\u003d\u003coptimized out\u003e)\n      at art/compiler/driver/compiler_driver.cc:1639\n  #24 0x00007ffff729ed3a in CompileDexFile (dex_file\u003d..., thread_count\u003d1, this\u003d\u003coptimized out\u003e, class_loader\u003d\u003coptimized out\u003e, dex_files\u003d..., thread_pool\u003d\u003coptimized out\u003e, timings\u003d\u003coptimized out\u003e)\n      at art/compiler/driver/compiler_driver.cc:2651\n  #25 art::CompilerDriver::Compile (this\u003d0x5555555ce4a0, class_loader\u003d0x5a6, dex_files\u003d..., timings\u003d\u003coptimized out\u003e) at art/compiler/driver/compiler_driver.cc:2491\n  #26 0x00007ffff729d0f2 in art::CompilerDriver::CompileAll (this\u003d\u003coptimized out\u003e, class_loader\u003d\u003coptimized out\u003e, dex_files\u003d..., timings\u003d\u003coptimized out\u003e) at art/compiler/driver/compiler_driver.cc:427\n  #27 0x00007ffff729f48a in art::CompilerDriver::CompileAll (this\u003d\u003coptimized out\u003e, class_loader\u003d\u003coptimized out\u003e, dex_files\u003d..., vdex_file\u003d\u003coptimized out\u003e, timings\u003d\u003coptimized out\u003e)\n      at art/compiler/driver/compiler_driver.cc:509\n  #28 0x000055555557b425 in art::Dex2Oat::Compile (this\u003d0x55555558bba0) at art/dex2oat/dex2oat.cc:1727\n  #29 0x000055555555fe89 in CompileImage (dex2oat\u003d...) at art/dex2oat/dex2oat.cc:2766\n  #30 dex2oat (argc\u003d\u003coptimized out\u003e, argv\u003d\u003coptimized out\u003e) at art/dex2oat/dex2oat.cc:2899\n  #31 main (argc\u003d\u003coptimized out\u003e, argv\u003d\u003coptimized out\u003e) at art/dex2oat/dex2oat.cc:2910",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 21
      },
      "revId": "7164fd867fbb2bd37ecb0d9dc1277f7a83ecb10c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}