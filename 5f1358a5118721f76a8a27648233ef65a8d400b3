{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "672e8658_7b27a77e",
        "filename": "runtime/arch/riscv64/asm_support_riscv64.S",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-18T06:58:16Z",
      "side": 1,
      "message": "In my opinion, it\u0027s not very useful to record this information. I\u0027d prefer to drop these directives (and replace `RESTORE_{G,F}PR` in `RESTORE_ALL_ARGUMENTS` with plain loads).",
      "range": {
        "startLine": 600,
        "startChar": 4,
        "endLine": 600,
        "endChar": 36
      },
      "revId": "5f1358a5118721f76a8a27648233ef65a8d400b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8686c0fa_8ab338df",
        "filename": "runtime/arch/riscv64/asm_support_riscv64.S",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-18T15:12:53Z",
      "side": 1,
      "message": "Help me out, why is it of limited utility? Because it is unlikely GetShorty will crash, or because the arg ArtMethod* will be fairly obvious if debugging? Or because SP and RA are the top priorities for unwinding, so arg recording is a secondary priority? There seems to be a mental shortcut involved.\n\nIt\u0027s inconsistent with other places that do declare proper CFI, and that inconsistency has itself been hard to understand. If we drop these, we really should say why and leave a helpful breadcrumb.",
      "parentUuid": "672e8658_7b27a77e",
      "range": {
        "startLine": 600,
        "startChar": 4,
        "endLine": 600,
        "endChar": 36
      },
      "revId": "5f1358a5118721f76a8a27648233ef65a8d400b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30a37367_03154dca",
        "filename": "runtime/arch/riscv64/asm_support_riscv64.S",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2023-10-18T15:27:31Z",
      "side": 1,
      "message": "With this information, if you stop in `NterpGetShorty()` (crash or otherwise), the debugger can use it to tell you the values of these registers in the caller. But they are just arguments passed to a call, so they are not even tied to any local variables. In the unlikely case that you need to decode and interpret these values (the debugger will not really help you here), it\u0027s not that difficult to just grab them from the stack anyway.\n\nDropping this information has no impact on unwinding.\n\nI have been advocating for avoiding CFI for args, see for example `PUSH_ARG`, `POP_ARG` on x86/x86-64.",
      "parentUuid": "8686c0fa_8ab338df",
      "range": {
        "startLine": 600,
        "startChar": 4,
        "endLine": 600,
        "endChar": 36
      },
      "revId": "5f1358a5118721f76a8a27648233ef65a8d400b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc01bc68_eff8c82a",
        "filename": "runtime/arch/riscv64/asm_support_riscv64.S",
        "patchSetId": 9
      },
      "lineNbr": 600,
      "author": {
        "id": 1998570
      },
      "writtenOn": "2023-10-18T16:29:30Z",
      "side": 1,
      "message": "yes, that helps! added to comments. uploading new version, hold on.",
      "parentUuid": "30a37367_03154dca",
      "range": {
        "startLine": 600,
        "startChar": 4,
        "endLine": 600,
        "endChar": 36
      },
      "revId": "5f1358a5118721f76a8a27648233ef65a8d400b3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}