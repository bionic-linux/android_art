{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "79b7d209_75e4887f",
        "filename": "libartservice/service/java/com/android/server/art/DumpHelper.java",
        "patchSetId": 12
      },
      "lineNbr": 238,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-27T15:41:51Z",
      "side": 1,
      "message": "Could it be useful to have signature status \"unsupported\" when the flag is false?",
      "range": {
        "startLine": 238,
        "startChar": 39,
        "endLine": 238,
        "endChar": 84
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9f8bf40_c6549007",
        "filename": "libartservice/service/java/com/android/server/art/DumpHelper.java",
        "patchSetId": 12
      },
      "lineNbr": 238,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-11-27T18:07:02Z",
      "side": 1,
      "message": "Thanks for bringing this up. I realized that the flag is false only if we are on an old platform, where printing the SDM status has no value but only confuses existing parsers. I decided not to print SDM status at all in this case.",
      "parentUuid": "79b7d209_75e4887f",
      "range": {
        "startLine": 238,
        "startChar": 39,
        "endLine": 238,
        "endChar": 84
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1f2e296_f5df7c3c",
        "filename": "libartservice/service/javatests/com/android/server/art/DumpHelperTest.java",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-27T15:41:51Z",
      "side": 1,
      "message": "Huh. clang-format is clever enough to notice the presence of newlines in the strings to add this extra indentation? Nifty.",
      "range": {
        "startLine": 148,
        "startChar": 16,
        "endLine": 148,
        "endChar": 18
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe63b197_9e31c830",
        "filename": "libartservice/service/javatests/com/android/server/art/DumpHelperTest.java",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-11-27T18:07:02Z",
      "side": 1,
      "message": "Yeah, I was amazed by that too :)",
      "parentUuid": "e1f2e296_f5df7c3c",
      "range": {
        "startLine": 148,
        "startChar": 16,
        "endLine": 148,
        "endChar": 18
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4cceeef_f4d75a91",
        "filename": "libartservice/service/javatests/com/android/server/art/DumpHelperTest.java",
        "patchSetId": 12
      },
      "lineNbr": 184,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-11-27T15:41:51Z",
      "side": 1,
      "message": "Iiuc this warning is a false positive here - it\u0027s possible to avoid the call on the mock but it wouldn\u0027t improve readability.\n\nHowever, to save us from the noise, I suggest putting the `mSnapshot.getPackageState` call in a separate method and add an annotation to ignore the warning in it.\n\n---\n\nPlease fix this WARNING reported by Error Prone: [DirectInvocationOnMock] Methods should not be directly invoked on the mock `mSnapshot`. Should this be part of a verify(..) call?\n\nAnalyzer Description: Warnings generated by errorprone.\nOwner: farivar@google.com\n\n    [DirectInvocationOnMock] Methods should not be directly invoked on the mock `mSnapshot`. Should this be part of a verify(..) call?\n                    mSnapshot.getPackageState(PKG_NAME_BAR), true /* verifySdmSignatures */);\n                                             ^\n        (see https://errorprone.info/bugpattern/DirectInvocationOnMock)\n\nUse `m RUN_ERROR_PRONE\u003dtrue MyModule` to reproduce locally.\n\nThis finding was found on https://android-build.googleplex.com/builds/build-details/P85812209/targets/errorprone-trunk_staging, but may also be present on other builds.\n\nThis is a different branch than your cl originated on (it was automerged), and thus might better reflect the state of the code in the git_main branch.",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 184,
        "endChar": 89
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4196b8e0_99216c7f",
        "filename": "libartservice/service/javatests/com/android/server/art/DumpHelperTest.java",
        "patchSetId": 12
      },
      "lineNbr": 184,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-11-27T18:07:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4cceeef_f4d75a91",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 184,
        "endChar": 89
      },
      "revId": "a87933a7d9b1739c2929cdabdcf1723c61bbf58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}