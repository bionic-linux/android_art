{
  "comments": [
    {
      "key": {
        "uuid": "63a66a29_ee777f51",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-09T13:52:58Z",
      "side": 1,
      "message": "I think you need an or with GetIncludeDebugSymbols here. You can include debug symbols without generating GDB info.",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a66a29_0eeacb1d",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-09T14:37:21Z",
      "side": 1,
      "message": "I wanted to ask - What is difference between those two?\nI noticed in the option parser that gdb-info implies debug-symbols, but not vice versa.",
      "parentUuid": "63a66a29_ee777f51",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a66a29_aea57704",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-09T14:45:54Z",
      "side": 1,
      "message": "I\u0027m afraid I don\u0027t know. First I thought it\u0027s something that you added in one of your previous CLs.  Looks that it\u0027s been here for a while and not used. Smells like rotten code to me.",
      "parentUuid": "63a66a29_0eeacb1d",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03868e96_7b2cf890",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-04-09T15:07:03Z",
      "side": 1,
      "message": "IncludeDebugSymbols is a subset of GDBInformation (in fact, the latter forces the former). Currently IncludeDebugSymbols writes at least the symtab and such.\n\nAs such, it sounds like you want to change this back, and potentially clean up in a follow-up CL.",
      "parentUuid": "63a66a29_aea57704",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03d12e8c_ebaf6dde",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-09T15:12:11Z",
      "side": 1,
      "message": "My vote would be to have just one generic flag.\n\nGDB-info is misleading since Dwarf can be used by many tools - including LLDB, and libbacktrace.\n\nI like DebugSymbols more.  I would say it sounds like a DwarfSymbols (i.e. .debug_* sections), but not everyone might not know the name Dwarf so it is good generic name.\n\nBut both of the above seem to imply that they only control inclusion/exclusion of debug data.  I think it would be conceivable that the flag could have deeper effects.  Say, do not deduplicate methods to make sure they can be identified, or omit some optimizations that rearrange code.\n\nAnyway, this is just bike-shedding about names.  I would not want to change it as part of this CL.  I picked GDBInformation here somewhat randomly, and made sure it is at least consistent with Quick and Elf Writer.\n\nShould I change it back to GetIncludeDebugSymbols? (and maybe kill GDB in further CL?)",
      "parentUuid": "63a66a29_aea57704",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_72b418c5",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 438,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-04-09T15:31:30Z",
      "side": 1,
      "message": "As I wrote:\n\n1) Please change it back to not change semantics for now.\n\n2) A follow-up combining the flags is fine. Just be sure you update the preopt settings in build/, if necessary.\n\nThe advantage of two flags was different levels of debug support. E.g., symtab itself is enough to get at least the name of the last Java frame, while not increasing the oat size as badly as complete DWARF info.",
      "parentUuid": "03d12e8c_ebaf6dde",
      "range": {
        "startLine": 438,
        "startChar": 44,
        "endLine": 438,
        "endChar": 69
      },
      "revId": "f5d5eb0e18d35f1fd3e358abd03eff15e353eb80",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}