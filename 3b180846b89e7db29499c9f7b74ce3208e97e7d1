{
  "comments": [
    {
      "key": {
        "uuid": "85a542c9_02ec0c7a",
        "filename": "compiler/image_writer.cc",
        "patchSetId": 4
      },
      "lineNbr": 990,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "This is not making more things dirty than before, is it?",
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a57de6ee_ebeeedac",
        "filename": "runtime/base/array_slice.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "I suggest documenting whether start_offset/end_offset are in bytes or in units of element_size.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 33
      },
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65f20ea9_d463b4ec",
        "filename": "runtime/base/array_slice.h",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "See 50",
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25fc967c_7211309c",
        "filename": "runtime/base/array_slice.h",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "I think it would be preferable if both size and element_size were the same type.\n\nFrom a idiomatic point of view, both size_t would be preferable. From a memory savings point of view, uint32_t would use less memory on 64-bit.\n\nSlightly leaning towards size_t for both.",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 8
      },
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45a7cad1_839a622d",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 4
      },
      "lineNbr": 772,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "Can you please update comment?\n\n   // Returns the number of non-inherited virtual methods (sum of declared and copied methods).",
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45a7cad1_e3f00650",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 4
      },
      "lineNbr": 1341,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "nit: would be more intuitive if this used standard math notation for ranges and set dimensions\n\n  [0, virtual_methods_offset_)\n\n  [virtual_methods_offset_, copied_methods_offset_)\n\n  [copied_methods_offset, |methods_|)\n\nThis way people don\u0027t have to think of how python slices work and which side is exclusive/inclusive.",
      "range": {
        "startLine": 1341,
        "startChar": 49,
        "endLine": 1341,
        "endChar": 50
      },
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65f20ea9_14437c29",
        "filename": "runtime/mirror/class.h",
        "patchSetId": 4
      },
      "lineNbr": 1398,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-12-14T21:57:01Z",
      "side": 1,
      "message": "nit: ((2\u003c\u003c16) - 1)\n\nmissing ()",
      "range": {
        "startLine": 1398,
        "startChar": 67,
        "endLine": 1398,
        "endChar": 77
      },
      "revId": "3b180846b89e7db29499c9f7b74ce3208e97e7d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}