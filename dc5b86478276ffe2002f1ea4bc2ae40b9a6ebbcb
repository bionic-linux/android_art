{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d4937eee_b31cc325",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T15:41:53Z",
      "side": 1,
      "message": "Adding `mConflict()` would be interesting as the default-conflicting `Itf3.mConflict()` would then receive an actual single implementation.",
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "574ec265_5f00f2c2",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T16:42:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4937eee_b31cc325",
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5471f211_0158abd4",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T15:41:53Z",
      "side": 1,
      "message": "What if we call `$noinline$doCallDefaultConflictItf3()` enough to populate the inline cache with the `Itf3Impl` receiver before we do the compilation? If I read the inliner code correctly, that would be the case where `TryInlineMonomorphicCall()` calls `TryInlineAndReplace()` and we crash on the `CHECK(!method-\u003eIsDefaultConflicting());`. I think the `CHECK(cha_devirtualize)` was wrong and misleading in the path you\u0027re trying to remove and may also be wrong and misleading in the `if (method-\u003eIsDefault() \u0026\u0026 !method-\u003eIsCopied())` block.",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 73
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7ee880_58fdd601",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T16:42:08Z",
      "side": 1,
      "message": "Ah excellent, thanks! You\u0027re right the inline cache can trigger this. For the IsDefault check, the comment seems right as I\u0027m not hitting the issue with the same use case but with a default method.\n\nI still don\u0027t see why we need the IsDefaultConflicting check though. A default conflict method always ends up in the vtable, so we are able to change the HInvokeInterface into a HInvokeVirtual.",
      "parentUuid": "5471f211_0158abd4",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 73
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e163b78_88012b7d",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-07T08:42:02Z",
      "side": 1,
      "message": "I assume you managed to hit the CHECK() with this test before removing it?\n\nNote that with PS7 we\u0027re replacing the HInvokeInterface with HInvokeVirtual and using `method-\u003eGetMethodIndex()` from the default-conflicting method as vtable index. We initialize default conflict methods with the method index 0, so you\u0027re calling the vtable entry with index 0 and happen to go to a method that throws because Itf3Impl has only throwing methods. You should try adding a non-throwing virtual method to Itf3Impl to expose that bug:\n\n  public void unused() {\n    System.out.println(\"UNUSED!\");\n  }\n\n(Or you can add a concrete class with such method as a superclass of Itf3Impl.)",
      "parentUuid": "5e7ee880_58fdd601",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 73
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "487d207c_32c5f44a",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-07T14:13:33Z",
      "side": 1,
      "message": "\u003e We initialize default conflict methods with the method index 0, \n\nWhere did you see this? AFAICS default conflict methods always end up in a vtable of a class (they don\u0027t get attached to any interface), and so they do get a vtable slot.",
      "parentUuid": "3e163b78_88012b7d",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 73
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cef5c4a9_2a9c2ae8",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T15:41:53Z",
      "side": 1,
      "message": "This case is actually not interesting. The static type of the receiver is `Itf` and the resolved method is `Itf.mConflict()` which is a normal default method, not a default conflicting method.",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 20
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e186f60_03532092",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T16:42:08Z",
      "side": 1,
      "message": "At runtime it will be a default conflict though.",
      "parentUuid": "cef5c4a9_2a9c2ae8",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 20
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15505d17_5f64ae09",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-07T08:42:02Z",
      "side": 1,
      "message": "Yes, but that\u0027s still not very interesting. That\u0027s all I wanted to point out. It\u0027s OK to keep that test here.",
      "parentUuid": "5e186f60_03532092",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 20
      },
      "revId": "dc5b86478276ffe2002f1ea4bc2ae40b9a6ebbcb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}