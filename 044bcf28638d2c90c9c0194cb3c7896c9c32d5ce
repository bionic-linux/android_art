{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e8d191e_8ee04fd6",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T13:04:00Z",
      "side": 1,
      "message": "Default-conflicting methods are considered non-abstract, so this places a restriction on the caller that `GetSingleImplementation()` cannot be called on them.",
      "range": {
        "startLine": 98,
        "startChar": 4,
        "endLine": 98,
        "endChar": 35
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d9b965e_073f3b3d",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T13:14:30Z",
      "side": 1,
      "message": "Good point. Should we change line 97 to:\nif (!IsAbstract() \u0026\u0026 !IsDefaultConflicting()) {\n\n?",
      "parentUuid": "6e8d191e_8ee04fd6",
      "range": {
        "startLine": 98,
        "startChar": 4,
        "endLine": 98,
        "endChar": 35
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dedabe56_40e1a60f",
        "filename": "runtime/art_method.cc",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T14:00:17Z",
      "side": 1,
      "message": "That sounds OK and it seems to be a step toward allowing single-implementation for default conflict method methods.\n\nBut try to add a test that fails this CHECK() before you change this.",
      "parentUuid": "9d9b965e_073f3b3d",
      "range": {
        "startLine": 98,
        "startChar": 4,
        "endLine": 98,
        "endChar": 35
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a86fbfbd_c30e5517",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T13:04:00Z",
      "side": 1,
      "message": "There is also a very interesting case where an _interface_ extends both `Itf` and `Itf2`. We are creating a default conflict method in that case and we could theoretically have a single implementation of that method.",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "616496ce_710e8556",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-04-06T13:14:30Z",
      "side": 1,
      "message": "Right, but I don\u0027t see the code in cha.cc making the default conflict be the single implementation (see InitSingleImplementationFlag method in cha.cc). Do you agree?",
      "parentUuid": "a86fbfbd_c30e5517",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0881e4d1_df54adda",
        "filename": "test/823-cha-inlining/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2021-04-06T14:00:17Z",
      "side": 1,
      "message": "There\u0027s this comment:\n\n  // Default conflicting methods cannot be treated with single implementations,\n  // as we need to call them (and not inline them) in case of ICCE.\n\nThat\u0027s somewhat misleading for a default conflict method in an interface (or abstract class). There could really be just a single implementation as long as there is no concrete class implementing that interface (or extending that abstract class) and leaving the method as default conflict.\n\nThe fact that we do not currently optimize that case does not mean that we cannot. And it presents an interesting case that we should add to our test suite.",
      "parentUuid": "616496ce_710e8556",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "044bcf28638d2c90c9c0194cb3c7896c9c32d5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}