{
  "comments": [
    {
      "key": {
        "uuid": "a7fcf7c5_c4cf3e57",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 6
      },
      "lineNbr": 974,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-10T13:23:11Z",
      "side": 1,
      "message": "Most of the code of CodeGenerator*::InvokeRuntime methods is the same.  What about factoring this common code into a CodeGenerator::InvokeRuntime method, and move the variable part into a virtual method (maybe in another CL)?",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 974,
        "endChar": 13
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47209b2d_d9395390",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 6
      },
      "lineNbr": 974,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-08-10T14:47:54Z",
      "side": 1,
      "message": "A common InvokeRuntime is not easy since backends use different types for the entry_point. However the \u0027checking\u0027 code can easily be factored out.",
      "parentUuid": "a7fcf7c5_c4cf3e57",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 974,
        "endChar": 13
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f7f3e0_e3f8f28c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 1230,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-10T13:23:11Z",
      "side": 1,
      "message": "40",
      "range": {
        "startLine": 1230,
        "startChar": 50,
        "endLine": 1230,
        "endChar": 52
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "271727da_d8b62d76",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 1230,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-08-10T14:47:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87f7f3e0_e3f8f28c",
      "range": {
        "startLine": 1230,
        "startChar": 50,
        "endLine": 1230,
        "endChar": 52
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7d48b39_adc09dc6",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 1234,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-10T13:23:11Z",
      "side": 1,
      "message": "Nit: Add a second row to show the tens digits:\n\n  |      3      |333333322|222222221|       1      |111111110|000000000|\n  |      9      |654321098|765432109|       8      |765432109|876543210|\n\n?",
      "range": {
        "startLine": 1234,
        "startChar": 0,
        "endLine": 1234,
        "endChar": 75
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a72a3712_54d50cb0",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 1234,
      "author": {
        "id": 1052304
      },
      "writtenOn": "2015-08-10T14:47:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7d48b39_adc09dc6",
      "range": {
        "startLine": 1234,
        "startChar": 0,
        "endLine": 1234,
        "endChar": 75
      },
      "revId": "a0576a84b8dca9b17dd052fea3e23b5340659978",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}