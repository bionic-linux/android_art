{
  "comments": [
    {
      "key": {
        "uuid": "f97da841_cd5baf01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-01-17T20:05:55Z",
      "side": 1,
      "message": "I am pretty sure that was originally intentional. We shouldn\u0027t try to run the Java stacktrace handler on just any thread or any breakage, for example. So please don\u0027t call this an \"issue,\" but rather a generalization, and make sure that the handler won\u0027t just go belly up now.",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "f4ed7e8b19b24444a7cdd600a8c211aafd3bc0d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45fd1ff9_519d4f41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-01-17T20:46:44Z",
      "side": 1,
      "message": "The first line of the Java stack trade handler checks if it is in generated code but with a less restrictive check then the generated code check. I\u0027m pretty sure that it being there was just a bug",
      "parentUuid": "f97da841_cd5baf01",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "f4ed7e8b19b24444a7cdd600a8c211aafd3bc0d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8298d1da_08305bf0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2018-01-17T21:05:47Z",
      "side": 1,
      "message": "Yeah I\u0027m pretty sure that the non-generated only called in generated is just a mistake that was made when dealing with this comment: https://android-review.googlesource.com/c/platform/art/+/345847/2/runtime/fault_handler.cc#b152 that got passed review.\n\nPrior to that CL the HandleFaultByOtherHandlers was called where I call it here.\n\n+\n+    if (IsInGeneratedCode(info, context, true)) {\n+      VLOG(signals) \u003c\u003c \"in generated code, looking for handler\";\n+      for (const auto\u0026 handler : generated_code_handlers_) {\n+        VLOG(signals) \u003c\u003c \"invoking Action on handler \" \u003c\u003c handler;\n+        if (handler-\u003eAction(sig, info, context)) {\n+          // We have handled a signal so it\u0027s time to return from the\n+          // signal handler to the appropriate place.\n+          return;\n+        }\n       }\n-    }\n \n-    // We hit a signal we didn\u0027t handle.  This might be something for which\n-    // we can give more information about so call all registered handlers to see\n-    // if it is.\n-    if (HandleFaultByOtherHandlers(sig, info, context)) {\n+      // We hit a signal we didn\u0027t handle.  This might be something for which\n+      // we can give more information about so call all registered handlers to\n+      // see if it is.\n+      if (HandleFaultByOtherHandlers(sig, info, context)) {\n         return;\n+      }\n     }\n   }",
      "parentUuid": "45fd1ff9_519d4f41",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "f4ed7e8b19b24444a7cdd600a8c211aafd3bc0d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}