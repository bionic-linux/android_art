{
  "comments": [
    {
      "key": {
        "uuid": "db11db43_9a8c8de8",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 7
      },
      "lineNbr": 557,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T19:00:25Z",
      "side": 1,
      "message": "How about making this kCompilerGenerateReadBarrier?",
      "range": {
        "startLine": 557,
        "startChar": 52,
        "endLine": 557,
        "endChar": 88
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "169a6aee_fc4c891d",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 7
      },
      "lineNbr": 557,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db11db43_9a8c8de8",
      "range": {
        "startLine": 557,
        "startChar": 52,
        "endLine": 557,
        "endChar": 88
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_be41191f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Maybe add that we don\u0027t want to request a temp to the register allocator, as this is a slow path, and we know we can find a caller-save register that is available.",
      "range": {
        "startLine": 478,
        "startChar": 0,
        "endLine": 494,
        "endChar": 39
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_e344ec9d",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "569062ca_be41191f",
      "range": {
        "startLine": 478,
        "startChar": 0,
        "endLine": 494,
        "endChar": 39
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_e64f7e66",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "FindAvailableCallerSaveRegister?",
      "range": {
        "startLine": 495,
        "startChar": 30,
        "endLine": 495,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_c33fe806",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56278298_e64f7e66",
      "range": {
        "startLine": 495,
        "startChar": 30,
        "endLine": 495,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_2086ca82",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 573,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Explain why this should not happen.",
      "range": {
        "startLine": 573,
        "startChar": 0,
        "endLine": 573,
        "endChar": 51
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67fde4b_a4a4ac7a",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 573,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96865a95_2086ca82",
      "range": {
        "startLine": 573,
        "startChar": 0,
        "endLine": 573,
        "endChar": 51
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_4083ce71",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 1988,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "I\u0027d drop, and put the comment lines 1995-2001 at the top of this method. I feel this code as a comment can easily confuse new readers.",
      "range": {
        "startLine": 1988,
        "startChar": 0,
        "endLine": 1988,
        "endChar": 53
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6bf9630_c6ad44ad",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 1988,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "I prefer to keep this as-is for the sake of consistency (all heap reference loads are preceded by that type of comment; and all the heap unpoisoning instrumentation also comes with comments).",
      "parentUuid": "96865a95_4083ce71",
      "range": {
        "startLine": 1988,
        "startChar": 0,
        "endLine": 1988,
        "endChar": 53
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_de46e533",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4104,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 4104,
        "startChar": 0,
        "endLine": 4104,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36220e8b_c80d2f82",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4104,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "569062ca_de46e533",
      "range": {
        "startLine": 4104,
        "startChar": 0,
        "endLine": 4104,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6bf9630_434f863c",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4180,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Not really likewise as there is no \"low move\" for object field get.",
      "range": {
        "startLine": 4179,
        "startChar": 44,
        "endLine": 4180,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_dd942bb8",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4180,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6bf9630_434f863c",
      "range": {
        "startLine": 4179,
        "startChar": 44,
        "endLine": 4180,
        "endChar": 55
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "169a6aee_fcfd6926",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4618,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 4618,
        "startChar": 30,
        "endLine": 4618,
        "endChar": 67
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d67c5259_22b40e3f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 4618,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "169a6aee_fcfd6926",
      "range": {
        "startLine": 4618,
        "startChar": 30,
        "endLine": 4618,
        "endChar": 67
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_3d842fc0",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 5821,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Why did you change this?",
      "range": {
        "startLine": 5814,
        "startChar": 0,
        "endLine": 5821,
        "endChar": 41
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56278298_2638b67b",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 5821,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Because we would be in the same pattern as in HInvoke{Virtual,Interface} when read barriers are on (before I removed them): a call to the read barrier slow path (line 5669) which would trash EAX (which contains the class to be checked against) – because the register allocator does not consider fixed register inputs to be \"live registers\" at that point – followed by an out-of-slow-path call to the InstanceofNonTrivial runtime entry point, which relies on EAX containing that very class.\n\nI added a comment.",
      "parentUuid": "368beea4_3d842fc0",
      "range": {
        "startLine": 5814,
        "startChar": 0,
        "endLine": 5821,
        "endChar": 41
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "169a6aee_3c00b1dc",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6072,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "ditto, why not keeping like before?",
      "range": {
        "startLine": 6070,
        "startChar": 0,
        "endLine": 6072,
        "endChar": 52
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "169a6aee_7cb5d907",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6072,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "169a6aee_3c00b1dc",
      "range": {
        "startLine": 6070,
        "startChar": 0,
        "endLine": 6072,
        "endChar": 52
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_1d8773c7",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6276,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "How about just inlining this here?",
      "range": {
        "startLine": 6276,
        "startChar": 4,
        "endLine": 6276,
        "endChar": 23
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d67c5259_a2f49ef4",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6276,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Why?  That would be code duplication + more lines of code altogether.",
      "parentUuid": "368beea4_1d8773c7",
      "range": {
        "startLine": 6276,
        "startChar": 4,
        "endLine": 6276,
        "endChar": 23
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_0071c678",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6290,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "2 spaces more.",
      "range": {
        "startLine": 6290,
        "startChar": 0,
        "endLine": 6290,
        "endChar": 4
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_1d869382",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 7
      },
      "lineNbr": 6290,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96865a95_0071c678",
      "range": {
        "startLine": 6290,
        "startChar": 0,
        "endLine": 6290,
        "endChar": 4
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569062ca_fe4ba13a",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Comments on x86 also apply to x86_64.",
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96865a95_23125471",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "569062ca_fe4ba13a",
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67fde4b_81ab1adc",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-11-10T22:59:33Z",
      "side": 1,
      "message": "Does that really work? the invoke-\u003eGetLocations will request locations to the inputs that may not match the calling convention. We might get lucky and that\u0027s what we\u0027re doing in our intrinsics code today, but it doesn\u0027t have to be the case in the future.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 69,
        "endChar": 29
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "368beea4_bddd9f95",
        "filename": "compiler/optimizing/intrinsics_x86_64.cc",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-11-11T17:54:32Z",
      "side": 1,
      "message": "Right; I\u0027ve rewritten this to avoid this potential pitfall.",
      "parentUuid": "b67fde4b_81ab1adc",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 69,
        "endChar": 29
      },
      "revId": "723d7f5f28c52dfa89d510985dea6426867737a6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}