{
  "comments": [
    {
      "key": {
        "uuid": "5fc17493_6e928673",
        "filename": "test/665-checker-simd-zero/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-30T19:53:35Z",
      "side": 1,
      "message": "note: I just rewrote one test as an example to keep this CL small and easy to review; a follow up CL will clean up the many, many SIMD tests that have started to duplicate badly.",
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fade1115_0e80df2a",
        "filename": "tools/checker/README",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-11-30T22:47:05Z",
      "side": 1,
      "message": "will",
      "range": {
        "startLine": 81,
        "startChar": 47,
        "endLine": 81,
        "endChar": 50
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "defdb866_fa32840e",
        "filename": "tools/checker/README",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-30T23:01:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fade1115_0e80df2a",
      "range": {
        "startLine": 81,
        "startChar": 47,
        "endLine": 81,
        "endChar": 50
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "317a1f8e_fed1832d",
        "filename": "tools/checker/file_format/checker/parser.py",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-11-30T22:47:05Z",
      "side": 1,
      "message": "What about returning `None` here instead, and handling that case at the call site (line 80)?",
      "range": {
        "startLine": 63,
        "startChar": 10,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aec92554_53b61bad",
        "filename": "tools/checker/file_format/checker/parser.py",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-30T23:01:57Z",
      "side": 1,
      "message": "But what would we do at line 80 then? We cannot return None for the arch, since that would match. We cannot easily come up with something non matching (other than e.g. using \u0027Skip\u0027 as architecture).\n\nSo I would be okay using \u0027Skip\u0027 here, but this seemed an elegant way to return something sensible without matching any of the following checker lines.",
      "parentUuid": "317a1f8e_fed1832d",
      "range": {
        "startLine": 63,
        "startChar": 10,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e6096d3_e52d54c6",
        "filename": "tools/checker/file_format/checker/parser.py",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-12-01T00:25:44Z",
      "side": 1,
      "message": "I see. I think I\u0027d prefer to introduce a new value for that purpose (maybe \u0027NO_ARCH\u0027?). David, what do you think?",
      "parentUuid": "aec92554_53b61bad",
      "range": {
        "startLine": 63,
        "startChar": 10,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53b2ca2a_ab05936f",
        "filename": "tools/checker/file_format/checker/parser.py",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-11-30T22:47:05Z",
      "side": 1,
      "message": "Maybe replace with \"architecture suffix(es)\"?",
      "range": {
        "startLine": 78,
        "startChar": 31,
        "endLine": 78,
        "endChar": 54
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "794300a6_866308dc",
        "filename": "tools/checker/file_format/checker/parser.py",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-11-30T23:01:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53b2ca2a_ab05936f",
      "range": {
        "startLine": 78,
        "startChar": 31,
        "endLine": 78,
        "endChar": 54
      },
      "revId": "1f220bd8edea38b6b852cff061ded4bbf0f24e7a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}