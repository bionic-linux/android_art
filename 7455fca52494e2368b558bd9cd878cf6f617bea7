{
  "comments": [
    {
      "key": {
        "uuid": "e46c2d17_d6dd8400",
        "filename": "compiler/dex/quick/codegen_util.cc",
        "patchSetId": 22
      },
      "lineNbr": 1158,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "Don\u0027t we already do this in optimizing_commpiler.cc after codegen?. Do we need to do it here as well?",
      "range": {
        "startLine": 1155,
        "startChar": 1,
        "endLine": 1158,
        "endChar": 4
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e46c2d17_b6e608d4",
        "filename": "compiler/optimizing/builder.cc",
        "patchSetId": 22
      },
      "lineNbr": 1005,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "It\u0027s hard to make a connection between this \u0027No\u0027 and the first comment in the  if. Either skip it, or add in parentheses No (to what question).",
      "range": {
        "startLine": 1005,
        "startChar": 19,
        "endLine": 1005,
        "endChar": 21
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a466b534_d42bbc7f",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 22
      },
      "lineNbr": 4532,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "you explained in PS14 why this is correct. Could you add the explanation as a doc in the code as well? I had to go back to remember, since comparing the pointer does look weird the first time you see it.",
      "range": {
        "startLine": 4532,
        "startChar": 10,
        "endLine": 4532,
        "endChar": 73
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0456a145_77a63099",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 22
      },
      "lineNbr": 184,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "when will this be different than method_index?\n\ni.e. when is in invoke_instruction-\u003eGetDexMethodIndex() !\u003d invoke_instruction-\u003eAsInvokeStaticOrDirect()-\u003eGetTargetMethod().dex_method_index?",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 28
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0456a145_17a1b47f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 22
      },
      "lineNbr": 2908,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "why does boot-\u003eboot requires fixup for non-relocatable?",
      "range": {
        "startLine": 2908,
        "startChar": 59,
        "endLine": 2908,
        "endChar": 69
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4401793c_31ca1049",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 22
      },
      "lineNbr": 2926,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "This, and the builder implementation suggest that we can have any sort of combination for (MethodLoadKind,CodePtrLocation). E.g. (kDirectAddress, kCallPCRelative). Is this true?",
      "range": {
        "startLine": 2926,
        "startChar": 13,
        "endLine": 2926,
        "endChar": 28
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4ec89d0_cd47a971",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 22
      },
      "lineNbr": 2955,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "Related to the inliner questions, this has a method_index inside it. We also have a separate method_index passed here. Please add docs stating the difference.",
      "range": {
        "startLine": 2955,
        "startChar": 40,
        "endLine": 2955,
        "endChar": 53
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4ec89d0_ed4a6579",
        "filename": "compiler/optimizing/optimizing_compiler.cc",
        "patchSetId": 22
      },
      "lineNbr": 559,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-08-14T11:45:22Z",
      "side": 1,
      "message": "de-dup in a helper",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 559,
        "endChar": 5
      },
      "revId": "7455fca52494e2368b558bd9cd878cf6f617bea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}