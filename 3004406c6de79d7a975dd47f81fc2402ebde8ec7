{
  "comments": [
    {
      "key": {
        "uuid": "a340d856_1ce6bbf5",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 627,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-03-01T14:46:56Z",
      "side": 1,
      "message": "r11 should still be valid, so this can be omitted (including the remember/restore state). Having a single POP restore many registers has some advantages.",
      "range": {
        "startLine": 627,
        "startChar": 4,
        "endLine": 627,
        "endChar": 28
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75efef27_b29dc719",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 627,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-03-01T15:01:19Z",
      "side": 1,
      "message": "It can be omitted, but it is more explicit as written by Chris.  I am happy either way.",
      "parentUuid": "a340d856_1ce6bbf5",
      "range": {
        "startLine": 627,
        "startChar": 4,
        "endLine": 627,
        "endChar": 28
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db1269f_48920740",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 1
      },
      "lineNbr": 627,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-03-02T02:17:29Z",
      "side": 1,
      "message": "Yeah, I went for explicit but I\u0027d be fine if it was removed.",
      "parentUuid": "75efef27_b29dc719",
      "range": {
        "startLine": 627,
        "startChar": 4,
        "endLine": 627,
        "endChar": 28
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3acd06f7_de963889",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-03-01T14:46:56Z",
      "side": 1,
      "message": "There are no .cfi_rel_offset/cfi_restore directives for these saves. I think it would be better to rewrite the code to save registers before doing the aligining SP adjustment and then use a callee-save register instead of x9 as the CFA register (just like on ARM). That shall remove the need for complicated .cfi_escape directives.\n\nUse the macros SAVE_{REG,TWO_REGS}{,_INCREASE_FRAME} and match them with RESTORE_{REG,TWO_REGS}{,_DECREASE_FRAME} below.",
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af5b7b66_71e0a136",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-03-01T15:01:19Z",
      "side": 1,
      "message": "Alternatively, just doing \"dummy\" mov x19, x9 and then using the callee-save x19 would have the same effect without the need to restructure the assembly code.\n\nA find the need to use the expressions a bit sad as well, but it does the trick...",
      "parentUuid": "3acd06f7_de963889",
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b4a1011_5dd74472",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-03-01T15:24:48Z",
      "side": 1,
      "message": "Letting the debugger restore registers properly is better.",
      "parentUuid": "af5b7b66_71e0a136",
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85da36fb_afb49c73",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-03-02T02:17:29Z",
      "side": 1,
      "message": "There was a version that used a mov x19, x9 but then the 570 osr test failed with a trap. I\u0027d be happier if I could have used x19 so that it stayed valid all through the function. I think the problem is that x19 is XSELF, so I don\u0027t think it\u0027s usable for this purpose.\n\nMaybe a different register could be used, but I felt like some complicated unwinding information was better than trying to modify the code. However, if there is an easy modification, to make it easier to follow and less likely that this will cause problems in the future.",
      "parentUuid": "5b4a1011_5dd74472",
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a39eb30_dd126b8e",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-03-02T14:10:07Z",
      "side": 1,
      "message": "AAPCS64 says that \"SP mod 16 \u003d 0\" at a \"public interface\" (and also \"at any point at which memory is accessed via SP, the hardware requires that SP mod 16 \u003d 0\"), so the weird alignment operation above is unnecessary, we just need to round up SAVE_SIZE. And if we drop the SP from saves, it\u0027s already rounded correctly.\n\nRewrite: https://android-review.googlesource.com/631908",
      "parentUuid": "85da36fb_afb49c73",
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ffebef1_ad4b59bb",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 2378,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-03-01T15:01:19Z",
      "side": 1,
      "message": "Vladimir, Nicolas:  Am I correct to think this is redundant?",
      "range": {
        "startLine": 2378,
        "startChar": 4,
        "endLine": 2378,
        "endChar": 14
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f062f231_946f70c3",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 2378,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-03-01T15:04:41Z",
      "side": 1,
      "message": "Not sure, but this might be looked at by our stack walker. But it doesn\u0027t hurt to try removing it :)",
      "parentUuid": "4ffebef1_ad4b59bb",
      "range": {
        "startLine": 2378,
        "startChar": 4,
        "endLine": 2378,
        "endChar": 14
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "041c8f11_0fc8e134",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 1
      },
      "lineNbr": 2378,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-03-01T15:24:48Z",
      "side": 1,
      "message": "Indeed, this looks unnecessary; if the stack walker looked at it, I would expect this to be saved at a specific offset for all platforms. We should remove lines 2378-2379 and insert\n\n    subl LITERAL(__SIZEOF_POINTER__), %esp // Make space for ArtMethod*\n\nbefore line 2377.",
      "parentUuid": "f062f231_946f70c3",
      "range": {
        "startLine": 2378,
        "startChar": 4,
        "endLine": 2378,
        "endChar": 14
      },
      "revId": "3004406c6de79d7a975dd47f81fc2402ebde8ec7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}