{
  "comments": [
    {
      "key": {
        "uuid": "e39b8d7a_06b08ac7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2017-01-13T20:05:11Z",
      "side": 1,
      "message": "Excluding the magic, checksum, signature and file size, the dex file header is a subset of the map_list:\nhttps://source.android.com/devices/tech/dalvik/dex-format.html#map-list\nThe declaration of header extensions is identical to map_items:\nhttps://source.android.com/devices/tech/dalvik/dex-format.html#map-item\nIf extensions describe existing sections, then this is redundant wrt the map_list. If you are adding new sections, why not just add them to the map_list? They should appear there anyway for the property that the map_list fully describes the file.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "233125ed_f20cc064",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-01-15T11:45:28Z",
      "side": 1,
      "message": "There are two new sections in the pipeline for method handles - CallSites and MethodHandles:\n\n  https://goo.gl/Sk5J5C\n\nThere\u0027s a note here on alternatives considered:\n\n  https://goo.gl/nfbG3i\n\nNot sure about \"why not just add them to the map_list\". The new sections will definitely have to appear there, and also the extension header info. It seemed appropriate to have a way of reaching them from the header as it looks like only the DexFileVerifier consumes the map_list.\n\nIt might be better to have the map_list item for extension headers be a HeaderExtensionList as it would allow pointing to the same block of data as the header and/or allow doing a memory comparison that the header extension lists are the same from the header or map_item.",
      "parentUuid": "e39b8d7a_06b08ac7",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_38b5b1d7",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-01-13T19:18:19Z",
      "side": 1,
      "message": "constexpr\n\nI think Nicolas doesn\u0027t like local constants. I\u0027m fine with it, though.",
      "range": {
        "startLine": 563,
        "startChar": 2,
        "endLine": 563,
        "endChar": 14
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_693821ef",
        "filename": "runtime/dex_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-01-16T12:48:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e39b8d7a_38b5b1d7",
      "range": {
        "startLine": 563,
        "startChar": 2,
        "endLine": 563,
        "endChar": 14
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39b8d7a_3bdbebd1",
        "filename": "runtime/dex_file_verifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 2196,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-01-13T19:18:19Z",
      "side": 1,
      "message": "What does this mean? I would have thought size and off can be checked right now to fall into the dex file, but the contents can\u0027t?",
      "range": {
        "startLine": 2196,
        "startChar": 2,
        "endLine": 2196,
        "endChar": 53
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631cfdaf_493d65dd",
        "filename": "runtime/dex_file_verifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 2196,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2017-01-16T12:48:03Z",
      "side": 1,
      "message": "Code can check each extension header starts within the dex file bounds. Without definitions of specific extensions, we can\u0027t check end of data pointed to or alignment.",
      "parentUuid": "e39b8d7a_3bdbebd1",
      "range": {
        "startLine": 2196,
        "startChar": 2,
        "endLine": 2196,
        "endChar": 53
      },
      "revId": "5a3f34018a899c00b236138a96124c2c2acf216b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}