{
  "comments": [
    {
      "key": {
        "uuid": "5fea00f0_664c14ac",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 633,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-06-05T00:48:25Z",
      "side": 1,
      "message": "Bill, do we need to adjust these settings for x86_64?",
      "revId": "44e49e02dbdcd0834fb5fb573b1d68f9ccd1873f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f162cdd_22da8f83",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 633,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-05T02:06:05Z",
      "side": 1,
      "message": "These settings should be fine.  The TODO can be deleted.",
      "parentUuid": "5fea00f0_664c14ac",
      "revId": "44e49e02dbdcd0834fb5fb573b1d68f9ccd1873f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffd8146d_b5fd7f8d",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 633,
      "author": {
        "id": 1039576
      },
      "writtenOn": "2014-06-05T02:28:13Z",
      "side": 1,
      "message": "Thanks you, I\u0027ll remove comment in a next patchset.\n\nCould you please provide some background on why we need these adjustments in reg_pool?",
      "parentUuid": "3f162cdd_22da8f83",
      "revId": "44e49e02dbdcd0834fb5fb573b1d68f9ccd1873f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f162cdd_02b98bda",
        "filename": "compiler/dex/quick/x86/target_x86.cc",
        "patchSetId": 4
      },
      "lineNbr": 633,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2014-06-05T02:58:16Z",
      "side": 1,
      "message": "If I remember correctly, there were some fairly common code patterns in which the method did a small amount of computation/loading and then returned a result.  By starting temp allocation immediately after the return registers, we avoided using the return registers as temps for computation  or to hold a live Dalvik value.  In many cases, this saves a register-to-register copy to set up the return value (or something like that).  It\u0027s also entirely possible that this heuristic trick is no longer useful - I think it was done before we recognized special method patterns (for example, identity methods, single iget methods, methods return a constant, etc).  We now generate special patterns for those things. \n\nIn any event, it\u0027s a minor thing.",
      "parentUuid": "ffd8146d_b5fd7f8d",
      "revId": "44e49e02dbdcd0834fb5fb573b1d68f9ccd1873f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}