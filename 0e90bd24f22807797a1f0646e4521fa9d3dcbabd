{
  "comments": [
    {
      "key": {
        "uuid": "612f9071_8ae40bcc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:10:40Z",
      "side": 1,
      "message": "Give a rationale why you want to remove them? (I saw hit fly by a comment in another CL, but it would be good to have it here too).",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_aa454fb3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-10-27T12:42:52Z",
      "side": 1,
      "message": "This is already mentioned in the commit message. Lines 9-10 are about style and lines 11-13 about readability.",
      "parentUuid": "612f9071_8ae40bcc",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_8aa5eb58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:47:37Z",
      "side": 1,
      "message": "Oh so the \"better\" applies to the current state? I thought it applied to the range-based loops. Maybe add a \"that, compared to iterators, better exposes....\".",
      "parentUuid": "612f9071_aa454fb3",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_aae9cfa2",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1228,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:10:40Z",
      "side": 1,
      "message": "Could you inline this in the for statement and avoid the local variable?",
      "range": {
        "startLine": 1228,
        "startChar": 57,
        "endLine": 1228,
        "endChar": 92
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_ca3a832e",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1228,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-10-27T12:42:52Z",
      "side": 1,
      "message": "It did not fit on the line and I couldn\u0027t think of a decent-looking line break.\n\nI\u0027ll take the GetReversePostOrderSkipEntry() suggestion. Then it will fit.",
      "parentUuid": "612f9071_aae9cfa2",
      "range": {
        "startLine": 1228,
        "startChar": 57,
        "endLine": 1228,
        "endChar": 92
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_cade03f6",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:10:40Z",
      "side": 1,
      "message": "It\u0027d be great to have a GetPostOrder.",
      "range": {
        "startLine": 95,
        "startChar": 49,
        "endLine": 95,
        "endChar": 68
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_0a357b3c",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-10-27T12:42:52Z",
      "side": 1,
      "message": "Would it be OK to specify `auto` as the return type? Because the actual type is quite long, something like\n\n  IterationRange\u003c\n    std::reverse_iterator\u003c\n      ArenaVector\u003cHBasicBlock*\u003e::const_iterator\n    \u003e\n  \u003e",
      "parentUuid": "612f9071_cade03f6",
      "range": {
        "startLine": 95,
        "startChar": 49,
        "endLine": 95,
        "endChar": 68
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_6a2c37f3",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:47:37Z",
      "side": 1,
      "message": "yes :(",
      "parentUuid": "612f9071_0a357b3c",
      "range": {
        "startLine": 95,
        "startChar": 49,
        "endLine": 95,
        "endChar": 68
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_6ada77cf",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-10-27T13:13:50Z",
      "side": 1,
      "message": "I found a bit shorter expression:\n\n  IterationRange\u003cArenaVector\u003cHBasicBlock*\u003e::const_reverse_iterator\u003e\n\nSo I\u0027ll avoid the `auto`.\n\nI\u0027ll also add GetReverseLinearOrder(). In my opinion, \"LinearPostOrder\" sounds odd.",
      "parentUuid": "612f9071_6a2c37f3",
      "range": {
        "startLine": 95,
        "startChar": 49,
        "endLine": 95,
        "endChar": 68
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_4ad3f3eb",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 1986,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-27T12:10:40Z",
      "side": 1,
      "message": "Add GetReversePostOrderSkipEntry?",
      "range": {
        "startLine": 1986,
        "startChar": 59,
        "endLine": 1986,
        "endChar": 78
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "612f9071_2a323f55",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 2
      },
      "lineNbr": 1986,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-10-27T12:42:52Z",
      "side": 1,
      "message": "Sounds OK.",
      "parentUuid": "612f9071_4ad3f3eb",
      "range": {
        "startLine": 1986,
        "startChar": 59,
        "endLine": 1986,
        "endChar": 78
      },
      "revId": "0e90bd24f22807797a1f0646e4521fa9d3dcbabd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}