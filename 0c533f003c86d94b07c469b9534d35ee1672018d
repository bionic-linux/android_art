{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4044c02f_6ebfdca6",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-28T19:18:52Z",
      "side": 1,
      "message": "keep x86 stack size as 8k",
      "range": {
        "startLine": 104,
        "startChar": 3,
        "endLine": 105,
        "endChar": 43
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b80eea_cbdeb5b2",
        "filename": "build/art.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2022-10-29T00:16:30Z",
      "side": 1,
      "message": "If the x86 stack size is set to 8k, these assertions failed:\n\nhttps://cs.android.com/android/platform/superproject/+/master:art/libartbase/arch/instruction_set.cc;l\u003d119?q\u003dart%2Flibartbase%2Farch%2Finstruction_set.c\n\n```\nart/libartbase/arch/instruction_set.cc:119:1: error: static assertion failed due to requirement \u0027IsAligned\u003ckPageSize\u003e(kX86StackOverflowRes\nervedBytes)\u0027: X86 gap not page aligned\nstatic_assert(IsAligned\u003ckPageSize\u003e(kX86StackOverflowReservedBytes), \"X86 gap not page aligned\");\n^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nart/libartbase/arch/instruction_set.cc:120:1: error: static assertion failed due to requirement \u0027IsAligned\u003ckPageSize\u003e(kX86_64StackOverflow\nReservedBytes)\u0027: X86_64 gap not page aligned\nstatic_assert(IsAligned\u003ckPageSize\u003e(kX86_64StackOverflowReservedBytes),\n^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n2 errors generated.\n[ 66% 8784/13179] //art/libartbase:libartbase clang++ arch/instruction_set.cc [linux_bionic]\n```",
      "parentUuid": "4044c02f_6ebfdca6",
      "range": {
        "startLine": 104,
        "startChar": 3,
        "endLine": 105,
        "endChar": 43
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b043ba_027090cc",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-28T19:18:52Z",
      "side": 1,
      "message": "change it to `kIsTargetAndroid ? 16384 : 4096`",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed15927_bfe5ea2e",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-29T00:29:00Z",
      "side": 1,
      "message": "From the kind of errors you are getting it seems like checking this flag isn\u0027t WAI.\n\nCan you instead make it conditional on arch? For arm set it to 16k, and otherwise 4k and see what happens.",
      "parentUuid": "79b043ba_027090cc",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69bb0f09_ad32056c",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2022-10-29T00:44:58Z",
      "side": 1,
      "message": "sure, which variable or flag should I use to check?",
      "parentUuid": "7ed15927_bfe5ea2e",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12a80b1_294b64a7",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-29T00:51:13Z",
      "side": 1,
      "message": "Not completely sure. But some defines might be useful, like `__aarch64__`, `__x86_64__` etc. Not sure what are their 32-bit counterparts.",
      "parentUuid": "69bb0f09_ad32056c",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7f68730_1ec85f15",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2022-11-02T00:16:51Z",
      "side": 1,
      "message": "Using the __arch64__ flag works. See results and logs here: b/254108567#comment11",
      "parentUuid": "c12a80b1_294b64a7",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2260546_cdd28a06",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-11-02T18:25:38Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s what we intended to do. We want to make kPageSize setting to be dependent on this flag. Also, using just `__aarch64__` won\u0027t be sufficient as that only covers ARM 64-bit. I\u0027m not sure though. If it covers 32-bit as well, then it\u0027s fine.\n\nIt would be simpler if you uploaded the patch here as then I can look at the diff from the base patch, rather than in the bug.",
      "parentUuid": "b7f68730_1ec85f15",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5443db8_3a6565f1",
        "filename": "libartbase/base/globals.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2022-11-02T22:42:10Z",
      "side": 1,
      "message": "The changes have been uploaded. Please take a look at it.\n\nIn regards to 32-bit, we are not worried about that case right now because this experiment is just for ARMv8 64-bit and 16KB pages. This cl won\u0027t be merged into the merge branch.",
      "parentUuid": "e2260546_cdd28a06",
      "range": {
        "startLine": 39,
        "startChar": 36,
        "endLine": 39,
        "endChar": 41
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4177aa5_57d6b6d6",
        "filename": "runtime/jit/jit_code_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-28T18:25:17Z",
      "side": 1,
      "message": "keep it at 16KB, as we want to keep it to the lowest possible.",
      "range": {
        "startLine": 186,
        "startChar": 60,
        "endLine": 186,
        "endChar": 64
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14fdc32a_5a1dc987",
        "filename": "runtime/jit/jit_code_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2022-10-28T18:32:31Z",
      "side": 1,
      "message": "There is an issue. Because this value is later divided by 2 and checked for page alignment. (So needs to be some multiple of 2 * page size)",
      "parentUuid": "b4177aa5_57d6b6d6",
      "range": {
        "startLine": 186,
        "startChar": 60,
        "endLine": 186,
        "endChar": 64
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86195ffb_b76f78b0",
        "filename": "runtime/jit/jit_code_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-10-28T19:18:52Z",
      "side": 1,
      "message": "In that case, let\u0027s set it with `2 * kPageSize`",
      "parentUuid": "14fdc32a_5a1dc987",
      "range": {
        "startLine": 186,
        "startChar": 60,
        "endLine": 186,
        "endChar": 64
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd012aa9_4c69c4b6",
        "filename": "runtime/jit/jit_code_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2022-10-29T00:16:30Z",
      "side": 1,
      "message": "After applying the changes suggested, I found compiler and runtime errors. See b/254108567#comment7",
      "parentUuid": "86195ffb_b76f78b0",
      "range": {
        "startLine": 186,
        "startChar": 60,
        "endLine": 186,
        "endChar": 64
      },
      "revId": "0c533f003c86d94b07c469b9534d35ee1672018d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}