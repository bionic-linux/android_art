{
  "comments": [
    {
      "key": {
        "uuid": "8abb8459_f213f7a1",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-05-31T17:22:08Z",
      "side": 1,
      "message": "Could you please add a comment for this (under what situations this happens)?",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e156a6ae_e54f2146",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-05-31T17:27:40Z",
      "side": 1,
      "message": "There is a comment in the commit message. I do not think this deserves a comment in the code. Explaining the kWithoutReadBarrier over and over would just clutter the code.",
      "parentUuid": "8abb8459_f213f7a1",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5959e1d_c7ad2562",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-05-31T17:47:41Z",
      "side": 1,
      "message": "If that is really the only case this happens, then why is this check so liberal? Why is it not \"(kWithoutReadBarrier \u0026\u0026 IsIdxLoaded())?\"\n\n(I do usually not want to have to blame a line to find the commit to understand things, but oh well.)",
      "parentUuid": "e156a6ae_e54f2146",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b735f452_48512667",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-01T10:18:24Z",
      "side": 1,
      "message": "Why was the check here in the first place? Why would we want to prevent using the declaring class of the field in the short period between the field\u0027s construction while the class is in kIdx until the class reaches kLoaded shortly thereafter?\n\nThis check comes from 0cfe1fb7060576d047f7f894fc0d8b87de84fcab and the corresponding check for methods has been relaxed in 65ca077378935beb113bb5aec5e890054ca3286e . (Neither is visible in AOSP gerrit, you need to checkout the AOSP art project or use the internal gerrit.)",
      "parentUuid": "f5959e1d_c7ad2562",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12c5b3c_47772987",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2018-06-01T15:09:30Z",
      "side": 1,
      "message": "Because a class shouldn\u0027t be touched when it isn\u0027t at least in the loaded state, as it isn\u0027t complete and invariants don\u0027t hold. It\u0027s a very simple invariant, really. In the Idx stage, nothing but the class-linker should be working on it, and that doesn\u0027t need to call GetDeclaringClass.",
      "parentUuid": "b735f452_48512667",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7258650_27639e5f",
        "filename": "runtime/art_field-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-06-01T15:27:59Z",
      "side": 1,
      "message": "I think ClassLinker has exclusive access to the class all the way until kResolved but asserting IsResolved() || IsErroneous() would make it much harder for the ClassLinker to do its work.",
      "parentUuid": "b12c5b3c_47772987",
      "range": {
        "startLine": 46,
        "startChar": 9,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "9ba74087008b048965839a4ee8a2a40a1c379b4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}