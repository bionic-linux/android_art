{
  "comments": [
    {
      "key": {
        "uuid": "f3c695d8_c52a5a02",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1867,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2014-08-30T00:09:35Z",
      "side": 1,
      "message": "Is there a better way to handle OOME than crashing?",
      "range": {
        "startLine": 1867,
        "startChar": 0,
        "endLine": 1867,
        "endChar": 48
      },
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13a1690c_947a4c39",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1867,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-08-30T00:18:40Z",
      "side": 1,
      "message": "Agreed, I don\u0027t like this too. In the current use-cases, image writing and in the debugger its not as necessary to be robust.",
      "parentUuid": "f3c695d8_c52a5a02",
      "range": {
        "startLine": 1867,
        "startChar": 0,
        "endLine": 1867,
        "endChar": 48
      },
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133de99e_2e3b27e4",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1867,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2014-08-31T09:06:32Z",
      "side": 1,
      "message": "FYI, in one JDWP test there are 3000+ classes in the table. In the context of a big app being debugged, we could have even more so I\u0027m concerned we could crash in this case. \n\nTo avoid the OOME risk, maybe we could visit classes by chunks? We\u0027d need to manage a kind of chunk index though. Besides a class could be added into the list in the meantime so we\u0027d need to handle that case too.",
      "parentUuid": "13a1690c_947a4c39",
      "range": {
        "startLine": 1867,
        "startChar": 0,
        "endLine": 1867,
        "endChar": 48
      },
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "532cc17a_cb68c9fd",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1867,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-09-02T00:06:27Z",
      "side": 1,
      "message": "3000+ classes matches my expectations, we have 3000 classes in the image. Post GC we have 6MB of free heap, 12KB should be ok. I\u0027m not sure about visiting in chunks, the easiest way would be to do this in Java code and then we get similar memory size issues. I think moving the classes table to Java code would be a longer term solution to this.",
      "parentUuid": "133de99e_2e3b27e4",
      "range": {
        "startLine": 1867,
        "startChar": 0,
        "endLine": 1867,
        "endChar": 48
      },
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a7bd22_5199149b",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1873,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2014-08-29T23:39:12Z",
      "side": 1,
      "message": "What if classes are added during this loop?",
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a7bd22_7164109a",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 2
      },
      "lineNbr": 1873,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-08-30T00:16:21Z",
      "side": 1,
      "message": "I\u0027ll add to the comment. There\u0027s a race in either the kMovingClasses case or not, with classes being added after the classes were visited.",
      "parentUuid": "b3a7bd22_5199149b",
      "revId": "4ff7c93f2eaf8bbb3e9e578b05adb325ce3e7e51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}