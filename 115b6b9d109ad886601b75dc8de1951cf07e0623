{
  "comments": [
    {
      "key": {
        "uuid": "c9f4149e_21755f75",
        "filename": "runtime/mirror/object-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-03T17:53:33Z",
      "side": 1,
      "message": "Why not use a CHECK here?",
      "range": {
        "startLine": 243,
        "startChar": 4,
        "endLine": 243,
        "endChar": 7
      },
      "revId": "115b6b9d109ad886601b75dc8de1951cf07e0623",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b515672_5dd9dea7",
        "filename": "runtime/mirror/object-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-03T18:04:10Z",
      "side": 1,
      "message": "This is only refactored. You gotta asked Hiroshi.\n\nIn general, we use LOG(FATAL) for unreachable branches, and at least previously GCC and Clang could not delete the compile-time branch because CHECK uses LIKELY().\n\nSo at most I would put it as a DCHECK, so that at least the the NDEBUG build is guaranteed to not have any branch. Opinions?",
      "parentUuid": "c9f4149e_21755f75",
      "range": {
        "startLine": 243,
        "startChar": 4,
        "endLine": 243,
        "endChar": 7
      },
      "revId": "115b6b9d109ad886601b75dc8de1951cf07e0623",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c71e1ee7_9c95c324",
        "filename": "runtime/mirror/object-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-03T19:17:09Z",
      "side": 1,
      "message": "kUseBakerReadBarrier is known at compile time, shouldn\u0027t the condition be optimized out even with a LIKELY?",
      "parentUuid": "6b515672_5dd9dea7",
      "range": {
        "startLine": 243,
        "startChar": 4,
        "endLine": 243,
        "endChar": 7
      },
      "revId": "115b6b9d109ad886601b75dc8de1951cf07e0623",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692ee28c_d6bbe323",
        "filename": "runtime/mirror/object.h",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2017-02-03T17:53:33Z",
      "side": 1,
      "message": "Not necessary",
      "range": {
        "startLine": 621,
        "startChar": 16,
        "endLine": 621,
        "endChar": 22
      },
      "revId": "115b6b9d109ad886601b75dc8de1951cf07e0623",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3f4aea6_ca2fde24",
        "filename": "runtime/mirror/object.h",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-02-03T18:04:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "692ee28c_d6bbe323",
      "range": {
        "startLine": 621,
        "startChar": 16,
        "endLine": 621,
        "endChar": 22
      },
      "revId": "115b6b9d109ad886601b75dc8de1951cf07e0623",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}