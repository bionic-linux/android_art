{
  "comments": [
    {
      "key": {
        "uuid": "ae6e4eef_c6f16d24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-09-23T17:33:18Z",
      "side": 1,
      "message": "LGTM, Minor suggestion below.",
      "revId": "a48f1710d9d6205549ced0d7cbd4becc1c9eb835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd2fbf89_dd6ecf69",
        "filename": "test/096-array-copy-concurrent-gc/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-09-23T17:33:18Z",
      "side": 1,
      "message": "I would make temp local, and add some use of it in the loop, like\n\nif (temp.length() \u003c 22) { System.out.println(\"bad length\"); }\n\nto make it harder to optimize away. As it stands, it\u0027s probably OK only because we build this debuggable(?). Otherwise all but the last iteration could be fairly easily optimized away, though we probably don\u0027t.",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "a48f1710d9d6205549ced0d7cbd4becc1c9eb835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1dfc389_fdb1b5cb",
        "filename": "test/096-array-copy-concurrent-gc/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2020-09-23T18:07:52Z",
      "side": 1,
      "message": "My mistake. I wanted to make temp static field, but mistakenly omitted the keyword. Assignments to a static field would not get optimized away, right?",
      "parentUuid": "bd2fbf89_dd6ecf69",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "a48f1710d9d6205549ced0d7cbd4becc1c9eb835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de515b1_cafb0c66",
        "filename": "test/096-array-copy-concurrent-gc/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-09-23T20:05:30Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s guaranteed if the same static field is immediately overwritten, without intervening synchronization. It\u0027s fine to eliminate redundant stores. Another thread might be watching the field, but it will just look like it missed the intermediate assignment. I suspect ART and R8 don\u0027t currently do this, but I wouldn\u0027t bet on it.\n\nThe optimization would require knowing that constructing strings doesn\u0027t have weird side-effects. But without that, we couldn\u0027t eliminate the calls anyway.",
      "parentUuid": "a1dfc389_fdb1b5cb",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "a48f1710d9d6205549ced0d7cbd4becc1c9eb835",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}