{
  "comments": [
    {
      "key": {
        "uuid": "12552618_8cbcc4dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-22T08:31:24Z",
      "side": 1,
      "message": "I think we should be robust here in the presence of exceptions. Can we instead make generic JNI handle that case?",
      "range": {
        "startLine": 12,
        "startChar": 31,
        "endLine": 13,
        "endChar": 52
      },
      "revId": "05d8a35163e4cca80e6ca53d9e10e3e28e97a6fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ba188c_3e668ba4",
        "filename": "runtime/art_method.h",
        "patchSetId": 1
      },
      "lineNbr": 732,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-21T17:17:19Z",
      "side": 1,
      "message": "nit: It\u0027s not a hint. @CriticalNative changes the calling convention.\n\nSo please consider e.g. \"IsAnnotatedWithOptimization\" ?",
      "range": {
        "startLine": 732,
        "startChar": 7,
        "endLine": 732,
        "endChar": 38
      },
      "revId": "05d8a35163e4cca80e6ca53d9e10e3e28e97a6fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "532fa080_fdb43386",
        "filename": "runtime/dex_file_annotations.cc",
        "patchSetId": 1
      },
      "lineNbr": 787,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-06-21T17:23:53Z",
      "side": 1,
      "message": "Why isn\u0027t this using the klass\u0027s classloader? It\u0027ll still be null for criticalnative/fastnative won\u0027t it?\n\nAnd if something else uses this function later it might be surprising that allow_class_resolution\u003dfalse also restricts it to only the bootclasspath classloader.",
      "revId": "05d8a35163e4cca80e6ca53d9e10e3e28e97a6fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}