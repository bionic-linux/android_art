{
  "comments": [
    {
      "key": {
        "uuid": "66bdf75d_c9dad25a",
        "filename": "runtime/thread.cc",
        "patchSetId": 1
      },
      "lineNbr": 1846,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-08-06T18:52:57Z",
      "side": 1,
      "message": "Maybe add some logic to display the error in this case (as in https://android.googlesource.com/platform/art/+/refs/heads/master/runtime/jit/jit_memory_region.cc#522)?",
      "range": {
        "startLine": 1846,
        "startChar": 44,
        "endLine": 1846,
        "endChar": 80
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7d8594_2fe5df9f",
        "filename": "runtime/thread.cc",
        "patchSetId": 1
      },
      "lineNbr": 1846,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-07T11:08:54Z",
      "side": 1,
      "message": "I think it\u0027s OK to fail here (and I\u0027m not changing that behavior in this CL).",
      "parentUuid": "66bdf75d_c9dad25a",
      "range": {
        "startLine": 1846,
        "startChar": 44,
        "endLine": 1846,
        "endChar": 80
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea2447e_5bc5673c",
        "filename": "runtime/thread.cc",
        "patchSetId": 1
      },
      "lineNbr": 1846,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-08-07T11:52:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6a7d8594_2fe5df9f",
      "range": {
        "startLine": 1846,
        "startChar": 44,
        "endLine": 1846,
        "endChar": 80
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d802a6fc_51c90e42",
        "filename": "test/720-thread-priority/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-08-06T18:52:57Z",
      "side": 1,
      "message": "Shouldn\u0027t these be `volatile`, as they are being accessed by both threads?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 38
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d0a90ee_7d59306e",
        "filename": "test/720-thread-priority/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-08-07T11:08:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d802a6fc_51c90e42",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 38
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd350721_88c4eac7",
        "filename": "test/720-thread-priority/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2019-08-07T20:36:02Z",
      "side": 1,
      "message": "It doesn\u0027t look to me like they\u0027re concurrently accessed, so I don\u0027t think the volatile is necessary.  The CountDownLatches effectively act as a lock.",
      "parentUuid": "6d0a90ee_7d59306e",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 38
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d3f827d_d59b2c8a",
        "filename": "test/720-thread-priority/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2019-08-07T22:20:25Z",
      "side": 1,
      "message": "Right; I missed this bit from the `CountDownLatch` documentation:\n\n\u003e Memory consistency effects: Until the count reaches zero, actions in a thread prior to calling countDown() happen-before actions following a successful return from a corresponding await() in another thread.",
      "parentUuid": "cd350721_88c4eac7",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 38
      },
      "revId": "2d398d2dec4276b170ea77f28f267d1b597d6037",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}