{
  "comments": [
    {
      "key": {
        "uuid": "240ba519_38b0e9f7",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-12T11:12:19Z",
      "side": 1,
      "message": "How do these early return statements prevent linker errors Shouldn\u0027t this be achieved with the preprocessor instead?",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d5f9cd_d1e684d5",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1076443
      },
      "writtenOn": "2015-08-13T02:47:05Z",
      "side": 1,
      "message": "Compiler will opt out the code because kCanSimulate is a compile time constant.\nSo linker will not try to find symbols vixl::Simulator::*.\nQuite a few #ifdef will be introduced if we resort to preprocessor. Even declaration of simulator_ will be wrapped because -Wunused. What\u0027s your opinion?",
      "parentUuid": "240ba519_38b0e9f7",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446259ef_49b1a14c",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-13T09:45:33Z",
      "side": 1,
      "message": "Alright; I thought the VIXL symbols would be looked up even if the compiler could evaluate the conditions at compile-time.  I just tried with a silvermont (fugu) target and it works.",
      "parentUuid": "44d5f9cd_d1e684d5",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "847531bb_760d2ec6",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1076443
      },
      "writtenOn": "2015-08-13T10:16:12Z",
      "side": 1,
      "message": "I will leave this unchanged, and fix the next 3 issues.",
      "parentUuid": "446259ef_49b1a14c",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c44d6987_e5675618",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-12T11:12:19Z",
      "side": 1,
      "message": "Wouldn\u0027t it be safer to have\n\n  DCHECK(kCanSimulate);\n\nhere instead?  The behavior of UNREACHABLE (i.e. __builtin_unreachable) is undefined at run time, and I think we only use it with LOG(FATAL) (or an abortion/exit statement) in ART.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 3
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d5f9cd_519cd449",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1076443
      },
      "writtenOn": "2015-08-13T02:47:05Z",
      "side": 1,
      "message": "Agree.",
      "parentUuid": "c44d6987_e5675618",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 3
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240ba519_58ab9d8f",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-12T11:12:19Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 65,
        "endChar": 3
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8400d1f0_db4d7394",
        "filename": "runtime/simulator/code_simulator_arm64.cc",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-08-12T11:12:19Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 3
      },
      "revId": "940cb788e97694f40ed3c191252d13788ee7bc5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}