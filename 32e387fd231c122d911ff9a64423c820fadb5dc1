{
  "comments": [
    {
      "key": {
        "uuid": "d529edd3_743414f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-08-03T20:10:45Z",
      "side": 1,
      "message": "The benchmark part can be extracted to run on golem.\n\nI think we should keep the run-tests for correctness and if we need the benchmark we can put it to go/lem.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 13
      },
      "revId": "32e387fd231c122d911ff9a64423c820fadb5dc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95c483da_9b97adc8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2020-08-03T22:25:21Z",
      "side": 1,
      "message": "I think the problem with that is that the benchmark was used to obtain the sets of 15 measurements for aosp/1331512. And I think we need all of them when evaluating BigInteger changes. I don\u0027t know of a way to generate groups of measurements like that in go/lem. Do we really want 15 BigInteger benchmarks in go/lem?\n\nThis is essentially a way of preserving the benchmarking code, getting some added test coverage, without regularly reporting a bunch of rather specialized benchmarks.\n\nIf we want something in go/lem (probably we do) I\u0027d suggest that we  limit it to the harmonic series benchmark run on something like 50 digit integers, and modPow run at 1000 digits, and leave it at those two. Two BigInteger benchmarks seems reasonable to me. (It might make sense to use BigDecimal for the first one, since that has better coverage, and the code is more natural.)",
      "parentUuid": "d529edd3_743414f1",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 13
      },
      "revId": "32e387fd231c122d911ff9a64423c820fadb5dc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d75a4fb_febf36f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 15,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2020-08-04T01:01:07Z",
      "side": 1,
      "message": "In go/lem you can run the benchmarks with a WIP CL which does not require submission: so it should be easy to analyze and leaves a trace (so it\u0027s easier to quote and not subject to possible error measurements). \n\nI don\u0027t have a strong opinion whether or not we want to run these specialized benchmarks all the time: are they expensive? if they are fast to run we might as well.\n\nDaulet/Pete, does libcore have any other benchmarks?",
      "parentUuid": "95c483da_9b97adc8",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 13
      },
      "revId": "32e387fd231c122d911ff9a64423c820fadb5dc1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}