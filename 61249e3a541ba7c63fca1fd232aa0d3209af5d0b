{
  "comments": [
    {
      "key": {
        "uuid": "d0ca981d_d43afec0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 9,
        "startChar": 54,
        "endLine": 9,
        "endChar": 62
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8b2325_55dc9c90",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0ca981d_d43afec0",
      "range": {
        "startLine": 9,
        "startChar": 54,
        "endLine": 9,
        "endChar": 62
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95eb547d_c2ebd056",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "That\u0027s not fully true. Same below.",
      "range": {
        "startLine": 24,
        "startChar": 3,
        "endLine": 27,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c62efc_c5cfa7a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "You are right but we cannot always tell the difference (when it\u0027s from constants like these tests) so I think it\u0027s acceptable to always just accept both. Changed description slightly.",
      "parentUuid": "95eb547d_c2ebd056",
      "range": {
        "startLine": 24,
        "startChar": 3,
        "endLine": 27,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "602a5a21_ec9defbe",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 627,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "Infer? From or With?",
      "range": {
        "startLine": 627,
        "startChar": 13,
        "endLine": 627,
        "endChar": 32
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c45099a8_b1f32285",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 627,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "602a5a21_ec9defbe",
      "range": {
        "startLine": 627,
        "startChar": 13,
        "endLine": 627,
        "endChar": 32
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd40a666_d721a395",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 646,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "Unless there\u0027s a follow-up, I don\u0027t see why you should add the fill-register-lines thing. We already have a mode for an interesting dex pc (check the lock stuff).\n\nIn fact, if that\u0027s all you want to implement, verifier details like register lines shouldn\u0027t be leaked. At most RegType (though that\u0027s already not great).",
      "range": {
        "startLine": 646,
        "startChar": 40,
        "endLine": 646,
        "endChar": 68
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "915295f4_482cdea0",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 646,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "We don\u0027t know if this will be an \u0027interesting\u0027 PC. We could have just single-stepped a few instructions and tried to do SetLocalVariable there. We\u0027d need to perform a probe to get the nearest previous \u0027interesting\u0027 line and (if I read the verifier correct) it\u0027s not quite right since things like a line of moves could end up with the type being wrong on this exact pc.",
      "parentUuid": "bd40a666_d721a395",
      "range": {
        "startLine": 646,
        "startChar": 40,
        "endLine": 646,
        "endChar": 68
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e91c989_95fd9311",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 646,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T23:02:10Z",
      "side": 1,
      "message": "\"Interesting\" in the context of the verifier just means \"ensure there\u0027s a reg line here.\" So all the other comments don\u0027t really matter, it just ensures that you\u0027ll get a result for the call here.",
      "parentUuid": "915295f4_482cdea0",
      "range": {
        "startLine": 646,
        "startChar": 40,
        "endLine": 646,
        "endChar": 68
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64f29d69_4bdac314",
        "filename": "openjdkjvmti/ti_method.cc",
        "patchSetId": 3
      },
      "lineNbr": 646,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T23:07:06Z",
      "side": 1,
      "message": "yeah but to ensure there is a reg-line there we\u0027d need to pass down the PC and everything pretty deep due to the way we create the reg-line-cache. It honestly doesn\u0027t seem worth it for a fallback mode.",
      "parentUuid": "8e91c989_95fd9311",
      "range": {
        "startLine": 646,
        "startChar": 40,
        "endLine": 646,
        "endChar": 68
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d73442c6_d2a5df78",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "Better name and docs necessary.\n\n(Otherwise make the method private and the client a friend. We\u0027ve been hesitant to open the verifier generically.)",
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9935015_3dc95f34",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d73442c6_d2a5df78",
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06d1c7c6_5def19b4",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "Since you\u0027re touching the API, see if you can remove this.",
      "range": {
        "startLine": 264,
        "startChar": 2,
        "endLine": 279,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35e81ec1_199375a6",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "It\u0027s used by dex2oat/verifier_deps_test.cc",
      "parentUuid": "06d1c7c6_5def19b4",
      "range": {
        "startLine": 264,
        "startChar": 2,
        "endLine": 279,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffbf4e34_0c88eff9",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T23:02:10Z",
      "side": 1,
      "message": "Sure, but it also just runs the verifier, with a specific set of parameters...",
      "parentUuid": "35e81ec1_199375a6",
      "range": {
        "startLine": 264,
        "startChar": 2,
        "endLine": 279,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b311a3b_0002e077",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T23:07:06Z",
      "side": 1,
      "message": "I\u0027m not sure what you\u0027re suggesting?",
      "parentUuid": "ffbf4e34_0c88eff9",
      "range": {
        "startLine": 264,
        "startChar": 2,
        "endLine": 279,
        "endChar": 44
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0c83fa7_a90d4c9a",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2019-05-21T18:45:31Z",
      "side": 1,
      "message": "Shouldn\u0027t be here. Move to the internal class.",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 28
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d04ee0b_3b56f775",
        "filename": "runtime/verifier/method_verifier.h",
        "patchSetId": 3
      },
      "lineNbr": 345,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2019-05-21T21:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0c83fa7_a90d4c9a",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 28
      },
      "revId": "61249e3a541ba7c63fca1fd232aa0d3209af5d0b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}