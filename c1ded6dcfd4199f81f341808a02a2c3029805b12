{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "36b03b9a_b2dcc55c",
        "filename": "compiler/optimizing/execution_subgraph_test.cc",
        "patchSetId": 70
      },
      "lineNbr": 791,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-03T15:26:22Z",
      "side": 1,
      "message": "This is not what I had in mind. I wanted you to add the \"-1\" back to `kTestMaxSuccessors` at line 780. In other words, just add the \"+ 1\" here to the version from PS64.",
      "range": {
        "startLine": 791,
        "startChar": 54,
        "endLine": 791,
        "endChar": 75
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f96edd91_495b1989",
        "filename": "compiler/optimizing/execution_subgraph_test.cc",
        "patchSetId": 70
      },
      "lineNbr": 791,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-03T18:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36b03b9a_b2dcc55c",
      "range": {
        "startLine": 791,
        "startChar": 54,
        "endLine": 791,
        "endChar": 75
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db5e1f94_183d2c38",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 606,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-03T15:26:22Z",
      "side": 1,
      "message": "`IsPureUnknown` and reorder to be the first check.",
      "range": {
        "startLine": 606,
        "startChar": 14,
        "endLine": 606,
        "endChar": 23
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbb6e479_1880934e",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 606,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-03T18:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db5e1f94_183d2c38",
      "range": {
        "startLine": 606,
        "startChar": 14,
        "endLine": 606,
        "endChar": 23
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2278fc41_3524f909",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2150,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-03T15:26:22Z",
      "side": 1,
      "message": "Add blank line.",
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49fb08a1_34e9de23",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2150,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-03T18:25:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2278fc41_3524f909",
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69343f63_41f492b2",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2222,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-03T15:26:22Z",
      "side": 1,
      "message": "But maybe we have already visited that Phi placeholder and this shall have no effect.\n\nYou should increase test coverage by adding tests with extra exit nodes. (Similar to Main.test34() in 530-checker-lse.)",
      "range": {
        "startLine": 2218,
        "startChar": 12,
        "endLine": 2222,
        "endChar": 13
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0cfc49a_eaeba6d3",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2222,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-03T18:25:26Z",
      "side": 1,
      "message": "It will get pushed onto the work-queue if it\u0027s not kept and if it is then we don\u0027t need to do anything since it was already kept.\n\nTest done. (I assume you mean multiple return-blocks. There is never more than one exit node.) It did show me that there was a small case I missed in HandleExit.",
      "parentUuid": "69343f63_41f492b2",
      "range": {
        "startLine": 2218,
        "startChar": 12,
        "endLine": 2222,
        "endChar": 13
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0669af8_8f96d484",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2222,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-06T14:46:28Z",
      "side": 1,
      "message": "I\u0027m wondering whether it is possible here that\n\n    is_partial_kept_merged_unknown \u0026\u0026\n    !kept_merged_unknowns_.IsBitSet(phi_placeholder_index) \u0026\u0026\n    phi_placeholders_to_search_for_kept_stores_.IsBitSet(phi_placeholder_index)\n\nIf yes, we should add such test and my comment above applies.\nIf not, we should DCHECK() that.",
      "parentUuid": "f0cfc49a_eaeba6d3",
      "range": {
        "startLine": 2218,
        "startChar": 12,
        "endLine": 2222,
        "endChar": 13
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec20a72e_3ebdd9ec",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2222,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-06T19:13:16Z",
      "side": 1,
      "message": "I\u0027m pretty sure that\u0027s not possible. Added dcheck.",
      "parentUuid": "e0669af8_8f96d484",
      "range": {
        "startLine": 2218,
        "startChar": 12,
        "endLine": 2222,
        "endChar": 13
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfb8f3a4_64c6c511",
        "filename": "compiler/optimizing/load_store_elimination.cc",
        "patchSetId": 70
      },
      "lineNbr": 2222,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-06T21:59:28Z",
      "side": 1,
      "message": "Actually the dcheck is wrong since we don\u0027t clear the bits.\n\nThese are the kept phis so everything is safe since either we already visited it and kept the phi-predecessors or haven\u0027t and we add it to the work queue.",
      "parentUuid": "ec20a72e_3ebdd9ec",
      "range": {
        "startLine": 2218,
        "startChar": 12,
        "endLine": 2222,
        "endChar": 13
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c6a04c2_967afde9",
        "filename": "libartbase/base/bit_vector.h",
        "patchSetId": 70
      },
      "lineNbr": 417,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2020-11-03T15:26:22Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 417,
        "startChar": 35,
        "endLine": 417,
        "endChar": 44
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "804483c3_e678e52e",
        "filename": "libartbase/base/bit_vector.h",
        "patchSetId": 70
      },
      "lineNbr": 417,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2020-11-05T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c6a04c2_967afde9",
      "range": {
        "startLine": 417,
        "startChar": 35,
        "endLine": 417,
        "endChar": 44
      },
      "revId": "c1ded6dcfd4199f81f341808a02a2c3029805b12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}