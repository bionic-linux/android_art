{
  "comments": [
    {
      "key": {
        "uuid": "cdc95346_eb8b913b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2016-12-01T10:48:40Z",
      "side": 1,
      "message": "Probably worth referring to commit 22f71d215679955372d8e24db3771fc7173dccb5, the one that added the check you\u0027re weakening.\n\nAs mentioned on previous review (but too late to influence the commit):\n\nFor somebody not steeped in runtime internals like myself a bit more context and the behavior if the check fails in the commit comment would be nice. A bug number would also be good, if only so later issues / discussions / knowledge have somewhere obvious to go (and rollback record, if needed)\n\nOTTOMH, there are a few classes in the wider libcore that use system properties that affect static initialization. I know you removed a few so that we can pre-initialize classes in the runtime but I don\u0027t think we\u0027ve done all. It is conceivable that those system properties (or other things outside of our control / \"hidden variables\") could cause static initialization to fail.\n\nGiven it *expected* not to fail static initialization for boot classes but it *might* happen, should we start with a warning log instead? I\u0027ll happily confess I don\u0027t know the difference between a CHECK and DCHECK.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 4
      },
      "revId": "1175f12d3a9f37119db2fa304d5b0f4411b71ae8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adbc1f98_0a1e1b8b",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-12-01T09:55:11Z",
      "side": 1,
      "message": "Following our discussions from last change and per chat, we cannot guarantee this, but I agree having some way for us to know about it is useful.\n\nI think using DCHECK is not in the right philosophy though, as we use DCHECK for expensive things that could have been a CHECK in the first place.\n\nIf you really, really, want to abort the app, how about:\nLOG(kIsDebugBuild ? FATAL : WARNING) \u003c\u003c ...\n\n?",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 249,
        "endChar": 3
      },
      "revId": "1175f12d3a9f37119db2fa304d5b0f4411b71ae8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}