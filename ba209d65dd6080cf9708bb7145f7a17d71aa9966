{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "01dbd369_8674a179",
        "filename": "compiler/optimizing/instruction_simplifier_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-05T13:15:36Z",
      "side": 0,
      "message": "Have you thought about keeping this method but removing lines 60-62, and removing line 71 too?\n\nIf the SHL doesn\u0027t have uses, it will be removed by DCE in a later pass so we don\u0027t have to do it here. This would make it so that the optimizations can be done one-by-one, and we don\u0027t have to go through all of SHL\u0027s uses when there are no ADD insructions that use it.\n\nIf we move forward with this, the `      if (left \u003d\u003d right) {` check that you did is needed and maybe we can do it in `VisitAdd`",
      "revId": "ba209d65dd6080cf9708bb7145f7a17d71aa9966",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "049406be_16f2b700",
        "filename": "compiler/optimizing/instruction_simplifier_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-08T07:47:40Z",
      "side": 0,
      "message": "On second thought, the `if (left \u003d\u003d right) {` might not be needed. In that case, the:\n```\n1: Shl\n2: Add[1, 1]\n```\nwould be turned into\n```\n1: Shl\n2: Riscv64ShiftAdd\n```\n\nIn terms of code size, it is the same. In terms of performance, I am not sure but it could be fine",
      "parentUuid": "01dbd369_8674a179",
      "revId": "ba209d65dd6080cf9708bb7145f7a17d71aa9966",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01bca547_0de02289",
        "filename": "compiler/optimizing/instruction_simplifier_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-07-08T11:51:50Z",
      "side": 0,
      "message": "@solanes@google.com Actually I wrote a comment for your second thought:\n\n```\n// If to replace Add which has 2 the same Shl\u003c1|2|3\u003e inputs with Riscv64ShiftAdd\n// which has this Shl\u003c1|2|3\u003e as an input then any processor will not be able to\n// execute these shifts parallel which is the purpose of the replace below.\n```\nsuch a replacement keeps `Shl` as a data dependency.",
      "parentUuid": "049406be_16f2b700",
      "revId": "ba209d65dd6080cf9708bb7145f7a17d71aa9966",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19c00f0b_88909a13",
        "filename": "compiler/optimizing/instruction_simplifier_riscv64.cc",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-07-08T15:38:37Z",
      "side": 0,
      "message": "1. I made it to `VisitShl` like it is made in `InstructionSimplifierArm64`.\n2. As far as I know DCE is not being called in a later pass.",
      "parentUuid": "01bca547_0de02289",
      "revId": "ba209d65dd6080cf9708bb7145f7a17d71aa9966",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}