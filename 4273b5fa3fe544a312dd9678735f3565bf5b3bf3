{
  "comments": [
    {
      "key": {
        "uuid": "0a697be4_77977094",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2016-07-19T16:15:38Z",
      "side": 1,
      "message": "the term you\u0027re looking for is \"wankery\" but 612-nondelegating-classloader is probably a better name ?",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "4273b5fa3fe544a312dd9678735f3565bf5b3bf3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_96633243",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-19T16:25:24Z",
      "side": 1,
      "message": "You could do a simple classloader analysis here. I\u0027d at least try to see if the classloaders are the same, which will do multidex correctly (maybe put that as an || to IsSameDexFile).\n\nIn general, the oat_file_manager has code that knows what a complete chain is PathClassLoader, and you could do \"sub-string\" analysis on that to ensure correctness for default loaders. I guess that is probably overkill.",
      "range": {
        "startLine": 222,
        "startChar": 4,
        "endLine": 227,
        "endChar": 5
      },
      "revId": "4273b5fa3fe544a312dd9678735f3565bf5b3bf3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a697be4_370818f7",
        "filename": "test/612-classloader-wonkery/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-19T16:31:31Z",
      "side": 1,
      "message": "you can drop a 0 :)",
      "range": {
        "startLine": 55,
        "startChar": 29,
        "endLine": 55,
        "endChar": 30
      },
      "revId": "4273b5fa3fe544a312dd9678735f3565bf5b3bf3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_d612caae",
        "filename": "test/612-classloader-wonkery/src/Main.java",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-19T16:25:24Z",
      "side": 1,
      "message": "Maybe don\u0027t stress the GC so much?",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 28
      },
      "revId": "4273b5fa3fe544a312dd9678735f3565bf5b3bf3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a5b3b40_3673661c",
        "filename": "test/common/runtime_state.cc",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-07-19T16:25:24Z",
      "side": 1,
      "message": "That isn\u0027t an intuitive name considering it forces JITing...",
      "range": {
        "startLine": 123,
        "startChar": 44,
        "endLine": 123,
        "endChar": 59
      },
      "revId": "4273b5fa3fe544a312dd9678735f3565bf5b3bf3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}