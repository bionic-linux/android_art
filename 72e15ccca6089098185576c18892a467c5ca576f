{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "453ec2f2_35f122b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-03-24T18:08:41Z",
      "side": 1,
      "message": "Thanks Lokesh; please take a look and let me know if my recent changes make sense.",
      "revId": "72e15ccca6089098185576c18892a467c5ca576f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed38ae60_3eecd8d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-24T18:10:46Z",
      "side": 1,
      "message": "Thanks, Roland!",
      "revId": "72e15ccca6089098185576c18892a467c5ca576f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b90e2d2d_2e2e957e",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 3932,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2023-03-24T20:21:48Z",
      "side": 1,
      "message": "I wonder whether this gets fully optimized. SizeOf and VisitReferences presumably repeat a bunch of the same work? But this CL only makes things a little worse.",
      "range": {
        "startLine": 3930,
        "startChar": 2,
        "endLine": 3932,
        "endChar": 0
      },
      "revId": "72e15ccca6089098185576c18892a467c5ca576f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76bd7eed_c19cb2cb",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 3932,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-03-24T20:37:19Z",
      "side": 1,
      "message": "They both fetch class pointer. But so does UpdateClassAfterObjectMap.\n\nI think the following order is ideal:\n1) `SizeOf()`\n2) `UpdateClassAfterObjectMap()` (which also fetches reference-bitmap, which is used by VisitReferences)\n3) `VisitReferences()`\n4) The remaining stuff in `UpdateLivenessInfo()`\n\nI\u0027ll try to optimize this in one of the subsequent CLs of mine.",
      "parentUuid": "b90e2d2d_2e2e957e",
      "range": {
        "startLine": 3930,
        "startChar": 2,
        "endLine": 3932,
        "endChar": 0
      },
      "revId": "72e15ccca6089098185576c18892a467c5ca576f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}