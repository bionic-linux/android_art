{
  "comments": [
    {
      "key": {
        "uuid": "edf9b7d6_447b4e2c",
        "filename": "runtime/interpreter/mterp/arm/op_float_to_long.S",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-12-02T20:14:34Z",
      "side": 1,
      "message": "This is more readable than my CL where I\u0027m doing some extra tricks to save instructions in the slow-path. The performance difference is unlikely to matter, so I\u0027m OK to go with this version. Your choice.",
      "revId": "28e4fa80ae0333c0d7c3d2a9e4e0176ebeb4ea4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_2fa14d79",
        "filename": "runtime/interpreter/mterp/arm/op_float_to_long.S",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2016-12-02T20:25:15Z",
      "side": 1,
      "message": "OK - I\u0027ll confess that I like the \"sign bit to carry\" trick that allows consolidation of the non-NaN paths and the overall fewer branches.  But, of course, it\u0027s all on the exceptional path so it won\u0027t matter a bit.  I will change initial branch to follow your lead.",
      "parentUuid": "edf9b7d6_447b4e2c",
      "revId": "28e4fa80ae0333c0d7c3d2a9e4e0176ebeb4ea4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d0ba3a9_073af6f5",
        "filename": "runtime/interpreter/mterp/arm/op_float_to_long.S",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-12-05T10:19:19Z",
      "side": 1,
      "message": "(About the irrelevant...) I admit the ADDS+ADCS+ADC is a nice trick but it does have an unnecessary dependency between the ADCS and ADC. The ASR+EOR+EOR approach avoids that dependency.",
      "parentUuid": "8d159bc1_2fa14d79",
      "revId": "28e4fa80ae0333c0d7c3d2a9e4e0176ebeb4ea4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d159bc1_46e0e30b",
        "filename": "runtime/interpreter/mterp/arm/op_float_to_long.S",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1001578
      },
      "writtenOn": "2016-12-05T15:38:38Z",
      "side": 1,
      "message": "Good point - and now that I think about it that dependency is trivially avoided by using the adc form rather than adcs form.   If we\u0027ve got negative infinity, both ads need a 1 carry, otherwise a 0 cary.  And, that\u0027s determined by the original adds so no adcs -\u003e adc ripple carry is needed.",
      "parentUuid": "4d0ba3a9_073af6f5",
      "revId": "28e4fa80ae0333c0d7c3d2a9e4e0176ebeb4ea4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}