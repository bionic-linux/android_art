{
  "comments": [
    {
      "key": {
        "uuid": "b9f26ee4_6fdcf146",
        "filename": "compiler/oat_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-16T16:11:49Z",
      "side": 1,
      "message": "Why not as part of the paragraph above?",
      "range": {
        "startLine": 284,
        "startChar": 65,
        "endLine": 284,
        "endChar": 84
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39b03e09_3bb977b1",
        "filename": "compiler/oat_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-16T16:46:37Z",
      "side": 1,
      "message": "Personal preference: do not mix important information with a side note.",
      "parentUuid": "b9f26ee4_6fdcf146",
      "range": {
        "startLine": 284,
        "startChar": 65,
        "endLine": 284,
        "endChar": 84
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9f26ee4_8f72759e",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-16T17:42:31Z",
      "side": 1,
      "message": "Why not fix elf file not to return a const?",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d47637_ed3fc551",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-16T17:57:13Z",
      "side": 1,
      "message": "Because most symbols aren\u0027t in writable regions, so it\u0027s the conservative assumption, and it should be the job of the caller to use additional knowledge...",
      "parentUuid": "b9f26ee4_8f72759e",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99020a8c_666ace1b",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-16T18:05:58Z",
      "side": 1,
      "message": "Doesn\u0027t the elf file have knowledge of what regions are writable or not (is it due to mmap flags)? \n\nWe could then have a const and non-const version, the non-const version can DCHECK that the region is writable.",
      "parentUuid": "79d47637_ed3fc551",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d47637_ad6f7d2a",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-16T18:16:30Z",
      "side": 1,
      "message": "It\u0027s the segment that says which (mapped or created) part is writable, so you\u0027ll have to find the segment the symbol is in.\n\nI don\u0027t think we should add additional complexity that a normal linker doesn\u0027t provide. This is the fallback path, and we already have to trust the linker in the mainline path (where we have to use dlsym).",
      "parentUuid": "99020a8c_666ace1b",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d47637_30f1a6c0",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 391,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-16T18:27:52Z",
      "side": 1,
      "message": "NP, not asking for extra complexity, just trying to understand the situation better since I\u0027m not overly familiar with our elf files.\n\nLets discuss offline since the code seems fine.",
      "parentUuid": "79d47637_ad6f7d2a",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d92a72_2e6a6768",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 397,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2015-10-16T17:42:31Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39de7e5b_6bdce146",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-16T16:11:49Z",
      "side": 1,
      "message": "Not sure we indent for this consistently (I actually doubt it), but I think it\u0027s fine.",
      "range": {
        "startLine": 440,
        "startChar": 30,
        "endLine": 440,
        "endChar": 34
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19cc5a7c_02a86a4c",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-16T16:46:37Z",
      "side": 1,
      "message": "Requested by Igor.",
      "parentUuid": "39de7e5b_6bdce146",
      "range": {
        "startLine": 440,
        "startChar": 30,
        "endLine": 440,
        "endChar": 34
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d92a72_ae13f79f",
        "filename": "runtime/oat_file.h",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-16T16:11:49Z",
      "side": 1,
      "message": "Please add a comment. Could also go into the cc file if you added End() as a parameter.",
      "range": {
        "startLine": 290,
        "startChar": 2,
        "endLine": 291,
        "endChar": 70
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19cc5a7c_82739aa2",
        "filename": "runtime/oat_file.h",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-16T16:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99d92a72_ae13f79f",
      "range": {
        "startLine": 290,
        "startChar": 2,
        "endLine": 291,
        "endChar": 70
      },
      "revId": "1d773bc8ca9643580592c3746061de72add6b0b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}