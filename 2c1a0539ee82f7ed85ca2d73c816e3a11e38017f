{
  "comments": [
    {
      "key": {
        "uuid": "056782a2_9aeb607c",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-10T14:03:06Z",
      "side": 1,
      "message": "kProtData (the use of kProtAll was also suspicious before as we use this map as the basis for data cache).",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7ad4826_1fb822a7",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-06-12T15:52:11Z",
      "side": 1,
      "message": "Is there a reason not to use kProtRead | kProtWrite?",
      "parentUuid": "056782a2_9aeb607c",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "095b80cc_9214c7d8",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-12T15:56:01Z",
      "side": 1,
      "message": "There\u0027s no such thing :) (see lines 47-49).",
      "parentUuid": "d7ad4826_1fb822a7",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c548e3f_59fb36ac",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1103743
      },
      "writtenOn": "2017-06-12T22:05:37Z",
      "side": 1,
      "message": "That\u0027s a great reason.  kProtData?",
      "parentUuid": "095b80cc_9214c7d8",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc484db3_3968a1ff",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-06-12T22:59:17Z",
      "side": 1,
      "message": "Personally, I think it is more intention-revealing here to remove X from All, instead of knowing implicitly that Data + X \u003d All...",
      "parentUuid": "1c548e3f_59fb36ac",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbe6a74d_50fd4060",
        "filename": "runtime/jit/jit_code_cache.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-06-13T09:53:20Z",
      "side": 1,
      "message": "How about you reprhase the comment saying \"you should not request executable because.....\" From the JIT pov, this variable is called data_map, which should have kProtData protections.",
      "parentUuid": "cc484db3_3968a1ff",
      "range": {
        "startLine": 100,
        "startChar": 6,
        "endLine": 100,
        "endChar": 27
      },
      "revId": "2c1a0539ee82f7ed85ca2d73c816e3a11e38017f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}