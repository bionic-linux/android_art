{
  "comments": [
    {
      "key": {
        "uuid": "83cfde46_0cb637f0",
        "filename": "compiler/jni/quick/arm64/calling_convention_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T07:09:30Z",
      "side": 1,
      "message": "This is for stack visitor art test. So far, I haven\u0027t found a good solution to remove this.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 16
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c55625_ce882324",
        "filename": "compiler/jni/quick/arm64/calling_convention_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:05:22Z",
      "side": 1,
      "message": "Why do you want to remove this? We need it for debugging.",
      "parentUuid": "83cfde46_0cb637f0",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 16
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_cb5a5554",
        "filename": "compiler/jni/quick/arm64/calling_convention_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T09:28:43Z",
      "side": 1,
      "message": "For Java debug, we won\u0027t break in JNI function. When we need to deliver exception or de-optimization, there should always be a callee-save frame(SaveAll) as top quick frame.\n\nI think currently this is only necessary for the stack visitor art test.",
      "parentUuid": "c3c55625_ce882324",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 16
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_6cf7bba5",
        "filename": "compiler/jni/quick/arm64/calling_convention_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:30:31Z",
      "side": 1,
      "message": "We won\u0027t break into a JNI function, but the debugger can still investigate values of DEX registers. This code ensures the stack walker knows where to find those values.",
      "parentUuid": "63caea3a_cb5a5554",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 16
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_6bb1e1f6",
        "filename": "compiler/jni/quick/arm64/calling_convention_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T09:34:46Z",
      "side": 1,
      "message": "Ok, I got it. This is for the case JAVA_method_1-\u003eJNI_function-\u003eJAVA_method_2. When we break on JAVA_method_2, we still need to find out the values in JAVA_method_1.",
      "parentUuid": "83cfde46_6cf7bba5",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 16
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_2cbbf3d6",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T07:09:30Z",
      "side": 1,
      "message": "This comment just reflect the current implementation. I not clear about the history why we adding this. But I don\u0027t think these are necessary.",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 674,
        "endChar": 28
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_0c8f172e",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:05:22Z",
      "side": 1,
      "message": "Probably me that added this. It is so we don\u0027t force ourselves following the native ABI.",
      "parentUuid": "83cfde46_2cbbf3d6",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 674,
        "endChar": 28
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_ac7fe38c",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T09:28:43Z",
      "side": 1,
      "message": "Now optimizing compiler supports callee-saves. Should we still keep this?",
      "parentUuid": "83cfde46_0c8f172e",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 674,
        "endChar": 28
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_0cfcf784",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 2
      },
      "lineNbr": 674,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:31:27Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "83cfde46_ac7fe38c",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 674,
        "endChar": 28
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3c55625_ee85df0a",
        "filename": "runtime/asm_support.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:05:22Z",
      "side": 1,
      "message": "I think you can remove this for arm as well.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83cfde46_8c822700",
        "filename": "runtime/asm_support.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1042649
      },
      "writtenOn": "2015-03-27T09:28:43Z",
      "side": 1,
      "message": "It is controlled by ARM_R4_SUSPEND_FLAG? Should we entirely remove that?",
      "parentUuid": "c3c55625_ee85df0a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63caea3a_ab510937",
        "filename": "runtime/asm_support.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-03-27T09:31:27Z",
      "side": 1,
      "message": "Isn\u0027t that set to false now? Bill/Vladimir/Andreas: should we get rid of that macro?",
      "parentUuid": "83cfde46_8c822700",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "2bcbac72686df6df54b651c1d0ab333c9d2bdd72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}