{
  "comments": [
    {
      "key": {
        "uuid": "6394aac1_be72f562",
        "filename": "compiler/optimizing/code_generator_utils.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-04-10T13:56:32Z",
      "side": 1,
      "message": "This condition is exactly the same as the one from the previous line; did I miss something?",
      "range": {
        "startLine": 38,
        "startChar": 32,
        "endLine": 38,
        "endChar": 84
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_be9af545",
        "filename": "compiler/optimizing/code_generator_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T12:29:08Z",
      "side": 1,
      "message": "Could you move this to CodeGenerator as a static function and avoid this file?",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_c0f7e05a",
        "filename": "compiler/optimizing/code_generator_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-10T13:32:34Z",
      "side": 1,
      "message": "I think it\u0027s nicer to have an utility file here. We\u0027re starting to pile up static functions in CodeGenerator class which shouldn\u0027t be there imo (e.g. GetInt32ValueOf). The alternative to mix static function and classes it\u0027s pretty ugly.\n\nThere are also some constant definition too and other functions which could potentially be separated here as they are utilities.",
      "parentUuid": "6394aac1_be9af545",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_ba9a0d46",
        "filename": "compiler/optimizing/code_generator_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T13:35:23Z",
      "side": 1,
      "message": "OK. Should we add a CodeGeneratorHelpers class then?",
      "parentUuid": "a38a229d_c0f7e05a",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_9e40d9f8",
        "filename": "compiler/optimizing/code_generator_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-04-10T13:39:53Z",
      "side": 1,
      "message": "That sounds equally good to me. I\u0027d still keep it in a separate file, but if it\u0027s a separate class I don\u0027t mind having it in the code generator either. Up to you :)\n\nside thought: I have the feeling that in future we might expand this o be an utility for the optimizing in general, but until that need arises I think it\u0027s to focus on the generator.",
      "parentUuid": "e3617abc_ba9a0d46",
      "range": {
        "startLine": 26,
        "startChar": 5,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_da40a167",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 2383,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T12:29:08Z",
      "side": 1,
      "message": "Strange indentation. I suggest:\n\nSlowPathCodeX86* slow_path \u003d new (GetGraph()-\u003eGetArena()) DivRemMinusOneSlowPathX86(\n    out.AsRegister\u003cRegister\u003e(), is_div);\n\nOr move DivRemMinusOneSlowPathX86 to the new line.",
      "range": {
        "startLine": 2381,
        "startChar": 8,
        "endLine": 2383,
        "endChar": 22
      },
      "revId": "b19930c5cba3cf662dce5ee057fcc9829b4cbb9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}