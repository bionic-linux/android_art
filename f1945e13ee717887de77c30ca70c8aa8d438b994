{
  "comments": [
    {
      "key": {
        "uuid": "74d3c2eb_41e15c27",
        "filename": "compiler/optimizing/register_allocator_graph_color.cc",
        "patchSetId": 24
      },
      "lineNbr": 356,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-02T22:52:52Z",
      "side": 1,
      "message": "Linear scan has extra invariants to maintain in this function, such as that live intervals are sorted.",
      "range": {
        "startLine": 356,
        "startChar": 1,
        "endLine": 356,
        "endChar": 81
      },
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_c1422c65",
        "filename": "compiler/optimizing/register_allocator_graph_color.cc",
        "patchSetId": 24
      },
      "lineNbr": 429,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-02T22:52:52Z",
      "side": 1,
      "message": "BlockRegister is implementation-dependent.\nOne option is to have a virtual function for it, but it\u0027s not clear that all register allocators would want one.",
      "range": {
        "startLine": 429,
        "startChar": 6,
        "endLine": 429,
        "endChar": 19
      },
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_e179708f",
        "filename": "compiler/optimizing/register_allocator_graph_color.cc",
        "patchSetId": 24
      },
      "lineNbr": 440,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-02T22:52:52Z",
      "side": 1,
      "message": "This is implementation-dependent. Linear scan blocks the output register and shifts the live interval, but graph coloring simply splits the live interval.",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 440,
        "endChar": 82
      },
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_a1412843",
        "filename": "compiler/optimizing/register_allocator_graph_color.cc",
        "patchSetId": 24
      },
      "lineNbr": 497,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-02T22:52:52Z",
      "side": 1,
      "message": "This is partially implementation-dependent; linear scan has similar code, but also has to maintain the unhandled_{core,fp}_intervals_, making code sharing not ideal.",
      "range": {
        "startLine": 497,
        "startChar": 0,
        "endLine": 497,
        "endChar": 88
      },
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_ec7f2742",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-02T23:27:20Z",
      "side": 1,
      "message": "although graph coloring is of course well known, this would be the right place to document your algorithm a bit at very high level, and give credit to references you may have used",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_198e6c25",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-03T00:19:19Z",
      "side": 1,
      "message": "Good idea; I\u0027ve extended the comment here.",
      "parentUuid": "74d3c2eb_ec7f2742",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_6ce25732",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 115,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-02T23:27:20Z",
      "side": 1,
      "message": "super nit: you are using two forms of the verb in your methods: e.g. ensure vs. ensures\nI would use one style consistently",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_f95e087b",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 115,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-03T00:19:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74d3c2eb_6ce25732",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_4c8f537b",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 139,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-02T23:27:20Z",
      "side": 1,
      "message": "nit: typically nouns are better for fields than verbs, which are better for methods",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_195c2c81",
        "filename": "compiler/optimizing/register_allocator_graph_color.h",
        "patchSetId": 24
      },
      "lineNbr": 139,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-03T00:19:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74d3c2eb_4c8f537b",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f34c9be_6284456c",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 24
      },
      "lineNbr": 397,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-02T23:27:20Z",
      "side": 1,
      "message": "is this a \"note to self\" for later? without actionable code (like a check or test), this won\u0027t do much more?",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_f9c84822",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 24
      },
      "lineNbr": 397,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-03T00:19:19Z",
      "side": 1,
      "message": "It\u0027s pointing out that this test instantiates a linear scan allocator (it tests invariants specific to linear scan) rather than the default register allocator. No code changed in this test, because it has always referenced linear scan directly.",
      "parentUuid": "6f34c9be_6284456c",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_59371404",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 24
      },
      "lineNbr": 397,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-03T00:25:28Z",
      "side": 1,
      "message": "Ah, my mistake. I should have expanded the code more. Yes, good point, this is fine.",
      "parentUuid": "74d3c2eb_f9c84822",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f34c9be_82793992",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 24
      },
      "lineNbr": 819,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-08-02T23:27:20Z",
      "side": 1,
      "message": "same",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d3c2eb_b9d2c0ca",
        "filename": "compiler/optimizing/register_allocator_test.cc",
        "patchSetId": 24
      },
      "lineNbr": 819,
      "author": {
        "id": 1108540
      },
      "writtenOn": "2016-08-03T00:19:19Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "6f34c9be_82793992",
      "revId": "f1945e13ee717887de77c30ca70c8aa8d438b994",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}