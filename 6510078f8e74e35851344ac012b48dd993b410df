{
  "comments": [
    {
      "key": {
        "uuid": "4ed075be_2d78f994",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:22:56Z",
      "side": 1,
      "message": "Add to usage docs.\n\nMaybe change this options to \"--check-boot-image\". If \"--check-boot-image\" is set, then before checking the status of the dex file, check the boot image. Return kBootImageOutOfDate if the boot image is out of date, otherwise return the status of the dex file. If no --dex-file is specified, return the kNoDexOptNeeded exit code?\n\nI suggest this as an attempt to clarify the behavior of dexoptanalyzer when both --get-image-state and --dex-file are provided. Other options would be to have separate subcommands \"dex\" and \"boot-image\" like the cmd command on Android, or to enforce that only one of --get-image-state or --dex-file is provided.",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 38
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6422bbf_d630f607",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T16:32:25Z",
      "side": 1,
      "message": "I was going for the latter behavior (as that was the result of the meeting, I thought - two separate commands), but without enforcement. Your argument parsing is already weak (e.g., you don\u0027t check for ISA being set).\n\nI\u0027m happy to enforce --check-boot-image vs --dex-file.",
      "parentUuid": "4ed075be_2d78f994",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 38
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a88a9a7b_8572198a",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-24T18:22:54Z",
      "side": 1,
      "message": "Please enforce it. A simpler semantic is always a better one.\n\nYou could even go one step extra and add another flag to switch modes, i.e. --...boot-image and --...dex-opt-needed.",
      "parentUuid": "e6422bbf_d630f607",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 38
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96098702_d31b9e2a",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T18:31:15Z",
      "side": 1,
      "message": "That\u0027s done in the next patchset, just haven\u0027t gotten around to upload it...",
      "parentUuid": "a88a9a7b_8572198a",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 38
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea1e639_a2267aad",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-24T18:22:54Z",
      "side": 1,
      "message": "why do you need this? We should never attempt to update the image in dexoptanalyzer.",
      "range": {
        "startLine": 222,
        "startChar": 26,
        "endLine": 222,
        "endChar": 34
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5c4f7ae_36d6b308",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T18:31:15Z",
      "side": 1,
      "message": "It won\u0027t relocate, but it will ask for a relocated image. There\u0027s a difference, and it\u0027s important. Otherwise we\u0027ll get the wrong result if the cached version is missing but I\u0027m asking whether everything is OK wrt/ to a regular running system.",
      "parentUuid": "7ea1e639_a2267aad",
      "range": {
        "startLine": 222,
        "startChar": 26,
        "endLine": 222,
        "endChar": 34
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78aa17a2_8c462e1f",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:22:56Z",
      "side": 1,
      "message": "Add a TODO and pointer to bug to check the image state directly rather than indirectly by instantiating a runtime. Maybe b/36556109, expand b/34385298 to cover this, or file a new bug and assign it to me.",
      "range": {
        "startLine": 276,
        "startChar": 3,
        "endLine": 276,
        "endChar": 69
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f861c12_0ae2eda7",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:42:30Z",
      "side": 1,
      "message": "In the chroot environment for otapreopt, you mentioned something about a ._b suffix. Does this suffix apply to the boot image files? Will the runtime find the boot image where it expects to? If there is no precompiled image, will the runtime find the boot classpath dex files where it expects to?",
      "range": {
        "startLine": 277,
        "startChar": 0,
        "endLine": 280,
        "endChar": 55
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "128e0a4a_c2d16b79",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T16:32:25Z",
      "side": 1,
      "message": "/system is as-is, and the B dalvik-cache is referenced via ANDROID_DATA (or --android-data here), but otherwise the structure and naming is unchanged. Only /data/app odex files have a suffix.",
      "parentUuid": "5f861c12_0ae2eda7",
      "range": {
        "startLine": 277,
        "startChar": 0,
        "endLine": 280,
        "endChar": 55
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "361d1a5f_19b8cfee",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:22:56Z",
      "side": 1,
      "message": "/*relocate*/false",
      "range": {
        "startLine": 291,
        "startChar": 23,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19b4677d_2dc7e4b3",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T16:32:25Z",
      "side": 1,
      "message": "bdc is strongly against that. I\u0027ve developed the same feeling - it makes block-commenting so much harder.\n\nI\u0027ll introduce an internal enum.",
      "parentUuid": "361d1a5f_19b8cfee",
      "range": {
        "startLine": 291,
        "startChar": 23,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4090a1f5_e48e35f2",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-24T18:22:54Z",
      "side": 1,
      "message": "please don\u0027t add enums for true/false... I think that\u0027s a stretch.\n\nMost of the our codebases uses this style. Unilateral changes will only create more inconsistency. Let\u0027s discuss this if you wan\u0027t to change it. Personally I\u0027m ok with the comments (it helps more than it annoys me) but can leave without it if I\u0027m part of minority.",
      "parentUuid": "19b4677d_2dc7e4b3",
      "range": {
        "startLine": 291,
        "startChar": 23,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fb6b91a_e32ffdb6",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2017-03-24T18:24:00Z",
      "side": 1,
      "message": "*can live without.",
      "parentUuid": "4090a1f5_e48e35f2",
      "range": {
        "startLine": 291,
        "startChar": 23,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff434a8a_6cd02cc3",
        "filename": "dexoptanalyzer/dexoptanalyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-24T18:31:15Z",
      "side": 1,
      "message": "Director statement is \"if you need a comment for parameters, it should have been an intuitively named enum,\" and I agree with that. The pervasive need for comments that f*** me over every time I want to comment something out for faster debugging is sooooo annoying.",
      "parentUuid": "7fb6b91a_e32ffdb6",
      "range": {
        "startLine": 291,
        "startChar": 23,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6abe9875_eb0596c8",
        "filename": "dexoptanalyzer/include/dexoptanalyzer_return_codes.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1057373
      },
      "writtenOn": "2017-03-24T10:22:56Z",
      "side": 1,
      "message": "Call it \"kBootImageOutOfDate\" instead?",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 17
      },
      "revId": "6510078f8e74e35851344ac012b48dd993b410df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}