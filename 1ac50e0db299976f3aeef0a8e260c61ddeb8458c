{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5bcd5ff9_01b59ea8",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-22T16:22:57Z",
      "side": 1,
      "message": "Suggestion: Replace this with:\n\n```\n  if not os.path.exists(os.path.join(ANDROID_BUILD_TOP, \u0027frameworks\u0027, \u0027base\u0027)):\n```\n\nand introduce:\n\n```\nANDROID_BUILD_TOP \u003d os.environ.get(\"ANDROID_BUILD_TOP\")\n```\n\nline 51.",
      "range": {
        "startLine": 464,
        "startChar": 0,
        "endLine": 464,
        "endChar": 43
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72cf4342_90200907",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2023-11-22T16:57:26Z",
      "side": 1,
      "message": "but line 487 does \n\n```\n  if not os.path.exists(\u0027build/envsetup.sh\u0027):\n    raise AssertionError(\"Script needs to be run at the root of the android tree\")\n```\n\nIs it not sufficient?",
      "parentUuid": "5bcd5ff9_01b59ea8",
      "range": {
        "startLine": 464,
        "startChar": 0,
        "endLine": 464,
        "endChar": 43
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7881e6d_65697681",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 464,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-22T19:14:41Z",
      "side": 1,
      "message": "Right; I think it\u0027s probably fine for most use case. Maybe we can amend these occurrences in a later CL.",
      "parentUuid": "72cf4342_90200907",
      "range": {
        "startLine": 464,
        "startChar": 0,
        "endLine": 464,
        "endChar": 43
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "658fd3d0_977a8d8f",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-22T16:10:21Z",
      "side": 1,
      "message": "I suggest a comment to explain why this is necessary on the thin manifest.",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 466,
        "endChar": 65
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ee25c2b_2262739e",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2023-11-22T16:14:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "658fd3d0_977a8d8f",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 466,
        "endChar": 65
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3cff752_f119d33c",
        "filename": "tools/run-libcore-tests.py",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-22T16:17:59Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "0ee25c2b_2262739e",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 466,
        "endChar": 65
      },
      "revId": "1ac50e0db299976f3aeef0a8e260c61ddeb8458c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}