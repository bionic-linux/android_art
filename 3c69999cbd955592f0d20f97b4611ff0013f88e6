{
  "comments": [
    {
      "key": {
        "uuid": "251f3657_d71bfe57",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 16
      },
      "lineNbr": 703,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "indentation is off.",
      "range": {
        "startLine": 701,
        "startChar": 8,
        "endLine": 703,
        "endChar": 91
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "251f3657_971fc633",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 16
      },
      "lineNbr": 703,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "251f3657_d71bfe57",
      "range": {
        "startLine": 701,
        "startChar": 8,
        "endLine": 703,
        "endChar": 91
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5701ac6_d96eb348",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 16
      },
      "lineNbr": 716,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "test",
      "range": {
        "startLine": 716,
        "startChar": 35,
        "endLine": 716,
        "endChar": 47
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "251f3657_777b0a0b",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 16
      },
      "lineNbr": 716,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Are you not happy with the tests I added in 450?",
      "parentUuid": "c5701ac6_d96eb348",
      "range": {
        "startLine": 716,
        "startChar": 35,
        "endLine": 716,
        "endChar": 47
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5835e1b_cabcc386",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 16
      },
      "lineNbr": 716,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-14T12:20:47Z",
      "side": 1,
      "message": "I\u0027m sorry. This was a marker for me to look for a test. I forgot to delete it after I found it :)",
      "parentUuid": "251f3657_777b0a0b",
      "range": {
        "startLine": 716,
        "startChar": 35,
        "endLine": 716,
        "endChar": 47
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c68e32_ae01174b",
        "filename": "compiler/optimizing/licm_test.cc",
        "patchSetId": 16
      },
      "lineNbr": 171,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "why this change?",
      "range": {
        "startLine": 171,
        "startChar": 40,
        "endLine": 171,
        "endChar": 51
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_731a204b",
        "filename": "compiler/optimizing/licm_test.cc",
        "patchSetId": 16
      },
      "lineNbr": 171,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Frankly, to get around the typing... :/ \n`parameter_` has an invalid type, therefore ArrayGet on it would fail. By constructing it as float/double, SsaBuilder will not consider it an ambiguous aget. Maybe I should use byte and short here instead and DCHECK in SsaBuilder that float/double is not in the original bytecode (done that).",
      "parentUuid": "65c68e32_ae01174b",
      "range": {
        "startLine": 171,
        "startChar": 40,
        "endLine": 171,
        "endChar": 51
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_f31b9057",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 16
      },
      "lineNbr": 221,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "Update comment.",
      "range": {
        "startLine": 219,
        "startChar": 46,
        "endLine": 221,
        "endChar": 15
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2506560b_1f72a7ec",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 16
      },
      "lineNbr": 221,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Done. And renamed the constants a little...",
      "parentUuid": "0576b2c5_f31b9057",
      "range": {
        "startLine": 219,
        "startChar": 46,
        "endLine": 221,
        "endChar": 15
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c68e32_4e38b31d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 16
      },
      "lineNbr": 4630,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "This is weird, a-\u003eIsEquivalentOf(b) would say yes and pass this check, but b-\u003eIsEquivalentOf(a) would say yes and fail this check?",
      "range": {
        "startLine": 4629,
        "startChar": 0,
        "endLine": 4630,
        "endChar": 59
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_f325d08c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 16
      },
      "lineNbr": 4630,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Made it pass both ways...",
      "parentUuid": "65c68e32_4e38b31d",
      "range": {
        "startLine": 4629,
        "startChar": 0,
        "endLine": 4630,
        "endChar": 59
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_6cea93cc",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 173,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "Add a comment why checking if live is important.",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 173,
        "endChar": 23
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c68e32_0e94eb23",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 173,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c03648c7_6cea93cc",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 173,
        "endChar": 23
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2506560b_7fd40bdf",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 379,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "document the HInstruction* sequences that are matched.",
      "range": {
        "startLine": 379,
        "startChar": 20,
        "endLine": 379,
        "endChar": 37
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c18a18_4dcf5935",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 379,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2506560b_7fd40bdf",
      "range": {
        "startLine": 379,
        "startChar": 20,
        "endLine": 379,
        "endChar": 37
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f24653_c33b48a3",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 385,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "not related to your change: ...what a terrible name. This is not a constant...",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c68e32_aeb91794",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 385,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Yep... I thought you wrote that, didn\u0027t you? :P",
      "parentUuid": "a5f24653_c33b48a3",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e59a7e77_12fd2c5e",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 385,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-14T12:20:47Z",
      "side": 1,
      "message": "Nope...",
      "parentUuid": "65c68e32_aeb91794",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_ac248bf3",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 408,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "a lot of redundant code. Can you merge with the previous?",
      "range": {
        "startLine": 408,
        "startChar": 20,
        "endLine": 408,
        "endChar": 40
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f24653_43005892",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 408,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c03648c7_ac248bf3",
      "range": {
        "startLine": 408,
        "startChar": 20,
        "endLine": 408,
        "endChar": 40
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5d27ee6_b207402e",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 620,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "Why did you have to change this?",
      "range": {
        "startLine": 604,
        "startChar": 0,
        "endLine": 620,
        "endChar": 3
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_5367e4d1",
        "filename": "compiler/optimizing/reference_type_propagation.cc",
        "patchSetId": 16
      },
      "lineNbr": 620,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Gtests use this kUnknownFieldIndex constant to prevent typing (actually haven\u0027t seen a gtest run RTP, so not sure why it was here in the first place). With RTP inside SsaBuilder, this method would leave the FieldGet untyped and SetUntypedInstructionsToObject would later try to type it to Object.\n\nNo problem with that, only Calin and I tried to make sure that SetUntypedInstructionsToObject only fixes up instructions left untyped because of a loop phi with first input null (b/25899441). So this change explicitly types these gtest FieldGets to Object and allows us to keep that DCHECK in SetUntypedInstructionsToObject for real code.",
      "parentUuid": "e5d27ee6_b207402e",
      "range": {
        "startLine": 604,
        "startChar": 0,
        "endLine": 620,
        "endChar": 3
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "251f3657_5776ce73",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "nit: I\u0027d separate the false branches and the true branches to make it easier to read.\n\ni.e.\n\nif (not the same size || combine wrong types) {return false} ...",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 6
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_531fe4ea",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "I\u0027d rather not touch this any more. The order matters and I was very careful to cover all possible combinations.",
      "parentUuid": "251f3657_5776ce73",
      "range": {
        "startLine": 153,
        "startChar": 4,
        "endLine": 153,
        "endChar": 6
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5701ac6_b9097fb2",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 290,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "why do you test for dead phis in AddDependentInstructionsToWorklist if you only call it with live phis?",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 40
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c18a18_6d7575ad",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 290,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "UpdatePrimitiveType will make it dead at this point if there was a conflict.",
      "parentUuid": "c5701ac6_b9097fb2",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 40
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f24653_e3576cd5",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 298,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "ReferenceTypeInfo::TypeHandle (and in the other places)",
      "range": {
        "startLine": 298,
        "startChar": 2,
        "endLine": 298,
        "endChar": 23
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_6c3e13b6",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 298,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Done but did not find any other places?",
      "parentUuid": "a5f24653_e3576cd5",
      "range": {
        "startLine": 298,
        "startChar": 2,
        "endLine": 298,
        "endChar": 23
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5701ac6_59c0637c",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 303,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "this test and the one bellow seem wrong. What if the array is object of byte/char etc...",
      "range": {
        "startLine": 303,
        "startChar": 28,
        "endLine": 303,
        "endChar": 89
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_8c29877f",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 303,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Never gonna happen. This function is only called on int/long ArrayGets (there are DCHECKs at call sites of this function which test that the parameter is in `ambiguous_gets_`), hence the array can be only int[], float[], long[] or double[].",
      "parentUuid": "c5701ac6_59c0637c",
      "range": {
        "startLine": 303,
        "startChar": 28,
        "endLine": 303,
        "endChar": 89
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e59a7e77_52f7b47d",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 303,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-14T12:20:47Z",
      "side": 1,
      "message": "ack. Not obvious. I wouldn\u0027t mind mentioning that this function can be called only for int[]/float[].... etc.",
      "parentUuid": "c03648c7_8c29877f",
      "range": {
        "startLine": 303,
        "startChar": 28,
        "endLine": 303,
        "endChar": 89
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "251f3657_77154a1a",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 814,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-12-11T11:22:54Z",
      "side": 1,
      "message": "Why is that not being done in GetFloatOrDoubleEquivalent?",
      "range": {
        "startLine": 808,
        "startChar": 0,
        "endLine": 814,
        "endChar": 37
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_d3cd34e1",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 16
      },
      "lineNbr": 814,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T13:56:53Z",
      "side": 1,
      "message": "Great question. And you are right that this is pretty eager. The code is pretty complex as it is, so I went for simplicity...\n\nIf this is a float array access, there should be a float use (perhaps through a phi) which calls GetFloatOrDoubleEquivalent. Unfortunately that\u0027s not true if the only use is ArraySet so we could end up missing some.\n\nI\u0027ve changed this in the latest PS, have a look. I still put them in the vector here but create equivalents lazily.",
      "parentUuid": "251f3657_77154a1a",
      "range": {
        "startLine": 808,
        "startChar": 0,
        "endLine": 814,
        "endChar": 37
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_ecfa0364",
        "filename": "compiler/optimizing/ssa_builder.h",
        "patchSetId": 16
      },
      "lineNbr": 86,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "document the return.",
      "range": {
        "startLine": 86,
        "startChar": 7,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f24653_e30f6cb6",
        "filename": "compiler/optimizing/ssa_builder.h",
        "patchSetId": 16
      },
      "lineNbr": 86,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c03648c7_ecfa0364",
      "range": {
        "startLine": 86,
        "startChar": 7,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c03648c7_ec1e839b",
        "filename": "compiler/optimizing/ssa_builder.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-11T14:36:29Z",
      "side": 1,
      "message": "Document",
      "range": {
        "startLine": 89,
        "startChar": 1,
        "endLine": 90,
        "endChar": 68
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0576b2c5_13cacc9a",
        "filename": "compiler/optimizing/ssa_builder.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-12-11T16:26:50Z",
      "side": 1,
      "message": "They are extensively documented in the code, is that not enough? That has been the general approach in SsaBuilder so far - explaining the purpose of individual steps in their context.",
      "parentUuid": "c03648c7_ec1e839b",
      "range": {
        "startLine": 89,
        "startChar": 1,
        "endLine": 90,
        "endChar": 68
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5835e1b_8a83abbc",
        "filename": "compiler/optimizing/ssa_builder.h",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-12-14T12:20:47Z",
      "side": 1,
      "message": "Somehow. I don\u0027t know what the returned bool value means. It\u0027s not that clear from here. I can read the implementation and figure it out, but I shouldn\u0027t be force to do that to understand the general algorithm.",
      "parentUuid": "0576b2c5_13cacc9a",
      "range": {
        "startLine": 89,
        "startChar": 1,
        "endLine": 90,
        "endChar": 68
      },
      "revId": "3c69999cbd955592f0d20f97b4611ff0013f88e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}