//
// Copyright (C) 2019 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

art_cc_defaults {
    name: "libpalette_defaults",
    host_supported: true,
    export_include_dirs: [ "include" ],
}

// libpalette-system is the implementation of the abstraction layer. It is
// only available as a shared library on targets supporting dlopen().
art_cc_library {
  name: "libpalette-system",
  defaults: [ "libpalette_defaults" ],
  srcs: [
    "system/palette_impl.cc",
  ],
  target: {
    darwin: {
      enabled: false,
    },
    windows: {
      enabled: false,
    },
  },
  shared_libs: [
    "libcutils",
    "libmetricslogger",
    "libstatssocket",
  ],
  static: {
    enabled: false,
  },
  version_script: "libpalette.map",
}

// libpalette is the dynamic loader of the abstraction layer on
// platforms supporting dlopen. On other platforms it is
// implementation of the abstraction layer.
art_cc_library {
  name: "libpalette",
  defaults: [ "libpalette_defaults" ],
  target: {
    // Targets supporting dlopen build the client library which loads
    // and binds the system library.
    android: {
      shared: {
        srcs: [
          "apex/palette.cc",
        ],
      },
      static: {
        srcs: [
          "system/palette_impl.cc",
        ],
        static_libs: [
          "libcutils",
          "libmetricslogger",
          "libstatssocket",
        ],
      },
      version_script: "libpalette.map",
    },
    linux_bionic: {
      srcs: [
        "apex/palette.cc",
      ],
      version_script: "libpalette.map",
    },
    linux_glibc: {
      shared: {
        srcs: [
          "apex/palette.cc",
        ],
      },
      static: {
        srcs: [
          "system/palette_impl.cc",
        ],
      },
      version_script: "libpalette.map",
    },
    // Targets without support for dlopen just use the sources for
    // the system library which actually implements functionality.
    darwin: {
      enabled: true,
      shared: {
        enabled: false,
      },
      srcs: [
        "system/palette_impl.cc",
      ],
    },
    windows: {
      enabled: true,
      shared: {
        enabled: false,
      },
      srcs: [
        "system/palette_impl.cc",
      ],
    },
  }
}

art_cc_test {
  name: "art_libpalette_tests",
  defaults: [
    "art_gtest_defaults",
  ],
  host_supported: true,
  srcs: [
    "apex/palette_test.cc",
  ],
  shared_libs: [
    "libpalette"
  ],
  test_per_src: true,
}
