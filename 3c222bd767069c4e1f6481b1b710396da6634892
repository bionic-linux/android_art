{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7efc0c46_57794c86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-05-11T10:23:56Z",
      "side": 1,
      "message": "What is this \"package\" thing in this context? The ticket below discusses runtime_libs behaviour on device, but this is host where APEX boundaries don\u0027t apply. Since the libraries won\u0027t be provided any other way on host, runtime_libs should install its dependencies there, shouldn\u0027t it? It doesn\u0027t seem ideal to have to explicitly add transitive dependencies to packages.",
      "range": {
        "startLine": 12,
        "startChar": 46,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "3c222bd767069c4e1f6481b1b710396da6634892",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ba80d4b_7480ce31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-05-11T11:56:04Z",
      "side": 1,
      "message": "aosp/1702492 is the related change.\n\nFor now, there\u0027s two module types of \"Packaging\": filesystem and cvd-host-package. These are very similar to \"apex\", but it gathers listed dependencies including transitive dependencies if dependency tags tells to do so. (InstallNeededDependencyTag). \n\ncvd-host-package is to collect host tools to run \"cvd(cuttlefish)\" as zip.\n\n\u003e  It doesn\u0027t seem ideal to have to explicitly add transitive dependencies to packages.\n\nYeah, I agree.\n\nWith the current change, I\u0027d like to know if host version of \"libdexfile\" is meaningful. The dependency chain is \"libbacktrace -\u003e libunwindstack -\u003e libdexfile_support -\u003e(dlopen)-\u003e libdexfile\". What would happen if libdexfile is missing? Is it necessary part of the (host) libdexfile_support or accidental dependency?",
      "parentUuid": "7efc0c46_57794c86",
      "range": {
        "startLine": 12,
        "startChar": 46,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "3c222bd767069c4e1f6481b1b710396da6634892",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05010f6f_4cfc83ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-05-11T12:12:20Z",
      "side": 1,
      "message": "\u003e aosp/1702492 is the related change.\n\nShouldn\u0027t it treat install on host and device differently then?\n\n\u003e What would happen if libdexfile is missing?\n\nI think it logs a warning (https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/DexFile.cpp;l\u003d43-44;drc\u003dcb436a5104afaf290aac63d1fe1a8e0076c39702) and just doesn\u0027t give much info on dex stack frames.\n\n\u003e Is it necessary part of the (host) libdexfile_support or accidental dependency?\n\nIt depends on what that \"root-canal\" binary does. If it needs to unwind stacks and see dex (i.e. java) frames from code in an ART VM then it needs the dependencies all the way down to libdexfile, otherwise it\u0027s probably better off building with libbacktrace_no_dex instead.",
      "parentUuid": "9ba80d4b_7480ce31",
      "range": {
        "startLine": 12,
        "startChar": 46,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "3c222bd767069c4e1f6481b1b710396da6634892",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8797004e_52d6131a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-05-12T01:10:15Z",
      "side": 1,
      "message": "Thanks, Martin.\n\n\u003e It doesn\u0027t seem ideal to have to explicitly add transitive dependencies to packages.\n\nWith Colin\u0027s help, I figured out the way and we don\u0027t need to add transitive deps manually. Abandoning this.",
      "parentUuid": "05010f6f_4cfc83ae",
      "range": {
        "startLine": 12,
        "startChar": 46,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "3c222bd767069c4e1f6481b1b710396da6634892",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "345e34f3_6cc7a00a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-05-11T08:07:59Z",
      "side": 1,
      "message": "Martin, can you review this? I\u0027m not sure if host tools (transitively depending on libdexfile) are okay without \"libdexfile\".",
      "revId": "3c222bd767069c4e1f6481b1b710396da6634892",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}