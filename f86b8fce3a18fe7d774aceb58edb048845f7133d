{
  "comments": [
    {
      "key": {
        "uuid": "c0abc3ee_ec9f8bcc",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1418,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:23:40Z",
      "side": 1,
      "message": "High level comments please.",
      "range": {
        "startLine": 1418,
        "startChar": 7,
        "endLine": 1418,
        "endChar": 22
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00a23b11_ee2adf1f",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1418,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T09:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0abc3ee_ec9f8bcc",
      "range": {
        "startLine": 1418,
        "startChar": 7,
        "endLine": 1418,
        "endChar": 22
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "001ddb1a_9913bfb4",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1419,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:23:40Z",
      "side": 1,
      "message": "this can still be const right?",
      "range": {
        "startLine": 1419,
        "startChar": 27,
        "endLine": 1419,
        "endChar": 53
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20d49f7c_07ef56ee",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1419,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T09:43:15Z",
      "side": 1,
      "message": "Yes, it could be, but I prefer it this way. Going from const HUserRecord\u003c\u003e to non-const HInstruction* subverts the constness of the graph.",
      "parentUuid": "001ddb1a_9913bfb4",
      "range": {
        "startLine": 1419,
        "startChar": 27,
        "endLine": 1419,
        "endChar": 53
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00a23b11_6e06efc6",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1420,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:23:40Z",
      "side": 1,
      "message": "2 spaces less.",
      "range": {
        "startLine": 1420,
        "startChar": 0,
        "endLine": 1420,
        "endChar": 6
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20d49f7c_27f25ada",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1420,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T09:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00a23b11_6e06efc6",
      "range": {
        "startLine": 1420,
        "startChar": 0,
        "endLine": 1420,
        "endChar": 6
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_93355c86",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1423,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:23:40Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1423,
        "startChar": 0,
        "endLine": 1423,
        "endChar": 6
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_d32fd42d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1423,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T09:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0116f0b_93355c86",
      "range": {
        "startLine": 1423,
        "startChar": 0,
        "endLine": 1423,
        "endChar": 6
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0f88ffb_9bd1eb66",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1821,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:23:40Z",
      "side": 1,
      "message": "Now that const/non const is more obvious, what is the use case for the non-const one?",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1821,
        "endChar": 3
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdaeb264_a93fd913",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1821,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T09:43:15Z",
      "side": 1,
      "message": "If you want to modify those inputs in any way, you need non-const HInstruction*. For example, in UpdateInputsUsers().",
      "parentUuid": "a0f88ffb_9bd1eb66",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1821,
        "endChar": 3
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20d49f7c_a7c64a79",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1821,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-07-01T09:46:32Z",
      "side": 1,
      "message": "OK. Could we make this one GetInputsForModification? Looks to me the users will mostly use GetInputs, and some specific methods doing replacement use the former.",
      "parentUuid": "fdaeb264_a93fd913",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1821,
        "endChar": 3
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d193675_531dc45c",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 1
      },
      "lineNbr": 1821,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-07-01T10:42:34Z",
      "side": 1,
      "message": "Well, that would be the theory. Unfortunately, our codebase is not exactly const correct, so GetInputsForModification() would crop up in places where you wouldn\u0027t expect it and I don\u0027t want to shock readers into spending time pondering \"why ForModification\". And I\u0027d like to keep this CL simple and not go to a thousands-of-lines const correctness fix. That needs to be done gradually. A little bit has been done in PS3.",
      "parentUuid": "20d49f7c_a7c64a79",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1821,
        "endChar": 3
      },
      "revId": "f86b8fce3a18fe7d774aceb58edb048845f7133d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}