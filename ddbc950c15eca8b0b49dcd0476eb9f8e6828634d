{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5450eb82_08994343",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-12-13T14:03:12Z",
      "side": 1,
      "message": "Could you please run `unzip -lv out/dist/art_release.zip` and check the output? I patched your CLs and found that the checksums of the boot jars are different from what I got from the Make rule. Maybe it has something to do with the variants of the Java modules.",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "ddbc950c15eca8b0b49dcd0476eb9f8e6828634d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39180e4e_9d0ce1c2",
        "filename": "build/apex/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2023-12-13T14:03:12Z",
      "side": 1,
      "message": "Out-of-scope question: The logic for `art_release.zip` is simple that it can be spelled in a genrule. I\u0027m interested in migrating other build rules such as those for `boot.zip` and `system_server.zip` from `core/dex_preopt.mk` to Soong. Do you think it\u0027s possible? The logic for those is not so simple, so I probably need to add dedicated Soong module types for those and spell the logic in Go. I\u0027m a bit worried about how this approach can scale. What\u0027s your opinion on this approach? Are you open to it?",
      "range": {
        "startLine": 542,
        "startChar": 0,
        "endLine": 542,
        "endChar": 1
      },
      "revId": "ddbc950c15eca8b0b49dcd0476eb9f8e6828634d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}