{
  "comments": [
    {
      "key": {
        "uuid": "5fa8725b_33735217",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 4993,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-13T21:38:50Z",
      "side": 1,
      "message": "Is this to optimize baseline? Otherwise I\u0027d assume constant folding should have taken care of this. Maybe add a comment?",
      "range": {
        "startLine": 4984,
        "startChar": 2,
        "endLine": 4993,
        "endChar": 3
      },
      "revId": "04a7bfaf9dd5b862bb72be4ada5c9994dfa88243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aadf6a22_a1e7b89c",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 4993,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-10-13T21:40:45Z",
      "side": 1,
      "message": "fyi, baseline is going deprecated (debuggable doesn\u0027t use it anymore).",
      "parentUuid": "5fa8725b_33735217",
      "range": {
        "startLine": 4984,
        "startChar": 2,
        "endLine": 4993,
        "endChar": 3
      },
      "revId": "04a7bfaf9dd5b862bb72be4ada5c9994dfa88243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f30ba11_091cea34",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 4993,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-13T22:02:50Z",
      "side": 1,
      "message": "I assumed so, but it was my only guess why there\u0027s still an AND with 0 or 0xFFFFFFFF. Otherwise somebody should check our constant folding.\n\n(Or is this some lower opt mode thing for debuggability? In that case it still seems better to be explicit and replace the HIR with the HIntConstant or whatever)",
      "parentUuid": "aadf6a22_a1e7b89c",
      "range": {
        "startLine": 4984,
        "startChar": 2,
        "endLine": 4993,
        "endChar": 3
      },
      "revId": "04a7bfaf9dd5b862bb72be4ada5c9994dfa88243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a27faf5_2da119ed",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 4993,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-10-14T10:18:11Z",
      "side": 1,
      "message": "Good point Andreas.\n\nActually constant folding handles the 0 case. We should add 0xffffffff case as well and remove this.\n\nThe only question is if other transformations between last fold and codegen can introduce this; which I don\u0027t think it\u0027s the case.",
      "parentUuid": "1f30ba11_091cea34",
      "range": {
        "startLine": 4984,
        "startChar": 2,
        "endLine": 4993,
        "endChar": 3
      },
      "revId": "04a7bfaf9dd5b862bb72be4ada5c9994dfa88243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa9b65d_516cc7bb",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 5013,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-13T21:38:50Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 5004,
        "startChar": 2,
        "endLine": 5013,
        "endChar": 3
      },
      "revId": "04a7bfaf9dd5b862bb72be4ada5c9994dfa88243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}