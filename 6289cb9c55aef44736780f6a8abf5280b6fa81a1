{
  "comments": [
    {
      "key": {
        "uuid": "1a309fe8_2e9b07d7",
        "filename": "runtime/arch/arm64/instruction_set_features_arm64.h",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1037216
      },
      "writtenOn": "2014-11-10T07:40:55Z",
      "side": 1,
      "message": "Future revisions of the A53 can be expected to not have the erratum.\nI think this should be more specific.",
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4f777e_a5da7ef3",
        "filename": "runtime/arch/arm64/instruction_set_features_arm64.h",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-10T18:15:53Z",
      "side": 1,
      "message": "Do you have a preference? is_buggy_a53_ ? What\u0027s the plan with GCC/clang variants?",
      "parentUuid": "1a309fe8_2e9b07d7",
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa83cbc2_6891d7b4",
        "filename": "runtime/arch/arm64/instruction_set_features_arm64.h",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1037505
      },
      "writtenOn": "2014-11-12T14:10:12Z",
      "side": 1,
      "message": "The erratum affects Cortex-A53 core revisions up to r0p4, namely: r0p0, r0p1, r0p2, r0p3, r0p4. We could go for is_a53_le_r0p4. If, on the other hand, we want to follow gcc/clang, then we should introduce a dedicated flag, e.g. -mfix-cortex-a53-835769, which would default to true, unless it can be proven that the target is not an A53 revision \u003c\u003d r0p4.",
      "parentUuid": "5a4f777e_a5da7ef3",
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ac51b23_d43f54aa",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-11T02:31:06Z",
      "side": 1,
      "message": "based on DY\u0027s comment, we should remove this and assume SSSE3",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4f777e_c4da13f5",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-11T07:35:53Z",
      "side": 1,
      "message": "host builds lack SSSE3, so I think this needs to remain. Perhaps default to true ifdef HAVE_ANDROID_OS",
      "parentUuid": "7ac51b23_d43f54aa",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7db79e_efe15d58",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1000428
      },
      "writtenOn": "2014-11-12T02:02:53Z",
      "side": 1,
      "message": "SSSE3 is available since 2006. I am surprise to know that your host does not support SSSE3.\n\nSince this need to support compilation both on target and cross-compiling from host, HAVE_ANDROID_OS may not be a good choice. May be we need an option to overwrite the default for host build if the host doesn\u0027t support SSSE3.",
      "parentUuid": "5a4f777e_c4da13f5",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4f777e_31824bda",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-11T02:31:06Z",
      "side": 1,
      "message": "these should \"\u003d x86_64;\" based on DY\u0027s comment",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 26
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a80bbc4_56a1148a",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1000428
      },
      "writtenOn": "2014-11-11T02:03:01Z",
      "side": 1,
      "message": "This seems to be too conservative. We should set the default to match the instruction set features defined in the x86/x86_64 NDK.\n\nAccording to the NDK supported ABIs, it has \"MMX, SSE/2/3, SSSE3\" for x86 and \"MMX, SSE/2/3, SSSE3, SSE4.1, SSE4.2, POPCNT\" for x86_64.",
      "range": {
        "startLine": 43,
        "startChar": 15,
        "endLine": 43,
        "endChar": 43
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ac51b23_14e15ce1",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-11-11T02:31:06Z",
      "side": 1,
      "message": "for clarity I\u0027ve commented above. Do you want a separate POPCNT field?",
      "parentUuid": "7a80bbc4_56a1148a",
      "range": {
        "startLine": 43,
        "startChar": 15,
        "endLine": 43,
        "endChar": 43
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a80bbc4_f9f4d366",
        "filename": "runtime/arch/x86/instruction_set_features_x86.cc",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1000428
      },
      "writtenOn": "2014-11-12T02:02:53Z",
      "side": 1,
      "message": "POPCNT is less likely to be generated by the compiler. Hence we can skip POPCNT.",
      "parentUuid": "7ac51b23_14e15ce1",
      "range": {
        "startLine": 43,
        "startChar": 15,
        "endLine": 43,
        "endChar": 43
      },
      "revId": "6289cb9c55aef44736780f6a8abf5280b6fa81a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}