{
  "comments": [
    {
      "key": {
        "uuid": "abdbcb04_1f872ff9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-16T17:07:50Z",
      "side": 1,
      "message": "I wouldn\u0027t really call this inline. \"Implement\" seems to fit better.",
      "range": {
        "startLine": 7,
        "startChar": 22,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b6b67dc_1a4979b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T17:09:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abdbcb04_1f872ff9",
      "range": {
        "startLine": 7,
        "startChar": 22,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be0c7b0_2fa3e90f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2086,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T18:23:33Z",
      "side": 1,
      "message": "fnc maybe? assuming it comes from functions.\n\nthe same in the other places.",
      "range": {
        "startLine": 2086,
        "startChar": 41,
        "endLine": 2086,
        "endChar": 44
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b7def9e_5e4fe9b8",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2086,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T18:33:48Z",
      "side": 1,
      "message": "It comes from FunCtioN.  Personal preference, I guess.",
      "parentUuid": "8be0c7b0_2fa3e90f",
      "range": {
        "startLine": 2086,
        "startChar": 41,
        "endLine": 2086,
        "endChar": 44
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc24f1f_9089da4f",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2103,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T18:23:33Z",
      "side": 1,
      "message": "Ideally we should make it possible to request temporary stack slots. I think it\u0027s ok for not but can you add a note?",
      "range": {
        "startLine": 2103,
        "startChar": 2,
        "endLine": 2103,
        "endChar": 41
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b6b67dc_7d718fcc",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2103,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T18:33:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bc24f1f_9089da4f",
      "range": {
        "startLine": 2103,
        "startChar": 2,
        "endLine": 2103,
        "endChar": 41
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be0c7b0_efa40116",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2105,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T18:23:33Z",
      "side": 1,
      "message": "doesn\u0027t it work with `__`?",
      "range": {
        "startLine": 2105,
        "startChar": 2,
        "endLine": 2105,
        "endChar": 18
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bae3367_26d79656",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 2105,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T18:33:48Z",
      "side": 1,
      "message": "__ doesn\u0027t support pointer to member function, unfortunately.  I tried several things.  I *think* that the problem is that -\u003e* has to be one token (???)",
      "parentUuid": "8be0c7b0_efa40116",
      "range": {
        "startLine": 2105,
        "startChar": 2,
        "endLine": 2105,
        "endChar": 18
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be0c7b0_2f7c49da",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T18:23:33Z",
      "side": 1,
      "message": "who needs this?",
      "range": {
        "startLine": 562,
        "startChar": 15,
        "endLine": 562,
        "endChar": 34
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bae3367_c6db227d",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T18:33:48Z",
      "side": 1,
      "message": "When I tested by generating core-optimized.oat, I ran into this.",
      "parentUuid": "8be0c7b0_2f7c49da",
      "range": {
        "startLine": 562,
        "startChar": 15,
        "endLine": 562,
        "endChar": 34
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc24f1f_90947a4e",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T19:41:42Z",
      "side": 1,
      "message": "hmm, it shouldn\u0027t be case. I\u0027m not having any issue when testing with the optimzed boot image... I will look more carefully next week.",
      "parentUuid": "6bae3367_c6db227d",
      "range": {
        "startLine": 562,
        "startChar": 15,
        "endLine": 562,
        "endChar": 34
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b7def9e_0956199f",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T20:03:48Z",
      "side": 1,
      "message": "You are right.  I removed this and passed the tests.  Will remove it as well.",
      "parentUuid": "4bc24f1f_90947a4e",
      "range": {
        "startLine": 562,
        "startChar": 15,
        "endLine": 562,
        "endChar": 34
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbd63fdb_d142048d",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2015-01-16T18:23:33Z",
      "side": 1,
      "message": "why did you need to change this?",
      "range": {
        "startLine": 676,
        "startChar": 9,
        "endLine": 676,
        "endChar": 23
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bae3367_a6e2a62c",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-16T18:33:48Z",
      "side": 1,
      "message": "Because I thought that it would remove a dependency, and allow the 2 instructions to issue in parallel.   Any other thoughts?\n\nI also put in checks for 0 and used Xors, but I realized that they modify the CC and could cause a problem, so I removed that code.",
      "parentUuid": "cbd63fdb_d142048d",
      "range": {
        "startLine": 676,
        "startChar": 9,
        "endLine": 676,
        "endChar": 23
      },
      "revId": "d6d9050c762c6579bc62873f31c91d0ebcfead44",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}