{
  "comments": [
    {
      "key": {
        "uuid": "65a157aa_132a8e83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "Is this in the standard? I can\u0027t find it. The name is also misleading.",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_13728e74",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "This is a ART specific class intended to support method detours, not a standard class (in this regard it\u0027s similar to classes like java.lang.DexCache)",
      "parentUuid": "65a157aa_132a8e83",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_b3562226",
        "filename": "runtime/class_linker_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 647,
        "startChar": 73,
        "endLine": 647,
        "endChar": 77
      },
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_93859e44",
        "filename": "runtime/class_linker_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65a157aa_b3562226",
      "range": {
        "startLine": 647,
        "startChar": 73,
        "endLine": 647,
        "endChar": 77
      },
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_33323214",
        "filename": "runtime/mirror/detour.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_d37f2636",
        "filename": "runtime/mirror/detour.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65a157aa_33323214",
      "range": {
        "startLine": 28,
        "startChar": 35,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_93203eb7",
        "filename": "runtime/native/java_lang_Detour.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "1 arg per line",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_1319ae3c",
        "filename": "runtime/native/java_lang_Detour.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65a157aa_93203eb7",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_b31d4286",
        "filename": "runtime/openjdkjvmti/OpenjdkJvmTi.cc",
        "patchSetId": 1
      },
      "lineNbr": 974,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "Where is the actual implementation?",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_f3134a13",
        "filename": "runtime/openjdkjvmti/OpenjdkJvmTi.cc",
        "patchSetId": 1
      },
      "lineNbr": 974,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "This change is just the interface part. The implementation is WIP, done separately (by a different engineer).",
      "parentUuid": "65a157aa_b31d4286",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_f3342ae3",
        "filename": "runtime/openjdkjvmti/jvmti.h",
        "patchSetId": 1
      },
      "lineNbr": 1784,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "If these are not in the standard, perhaps we should be reserving some space and putting them at the end?",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_53d0961d",
        "filename": "runtime/openjdkjvmti/jvmti.h",
        "patchSetId": 1
      },
      "lineNbr": 1784,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "You mean a bit of buffer between them and the standard APIs? It\u0027s a good idea and I considered it but the standard JVMTI is not actively maintained and it\u0027s unlikely to change. More importantly though is how much buffer is enough to serve the intended purpose? 2 entries? 8? 16? ...?\n\nA related question is: do we want to change the JVMTI version number? I\u0027m checking with legal in parallel with the CR, but I\u0027d love to hear some suggestions.",
      "parentUuid": "65a157aa_f3342ae3",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_530ed64a",
        "filename": "runtime/reflection.h",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-09-26T21:26:09Z",
      "side": 1,
      "message": "1 arg per line",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a157aa_b3ad42a0",
        "filename": "runtime/reflection.h",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1110533
      },
      "writtenOn": "2016-09-26T21:42:45Z",
      "side": 1,
      "message": "I tried to be consistent with the rest of this file, is there a strong reason to diverge the style?",
      "parentUuid": "65a157aa_530ed64a",
      "revId": "6b927834603c7a200ed6e67df2716340ef16a169",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}