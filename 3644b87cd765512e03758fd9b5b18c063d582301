{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "84a3e73b_2bad3492",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-27T21:49:27Z",
      "side": 1,
      "message": "@solanes@google.com please take a look.",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "467be7d0_665012c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "I am not too fond of waiting until `InstructionSimplifierArm(64)` to unfold since we might be making the compiler\u0027s life more difficult by hiding the Neg+Ror until that late in the pipeline. The good thing is that GVN runs after that.",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be65e953_ab0e04d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T05:41:13Z",
      "side": 1,
      "message": "@solanes@google.com please take a look.",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0631a116_0dd44738",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2454,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "Unreachable",
      "range": {
        "startLine": 2439,
        "startChar": 0,
        "endLine": 2454,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd10a0a6_8655e183",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 2454,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-29T13:59:17Z",
      "side": 1,
      "message": "Reachable for a particular baseline case, see other message.",
      "parentUuid": "0631a116_0dd44738",
      "range": {
        "startLine": 2439,
        "startChar": 0,
        "endLine": 2454,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f17c5c91_3b18410d",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 6437,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "This is now unreachable since we should have changed it into neg+ror. Same for arm32",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "108e15c6_62c9b6d9",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 6437,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T05:41:13Z",
      "side": 1,
      "message": "What about `Baseline` compilation? As far as I know it does not call `InstructionSimplifierArm`.",
      "parentUuid": "f17c5c91_3b18410d",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67b91f4d_2cd85fed",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 2
      },
      "lineNbr": 6437,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-29T13:59:17Z",
      "side": 1,
      "message": "Regular baseline calls the arch optimizations, but there\u0027s this case https://cs.android.com/android/platform/superproject/main/+/main:art/compiler/optimizing/optimizing_compiler.cc;l\u003d917-920;drc\u003d623a4456a0e5d2525e8aa180a82c581767ece8fd which is currently disabled.",
      "parentUuid": "108e15c6_62c9b6d9",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee48248e_a84471f4",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "style:\n```\n  HBasicBlock* block \u003d rol-\u003eGetBlock();\n  HGraph* graph \u003d block-\u003eGetGraph();\n  ArenaAllocator* allocator \u003d graph-\u003eGetAllocator();\n```",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 322,
        "endChar": 41
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9998fad2_368b5cbc",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T22:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee48248e_a84471f4",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 322,
        "endChar": 41
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "371bcf9f_b49dc5ac",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "style: `const` not needed",
      "range": {
        "startLine": 327,
        "startChar": 4,
        "endLine": 327,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a802fb69_9cb98d5c",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T05:41:13Z",
      "side": 1,
      "message": "Why? We only call `GetValue() const` then.",
      "parentUuid": "371bcf9f_b49dc5ac",
      "range": {
        "startLine": 327,
        "startChar": 4,
        "endLine": 327,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91342b81_98491a04",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-29T13:59:17Z",
      "side": 1,
      "message": "We don\u0027t add it since it is not needed e.g. https://cs.android.com/android/platform/superproject/main/+/main:art/compiler/optimizing/graph_visualizer.cc;l\u003d380-382;drc\u003d7effb7fac7a1ea037277b0fef1ac1121c3f56f93\n\nIf you want, you can combine both lines like so `int32_t value \u003d rol-\u003eGetRight()-\u003eAsIntConstant()-\u003eGetValue();`",
      "parentUuid": "a802fb69_9cb98d5c",
      "range": {
        "startLine": 327,
        "startChar": 4,
        "endLine": 327,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b57f883f_eb82106a",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T22:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91342b81_98491a04",
      "range": {
        "startLine": 327,
        "startChar": 4,
        "endLine": 327,
        "endChar": 9
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6835482_6f6489ed",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "This can be moved to line 333 (changing `ror` into `rol`) and we can get rid of `HNeg* neg \u003d nullptr;` above.",
      "range": {
        "startLine": 338,
        "startChar": 0,
        "endLine": 340,
        "endChar": 3
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "810c1040_e8114983",
        "filename": "compiler/optimizing/instruction_simplifier_shared.cc",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T22:31:58Z",
      "side": 1,
      "message": "I think it can\u0027t be moved there because a cursor instruction (`ror` here) should be inside block\u0027s `HInstructionList` but it\u0027s not (`ror` is just created with no block specified).",
      "parentUuid": "b6835482_6f6489ed",
      "range": {
        "startLine": 338,
        "startChar": 0,
        "endLine": 340,
        "endChar": 3
      },
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1704ec9e_f547c6e4",
        "filename": "compiler/optimizing/instruction_simplifier_shared.h",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-08-28T08:46:08Z",
      "side": 1,
      "message": "Add a comment explaining this method.",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90f27502_4e17e507",
        "filename": "compiler/optimizing/instruction_simplifier_shared.h",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 3270422
      },
      "writtenOn": "2024-08-29T22:31:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1704ec9e_f547c6e4",
      "revId": "3644b87cd765512e03758fd9b5b18c063d582301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}