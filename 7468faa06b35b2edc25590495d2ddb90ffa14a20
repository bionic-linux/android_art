{
  "comments": [
    {
      "key": {
        "uuid": "17237e9f_8a4797c1",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 6
      },
      "lineNbr": 911,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "we use ATTRIBUTE_UNUSED",
      "range": {
        "startLine": 911,
        "startChar": 68,
        "endLine": 911,
        "endChar": 84
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_0fba79be",
        "filename": "compiler/optimizing/instruction_builder.h",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-01-05T17:04:18Z",
      "side": 1,
      "message": "\" is \"",
      "range": {
        "startLine": 179,
        "startChar": 16,
        "endLine": 179,
        "endChar": 17
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_4a417fa9",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 6
      },
      "lineNbr": 2080,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "... for the lower bits",
      "range": {
        "startLine": 2080,
        "startChar": 7,
        "endLine": 2080,
        "endChar": 19
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_2a4643c3",
        "filename": "runtime/arch/x86/quick_entrypoints_x86.S",
        "patchSetId": 6
      },
      "lineNbr": 471,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "while you\u0027re at it: \"..., and there will be ...\"",
      "range": {
        "startLine": 471,
        "startChar": 25,
        "endLine": 471,
        "endChar": 56
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_efb61dda",
        "filename": "runtime/dex_instruction.cc",
        "patchSetId": 6
      },
      "lineNbr": 446,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-01-05T17:04:18Z",
      "side": 1,
      "message": "this change seems unrelated to compiler support - however, i have no objections to it being included in this change. please make a note of it in the commit message, though.",
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_0a3b872b",
        "filename": "runtime/entrypoints/quick/quick_default_init_entrypoints.h",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "This looks odd, why not a consistent naming?",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 110,
        "endChar": 35
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_ea372b3d",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 6
      },
      "lineNbr": 2396,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "Also add a comment that this information is static, so we could have made the compiler handle it, but for simplcity reasons (need only one entrypoint) we did not.",
      "range": {
        "startLine": 2396,
        "startChar": 0,
        "endLine": 2396,
        "endChar": 89
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_aa313349",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 6
      },
      "lineNbr": 2416,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "Can you really resolve a method at this point? All arguments are in stack/registers, so if ResolveMethod suspends, the GC won\u0027t see them.",
      "range": {
        "startLine": 2416,
        "startChar": 31,
        "endLine": 2416,
        "endChar": 53
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_ca346f3b",
        "filename": "runtime/entrypoints/quick/quick_trampoline_entrypoints.cc",
        "patchSetId": 6
      },
      "lineNbr": 2451,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-06T11:36:16Z",
      "side": 1,
      "message": "Shouldn\u0027t that be line 2404? All the arguments are in the stack or in registers, which the GC doesn\u0027t know about.",
      "range": {
        "startLine": 2451,
        "startChar": 2,
        "endLine": 2451,
        "endChar": 99
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_8fafa97c",
        "filename": "test/953-invoke-polymorphic-compiler/run",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-01-05T17:04:18Z",
      "side": 1,
      "message": "general question about this test: why do we need a separate test for compiler support ? do we do anything special to make sure that the test is run JITed (or AOTed) and not interpreted ?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17237e9f_afc0253a",
        "filename": "test/957-methodhandle-transforms/src/Main.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-01-05T17:04:18Z",
      "side": 1,
      "message": "(this could have gone into a separate change too)",
      "revId": "7468faa06b35b2edc25590495d2ddb90ffa14a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}