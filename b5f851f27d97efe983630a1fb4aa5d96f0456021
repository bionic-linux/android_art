{
  "comments": [
    {
      "key": {
        "uuid": "487ad9bd_599d6ad4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "Don\u0027t forget to remove before merging.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 5
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef737558_4d0c5154",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "\u003e Common typo found: \"the the\" -- should it be \"the\"?\n\u003e Note: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line.\n\nPlease fix.",
      "parentUuid": "62d9a00c_fcd5da60",
      "range": {
        "startLine": 113,
        "startChar": 25,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f6adcf8_08a26b61",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "Can this be a debug-only check?",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 117,
        "endChar": 3
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "782a1699_b56ada93",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "Nit: I\u0027d rather have a separate function with a distinct name than a default parameter (makes it easier to grep).",
      "range": {
        "startLine": 125,
        "startChar": 29,
        "endLine": 125,
        "endChar": 86
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "195329cc_1b141829",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 1222,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "for?",
      "range": {
        "startLine": 1222,
        "startChar": 38,
        "endLine": 1222,
        "endChar": 40
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6975835b_48d2dde5",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "\u003e Common typo found: \"of of\" -- should it be \"of\"?\n\u003e Note: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line.\n\nPlease fix.",
      "parentUuid": "5f678684_a2b1700a",
      "range": {
        "startLine": 1223,
        "startChar": 18,
        "endLine": 1223,
        "endChar": 23
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e633d1_873795bf",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 1232,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "in?",
      "range": {
        "startLine": 1232,
        "startChar": 66,
        "endLine": 1232,
        "endChar": 70
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a513d168_c707d146",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 1316,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "Nit: I would write S(n) \u003d X + n (and I would use small letters for scalars and capital letters for vectors).",
      "range": {
        "startLine": 1316,
        "startChar": 53,
        "endLine": 1316,
        "endChar": 66
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb94c45_96d0a521",
        "filename": "compiler/optimizing/nodes_vector.h",
        "patchSetId": 1
      },
      "lineNbr": 1398,
      "author": {
        "id": 1550939
      },
      "writtenOn": "2020-05-04T14:07:05Z",
      "side": 1,
      "message": "These values are not mutually exclusive (for example, kAny, kLast, kNFirst, kPLast can all be true at the same time, but not necessarily). How are they intended to be used? If for example one wants to check that at least one active element is TRUE, should they use kAny or (!kNone) or (kAny || kLast || kFirst || ...)? Should these be bit masks instead?\n\nAlso, I\u0027d rename kNFirst -\u003e kNotFirst, kNLast -\u003e kNotLast, kPMore -\u003ekMaybeMore, kPLast -\u003ekMaybeLast for readability.",
      "range": {
        "startLine": 1390,
        "startChar": 0,
        "endLine": 1398,
        "endChar": 0
      },
      "revId": "b5f851f27d97efe983630a1fb4aa5d96f0456021",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}