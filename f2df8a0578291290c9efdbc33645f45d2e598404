{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea489527_b8505036",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-16T19:20:13Z",
      "side": 1,
      "message": "Isn\u0027t it possible to put NOLINTBEGIN and NOLINTEND around the `#include`s of those headers?",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b8ddafb_7d5769eb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-09-20T12:57:17Z",
      "side": 1,
      "message": "I have indeed tried that: in theory, I don\u0027t see any (obvious) reasons why that would not work, but in practice it doesn\u0027t - I can see around a hundred errors for each line in `jvmti.h` and 16 for each line in `jvm.h` where the `typedef` statement is used.\n\nAn alternative solution (which I have already verified would be good for clang-tidy as well) would be to modify the two headers file to have the `// NOLINTBEGIN` and `// NOLINTEND` comments there - although I am not totally sold on the idea because:\n1. both files are external (in fact, both coming from Oracle) and I wonder whether there could be updates to these files in the future that would cause a merge conflict because of this change;\n2. the jvmti.h header file has an explicit `/* AUTOMATICALLY GENERATED FILE - DO NOT EDIT */` comment which I would be inclined to respect.\n\nDo you see any other solutions I\u0027m not seeing?",
      "parentUuid": "ea489527_b8505036",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cabc4e46_cf1b52b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-20T13:40:51Z",
      "side": 1,
      "message": "\u003e in theory, I don\u0027t see any (obvious) reasons why that would not work, but in practice it doesn\u0027t\n\nDid you put it around _all_ the `#include` directives? Unfortunately there are a lot of them: https://cs.android.com/search?q\u003df:%5Eart%20content:%23include%5C%20(%5C%22%7C%3C)(jvm%7Cjvmti)%5C.h\u0026sq\u003d\u0026ss\u003dandroid\n\n(We could perhaps consider moving those two `#include`s to a common ART header file to avoid lots of NOLINT lines everywhere, but of course only if it works.)",
      "parentUuid": "4b8ddafb_7d5769eb",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf3fe362_6719ee53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-09-20T13:55:21Z",
      "side": 1,
      "message": "Yes, while trying locally I have surrounded _all_ the `#include` directives (including the ones in tests) - the interesting/strange thing is that I have tried to run `m tidy-art` multiple times during the process (so when not all the directives had been \"framed\", but with different percentages at different times) and the number of violations for each `typedef` were always around a hundred (sometimes in the 90s, some other times in the 110s) but _not_ always decreasing - one could think that having more directives being enclosed in the comments would result automatically in a decrease of violations, but that\u0027s not what I have seen (unfortunately).",
      "parentUuid": "cabc4e46_cf1b52b4",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e386b6f3_4760ce37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-20T14:28:50Z",
      "side": 1,
      "message": "Strange. (Btw, my query missed libcore/ - there are a bunch more there.) I\u0027d try `m out/soong/.intermediates/...` on some specific compilation units and see if the directives work in those cases. If they do, I suspect there\u0027s some missing include path. It could be that those headers are included indirectly also through headers outside ART. It shouldn\u0027t be too hard to tell from the \"include backtrace\" in the errors.\n\n(If it indeed doesn\u0027t work, I\u0027d prefer that the defaults only allowed this in the compilation units where those headers are actually used, but that may also get unwieldy since they\u0027re included in a lot of places. And even worse it\u0027d need to be a negative constraint, i.e. not included in `art_defaults` but instead added to some new defaults that is used everywhere _except_ for those modules. So, well, although I\u0027d like that I don\u0027t think it can be done in a reasonable way without adding some new Soong functionality, which is probably taking it too far.)",
      "parentUuid": "bf3fe362_6719ee53",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82067688_618f7eff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1948615
      },
      "writtenOn": "2022-09-20T14:54:17Z",
      "side": 1,
      "message": "It looks like it does not work in that case, either (unless I\u0027m doing something wrong, obviously): I have changed as an example `openjdkjvmti/events.cc` (https://screenshot.googleplex.com/BNUs8NpbRCZxTiY) and then run:\n\n```\n~/Code/aosp-master-with-phones/art ‚ùØ m out/soong/.intermediates/art/openjdkjvmti/libopenjdkjvmti/android_x86_silvermont_static_apex31/obj/art/openjdkjvmti/events.tidy\n\n[...]\n[100% 1/1] //art/openjdkjvmti:libopenjdkjvmti clang-tidy events.cc [x86 apex31]\nFAILED: out/soong/.intermediates/art/openjdkjvmti/libopenjdkjvmti/android_x86_silvermont_static_apex31/obj/art/openjdkjvmti/events.tidy\nCLANG_CMD\u003dclang++ TIDY_FILE\u003dout/soong/.intermediates/art/openjdkjvmti/libopenjdkjvmti/android_x86_silvermont_static_apex31/obj/art/openjdkjvmti\n/events.tidy prebuilts/clang/host/linux-x86/clang-r458507/bin/clang-tidy.sh art/openjdkjvmti/events.cc -extra-arg\u003d-UNDEBUG -extra-arg\u003d-Wno-miss\ning-noreturn -extra-arg\u003d-Wno-unreachable-code -header-filter\u003d^art/openjdkjvmti/ -quiet -extra-arg-before\u003d-fno-caret-diagnostics -extra-arg-befo\nre\u003d-D__clang_analyzer__ -extra-arg-before\u003d-Xclang -extra-arg-before\u003d-analyzer-config -extra-arg-before\u003d-Xclang -extra-arg-before\u003dc++-temp-dtor-\ninlining\u003dfalse -checks\u003d-*,android-*,bugprone-*,cert-*,clang-diagnostic-unused-command-line-argument,google-build-explicit-make-pair,google-buil\nd-namespaces,google-runtime-operator,google-upgrade-*,misc-*,performance-*,portability-*,-bugprone-assignment-in-if-condition,-bugprone-easily-\nswappable-parameters,-bugprone-narrowing-conversions,-misc-const-correctness,-misc-no-recursion,-misc-non-private-member-variables-in-classes,-\nmisc-unused-parameters,-performance-no-int-to-ptr,android-cloexec-open,bugprone-argument-comment,bugprone-lambda-function-name,bugprone-macro-p\narentheses,bugprone-unused-raii,bugprone-unused-return-value,bugprone-virtual-near-miss,misc-unused-using-decls,modernize-use-bool-literals,mod\nernize-use-nullptr,performance-faster-string-find,performance-for-range-copy,performance-implicit-conversion-in-loop,performance-noexcept-move-\nconstructor,performance-unnecessary-copy-initialization,performance-unnecessary-value-param,modernize-use-using,android-cloexec-dup,-google-def\nault-arguments,-clang-analyzer-deadcode.DeadStores,-cert-err58-cpp,-cert-dcl50-cpp,-modernize-use-auto,-modernize-return-braced-init-list,-mode\nrnize-use-default-member-init,-modernize-pass-by-value,-misc-no-recursion,-readability-function-cognitive-complexity,-bugprone-reserved-identif\nier*,-cert-dcl51-cpp,-cert-dcl37-c,-readability-qualified-auto,-bugprone-implicit-widening-of-multiplication-result,-bugprone-easily-swappable-\nparameters,-cert-err33-c,-bugprone-unchecked-optional-access -warnings-as-errors\u003dandroid-cloexec-open,bugprone-argument-comment,bugprone-lambda\n-function-name,bugprone-macro-parentheses,bugprone-unused-raii,bugprone-unused-return-value,bugprone-virtual-near-miss,misc-unused-using-decls,\nmodernize-use-bool-literals,modernize-use-nullptr,performance-faster-string-find,performance-for-range-copy,performance-implicit-conversion-in-\nloop,performance-noexcept-move-constructor,performance-unnecessary-copy-initialization,performance-unnecessary-value-param,modernize-use-using,\n-bugprone-assignment-in-if-condition,-bugprone-branch-clone,-bugprone-signed-char-misuse,-misc-const-correctness -- -D__ANDROID_APEX__ -D__ANDR\nOID_APEX_MIN_SDK_VERSION__\u003d31  -msse3 -mstackrealign -DANDROID -fmessage-length\u003d0 -W -Wall -Wno-unused -Winit-self -Wpointer-arith -Wunreachabl\ne-code-loop-increment -no-canonical-prefixes -DNDEBUG -UDEBUG -fno-exceptions -Wno-multichar -O2 -g -fdebug-default-version\u003d5 -fno-strict-alias\ning -Werror\u003ddate-time -Werror\u003dpragma-pack -Werror\u003dpragma-pack-suspicious-include -Werror\u003dstring-plus-int -Werror\u003dunreachable-code-loop-incremen\nt -Wno-error\u003ddeprecated-declarations -D__compiler_offsetof\u003d__builtin_offsetof -faddrsig -fcommon -Werror\u003dint-conversion -fexperimental-new-pass\n-manager -Wno-reserved-id-macro -fcolor-diagnostics -Wno-sign-compare -Wno-defaulted-function-deleted -Wno-inconsistent-missing-override -Wno-c\n99-designator -Wno-gnu-designator -Wno-gnu-folding-constant -Wunguarded-availability -D__ANDROID_UNAVAILABLE_SYMBOLS_ARE_WEAK__ -ffp-contract\u003do\nff -fdebug-prefix-map\u003d/proc/self/cwd\u003d -ftrivial-auto-var-init\u003dzero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -ff\nunction-sections -fdata-sections -fno-short-enums -funwind-tables -fstack-protector-strong -Wa,--noexecstack -D_FORTIFY_SOURCE\u003d2 -Wstrict-alias\ning\u003d2 -Werror\u003dreturn-type -Werror\u003dnon-virtual-dtor -Werror\u003daddress -Werror\u003dsequence-point -Werror\u003dformat-security -nostdlibinc -fdebug-info-for\n-profiling -m32 -march\u003dslm -mssse3 -msse4 -msse4.1 -msse4.2 -maes -target i686-linux-android31 -DANDROID_STRICT -fPIC -Wsign-promo -Wimplicit-f\nallthrough -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS -Wno-gnu-include-next -fvisibility-inlines-hidden  -Iart/openjdkjvmti -D__LIBC_API__\u003d1000\n0 -D__LIBM_API__\u003d10000 -D__LIBDL_API__\u003d10000 -Iart/cmdline -Ilibnativehelper/header_only_include -Ilibnativehelper/include_jni -Iart/openjdkjvm\nti/include -Iexternal/libcxx/include -Iexternal/libcxxabi/include -Isystem/libbase/include -Iexternal/fmtlib/include -Iexternal/dlmalloc -Iart/\nruntime -Ibionic/libc/platform -Iart/libartbase -Iexternal/tinyxml2 -Iexternal/cpu_features/include -Iart/libdexfile -Iart/libdexfile/external/\ninclude -Iexternal/libcap/libcap/include -Iout/soong/.intermediates/art/tools/cpp-define-generator/cpp-define-generator-asm-support/android_x86\n_silvermont_apex31/gen -Iart/compiler -Iart/libelffile -Iart/dexlayout -Ibionic/libc/async_safe/include -Isystem/logging/liblog/include -Ibioni\nc/libc/system_properties/include -Isystem/core/property_service/libpropertyinfoparser/include -isystem bionic/libc/include -isystem bionic/libc\n/kernel/uapi/asm-x86 -isystem bionic/libc/kernel/uapi -isystem bionic/libc/kernel/android/scsi -isystem bionic/libc/kernel/android/uapi -fno-rt\nti -ggdb3 -Wall -Werror -Wextra -Wstrict-aliasing -fstrict-aliasing -Wunreachable-code -Wredundant-decls -Wshadow -Wunused -fvisibility\u003dprotect\ned -Wthread-safety -Wimplicit-fallthrough -Wfloat-equal -Wint-to-void-pointer-cast -Wused-but-marked-unused -Wdeprecated -Wunreachable-code-bre\nak -Wunreachable-code-return -Wno-invalid-offsetof -Winconsistent-missing-override -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS -O3 -DART_DEFAULT\n_GC_TYPE_IS_CMC -DART_USE_READ_BARRIER\u003d1 -DART_READ_BARRIER_TYPE_IS_BAKER\u003d1 -DART_USE_GENERATIONAL_CC\u003d1 -DART_FORCE_USE_READ_BARRIER\u003d1 -DART_US\nE_TLAB\u003d1 -DART_DEFAULT_COMPACT_DEX_LEVEL\u003dfast -DART_STACK_OVERFLOW_GAP_arm\u003d8192 -DART_STACK_OVERFLOW_GAP_arm64\u003d8192 -DART_STACK_OVERFLOW_GAP_x8\n6\u003d8192 -DART_STACK_OVERFLOW_GAP_x86_64\u003d8192 -DUSE_D8_DESUGAR\u003d1 -Wmissing-noreturn -DART_ENABLE_CODEGEN_arm -DART_ENABLE_CODEGEN_arm64 -DART_ENA\nBLE_CODEGEN_x86 -DART_ENABLE_CODEGEN_x86_64 -DART_TARGET -DART_TARGET_ANDROID -Wframe-larger-than\u003d1736 -DART_FRAME_SIZE_LIMIT\u003d1736 -DART_BASE_A\nDDRESS\u003d0x70000000 \u0027-DART_BASE_ADDRESS_MIN_DELTA\u003d(-0x1000000)\u0027 -DART_BASE_ADDRESS_MAX_DELTA\u003d0x1000000 -DART_TARGET -DART_TARGET_ANDROID -msse4.2\n -mpopcnt -std\u003dgnu++17 -fno-rtti -Isystem/core/include -Isystem/logging/liblog/include -Isystem/media/audio/include -Ihardware/libhardware/incl\nude -Ihardware/libhardware_legacy/include -Ihardware/ril/include -Iframeworks/native/include -Iframeworks/native/opengl/include -Iframeworks/av\n/include  -Werror\u003dbool-operation -Werror\u003dimplicit-int-float-conversion -Werror\u003dint-in-bool-context -Werror\u003dint-to-pointer-cast -Werror\u003dpointer-\nto-int-cast -Werror\u003dxor-used-as-pow -Wno-void-pointer-to-enum-cast -Wno-void-pointer-to-int-cast -Wno-pointer-to-int-cast -Werror\u003dfortify-sourc\ne -Werror\u003daddress-of-temporary -Werror\u003dreturn-type -Wno-tautological-constant-compare -Wno-tautological-type-limit-compare -Wno-reorder-init-li\nst -Wno-implicit-int-float-conversion -Wno-sizeof-array-div -Wno-tautological-overlap-compare -Wno-deprecated-copy -Wno-range-loop-construct -W\nno-zero-as-null-pointer-constant -Wno-deprecated-anon-enum-enum-conversion -Wno-pessimizing-move -Wno-non-c-typedef-for-linkage -Wno-align-mism\natch -Wno-error\u003dunused-but-set-variable -Wno-error\u003dunused-but-set-parameter -Wno-error\u003dunqualified-std-cast-call\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/openjdkjvmti/events.cc:88:15: warning: comparing object representation of\nnon-standard-layout type \u0027openjdkjvmti::ArtJvmtiEventCallbacks\u0027; consider using a comparison operator instead [bugprone-suspicious-memory-compar\nison,cert-exp42-c,cert-flp37-c]\n    DCHECK_EQ(memcmp(\u0026clean, this, sizeof(clean)), 0)\n              ^\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/openjdkjvmti/include/jvmti.h:65:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 \n[modernize-use-using,-warnings-as-errors]\ntypedef _jvmtiEnv jvmtiEnv;\n^~~~~~~~~~~~~~~~~~~~~~~~~~\nusing jvmtiEnv \u003d _jvmtiEnv\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/openjdkjvmti/include/jvmti.h:72:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 \n[modernize-use-using,-warnings-as-errors]\ntypedef jobject jthread;\n^~~~~~~~~~~~~~~~~~~~~~~\nusing jthread \u003d jobject\n/usr/local/google/home/scianciulli/Code/aosp-master-with-phones/art/openjdkjvmti/include/jvmti.h:73:1: error: use \u0027using\u0027 instead of \u0027typedef\u0027 \n[modernize-use-using,-warnings-as-errors]\ntypedef jobject jthreadGroup;\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[...]\n```\n\nbut the errors are still there.",
      "parentUuid": "e386b6f3_4760ce37",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58336c14_572ca8ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2022-09-21T18:40:46Z",
      "side": 1,
      "message": "You\u0027re right. I tested it a bit myself and afaict it simply ignores NOLINT comments if they\u0027re not in the same file. How annoying.",
      "parentUuid": "82067688_618f7eff",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdab65fc_7bc6dc02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2022-09-20T13:06:50Z",
      "side": 1,
      "message": "In libcore, we have a lot of upstream code and there is a pattern of change markers to outline changes and make the intent clear.\n\nThe files here aren\u0027t actively updated so having a change-marker comment may help the next person to update them.",
      "tag": "mailMessageId\u003d\u003cCAAttue35vKsHCB-zo\u003d0n6CNYkEEKWbnvTi59ucGXAArnSwCPLg@mail.gmail.com\u003e",
      "revId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "AIDL-API-Review",
        "description": {
          "value": "Submit requirement for the AIDL-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(.*/)?aidl_api/.*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:AIDL-API-Review AND -label:AIDL-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(.*/)?aidl_api/.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(.*/)?aidl_api/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:AIDL-API-Review AND -label:AIDL-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "API-Review",
        "description": {
          "value": "Submit requirement for the API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:API-Review\u003dMAX AND -label:API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\"","project:device/generic/vulkan-cereal","project:platform/external/qemu","project:platform/hardware/interfaces","project:toolchain/go","project:platform/prebuilts/go/darwin-x86","project:platform/prebuilts/go/linux-x86","project:platform/system/tools/xsdc","project:platform/external/gfxstream-protocols","project:platform/frameworks/av","file:\".*/xmlparser/.*\"","project:platform/external/icu","file:\".*android_icu4j/api/legacy_platform/.*\"","project:platform/tools/base","file:\".*build-system/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:API-Review=MAX AND -label:API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Build-Team-Review",
        "description": {
          "value": "Build team review is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Build-Team-Review\u003dMAX AND -label:Build-Team-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"Import translations.\"","message:\"DO NOT MERGE ANYWHERE\"","branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Build-Team-Review=MAX AND -label:Build-Team-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the Code-Review requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Code-Review\u003dMIN AND (label:Code-Review\u003dMAX,user\u003dnon_uploader OR (label:Code-Review\u003dMAX AND (label:Exempt\u003d+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Code-Review=MIN AND (label:Code-Review=MAX,user=non_uploader OR (label:Code-Review=MAX AND (label:Exempt=+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN","label:Exempt=+1","uploader:1474732","project:platform/developers/docs","project:platform/frameworks/support"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers"]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "DrNo-Review",
        "description": {
          "value": "Submit requirement for the DrNo-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:DrNo-Review\u003dMAX AND -label:DrNo-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/heads/oreo-cts-dev","branch:refs/heads/oreo-mr1-cts-dev","branch:refs/heads/oreo-vts-dev","branch:refs/heads/oreo-mr1-vts-dev","branch:refs/heads/nougat-cts-dev","branch:refs/heads/nougat-mr1-cts-dev","branch:refs/heads/pie-cts-dev","branch:refs/heads/pie-vts-dev","branch:refs/heads/android10-tests-dev","branch:refs/heads/android11-tests-dev","branch:refs/heads/android12-tests-dev","branch:refs/heads/android12L-tests-dev","branch:refs/heads/android13-tests-dev","branch:^refs/heads/.*-gsi"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:DrNo-Review=MAX AND -label:DrNo-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Lint",
        "description": {
          "value": "Submit requirement for the Lint requirement"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Lint\u003dMIN AND (label:Lint\u003d+2 OR -label:Lint\u003d-1)"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Lint=MIN AND (label:Lint=+2 OR -label:Lint=-1)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Lint=MIN","label:Lint=+2","label:Lint=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "NDK-API-Review",
        "description": {
          "value": "Submit requirement for the NDK-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^.*\\\\.map\\\\.txt$\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:NDK-API-Review\u003dMAX AND -label:NDK-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^.*\\\\.map\\\\.txt$\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^.*\\\\.map\\\\.txt$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:NDK-API-Review=MAX AND -label:NDK-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Open-Source-Licensing",
        "description": {
          "value": "Submit requirement for the Open-Source-Licensing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Open-Source-Licensing\u003d0 OR (-label:Open-Source-Licensing\u003dMIN AND ((label:Open-Source-Licensing\u003dMAX AND label:Open-Source-Licensing\u003d-1) OR -label:Open-Source-Licensing\u003d-1))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Open-Source-Licensing=0 OR (-label:Open-Source-Licensing=MIN AND ((label:Open-Source-Licensing=MAX AND label:Open-Source-Licensing=-1) OR -label:Open-Source-Licensing=-1))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Open-Source-Licensing=0","label:Open-Source-Licensing=MIN","label:Open-Source-Licensing=MAX","label:Open-Source-Licensing=-1","label:Open-Source-Licensing=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Presubmit-Verified",
        "description": {
          "value": "Submit requirement for the Presubmit-Verified requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Presubmit-Verified\u003d-2 AND (label:Bypass-Presubmit\u003d+1 OR label:Presubmit-Verified-Together\u003d+1 OR (-label:Presubmit-Verified\u003d-1 AND (label:Presubmit-Verified\u003d+2 OR label:Presubmit-Verified\u003d+1)))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bypass-Presubmit\u003d+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override\u003d+1 AND is:pure-revert AND -label:Presubmit-Verified\u003d-2)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Presubmit-Verified=-2 AND (label:Bypass-Presubmit=+1 OR label:Presubmit-Verified-Together=+1 OR (-label:Presubmit-Verified=-1 AND (label:Presubmit-Verified=+2 OR label:Presubmit-Verified=+1)))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Presubmit-Verified=+1"],"failingAtoms":["label:Presubmit-Verified=-2","label:Bypass-Presubmit=+1","label:Presubmit-Verified-Together=+1","label:Presubmit-Verified=-1","label:Presubmit-Verified=+2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bypass-Presubmit=+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override=+1 AND is:pure-revert AND -label:Presubmit-Verified=-2)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bypass-Presubmit=+2","is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1","is:pure-revert","label:Presubmit-Verified=-2"]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Qualcomm-Review",
        "description": {
          "value": "Submit requirement for the Qualcomm-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Qualcomm-Review\u003dMAX AND -label:Qualcomm-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\"","project:\"^.*/vendor/(qcom|bsp).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Qualcomm-Review=MAX AND -label:Qualcomm-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f2df8a0578291290c9efdbc33645f45d2e598404",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}