{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa41368e_6c86d0f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2024-08-08T09:20:49Z",
      "side": 1,
      "message": "CC\u0027d Nicolas for information.",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fd9bd3e_9279e2ff",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1826738
      },
      "writtenOn": "2024-08-08T10:11:41Z",
      "side": 1,
      "message": "Can we structure this check so it doesn\u0027t need to be changed if a new kMaxTarget is added?",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "493b17bd_b6c94683",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1494236
      },
      "writtenOn": "2024-08-09T02:04:03Z",
      "side": 1,
      "message": "I preferred to explicitly enumerate, since this behavior could be unsafe, and I would err on the side of thinking about whether any new value should be added to this list -- wdyt?",
      "parentUuid": "1fd9bd3e_9279e2ff",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1dc9a4_3e77ca00",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1826738
      },
      "writtenOn": "2024-08-09T10:22:53Z",
      "side": 1,
      "message": "Sg, I guess worst case with your approach is that there is a false-positive error, which is better than a false-negative error.",
      "parentUuid": "493b17bd_b6c94683",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6fe8f4c_9b057717",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2024-08-09T10:35:36Z",
      "side": 1,
      "message": "Duplicating the check should be avoided. Instead of trying to compare in both directions in one method how about just doing one direction and calling it twice with the parameters swapped, e.g.\n```\n    ...\n    } else if (is_conflicting_flags_acceptable(val1, val2)) {\n      return ApiList(Value::kSdk, domain_apis);\n    } else if (is_conflicting_flags_acceptable(val2, val1)) {\n      return ApiList(Value::kSdk, domain_apis);\n    ...\n```\n\nAs to how to handle new `kMaxTarget*` I don\u0027t think this enumerated check of all the acceptable values is particularly bad or good. The alternative approach is to list the unacceptable values which is not fundamentally any different.\n\nI would say pick the approach that keeps the change simpler to reason about and smaller.",
      "parentUuid": "493b17bd_b6c94683",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d2d8a3e_4228963c",
        "filename": "libartbase/base/hiddenapi_flags.h",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2024-08-09T10:38:00Z",
      "side": 1,
      "message": "I did not see Mark\u0027s comment before posting mine. He has a point about the errors.  I would still like to see the duplicated code removed.",
      "parentUuid": "b6fe8f4c_9b057717",
      "revId": "37f3789b12d02c4b10f1342cf22f67bfbc20c4f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}