{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e671191_30702266",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-11T18:41:19Z",
      "side": 1,
      "message": "TODO run the same postsubmit that previously failed to verify that the reland won\u0027t re-break",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762c0760_d72531cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-11T20:06:39Z",
      "side": 1,
      "message": "I can\u0027t, no permissions.\n```\n$ led get-builder art/ci/angler-armv8-ndebug | led edit-gerrit-cl https://android-review.git.corp.google.com/c/platform/art/+/3306222 | led launch\n[I 2024-10-11 20:05:12] Launching the led job as a real build\n[W 2024-10-11 20:05:12] RPC failed permanently: rpc error: code \u003d PermissionDenied desc \u003d \"user:shayba@google.com\" does not have permission \"buildbucket.builds.create\" in bucket \"art/ci.shadow\" {\"host\":\"cr-buildbucket.appspot.com\", \"method\":\"CreateBuild\", \"service\":\"buildbucket.v2.Builds\"}\n[E 2024-10-11 20:05:12] rpc error: code \u003d PermissionDenied desc \u003d \"user:shayba@google.com\" does not have permission \"buildbucket.builds.create\" in bucket \"art/ci.shadow\n```\n\nHey @solanes@google.com, could I ask you to kick off a LUCI run for me please?\nOr - could I get allowlisted?\nOr both? ðŸ˜Š",
      "parentUuid": "6e671191_30702266",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c970a6_c1f22fb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T08:41:31Z",
      "side": 1,
      "message": "The `led` command you want is not that one. It is `led get-builder angler-armv7-non-gen-cc | led edit-gerrit-cl https://android-review.git.corp.google.com/c/platform/art/+/3306222 | led launch` (note the armv7, armv8 was fine). I can kick it off, after the `address` comments.\n\nI can look into the allowlist and how to add people in the meantime.",
      "parentUuid": "762c0760_d72531cd",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1949d310_d279585b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T10:15:26Z",
      "side": 1,
      "message": "My command was missing an `art/ci/` i.e. it should have been `led get-builder art/ci/angler-armv7-non-gen-cc | led edit-gerrit-cl https://android-review.git.corp.google.com/c/platform/art/+/3306222 | led launch`\n\nYou can check the progress in https://ci.chromium.org/b/8734110224137910625",
      "parentUuid": "c9c970a6_c1f22fb5",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af3045a5_2f9c5f35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T12:05:33Z",
      "side": 1,
      "message": "Let me get this to pass regular presubmit first and then I\u0027ll ping you back here.\nThank you for your support.",
      "parentUuid": "1949d310_d279585b",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9b83181_74b4a496",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2585,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T08:41:31Z",
      "side": 1,
      "message": "nit: move this down to line 2591 so that the `address` calculation is all together",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f36276de_089c8aa2",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2585,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T08:58:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9b83181_74b4a496",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ecdfcbf_57b95807",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T08:41:31Z",
      "side": 1,
      "message": "`offset` might not be valid.\n\nDo we even need this `__ add` and `temp_reg`? `MemOperand(temp_reg)` will be equal to `MemOperand address` as far as I can see. This would let us remove `temps` as well.\n\nSame for other cases.",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fffe0648_16ee04e7",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T08:58:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ecdfcbf_57b95807",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce1e8932_f22e7251",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T11:59:17Z",
      "side": 1,
      "message": "I guess we can\u0027t do that?\n\n```\nCmdline: out/host/linux-x86/bin/dex2oatd --avoid-storing-invocation --write-invocation-to\u003dout/soong/dexpreopt_arm64/dex_bootjars/android/system/framework/arm/boot.invocation --runtime-arg -Xms64m --runtime-arg -Xmx64m --profile-file\u003dout/soong/.intermediates/build/soong/dex_bootjars/android_common/boot/boot.prof --profile-file\u003dout/soong/.intermediates/art/build/boot/art-bootclasspath-fragment/android_common_apex31/art-bootclasspath-fragment/boot.prof --dirty-image-objects\u003dframeworks/base/config/dirty-image-objects --base\u003d0x70000000 --preloaded-classes\u003dframeworks/base/config/preloaded-classes --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/core-oj.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/core-libart.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/okhttp.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/bouncycastle.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/apache-xml.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/framework.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/framework-graphics.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/framework-location.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/ext.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/telephony-common.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/voip-common.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/ims-common.jar --dex-file\u003dout/soong/dexpreopt_arm64/dex_bootjars_input/core-icu4j.jar --dex-location\u003d/apex/com.android.art/javalib/core-oj.jar --dex-location\u003d/apex/com.android.art/javalib/core-libart.jar --dex-location\u003d/apex/com.android.art/javalib/okhttp.jar --dex-location\u003d/apex/com.android.art/javalib/bouncycastle.jar --dex-location\u003d/apex/com.android.art/javalib/apache-xml.jar --dex-location\u003d/system/framework/framework.jar --dex-location\u003d/system/framework/framework-graphics.jar --dex-location\u003d/system/framework/framework-location.jar --dex-location\u003d/system/framework/ext.jar --dex-location\u003d/system/framework/telephony-common.jar --dex-location\u003d/system/framework/voip-common.jar --dex-location\u003d/system/framework/ims-common.jar --dex-location\u003d/apex/com.android.i18n/javalib/core-icu4j.jar --generate-debug-info --generate-build-id --image-format\u003dlz4hc --oat-symbols\u003dout/soong/dexpreopt_arm64/dex_bootjars_unstripped/android/system/framework/arm/boot.oat --oat-file\u003dout/soong/dexpreopt_arm64/dex_bootjars/android/system/framework/arm/boot.oat --oat-location\u003dout/soong/dexpreopt_arm64/dex_bootjars/android/system/framework/boot.oat --image\u003dout/soong/dexpreopt_arm64/dex_bootjars/android/system/framework/arm/boot.art --instruction-set\u003darm --android-root\u003dout/empty --no-inline-from\u003dcore-oj.jar --force-determinism --abort-on-hard-verifier-error --strip --compiler-filter\u003dspeed-profile --instruction-set-variant\u003dgeneric --instruction-set-features\u003ddefault --runtime-arg -Xgc:CMC --generate-mini-debug-info\nThread: 112741 \"Compiler driver\"\nRegisters:\n    rax: 0x0000000000000000    rbx: 0x00007f6b501edea8    rcx: 0x00007f6b592b1c37    rdx: 0x0000000000000006\n    rdi: 0x000000000001b0ec    rsi: 0x000000000001b865    rbp: 0x00007f6b501edf30    rsp: 0x00007f6b501edd58\n    r8 : 0x00007f6b593f5640    r9 : 0x6d657373612f3233    r10: 0x0000000000000008    r11: 0x0000000000000202\n    r12: 0x00007f6b501eded8    r13: 0x00007f6b501edff0    r14: 0x00007f6b501edec0    r15: 0x00007f6b501ede90\n    rip: 0x00007f6b592b1c37    eflags: 0x00000202 [ IF ]\n     cs: 0x00000033     gs: 0x00000000     fs: 0x00000000\n\nBacktrace:\nIll-formed \u0027ldrexd\u0027 instruction.\nin external/vixl/src/aarch32/assembler-aarch32.h, line 6148\ndex2oatd F art/runtime/runtime_common.cc] HandleUnexpectedSignal reentered\n\ndex2oatd F art/runtime/runtime_common.cc]  S06\n\nERROR: Dex2oat failed to compile a boot image.It is likely that the boot classpath is inconsistent.Rebuild with ART_BOOT_IMAGE_EXTRA_ARGS\u003d\"--runtime-arg -verbose:verifier\" to see verification errors.\n```",
      "parentUuid": "fffe0648_16ee04e7",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8155b548_4f83fb11",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2024-10-14T12:16:59Z",
      "side": 1,
      "message": "So I think for `ldrexd`/`strexd` there is no form that takes an address and an offset, so we have to load the absolute address into a register.\nIs this correct?\nIf so, then IIUC this also mean that we can\u0027t remove `maybe_temp` as you suggested elsewhere, correct?",
      "parentUuid": "ce1e8932_f22e7251",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f308f151_d6778011",
        "filename": "compiler/optimizing/intrinsics_arm_vixl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-10-14T12:25:44Z",
      "side": 1,
      "message": "You are correct for the base+offset case. For the absolute case you are adding, the extra temp is not needed. For deduplication purposes, we might keep acquiring the temp in both scenarios but use `temp_reg \u003d base` in the absolute case, and do the `add` in the `base+offset` case. Something like:\n\n```\nvixl32::Register temp_reg;\n  if (offset.IsValid()) {\n    // If offset is valid then this is a get from a relative address.\n    temp_reg \u003d temps.Acquire();\n    __ Add(temp_reg, base, offset);\n  } else {\n    temp_reg \u003d base;\n  }\n```\nWDYT?",
      "parentUuid": "8155b548_4f83fb11",
      "revId": "5805614301acd05a0f6bb142be7899cd3b2b324e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}