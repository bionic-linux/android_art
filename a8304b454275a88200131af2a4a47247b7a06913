{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6f040e9e_c08c9b56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Leave a blank line between the title and body",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddab06ca_abdab7d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 8,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Not needed in the commit message. It is an implementation detail which is not that important.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 44
      },
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b17287_2b3e03ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Not only it tries to verify the DEX files, but also runs class verification (which includes method verification)",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31e415ec_1238ccbb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Would it be possible to add a README to show how to do this? We have other README.md files in the ART repo that are used as tutorials",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d134812c_acbde80d",
        "filename": "tools/fuzzer/Android.bp",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Would it be possible to also add a debug version like `libart_verify_dex` has?",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc0f2aa2_a4b29db9",
        "filename": "tools/fuzzer/Android.bp",
        "patchSetId": 7
      },
      "lineNbr": 108,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "You already did this right?",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "753f987c_2d75da18",
        "filename": "tools/fuzzer/Android.bp",
        "patchSetId": 7
      },
      "lineNbr": 117,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Add a TODO to try to enable `core-icu4j` too like the conscrypt one",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "742bd990_025fd2ee",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 2,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "2024",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "367de72a_6f8e34df",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "unused",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d517eaf_f9d56040",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Suggestion: Have only one TODO for the commented out modules mentioning that we would like to enable them in the future",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 52,
        "endChar": 37
      },
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf79110d_d5f35373",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Is this only working for arm64? Can we try to enable it for all architectures? I think it should be a matter of getting the ISA (instruction set architecture) that we are compiling for. You might be able to use `GetInstructionSetString(art::kRuntimeISA))` like you do below",
      "range": {
        "startLine": 58,
        "startChar": 64,
        "endLine": 58,
        "endChar": 69
      },
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6eeb87e_8bebef05",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "This is unused until you enable `core-icu4j`",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2ad4994_a5b3230e",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "line too long",
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "229b3ca7_bf3220e7",
        "filename": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
        "patchSetId": 7
      },
      "lineNbr": 183,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2024-07-16T14:29:21Z",
      "side": 1,
      "message": "Can you add a comment saying that we are ignoring classes that couldn\u0027t be loaded since we are looking for crashes during class/method verification?",
      "fixSuggestions": [
        {
          "fixId": "2d1e131c_bbe23643",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "tools/fuzzer/libart_verify_classes_fuzzer.cc",
              "range": {
                "startLine": 183,
                "startChar": 0,
                "endLine": 183,
                "endChar": 0
              },
              "replacement": "        // Ignore classes that couldn\u0027t be loaded since we are looking for crashes during class/method verification.\n"
            }
          ]
        }
      ],
      "revId": "a8304b454275a88200131af2a4a47247b7a06913",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}