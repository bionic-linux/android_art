{
  "comments": [
    {
      "key": {
        "uuid": "b00d9b48_7e2e7bf2",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 5
      },
      "lineNbr": 999,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-04-06T14:58:51Z",
      "side": 1,
      "message": "Can you also mention what happens to the environment? If it\u0027s not copied, please mention that the code generator doesn\u0027t actually generate a call.",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 999,
        "endChar": 70
      },
      "revId": "6daebeba6ceab4e7dff5a3d65929eeac9a334004",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0f2dea2_b047280f",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 5
      },
      "lineNbr": 999,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-04-06T16:38:49Z",
      "side": 1,
      "message": "Ah, glad you ask, since the copying happens when the \"map\" is put into the HIR. I will add a comment on that to make sure that is more clear here and there. Thanks.",
      "parentUuid": "b00d9b48_7e2e7bf2",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 999,
        "endChar": 70
      },
      "revId": "6daebeba6ceab4e7dff5a3d65929eeac9a334004",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b2d1673_f0aa41e6",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 5
      },
      "lineNbr": 1014,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-05-19T13:36:53Z",
      "side": 1,
      "message": "Bug: If the invoke has more inputs than arguments, we should use inputs[index] directly instead of looking it up in the vector_map_.\n\nAt this stage there\u0027s no X86/MipsComputeBaseMethodAddress or Arm/MipsDexCacheArraysBase yet but we should fully support the fall-back kind kDexCacheViaMethod which has the HCurrentMethod. Even though we currently use that kind only for mips in a method with graph_-\u003eHasIrreducibleLoops() which this optimization rejects.\n\n(I found this while experimenting with method load kinds for https://android-review.googlesource.com/399312 .)",
      "range": {
        "startLine": 1014,
        "startChar": 43,
        "endLine": 1014,
        "endChar": 74
      },
      "revId": "6daebeba6ceab4e7dff5a3d65929eeac9a334004",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2f50165_88bf1f97",
        "filename": "compiler/optimizing/loop_optimization.cc",
        "patchSetId": 5
      },
      "lineNbr": 1014,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-05-19T14:31:13Z",
      "side": 1,
      "message": "Thanks for the headsup.",
      "parentUuid": "9b2d1673_f0aa41e6",
      "range": {
        "startLine": 1014,
        "startChar": 43,
        "endLine": 1014,
        "endChar": 74
      },
      "revId": "6daebeba6ceab4e7dff5a3d65929eeac9a334004",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}