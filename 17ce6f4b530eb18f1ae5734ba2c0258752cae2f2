{
  "comments": [
    {
      "key": {
        "uuid": "3c913fcf_85c5e1f5",
        "filename": "runtime/openjdkjvmti/object_tagging.cc",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1094349
      },
      "writtenOn": "2016-10-21T18:25:16Z",
      "side": 1,
      "message": "Just out of curiosity, when does concurrent copy happen relative to when Sweep is called? Does this apply to background app only?",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 48,
        "endChar": 26
      },
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0657a0_ab77757d",
        "filename": "runtime/openjdkjvmti/object_tagging.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-21T12:18:14Z",
      "side": 1,
      "message": "things",
      "range": {
        "startLine": 136,
        "startChar": 65,
        "endLine": 136,
        "endChar": 71
      },
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c913fcf_d8f6f572",
        "filename": "runtime/openjdkjvmti/object_tagging.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-10-21T16:53:52Z",
      "side": 1,
      "message": "You could remove the iterator here:\nit \u003d tagged_objects_.erase(it);",
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c913fcf_33053a2e",
        "filename": "runtime/openjdkjvmti/object_tagging.cc",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-10-21T17:43:03Z",
      "side": 1,
      "message": "I forgot we can now rely on C++14 guarantees.\n\nI wonder whether I should fiddle with max_load_factor, so I can emplace at the same time, and just rehash at the end (or even let it be done lazily).",
      "parentUuid": "3c913fcf_d8f6f572",
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0657a0_8b7cb162",
        "filename": "runtime/openjdkjvmti/object_tagging.h",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-10-21T12:18:14Z",
      "side": 1,
      "message": "Premature optimization? If this change about just changing the data structure, could you do this optimization in a follow-up CL?",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 133,
        "endChar": 32
      },
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c913fcf_cdbf1507",
        "filename": "runtime/openjdkjvmti/object_tagging.h",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-10-21T15:48:49Z",
      "side": 1,
      "message": "It\u0027s not premature if our GC people tell me they have concerns about the performance and keeping the contents of the table live. I\u0027ll split it into a separate CL, but I want this merged.\n\n(Note that I should have tagged this RFC, it\u0027s mainly for shiufai to check the performance with his prototype. UpdateTable isn\u0027t yet implemented, as you may have seen.)",
      "parentUuid": "7c0657a0_8b7cb162",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 133,
        "endChar": 32
      },
      "revId": "17ce6f4b530eb18f1ae5734ba2c0258752cae2f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}