{
  "comments": [
    {
      "key": {
        "uuid": "c88a26db_2afbc303",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-24T09:46:28Z",
      "side": 1,
      "message": "I find the wording confusing: is the issue in the compiler, or in the fugu hardware?",
      "range": {
        "startLine": 11,
        "startChar": 44,
        "endLine": 11,
        "endChar": 55
      },
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4819d6bf_854f4275",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-01-24T10:18:32Z",
      "side": 1,
      "message": "It isn\u0027t clear yet whether this is directly an ART bug or a compiler bug. This workaround has been added so that we can proceed with upgrading the toolchain, where this is the only pending potential compiler issue. We are hoping that someone more familiar with fugu can take a look at the generated code in the future (Intel and/or Android ART folks).",
      "parentUuid": "c88a26db_2afbc303",
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c88a26db_aaa833c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-24T12:30:43Z",
      "side": 1,
      "message": "Thanks. Is host/x86 also affected?",
      "parentUuid": "4819d6bf_854f4275",
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28f9028e_5238743c",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2017-01-24T01:15:28Z",
      "side": 1,
      "message": "I couldn\u0027t find documentation for this pragma.  Is it possible to do push/pop?",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28f9028e_528cf48a",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-01-24T01:29:42Z",
      "side": 1,
      "message": "push/pop only works for diagnostics based on my search through the documentation. This seems to be the preferred way from some google searching. I also might experiment with \"optnone\" as an attribute, or \"noinline\", since those might make the bug disappear, while giving better results to differentiate between working/broken configurations.",
      "parentUuid": "28f9028e_5238743c",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4819d6bf_455f0a82",
        "filename": "runtime/atomic.h",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1087371
      },
      "writtenOn": "2017-01-24T08:16:48Z",
      "side": 1,
      "message": "I suspect using noinline will also get rid of the problem.",
      "parentUuid": "28f9028e_528cf48a",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 28
      },
      "revId": "fbd5118c1c36900910cabe89e3a73d598160e629",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}