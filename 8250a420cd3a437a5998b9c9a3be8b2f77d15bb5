{
  "comments": [
    {
      "key": {
        "uuid": "6d6665f4_27d0c2cf",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 4
      },
      "lineNbr": 624,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-14T16:08:37Z",
      "side": 1,
      "message": "If this fails, we shall have a pending exception and trying to throw another one shall abort in Thread::AssertNoPendingException().",
      "range": {
        "startLine": 623,
        "startChar": 0,
        "endLine": 624,
        "endChar": 54
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f01679e_fe1e3afa",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 4
      },
      "lineNbr": 624,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-15T11:41:24Z",
      "side": 1,
      "message": "Given we\u0027re dealing with an NPE, I think the assumption here is that the field has already been resolved.",
      "parentUuid": "6d6665f4_27d0c2cf",
      "range": {
        "startLine": 623,
        "startChar": 0,
        "endLine": 624,
        "endChar": 54
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b673cb0_0a135bff",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 4
      },
      "lineNbr": 624,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-15T14:17:18Z",
      "side": 1,
      "message": "Then change it to LookupResolvedField() and DCHECK(field !\u003d nullptr); However, this may not work if the field was resolved at AOT and the class has not been resolved at runtime yet. There is the assumption that it would be resolved the same way at runtime but it may not actually resolve, for example because of OOME. Maybe we should have a regression test for that.",
      "parentUuid": "1f01679e_fe1e3afa",
      "range": {
        "startLine": 623,
        "startChar": 0,
        "endLine": 624,
        "endChar": 54
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e952870_936e457f",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 4
      },
      "lineNbr": 643,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-14T16:08:37Z",
      "side": 1,
      "message": "So, this has previously been broken.",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 643,
        "endChar": 61
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b717cdb_13af951e",
        "filename": "runtime/common_throws.cc",
        "patchSetId": 4
      },
      "lineNbr": 658,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-14T16:08:37Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 657,
        "startChar": 0,
        "endLine": 658,
        "endChar": 54
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ff53f5e_03334e7e",
        "filename": "runtime/vdex_file.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-14T16:08:37Z",
      "side": 1,
      "message": "The caller REQUIRES_SHARED(Locks::mutator_lock_), so this function should require it as well to avoid the SOA.",
      "range": {
        "startLine": 362,
        "startChar": 2,
        "endLine": 362,
        "endChar": 20
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86b0fc4c_11f6581d",
        "filename": "runtime/vdex_file.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-15T11:41:24Z",
      "side": 1,
      "message": "See my comment on PS2, do you have any opinion?",
      "parentUuid": "1ff53f5e_03334e7e",
      "range": {
        "startLine": 362,
        "startChar": 2,
        "endLine": 362,
        "endChar": 20
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83fb78ba_1479f6a2",
        "filename": "runtime/vdex_file.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-15T14:17:18Z",
      "side": 1,
      "message": "Split the method? Replace the \"ArtMethod* method\" parameter with code item and quickened info data. Deal with the method-specific stuff (method-\u003eGetQuickenedInfo() and method-\u003eGetCodeItem()) in ArtMethod.",
      "parentUuid": "86b0fc4c_11f6581d",
      "range": {
        "startLine": 362,
        "startChar": 2,
        "endLine": 362,
        "endChar": 20
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf0d93b0_4604107c",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 4402,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-14T16:08:37Z",
      "side": 1,
      "message": "Check for DexFile::kDexNoIndex16?\nOr CHECK(method_being_verified_ !\u003d nullptr)?",
      "range": {
        "startLine": 4402,
        "startChar": 13,
        "endLine": 4402,
        "endChar": 23
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ee5ceba_c6c0d192",
        "filename": "runtime/verifier/method_verifier.cc",
        "patchSetId": 4
      },
      "lineNbr": 4402,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-15T11:41:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf0d93b0_4604107c",
      "range": {
        "startLine": 4402,
        "startChar": 13,
        "endLine": 4402,
        "endChar": 23
      },
      "revId": "8250a420cd3a437a5998b9c9a3be8b2f77d15bb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}