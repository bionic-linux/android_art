{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a372fb15_1913a86c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2023-11-22T17:19:46Z",
      "side": 1,
      "message": "Wonderful!\nCould you please share a link to a trace that you captured with this?",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adb98003_6db64047",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-22T18:23:23Z",
      "side": 1,
      "message": "Hey, sure; here\u0027s a trace I captured on a Cuttlefish instance:\n\nhttps://ui.perfetto.dev/#!/?s\u003d1f087812f08072cb81c8328e9f05d512372355e24db874ae335d7c9dae5fe074",
      "parentUuid": "a372fb15_1913a86c",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f6dd8e_73b86a4c",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-23T21:00:24Z",
      "side": 1,
      "message": "Yet you\u0027re taking the effort to plumb through `ATRACE_INT64` in the child CLs. Why?\n\nI worry a little that the max value warning below can become very spammy if we\u0027re actually starting to get large values. Even though logd has some log spam protection, there\u0027s the risk that this function becomes many orders of magnitude slower on older devices, which we\u0027re likely to test less thoroughly.",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a04857_c3d35872",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-24T14:48:54Z",
      "side": 1,
      "message": "\u003e Yet you\u0027re taking the effort to plumb through `ATRACE_INT64` in the child CLs. Why?\n\nBecause:\n1. these metrics are currently computed and reported as a 64-bit integers (in ART and in our metrics pipelines);\n2. we may consider managed heaps larger than 4 GiB in the future (or even just larger than 2 GiB; see below).\n\nI\u0027m trying to plan ahead here, but at the same time stay compatible with the system `libartpalette` implementations shipped with Android 12 â€“ 14.\n\n\u003e I worry a little that the max value warning below can become very spammy if we\u0027re actually starting to get large values. Even though logd has some log spam protection, there\u0027s the risk that this function becomes many orders of magnitude slower on older devices, which we\u0027re likely to test less thoroughly.\n\nI\u0027ll let Lokesh (@lokeshgidra@google.com) comment on this, but in practice I think we\u0027ll never reach this code path. If we do, it would mean a single GC cycle collected 2 GiB of objects, which is improbable and probably fine to ignore as a one-off (I\u0027m not even sure 2 GiB *heaps* are used anywhere).",
      "parentUuid": "e2f6dd8e_73b86a4c",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427749d7_ee11b4fa",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-27T23:23:01Z",
      "side": 1,
      "message": "I\u0027m more concerned that this function start to get used for other metrics in the future, which appears to be the intention. What about guarding the log with a simple static boolean flag so that it\u0027s logged just once per process?\n\nThen I also wonder if we may be better off sending something like 0 or -1 to ATrace instead of just skipping it if it\u0027s outside the limit, so we get some kind of indication that samples were lost when they\u0027re outside the range. But if that\u0027s a good idea or not depends on the pipeline in ATrace and perfetto etc, which I don\u0027t know much about.",
      "parentUuid": "b0a04857_c3d35872",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdc08e37_990a2d86",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-12-12T16:01:46Z",
      "side": 1,
      "message": "Thanks for the suggestions; I\u0027ve implemented your suggestion about reporting overflows/underflows once per process in PS3.\n\nNote sure whether we can use a special value in ATrace to report exceptions, but again this is expected to almost never happen in current circumstances. @lokeshgidra@google.com, please correct me if I\u0027m wrong.",
      "parentUuid": "427749d7_ee11b4fa",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c59e3642_18f37fd7",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-12-12T16:28:49Z",
      "side": 1,
      "message": "Thanks.\n\n\u003e but again this is expected to almost never happen\n\nWhich I argue only accentuates that we should consider reporting a special value that clearly cannot be a real sample, so that we won\u0027t fly blind if it starts to occur in some new use case in the future. I think it\u0027s more a question on how the perf reporting pipeline would handle a value like 0 or -1 (or perhaps `INT32_MIN`/`INT32_MAX`?). Maybe @wessam@google.com can chime in on this?",
      "parentUuid": "bdc08e37_990a2d86",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dea85a5_df342ab5",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-23T21:00:24Z",
      "side": 1,
      "message": "Suggest just `INT32_MIN`, for brevity (cf. http://go/cppref/cpp/types/integer).",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 60,
        "endChar": 61
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbb3b8a7_ef73116a",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-24T14:48:54Z",
      "side": 1,
      "message": "Thanks for the suggestion, but I tend to prefer non-preprocessor-based options whenever it is possible.",
      "parentUuid": "3dea85a5_df342ab5",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 60,
        "endChar": 61
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03238e0e_e04b9026",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-27T23:23:01Z",
      "side": 1,
      "message": "This was about the message, not the comparison used in the code. It\u0027s arguably a more concise way to convey the limit to a human reader than this template laden boilerplate. It also seems a bit unnecessary to show the literal constant.",
      "parentUuid": "bbb3b8a7_ef73116a",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 60,
        "endChar": 61
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d82a8bec_30295bf7",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-12-12T16:01:46Z",
      "side": 1,
      "message": "I amended the warning message to make it more concise.",
      "parentUuid": "03238e0e_e04b9026",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 60,
        "endChar": 61
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd2ec1d_e5613eb0",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2023-11-24T02:20:35Z",
      "side": 1,
      "message": "Thank you for doing this!\nCould you also add metrics for how many bytes were scanned? Or any other way that we can see GC throughput in traces.",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a634893_37e65d1e",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-24T14:48:54Z",
      "side": 1,
      "message": "Sure, will do.",
      "parentUuid": "1cd2ec1d_e5613eb0",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "388b5aa4_3f313cc3",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1651277
      },
      "writtenOn": "2023-12-04T19:44:13Z",
      "side": 1,
      "message": "Yes, please do add live bytes scanned as well per b/300015145. Thanks.",
      "parentUuid": "5a634893_37e65d1e",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "031cccde_531cf52c",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-12-12T16:01:46Z",
      "side": 1,
      "message": "Will do in a follow-up CL.",
      "parentUuid": "388b5aa4_3f313cc3",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}