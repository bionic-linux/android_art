{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a372fb15_1913a86c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2023-11-22T17:19:46Z",
      "side": 1,
      "message": "Wonderful!\nCould you please share a link to a trace that you captured with this?",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adb98003_6db64047",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2023-11-22T18:23:23Z",
      "side": 1,
      "message": "Hey, sure; here\u0027s a trace I captured on a Cuttlefish instance:\n\nhttps://ui.perfetto.dev/#!/?s\u003d1f087812f08072cb81c8328e9f05d512372355e24db874ae335d7c9dae5fe074",
      "parentUuid": "a372fb15_1913a86c",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f6dd8e_73b86a4c",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-23T21:00:24Z",
      "side": 1,
      "message": "Yet you\u0027re taking the effort to plumb through `ATRACE_INT64` in the child CLs. Why?\n\nI worry a little that the max value warning below can become very spammy if we\u0027re actually starting to get large values. Even though logd has some log spam protection, there\u0027s the risk that this function becomes many orders of magnitude slower on older devices, which we\u0027re likely to test less thoroughly.",
      "range": {
        "startLine": 54,
        "startChar": 5,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dea85a5_df342ab5",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2023-11-23T21:00:24Z",
      "side": 1,
      "message": "Suggest just `INT32_MIN`, for brevity (cf. http://go/cppref/cpp/types/integer).",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 60,
        "endChar": 61
      },
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd2ec1d_e5613eb0",
        "filename": "runtime/gc/collector/garbage_collector.cc",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1059977
      },
      "writtenOn": "2023-11-24T02:20:35Z",
      "side": 1,
      "message": "Thank you for doing this!\nCould you also add metrics for how many bytes were scanned? Or any other way that we can see GC throughput in traces.",
      "revId": "fe0d780b0fd1494747b1838f7143c83fc309c502",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}