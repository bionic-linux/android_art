{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4439f06e_e8e60ed2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-06T01:40:21Z",
      "side": 1,
      "message": "Finished a complete pass through this one.",
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "901023ce_2efabc21",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 22
      },
      "lineNbr": 1852,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-06T01:40:21Z",
      "side": 1,
      "message": "So why not just move it into the if-clause above?",
      "range": {
        "startLine": 1852,
        "startChar": 2,
        "endLine": 1852,
        "endChar": 68
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c140f00_81046d69",
        "filename": "runtime/gc/collector/mark_compact.cc",
        "patchSetId": 22
      },
      "lineNbr": 1852,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-05-09T19:26:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "901023ce_2efabc21",
      "range": {
        "startLine": 1852,
        "startChar": 2,
        "endLine": 1852,
        "endChar": 68
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e587501_05db40df",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 22
      },
      "lineNbr": 1016,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-06T01:40:21Z",
      "side": 1,
      "message": "Why are you returning this? To be extra-safe, you could store it into a volatile. I think even a local variable should do. But I don\u0027t think the compiler is allowed to eliminate dead volatile reads; it must assume they can have side-effects.\nThis is also not really effective, if we compile with any sort of link-time optimization (which we probably currently don\u0027t, but I\u0027m not sure).",
      "range": {
        "startLine": 1016,
        "startChar": 1,
        "endLine": 1016,
        "endChar": 13
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5de58ab_be7b4f55",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 22
      },
      "lineNbr": 1016,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-05-09T19:26:59Z",
      "side": 1,
      "message": "Thanks for pointing it out. I have made the change by converting sum into a volatile. PTAL.",
      "parentUuid": "0e587501_05db40df",
      "range": {
        "startLine": 1016,
        "startChar": 1,
        "endLine": 1016,
        "endChar": 13
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "066d23fa_e7252b82",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 22
      },
      "lineNbr": 1016,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-10T00:33:52Z",
      "side": 1,
      "message": "It\u0027s probably epsilon better to just store the final value of sum to a volatile once at the end, since that allows sum to be in a register while the loop is running. But that\u0027s a trivial cost.",
      "parentUuid": "f5de58ab_be7b4f55",
      "range": {
        "startLine": 1016,
        "startChar": 1,
        "endLine": 1016,
        "endChar": 13
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0d83730_f917040e",
        "filename": "runtime/runtime.cc",
        "patchSetId": 22
      },
      "lineNbr": 1152,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-06T01:40:21Z",
      "side": 1,
      "message": "So why were we doing this before? Or was this introduced by one of the other CLs?",
      "range": {
        "startLine": 1150,
        "startChar": 3,
        "endLine": 1152,
        "endChar": 0
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae21d6bf_a94711f8",
        "filename": "runtime/runtime.cc",
        "patchSetId": 22
      },
      "lineNbr": 1152,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-05-09T19:26:59Z",
      "side": 1,
      "message": "CMS can run in parallel. Even though we were calling it here unconditionally, but it was disabled  via a flag in Heap.\n\nWhen we get rid of CMS, we can remove it.",
      "parentUuid": "c0d83730_f917040e",
      "range": {
        "startLine": 1150,
        "startChar": 3,
        "endLine": 1152,
        "endChar": 0
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88eda5de_b0e77b71",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 22
      },
      "lineNbr": 106,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-06T01:40:21Z",
      "side": 1,
      "message": "Is there an easy way to turn this into a CHECK or DCHECK?",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bc23098_8a0d916a",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 22
      },
      "lineNbr": 106,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2022-05-09T19:26:59Z",
      "side": 1,
      "message": "I have added a CHECK for GC disabled. For GC is finished or not I put back the call to WaitForGcToComplete(). PTAL",
      "parentUuid": "88eda5de_b0e77b71",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3d7987a_f79a1e2f",
        "filename": "runtime/thread_list.cc",
        "patchSetId": 22
      },
      "lineNbr": 106,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2022-05-10T00:33:52Z",
      "side": 1,
      "message": "I\u0027d probably omit the Wait. My concern is just that I want to notice if we later change the code from elsewhere, so that this assertion no longer holds.",
      "parentUuid": "6bc23098_8a0d916a",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "f4e73209111cc1dd3ff1b63c9ca2482ac400a57c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}