{
  "comments": [
    {
      "key": {
        "uuid": "c242cb36_23bb5c95",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1183,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-05-23T08:24:10Z",
      "side": 1,
      "message": "I don\u0027t understand the relation between an object\u0027s state and \"No object\".",
      "range": {
        "startLine": 1183,
        "startChar": 10,
        "endLine": 1183,
        "endChar": 19
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706d6578_d08096c8",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1183,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-23T14:05:44Z",
      "side": 1,
      "message": "I\u0027ll have to look at the rosalloc implementation closer, I was under impression it was a stack of pointers (not a stack of objects) but probably it\u0027s the latter after looking at the typedef AtomicStack\u003cmirror::Object\u003e\n\n(and the reason I was under this impression is because all the visitors seem to check that \"object !\u003d null\" first which would have 0 usefulness unless it was a stack of pointers)",
      "parentUuid": "c242cb36_23bb5c95",
      "range": {
        "startLine": 1183,
        "startChar": 10,
        "endLine": 1183,
        "endChar": 19
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c356f7b6_d393558e",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1183,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-23T17:44:10Z",
      "side": 1,
      "message": "I think \"state of the object\" is possibly unclear. It should be \"state of the allocation stack slot\"\n\nAllocation stack contains pointers to objects (which are physically located in a rosalloc run)\n\nStack is initially all nulls/0s, as  said on L1184. So when the stack size is bumped, it\u0027s possible to observe a null pointer there.\n\nThat being said it might be a moot distinction, because the heap visitor doesn\u0027t look at the thread local start/end , it looks at the allocation stack as a whole and skips everything null.\n\n(so it can\u0027t distinguish between an object that was added to the TLS stack and a null entry in a reserved space)\n\n\n\n     allocation-stack\n     -------------------------------------------------------------------\n     | TLS STACK RESERVED SPACE ... | TLS STACK RESERVED SPACE | ..... |\n     -------------------------------------------------------------------\n\n     tls-stack-reserved-space\n     --------------------------------------------------------------------\n     |obj ptr| obj ptr | reserved(null)                                 |\n     --------------------------------------------------------------------\n                       ^                                                ^\n                tls stack top                               tls stack end\n\nThe memory carve-out looks like that^\n\nThe entrypoint here only operates on the tls-stack-reserved-space representation, but the heap visitor observes memory changes through the allocation-stack representation.",
      "parentUuid": "706d6578_d08096c8",
      "range": {
        "startLine": 1183,
        "startChar": 10,
        "endLine": 1183,
        "endChar": 19
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c934703_59704554",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1185,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-05-23T08:24:10Z",
      "side": 1,
      "message": "I don\u0027t understand this either: r0 is a class object. I guess the ambiguity is around the word \u0027valid\u0027?",
      "range": {
        "startLine": 1185,
        "startChar": 7,
        "endLine": 1185,
        "endChar": 97
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10a015e6_f044d41e",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1185,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-23T14:05:44Z",
      "side": 1,
      "message": "Yes r0 is an object, but the other thread  could observe the write of the thread_local_alloc_stack_top_offset first and THEN the write of MIRROR_CLASS_OBJECT_OFFSET second.",
      "parentUuid": "3c934703_59704554",
      "range": {
        "startLine": 1185,
        "startChar": 7,
        "endLine": 1185,
        "endChar": 97
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "753aad99_32e895d4",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 5
      },
      "lineNbr": 1185,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-23T17:44:10Z",
      "side": 1,
      "message": "This is described in https://android-review.googlesource.com/#/c/398868/ minus the diagrams\n\nInvariant 1\n\n     partially-valid-object\n     -------------------------------------------------------------------\n     | CLASS PTR | null/0s (initial field values)                      |\n     -------------------------------------------------------------------\n           |\n           |\n           \\/\n     rosalloc-next-free-slot\n     -------------------------------------------------------------------\n     | NEXT SLOT | (unallocated 0s)                                    |\n     -------------------------------------------------------------------\n           |\n           \\\n            \\\u003e  (rosalloc-next-free-slot | null)\n\n(Important: (next slot is at same offset as \u0027class ptr\u0027)\n\n--------------\n\nInvariant 2\n\n     valid-object\n     -------------------------------------------------------------------\n     | CLASS POINTER | null/0s (initial field values)                  |\n     -------------------------------------------------------------------\n           |\n           |\n           \\/\n         class\n     -------------------------------------------------------------------\n     | CLASS POINTER | (dont care)                                     |\n     -------------------------------------------------------------------\n           |\n           |\n           \\/\n     mirror::ClassClass\n     -------------------------------------------------------------------\n     | CLASS POINTER | (dont care)                                     |\n     -------------------------------------------------------------------\n        \\  / \\\n         \\  |\n          \\ /\n           -     (points back to itself)\n\n\n\nEffectively dereferencing the class pointer will lead to a ClassClass cycle if it\u0027s a real class; otherwise it\u0027s actually pointing to a rosalloc free slot.\n\n\n(note: above diagrams are simplified to exclude other parts of the object header)",
      "parentUuid": "10a015e6_f044d41e",
      "range": {
        "startLine": 1185,
        "startChar": 7,
        "endLine": 1185,
        "endChar": 97
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d390c3a_23ef1d25",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 5
      },
      "lineNbr": 1708,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-05-22T22:04:53Z",
      "side": 1,
      "message": "maybe \"a runtime internal (eg. Heap::VisitObjects)\" noting that VisitObject may not be the only thing that may access the allocation stack?",
      "range": {
        "startLine": 1708,
        "startChar": 38,
        "endLine": 1708,
        "endChar": 86
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57295279_fbf078b4",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 5
      },
      "lineNbr": 1708,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-05-22T22:06:54Z",
      "side": 1,
      "message": "Sure, I will reword it to exactly this.\n\nQuestion: It\u0027s very tricky to access these objects from the runtime side, so I\u0027m not sure anything else (except Heap::VisitObjects) can do it safely? How do we discourage observing the objects from other functions?",
      "parentUuid": "4d390c3a_23ef1d25",
      "range": {
        "startLine": 1708,
        "startChar": 38,
        "endLine": 1708,
        "endChar": 86
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a986ceae_e93832e0",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 5
      },
      "lineNbr": 1708,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2017-05-22T22:26:16Z",
      "side": 1,
      "message": "Sure, there may never be any other that needs to access the allocation stack.\n\nIf you think so, it\u0027s also fine to make this comment specific to Heap::VisitObjects.",
      "parentUuid": "57295279_fbf078b4",
      "range": {
        "startLine": 1708,
        "startChar": 38,
        "endLine": 1708,
        "endChar": 86
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a4c4205_0ce6cc51",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 5
      },
      "lineNbr": 1708,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2017-05-23T21:29:09Z",
      "side": 1,
      "message": "This is more of an explanation than I intended to request. But this looks fine to me.",
      "parentUuid": "a986ceae_e93832e0",
      "range": {
        "startLine": 1708,
        "startChar": 38,
        "endLine": 1708,
        "endChar": 86
      },
      "revId": "b2398773812e3361576c6497d1b34627d747d1e6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}