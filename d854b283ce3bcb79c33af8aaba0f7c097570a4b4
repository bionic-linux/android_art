{
  "comments": [
    {
      "key": {
        "uuid": "26cf9882_ee3423ba",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 8
      },
      "lineNbr": 568,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-27T17:10:29Z",
      "side": 1,
      "message": "Can dex_file_name be abs_dex_location ?\nThen you\u0027re back to dex_file_location doing some magic in ResolveRelativeEncodedDexLocation.",
      "range": {
        "startLine": 568,
        "startChar": 16,
        "endLine": 568,
        "endChar": 29
      },
      "revId": "d854b283ce3bcb79c33af8aaba0f7c097570a4b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb48a34e_406c7412",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 8
      },
      "lineNbr": 577,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-27T15:21:59Z",
      "side": 1,
      "message": "Does that work with multidex?",
      "range": {
        "startLine": 577,
        "startChar": 14,
        "endLine": 577,
        "endChar": 35
      },
      "revId": "d854b283ce3bcb79c33af8aaba0f7c097570a4b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3862046_4c11c562",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 8
      },
      "lineNbr": 577,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T16:22:24Z",
      "side": 1,
      "message": "All three of these variables contain the multidex suffix. I was actually considering making the DCHECK in ClassLinker even stricter and checking that it\u0027s there.",
      "parentUuid": "bb48a34e_406c7412",
      "range": {
        "startLine": 577,
        "startChar": 14,
        "endLine": 577,
        "endChar": 35
      },
      "revId": "d854b283ce3bcb79c33af8aaba0f7c097570a4b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d6d756_d065d764",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 8
      },
      "lineNbr": 577,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2019-03-27T16:52:07Z",
      "side": 1,
      "message": "Is think there\u0027s some element of \"Are we cross compiling\" in that logic, yet we\u0027re doing a ton of dancing to get there. Would knowing whether we\u0027re cross compiling help the readability?",
      "range": {
        "startLine": 565,
        "startChar": 0,
        "endLine": 577,
        "endChar": 36
      },
      "revId": "d854b283ce3bcb79c33af8aaba0f7c097570a4b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f78a58_ec62312c",
        "filename": "runtime/oat_file.cc",
        "patchSetId": 8
      },
      "lineNbr": 577,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2019-03-27T17:06:10Z",
      "side": 1,
      "message": "I\u0027ve been thinking that having a --preopt command line flag would at least make it possible to distinguish between host4host and host-preopt modes. host4host should be fairly similar to target.\n\nBut this whole thing is a *bit* of a mess, IMHO. The term \"location\" can mean a lot of different things in different places. Giving that more structure would go a long way.",
      "parentUuid": "87d6d756_d065d764",
      "range": {
        "startLine": 565,
        "startChar": 0,
        "endLine": 577,
        "endChar": 36
      },
      "revId": "d854b283ce3bcb79c33af8aaba0f7c097570a4b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}