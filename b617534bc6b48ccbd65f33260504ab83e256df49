{
  "comments": [
    {
      "key": {
        "uuid": "bdf4e15f_1738b297",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-08T23:05:52Z",
      "side": 1,
      "message": "Single line, ART is 100-column.",
      "range": {
        "startLine": 104,
        "startChar": 46,
        "endLine": 104,
        "endChar": 62
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83b11a2f_44f77c56",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-08T23:05:52Z",
      "side": 1,
      "message": "Should we undo HandlingSignal here? It\u0027s contrived, but say someone else is using segfaults (say mono), and for some reason our IsInGeneratedCode segfaults, then all following calls will, too.",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e97ad4f5_f77e2062",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-03-09T05:51:32Z",
      "side": 1,
      "message": "Is the worry that mono or something will be calling back into this method by unblocking a signal and doing some more stuff?  We would want to avoid calling the handlers again in that scenario, wouldn\u0027t we?",
      "parentUuid": "83b11a2f_44f77c56",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df586930_a48f7fe1",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-10T00:04:43Z",
      "side": 1,
      "message": "The worry is that we might see a mono environment and halfway think it\u0027s ours but crash (somewhere in IsGeneratedCode). We\u0027ll correctly march on to mono now, which handles and returns. Then we get around to one of our NPEs again - but because the flag is still set, we treat it as bad...",
      "parentUuid": "e97ad4f5_f77e2062",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f381cc7_c617aae6",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-03-10T00:09:44Z",
      "side": 1,
      "message": "mono is presumably not going to gracefully handle the signal, because it\u0027ll be coming from this function, not the original signal. Seems like we should just abort if the user handler returns after handling a nested signal.",
      "parentUuid": "df586930_a48f7fe1",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a6704d6_c219db45",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-10T01:15:39Z",
      "side": 1,
      "message": "True, I forgot that we wouldn\u0027t be forwarding the original signal context - which is probably what we should be doing.\n\nThis CL is fine as-is. We should think about the ucontext (and whether storing it is expensive) for a follow-up.",
      "parentUuid": "1f381cc7_c617aae6",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3e36334_b16a2ce2",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-03-10T01:24:47Z",
      "side": 1,
      "message": "Presumably some of these actions will mutate state? If they crash after doing so, passing the original signal context seems disasterprone.",
      "parentUuid": "9a6704d6_c219db45",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be6ab10_84b7757d",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-03-10T01:27:51Z",
      "side": 1,
      "message": "The only change in state is creating and storing the exception - everything else should be reading the current state, only. Exception throwing doesn\u0027t modify anything until you unwind. I think it should be fine *mostly* (stack overflow may be iffy, but that shouldn\u0027t happen), but I\u0027d have to audit the code.",
      "parentUuid": "b3e36334_b16a2ce2",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5955c7d3_5310cdf2",
        "filename": "runtime/fault_handler.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-03-10T01:29:03Z",
      "side": 1,
      "message": "But if we actually do crash here, isn\u0027t it something we want to be obvious, and not sweep under the rug?",
      "parentUuid": "8be6ab10_84b7757d",
      "range": {
        "startLine": 204,
        "startChar": 2,
        "endLine": 205,
        "endChar": 22
      },
      "revId": "b617534bc6b48ccbd65f33260504ab83e256df49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}