{
  "comments": [
    {
      "key": {
        "uuid": "4a4357e2_574bd434",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 154,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "Would it be cleaner if we pass in a vector of ImageSpace and add all boot imagesand set images_added_to_intern_table_ to true in one shot?",
      "range": {
        "startLine": 154,
        "startChar": 64,
        "endLine": 154,
        "endChar": 75
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a41cfd9_39db9fa1",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 154,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Good idea, I think that is probably better.",
      "parentUuid": "4a4357e2_574bd434",
      "range": {
        "startLine": 154,
        "startChar": 64,
        "endLine": 154,
        "endChar": 75
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4ddf0f_551d0c40",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "Does it make sense to DCHECK(!image_added_to_intern_table_) here?",
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3e9347_cff98937",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a4ddf0f_551d0c40",
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4ddf0f_952ab44d",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "Is this intended to be left enabled in a non-debug build? The runtime overhead not a concern?",
      "range": {
        "startLine": 360,
        "startChar": 43,
        "endLine": 360,
        "endChar": 47
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a4357e2_77db7072",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Currently it would only happen once during boot, I think that overhead is acceptable for now. It is probably a few milliseconds at most.",
      "parentUuid": "0a4ddf0f_952ab44d",
      "range": {
        "startLine": 360,
        "startChar": 43,
        "endLine": 360,
        "endChar": 47
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ec0fc4b_f19f2c1d",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1121591
      },
      "writtenOn": "2017-05-17T16:36:26Z",
      "side": 1,
      "message": "Currently (in 7.0+) this check sequence is invoked every dex2oat:\ndex2oat::Setup-\u003eRuntime::Create-\u003eRuntime::Init-\u003eInternTable::AddImagesStringsToTable-\u003e...-\u003eInternTable::Table::AddTableFromMemory\nThat means any compilation time has an overhead caused by this check. That also affects app launch time for some apps. Those apps load extra dex files during startup.\n\nSome numbers:\nNexus 6P, 7.0 user build --- ~15 ms during each dex2oat (~40k strings checked)\nNexus 6P, 7.1.2+ (inc. O preview and master) user build --- ~40 ms during each dex2oat (~40k strings checked)\nI.e. with the way intern tables are now located in boot image spaces it gives a noticeable slowdown.\n\nAll things considered, is this check still necessary? Wouldn\u0027t it be better to only enable it during debug builds?",
      "parentUuid": "4a4357e2_77db7072",
      "range": {
        "startLine": 360,
        "startChar": 43,
        "endLine": 360,
        "endChar": 47
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d93fffa_3abe713c",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-05-17T16:50:36Z",
      "side": 1,
      "message": "It\u0027s less than 10% for small apps, and compared to a FB or GMS Core dex2oat run it\u0027s trivial. Launch time would only be impacted for first launch, and it\u0027s still worlds faster than it was pre-N.\n\nBetter safe than sorry when it costs next to nothing.",
      "parentUuid": "5ec0fc4b_f19f2c1d",
      "range": {
        "startLine": 360,
        "startChar": 43,
        "endLine": 360,
        "endChar": 47
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea1debf7_0f6535c0",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "Is it easy to add an assert that we aren\u0027t inserting into an image table? It may not be easy to query whether a table is an image table or not.",
      "range": {
        "startLine": 417,
        "startChar": 0,
        "endLine": 418,
        "endChar": 28
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea1debf7_a1fc5d24",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 418,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "I don\u0027t think there is a clean way to add that assert, any ideas?",
      "parentUuid": "ea1debf7_0f6535c0",
      "range": {
        "startLine": 417,
        "startChar": 0,
        "endLine": 418,
        "endChar": 28
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a481bfe_0da0ddaf",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 456,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "0U or static_cast\u003csize_t\u003e(0)?",
      "range": {
        "startLine": 456,
        "startChar": 25,
        "endLine": 456,
        "endChar": 34
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca202730_f37310ef",
        "filename": "runtime/intern_table.cc",
        "patchSetId": 5
      },
      "lineNbr": 456,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a481bfe_0da0ddaf",
      "range": {
        "startLine": 456,
        "startChar": 25,
        "endLine": 456,
        "endChar": 34
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_d29b6459",
        "filename": "runtime/intern_table.h",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "This refers to boot images or also app images?",
      "range": {
        "startLine": 104,
        "startChar": 5,
        "endLine": 104,
        "endChar": 11
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a4357e2_d25cd233",
        "filename": "runtime/intern_table.h",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Deleted the comment, it referred to all image spaces though.",
      "parentUuid": "aa1773d7_d29b6459",
      "range": {
        "startLine": 104,
        "startChar": 5,
        "endLine": 104,
        "endChar": 11
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4ddf0f_15178428",
        "filename": "runtime/intern_table.h",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2016-01-06T22:22:26Z",
      "side": 1,
      "message": "Line too long?",
      "range": {
        "startLine": 167,
        "startChar": 100,
        "endLine": 167,
        "endChar": 104
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a481bfe_8d514de9",
        "filename": "runtime/intern_table.h",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2016-01-06T23:46:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a4ddf0f_15178428",
      "range": {
        "startLine": 167,
        "startChar": 100,
        "endLine": 167,
        "endChar": 104
      },
      "revId": "ea0831f60d26e3297e6463634a9fbb6384f00661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}