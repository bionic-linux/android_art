{
  "comments": [
    {
      "key": {
        "uuid": "175d3ed4_056e92aa",
        "filename": "runtime/openjdkjvmti/ti_properties.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-10T10:19:07Z",
      "side": 1,
      "message": "Why do we duplicate that list? Can we avoid it?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 80,
        "endChar": 2
      },
      "revId": "2b80a2229e3245ec5fd3e3f82157cc393c6bf301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7b632e5_b1d19212",
        "filename": "runtime/openjdkjvmti/ti_properties.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-01-10T15:53:11Z",
      "side": 1,
      "message": "I\u0027d rather not deduplicate. Having these on the Java side makes libcore complete and allows a simple specialization in the Unstarted Runtime for compile-time initialization. Also, there\u0027s more in the list that\u0027s somewhat esoteric (certain debug switches) that doesn\u0027t make sense here.\n\nWe can\u0027t do the same here because these are supposed to be available during runtime startup. (At least the base things.)",
      "parentUuid": "175d3ed4_056e92aa",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 80,
        "endChar": 2
      },
      "revId": "2b80a2229e3245ec5fd3e3f82157cc393c6bf301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371ec218_3920ab10",
        "filename": "runtime/openjdkjvmti/ti_properties.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-01-10T16:45:03Z",
      "side": 1,
      "message": "Unclear to me why duplication is better.\n\nBut at least move this in a header file in the runtime directory and not in jvmti?",
      "parentUuid": "b7b632e5_b1d19212",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 80,
        "endChar": 2
      },
      "revId": "2b80a2229e3245ec5fd3e3f82157cc393c6bf301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7b632e5_7c48b1cf",
        "filename": "runtime/openjdkjvmti/ti_properties.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-01-10T16:51:48Z",
      "side": 1,
      "message": "Really don\u0027t think so. It\u0027s exposed by JVMTI. ART itself doesn\u0027t care the least about these properties. That\u0027s why I don\u0027t want to merge this into ART - I think isolating and decoupling (and having a test for consistency) is better for modularity.",
      "parentUuid": "371ec218_3920ab10",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 80,
        "endChar": 2
      },
      "revId": "2b80a2229e3245ec5fd3e3f82157cc393c6bf301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7b632e5_9f45746a",
        "filename": "runtime/openjdkjvmti/ti_properties.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2017-01-10T20:49:35Z",
      "side": 1,
      "message": "I agree with agampe@. These need to be available before we are able to read them from libcore. Since the runtime \u0026 the rest of the openjdkjvmti plugin don\u0027t need to see them I don\u0027t see any reason to put them into a header either.",
      "parentUuid": "b7b632e5_7c48b1cf",
      "revId": "2b80a2229e3245ec5fd3e3f82157cc393c6bf301",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}