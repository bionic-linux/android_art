{
  "comments": [
    {
      "key": {
        "uuid": "891c6b20_d924174a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-23T04:48:47Z",
      "side": 1,
      "message": "equals is missing from the list",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 15,
        "endChar": 42
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a905afc4_dd24fb49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1071873
      },
      "writtenOn": "2015-09-28T18:40:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "891c6b20_d924174a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 15,
        "endChar": 42
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "699c97d8_ed62e54c",
        "filename": "compiler/optimizing/intrinsics_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 901,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-23T04:48:12Z",
      "side": 1,
      "message": "Why T9?\n\nFor newer contributions it\u0027s now also \"required\" to put such things into a nicely named constant, kXXX, when it\u0027s local to the file like this is...",
      "range": {
        "startLine": 901,
        "startChar": 20,
        "endLine": 901,
        "endChar": 22
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_ed785c8b",
        "filename": "compiler/optimizing/intrinsics_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 901,
      "author": {
        "id": 1071873
      },
      "writtenOn": "2015-09-28T18:40:20Z",
      "side": 1,
      "message": "I can change this to TMP which was added to the enumeration in runtime/arch/mips64/registers_mips64.h.",
      "parentUuid": "699c97d8_ed62e54c",
      "range": {
        "startLine": 901,
        "startChar": 20,
        "endLine": 901,
        "endChar": 22
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4916f301_088c77fa",
        "filename": "compiler/optimizing/intrinsics_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-23T21:07:16Z",
      "side": 1,
      "message": "It actually happens that str \u003d\u003d arg, which triggers a check. We\u0027ll have to implement a compile-time fast-path.",
      "range": {
        "startLine": 951,
        "startChar": 10,
        "endLine": 951,
        "endChar": 18
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e4c398b_d0fc09a7",
        "filename": "compiler/optimizing/intrinsics_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 1071873
      },
      "writtenOn": "2015-09-28T18:40:20Z",
      "side": 1,
      "message": "I pulled the logic directly from the ARM64 code (compiler/optimizing/intrinsics_arm64.cc, lines 1224-1226):\n  // Reference equality check, return true if same reference.\n  __ Cmp(str, arg);\n  __ B(\u0026return_true, eq);\nIs that code wrong too, or did I misunderstand what the ARM code is doing?\nSo if this triggers a check I should revert to \"slow path\" code here and let the slow path do the work in this case?",
      "parentUuid": "4916f301_088c77fa",
      "range": {
        "startLine": 951,
        "startChar": 10,
        "endLine": 951,
        "endChar": 18
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee616dea_77d0b388",
        "filename": "compiler/optimizing/intrinsics_mips64.cc",
        "patchSetId": 1
      },
      "lineNbr": 951,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-09-28T18:52:14Z",
      "side": 1,
      "message": "It means we\u0027re generating more code than we need to in the other architectures. We simply sometimes get the case where receiver and argument are the same (guess for inlining or so).\n\nThe other architectures allow to compare two registers that are the same. Your assembler rejects that.\n\nThis simply needs a pre-check and fast-bail (with result true).",
      "parentUuid": "4e4c398b_d0fc09a7",
      "range": {
        "startLine": 951,
        "startChar": 10,
        "endLine": 951,
        "endChar": 18
      },
      "revId": "57a793e6cc695aff3d00caa2ae007c986ed3ac99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}