{
  "comments": [
    {
      "key": {
        "uuid": "009dc025_9ef2598f",
        "filename": "compiler/optimizing/bounds_check_elimination.cc",
        "patchSetId": 1
      },
      "lineNbr": 1243,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-12-03T22:30:02Z",
      "side": 1,
      "message": "Do you need to continue looping once try_dynamic_bce becomes false?\n\nIt seems like a better loop might be\n\n    do {\n      if (...) {\n        if (index_range.GetLower()...) {\n          *try_dynamic_bce \u003d false;\n        }\n        if (!needs_finite_test \u0026\u0026 ...) {\n          return true;\n        } else if (!*try_dynamic_bce) {\n          return false;\n        }\n      }\n    } while (induction_range_.RefineOuter(...));\n\nIf it is just that the loop is guaranteed to end when both *try_dynamic_bce and (!needs_finite_test \u0026\u0026 ...) are false then you should mention it in a comment.",
      "range": {
        "startLine": 1240,
        "startChar": 8,
        "endLine": 1243,
        "endChar": 9
      },
      "revId": "0c58e54af45e7b91fdc6b10053c2fa350141cda9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "404ed883_28df83fb",
        "filename": "compiler/optimizing/induction_var_range.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-12-03T22:30:02Z",
      "side": 1,
      "message": "Nit: Style: line length",
      "range": {
        "startLine": 420,
        "startChar": 100,
        "endLine": 420,
        "endChar": 105
      },
      "revId": "0c58e54af45e7b91fdc6b10053c2fa350141cda9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "204d6487_47f2b056",
        "filename": "compiler/optimizing/induction_var_range.h",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-12-03T22:30:02Z",
      "side": 1,
      "message": "Nit: I find this wording somewhat confusing. maybe:\n\n    Returns refined value or the input value if no further refinement is possible.",
      "range": {
        "startLine": 154,
        "startChar": 59,
        "endLine": 154,
        "endChar": 87
      },
      "revId": "0c58e54af45e7b91fdc6b10053c2fa350141cda9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20a2c463_6239f221",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 1
      },
      "lineNbr": 437,
      "author": {
        "id": 1047769
      },
      "writtenOn": "2015-12-03T22:30:02Z",
      "side": 1,
      "message": "why not b.length?",
      "range": {
        "startLine": 437,
        "startChar": 26,
        "endLine": 437,
        "endChar": 27
      },
      "revId": "0c58e54af45e7b91fdc6b10053c2fa350141cda9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}