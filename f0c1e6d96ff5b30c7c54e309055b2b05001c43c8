{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42814f35_5437e09b",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1172,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-06-10T07:38:05Z",
      "side": 1,
      "message": "Given that the new test actually compiles with `javac`, I\u0027d say the previous behavior was non-compliant.",
      "range": {
        "startLine": 1172,
        "startChar": 7,
        "endLine": 1172,
        "endChar": 44
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76f561db_8360e117",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1172,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-06-10T07:54:24Z",
      "side": 1,
      "message": "It compiles thanks to `src` not knowing about `src2`. Or are you referring to something else?",
      "parentUuid": "42814f35_5437e09b",
      "range": {
        "startLine": 1172,
        "startChar": 7,
        "endLine": 1172,
        "endChar": 44
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3ec5fd9_8f1ca537",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1176,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-06-10T07:38:05Z",
      "side": 1,
      "message": "The `protected` keyword allows access from subclasses outside the package.",
      "range": {
        "startLine": 1176,
        "startChar": 20,
        "endLine": 1176,
        "endChar": 92
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6de1f8b_6ec11715",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1176,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-06-10T07:54:24Z",
      "side": 1,
      "message": "Resolved offline.",
      "parentUuid": "b3ec5fd9_8f1ca537",
      "range": {
        "startLine": 1176,
        "startChar": 20,
        "endLine": 1176,
        "endChar": 92
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b6f064_99402728",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1181,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-06-10T07:38:05Z",
      "side": 1,
      "message": "Since interface fields and methods are always public, there are code paths in `Class::IsAssignableFrom()` that are dead code in this context. We could instead use `IsInterface() ? access_to-\u003eIsObjectClass() : this-\u003eIsSubClass(access_to)`.",
      "range": {
        "startLine": 1181,
        "startChar": 8,
        "endLine": 1181,
        "endChar": 41
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b954193_7364e143",
        "filename": "runtime/mirror/class-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 1181,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-06-10T07:54:24Z",
      "side": 1,
      "message": "Which parts are dead code? I\u0027d rather keep this generic and not special case (the previous code was special casing, hence the crash).",
      "parentUuid": "c3b6f064_99402728",
      "range": {
        "startLine": 1181,
        "startChar": 8,
        "endLine": 1181,
        "endChar": 41
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f54e533_0236739a",
        "filename": "test/856-clone/info.txt",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-06-10T07:38:05Z",
      "side": 1,
      "message": "\"a\"",
      "range": {
        "startLine": 1,
        "startChar": 55,
        "endLine": 1,
        "endChar": 57
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c34c6f73_1ba0674c",
        "filename": "test/856-clone/info.txt",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2024-06-10T07:54:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4f54e533_0236739a",
      "range": {
        "startLine": 1,
        "startChar": 55,
        "endLine": 1,
        "endChar": 57
      },
      "revId": "f0c1e6d96ff5b30c7c54e309055b2b05001c43c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}