{
  "comments": [
    {
      "key": {
        "uuid": "5061411e_a7dc127c",
        "filename": "runtime/base/arena_allocator.h",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-07T17:02:04Z",
      "side": 1,
      "message": "Could you disassemble and see what happens to this, please?\n\nIn the past, the builtin_unlikely sometimes stopped constant evaluation, and as ASAN seems to be the actual \"memory tool\" we\u0027re supporting (valgrind being still/again broken), this could be fully optimized away.",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "7bda3b600d74c9a5746840ebb8534443e486615a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70700519_e4f0da53",
        "filename": "runtime/base/arena_allocator.h",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-07T17:30:26Z",
      "side": 1,
      "message": "Seriously? That would also prevent optimizing away CHECK()s with constant conditions.",
      "parentUuid": "5061411e_a7dc127c",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "7bda3b600d74c9a5746840ebb8534443e486615a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704d65ae_d0e74c0a",
        "filename": "runtime/base/arena_allocator.h",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-07T17:33:17Z",
      "side": 1,
      "message": "I never figured out under which conditions, but I did see them. Admittedly it was last year. This is really only to make sure that it\u0027s going right...",
      "parentUuid": "70700519_e4f0da53",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "7bda3b600d74c9a5746840ebb8534443e486615a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "459c212a_5ba5c3de",
        "filename": "runtime/base/arena_allocator.h",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-10-07T18:43:37Z",
      "side": 1,
      "message": "If I compile with SANITIZE_HOST\u003dtrue FORCE_BUILD_LLVM_COMPONENTS\u003dtrue, the host global_value_numbering.o have no references to DoMakeInaccessible. The target global_value_numbering.o still does because it\u0027s compiled against valgrind.\n\nThe one thing left to do is to change makefiles and memory_tool.h so that the default configuration does _not_ assume we can run with valgrind.",
      "parentUuid": "704d65ae_d0e74c0a",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "7bda3b600d74c9a5746840ebb8534443e486615a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5061411e_fcee98e2",
        "filename": "runtime/base/arena_allocator.h",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-10-07T22:31:45Z",
      "side": 1,
      "message": "Thanks for checking.\n\nI think your suggested change needs internal discussion, because regrettably I haven\u0027t seen it discussed yet what we\u0027ll do going forward, and valgrind is still a strong possibility (and with a standard image, not just special-purposes images as would be necessary for ASAN).\n\nI\u0027d agree that this might be put behind yet another flag for *our* investigations.",
      "parentUuid": "459c212a_5ba5c3de",
      "range": {
        "startLine": 183,
        "startChar": 8,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "7bda3b600d74c9a5746840ebb8534443e486615a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}