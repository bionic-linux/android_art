{
  "comments": [
    {
      "key": {
        "uuid": "d0d99e70_f533ee9f",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-04-29T00:10:11Z",
      "side": 1,
      "message": "I don\u0027t really like that. Maybe it\u0027s better to replace the one delete with something else, e.g., a static counterpart to Create?",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 58
      },
      "revId": "1069a0cd1c74646573744661ef16383eadc86400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30375a6d_7504d0cf",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1029223
      },
      "writtenOn": "2015-04-29T08:36:32Z",
      "side": 1,
      "message": "Yes, the delete is in EnterInterpreterFromDeoptimize (interpreter.cc). We allocate memory on the heap only for deoptimization so it makes sense to have dedicated methods. \n\nI\u0027d rename this method to CreateDeoptimizedFrame and add a DeleteDeoptimizedFrame to be called in EnterInterpreterFromDeoptimize, something like:\n\n  static void DeleteDeoptimizedFrame(ShadowFrame* sf) {\n    uint8_t* memory \u003d reinterpret_cast\u003cuint8_t*\u003e(sf);\n    delete[] memory;\n  }",
      "parentUuid": "d0d99e70_f533ee9f",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 58
      },
      "revId": "1069a0cd1c74646573744661ef16383eadc86400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300cbaed_64b9c1dc",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-04-30T23:09:10Z",
      "side": 1,
      "message": "Do you generally use such a specific name for a function of this type? It seems odd to name it like this.\n\nIt would seem better to call it something like CreateAndAllocate and then a companion Deallocate function.\n\nBut since I don\u0027t play in this code very often, whatever you decide is fine with me.",
      "parentUuid": "30375a6d_7504d0cf",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 58
      },
      "revId": "1069a0cd1c74646573744661ef16383eadc86400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90fd66eb_0e32ad22",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-04-30T23:54:34Z",
      "side": 1,
      "message": "Create or CreateXYZ is our naming scheme for a static function to allocate and initialize some XYZ. The latter version is usually only used when it\u0027s a standalone function. Create is more common when it\u0027s in the struct or class and it\u0027s clear.\n\nMaybe Delete(...) is then the correct counterpart.",
      "parentUuid": "300cbaed_64b9c1dc",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 58
      },
      "revId": "1069a0cd1c74646573744661ef16383eadc86400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "102df676_cb760954",
        "filename": "runtime/stack.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-05-04T19:09:14Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "90fd66eb_0e32ad22",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 58
      },
      "revId": "1069a0cd1c74646573744661ef16383eadc86400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}