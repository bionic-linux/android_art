{
  "comments": [
    {
      "key": {
        "uuid": "83dfa661_39b30044",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1218,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-11-23T00:25:15Z",
      "side": 1,
      "message": "It looks to me an attempt should be made before TryBuildAndInline() to match intrinsics. You don\u0027t want method to be inlined before it gets a chance to be replaced by an intrinsic.",
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff51f2ce_fc51bc77",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1218,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-23T11:05:42Z",
      "side": 1,
      "message": "Matching intrinsics has already been done in the intrinsics recognizer, so that would sound like duplicating the work.",
      "parentUuid": "83dfa661_39b30044",
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5b56949_7a9c14a4",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1218,
      "author": {
        "id": 1043514
      },
      "writtenOn": "2017-11-23T13:07:49Z",
      "side": 1,
      "message": "But we devirtualize first with inline cache/cha first before inlining attempt, that\u0027s after the previous intrinsics matching. Changing invoke-interface into invoke-virtual is a result of devirtualization also, only if inlining the devirtualized method fails. We should cover all cases.",
      "parentUuid": "ff51f2ce_fc51bc77",
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb9e202_6a39bbfa",
        "filename": "compiler/optimizing/inliner.cc",
        "patchSetId": 2
      },
      "lineNbr": 1261,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-23T11:05:42Z",
      "side": 1,
      "message": "the",
      "range": {
        "startLine": 1261,
        "startChar": 26,
        "endLine": 1261,
        "endChar": 27
      },
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54e47ad5_b3280365",
        "filename": "compiler/optimizing/intrinsics.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-23T11:16:00Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 10
      },
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb5b811_52603d14",
        "filename": "compiler/optimizing/intrinsics.cc",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-23T11:05:42Z",
      "side": 1,
      "message": "misplaced.",
      "range": {
        "startLine": 148,
        "startChar": 67,
        "endLine": 148,
        "endChar": 68
      },
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa730d21_19c9d487",
        "filename": "compiler/optimizing/intrinsics.cc",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2017-11-23T11:05:42Z",
      "side": 1,
      "message": "Maybe pass stats_ to Recognize, and avoid having to call MaybeRecordStats in two different places?",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 79
      },
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "996e762c_b86344a9",
        "filename": "compiler/optimizing/intrinsics.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-11-23T11:16:00Z",
      "side": 1,
      "message": "s/\\ \\*/\\*\\ /",
      "range": {
        "startLine": 50,
        "startChar": 53,
        "endLine": 50,
        "endChar": 55
      },
      "revId": "1d4317dfb9f14705972606e7e088152f6c50b2c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}