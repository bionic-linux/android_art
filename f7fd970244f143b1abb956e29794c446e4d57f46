{
  "comments": [
    {
      "key": {
        "uuid": "311f8057_b4640024",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 27
      },
      "lineNbr": 1281,
      "author": {
        "id": 1083288
      },
      "writtenOn": "2016-01-29T07:39:47Z",
      "side": 1,
      "message": "I want to suggest you one things.\nAs I understand, when app art file is mapped into memory (in case of kStorageModeUncompressed), linux does not allocate physical pages until program access it. When program read data from art file then linux allocate physical page and this page is clear. I.e. this page could be stored in disk cache and reused at next launch of application. When program modified data in memory then physical page become dirty and this page will not be used at next app launch (at next app launch new physical page will be allocated and filled by data from art file).\nHere you modify data in memory backed by art file.\nInstead of setting class loader for each class you could do this.\nAt compile time:\n1. Allocate memory for instance of PathClassLoader and do not call \u003cinit\u003e on this memory.\n2. Store pointer to allocated instance in ImageRoots.\n3. For each class in image set pointer to allocated memory as pointer to class loader.\n\nAt runtime:\nAfter app art file mapped into memory, get pointer to instance of PathClassLoader from image roots and call \u003cinit\u003e.\n\nAfter that all classes in app image will refer to valid class loader. Only one page will be modified.\n\nTo implement this you need to modify method android.app.ApplicationLoaders.getClassLoader. This method should not instantiate new instance of PathClassLoader but get it from static method PathClassLoader.open for example.\nStatic method PathClassLoader.open should open oat file and art file and return instance of PathClassLoader from app art file.\n\nWhat do you think about this?",
      "range": {
        "startLine": 1281,
        "startChar": 17,
        "endLine": 1281,
        "endChar": 31
      },
      "revId": "f7fd970244f143b1abb956e29794c446e4d57f46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4feb66e_92a93c9e",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 27
      },
      "lineNbr": 1327,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-23T14:16:34Z",
      "side": 1,
      "message": "You\u0027re already in kDebugBuild (see line 1313)",
      "range": {
        "startLine": 1327,
        "startChar": 0,
        "endLine": 1327,
        "endChar": 30
      },
      "revId": "f7fd970244f143b1abb956e29794c446e4d57f46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4feb66e_f2b6c8f7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 27
      },
      "lineNbr": 1329,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-23T14:16:34Z",
      "side": 1,
      "message": "indentation is off.",
      "range": {
        "startLine": 1329,
        "startChar": 0,
        "endLine": 1329,
        "endChar": 16
      },
      "revId": "f7fd970244f143b1abb956e29794c446e4d57f46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b408be64_f0b6c0f7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 27
      },
      "lineNbr": 1335,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-23T14:16:34Z",
      "side": 1,
      "message": "Hitting this:\n\n+art F 23006 23006 art/runtime/class_linker.cc:1335] Check failed: code \u003d\u003d oat_code (code\u003d0xf08461fc, oat_code\u003d0xf084617c) java.lang.Object Test.run()\n\nFor test 097-duplicate-method compiled with --debuggable. So it looks like it\u0027s with luck that it\u0027s working for the other configurations, maybe an ordering problem when a method has duplicates?",
      "range": {
        "startLine": 1335,
        "startChar": 0,
        "endLine": 1335,
        "endChar": 64
      },
      "revId": "f7fd970244f143b1abb956e29794c446e4d57f46",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}