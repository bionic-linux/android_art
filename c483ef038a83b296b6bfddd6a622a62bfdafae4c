{
  "comments": [
    {
      "key": {
        "uuid": "2d62a1ee_0929693c",
        "filename": "compiler/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T10:48:30Z",
      "side": 1,
      "message": "This should probably be host only. At least not in production builds.",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 213,
        "endChar": 50
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bf1233_6352823a",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Very nice!",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 22
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_e2b866db",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Maybe initialize this member to a dummy value?",
      "range": {
        "startLine": 174,
        "startChar": 9,
        "endLine": 174,
        "endChar": 22
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bf1233_23052a14",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Please place this on a single line.",
      "range": {
        "startLine": 212,
        "startChar": 2,
        "endLine": 213,
        "endChar": 65
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd290587_6e6c6f88",
        "filename": "compiler/optimizing/code_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T10:48:30Z",
      "side": 1,
      "message": "Move that to the codegen contructors.",
      "range": {
        "startLine": 541,
        "startChar": 0,
        "endLine": 541,
        "endChar": 52
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_8206ba4b",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Nit: `enable_visualizer\u0027 (to match `is_leaf\u0027 or `is_baseline\u0027)?",
      "range": {
        "startLine": 141,
        "startChar": 36,
        "endLine": 141,
        "endChar": 54
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c486d3_c416de46",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 164,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Maybe return a reference instead?",
      "range": {
        "startLine": 164,
        "startChar": 10,
        "endLine": 164,
        "endChar": 26
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bf1233_03558e20",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "I think it would be better to introduce a data structure to record the start and end offsets (OffsetInterval?).",
      "range": {
        "startLine": 484,
        "startChar": 32,
        "endLine": 484,
        "endChar": 57
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d62a1ee_c90a31d3",
        "filename": "compiler/optimizing/code_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-05-06T10:48:30Z",
      "side": 1,
      "message": "Most, if not all, instructions should have that info right? Better to create an array with indices the lifetime of the instruction.\n\nAlso it probably belongs to the visualizer.",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 484,
        "endChar": 85
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c486d3_242c1294",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "TypeCheckSlowPathX86",
      "range": {
        "startLine": 305,
        "startChar": 56,
        "endLine": 305,
        "endChar": 71
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_e2cce66c",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Why not initializing `disassembler_\u0027 in the constructor\u0027s initialization list?",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 94
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_42b4b2c0",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Maybe drop the parentheses?",
      "range": {
        "startLine": 277,
        "startChar": 30,
        "endLine": 277,
        "endChar": 56
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_62c1b62d",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Group theses lines together to initialize `it\u0027 directly.",
      "range": {
        "startLine": 280,
        "startChar": 6,
        "endLine": 281,
        "endChar": 63
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bf1233_a3c2ba36",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 2
      },
      "lineNbr": 412,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Maybe remove, as `printer\u0027 dies at the end of the block?",
      "range": {
        "startLine": 412,
        "startChar": 4,
        "endLine": 412,
        "endChar": 39
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90c486d3_24b7f2c7",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 829,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Why is this part of FOR_EACH_INSTRUCTION and not FOR_EACH_CONCRETE_INSTRUCTION?  Is this to avoid writing visit methods for HDisassembly in code generator visitors?",
      "range": {
        "startLine": 829,
        "startChar": 2,
        "endLine": 829,
        "endChar": 29
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bf1233_83c7be46",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 2
      },
      "lineNbr": 3795,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "What about:\n\n  Dummy instruction used to emit disassembled code in the graph visualizer output.\n\n?",
      "range": {
        "startLine": 3795,
        "startChar": 3,
        "endLine": 3795,
        "endChar": 79
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "507cce56_02e9caad",
        "filename": "disassembler/disassembler.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-05-01T13:45:30Z",
      "side": 1,
      "message": "Please update the documentation.  BTW, we might want to ensure that `options\u0027 is not null at the beginning of art::Disassembler::Create.",
      "range": {
        "startLine": 53,
        "startChar": 34,
        "endLine": 54,
        "endChar": 17
      },
      "revId": "c483ef038a83b296b6bfddd6a622a62bfdafae4c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}