{
  "comments": [
    {
      "key": {
        "uuid": "fdc5cb11_357eaea9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-07T16:31:18Z",
      "side": 1,
      "message": "Solving",
      "revId": "f0af7d35a49bded4ed864d615b05748c6c05116e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f88d001_3c09629e",
        "filename": "compiler/optimizing/intrinsics_x86.cc",
        "patchSetId": 1
      },
      "lineNbr": 3120,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2020-09-07T16:31:18Z",
      "side": 1,
      "message": "Not for this CL, but can we determine this statically in some cases and avoid generating code at all? \n\nCompiling invocation of access methods (last paragraph on java.lang.Void)\nhttps://docs.oracle.com/javase/9/docs/api/java/lang/invoke/VarHandle.html\n\nThe runtime avoids some checks when it sees WellKnownClasses::java_lang_Void.",
      "revId": "f0af7d35a49bded4ed864d615b05748c6c05116e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}