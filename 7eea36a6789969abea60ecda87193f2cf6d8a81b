{
  "comments": [
    {
      "key": {
        "uuid": "e0c4bebc_ab34741d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-05T18:13:42Z",
      "side": 1,
      "message": "Any way we can make this test automated? Concerned about brittleness in future.",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d20ff2be_37e1f9e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-06T13:49:40Z",
      "side": 1,
      "message": "Do you want to start writing tests that attach gdb to a process?\n\nOr do you want just a simple `nm whatever.oat | grep -E \u0027BakerReadBarrier(Field|Array|Root)\u0027` to check that these seymbols are present?",
      "parentUuid": "e0c4bebc_ab34741d",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e2efc96_3a5982cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-12T14:39:41Z",
      "side": 1,
      "message": "Either of those tests sounds good. Gdb might be more robust but it sounds harder to implement.",
      "parentUuid": "d20ff2be_37e1f9e5",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73e1dea8_012e4e87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "I think the test based on nm makes sense, even if it only checks for presence.\n\nAlso, we could check that the assembly code for those symbols matches our expectations.",
      "parentUuid": "d20ff2be_37e1f9e5",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a35d0796_26772784",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-18T15:57:39Z",
      "side": 1,
      "message": "I still don\u0027t know how to make a proper automated test without very invasive changes to run-test-jar. I need a test only for AOT, filter based on $ISA, pull the compiled oat file from the device (no \"nm\" on device) and do the \"nm\" on host.\n\nI\u0027m going to submit this as is and think about adding the test later.",
      "parentUuid": "73e1dea8_012e4e87",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0be20c1d_73ce3687",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-05T18:13:42Z",
      "side": 1,
      "message": "nit: {} is enough",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10906622_5f1627fe",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-06T13:49:40Z",
      "side": 1,
      "message": "Copy-pasted from elsewhere. Also, did we update lint rules to accept the \"{};\" without complaining about the trailing \";\"?",
      "parentUuid": "0be20c1d_73ce3687",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e105fae_8c755669",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-12T14:39:41Z",
      "side": 1,
      "message": "Probably not, ignore.",
      "parentUuid": "10906622_5f1627fe",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c699e8_ad7dd1dc",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "I think this should work; there are other examples of this pattern in ART\u0027s code base, e.g. in https://android.googlesource.com/platform/art/+/master/openjdkjvmti/ti_thread.cc#310\n\n  InternalThreadState thread_state \u003d {};",
      "parentUuid": "10906622_5f1627fe",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74cb42f3_5453586b",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-18T13:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0c699e8_ad7dd1dc",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a91a3a2_cd56a3e5",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "You could also use:\n\n  info.trampoline_name \u003d base_name + \"_\" + std::to_string(i);",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 258,
        "endChar": 41
      },
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "104d8ff5_724209c1",
        "filename": "compiler/linker/arm/relative_patcher_arm_base.cc",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-18T13:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a91a3a2_cd56a3e5",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 258,
        "endChar": 41
      },
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7de64527_f23ce693",
        "filename": "compiler/linker/arm/relative_patcher_thumb2.cc",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "Nit: Add a blank line after line 385?",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8386e3bd_f3d9468a",
        "filename": "compiler/linker/arm/relative_patcher_thumb2.cc",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-18T13:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7de64527_f23ce693",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5d0acac_778fe3b1",
        "filename": "compiler/linker/arm/relative_patcher_thumb2.cc",
        "patchSetId": 3
      },
      "lineNbr": 403,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "Nit: Swap the operands of `\u003d\u003d` to match the style used in the rest of this method?",
      "range": {
        "startLine": 403,
        "startChar": 17,
        "endLine": 403,
        "endChar": 97
      },
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48b08394_1bbf040f",
        "filename": "compiler/linker/arm/relative_patcher_thumb2.cc",
        "patchSetId": 3
      },
      "lineNbr": 403,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-18T13:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5d0acac_778fe3b1",
      "range": {
        "startLine": 403,
        "startChar": 17,
        "endLine": 403,
        "endChar": 97
      },
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce965b90_f8fecdd1",
        "filename": "compiler/linker/multi_oat_relative_patcher_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-05T18:13:42Z",
      "side": 1,
      "message": "Why is this ok? Can you leave a comment?",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f53cf409_be2ac54c",
        "filename": "compiler/linker/multi_oat_relative_patcher_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-06T13:49:40Z",
      "side": 1,
      "message": "What do you mean?\n\nThe UNREACHABLE() is necessary after LOG(FATAL) to avoid errors from not returning anything.",
      "parentUuid": "ce965b90_f8fecdd1",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4339e1f8_0885c483",
        "filename": "compiler/linker/multi_oat_relative_patcher_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-12T14:39:41Z",
      "side": 1,
      "message": "Why is it ok that this function doesn\u0027t implement anything? I guess it\u0027s for a test but a comment would be nice.",
      "parentUuid": "f53cf409_be2ac54c",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "907ffc75_bcf0972b",
        "filename": "compiler/linker/multi_oat_relative_patcher_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2017-09-12T14:45:07Z",
      "side": 1,
      "message": "Igor, note that this method belongs to a mock class (for the purpose of testing).",
      "parentUuid": "f53cf409_be2ac54c",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4019ad41_3f853f4d",
        "filename": "compiler/oat_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-05T18:13:42Z",
      "side": 1,
      "message": "Can we hold up this CL for a bit until after we resolve the OAT layout CL? It seems to be touching the same code here.",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024a19a8_e35b6318",
        "filename": "compiler/oat_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2017-09-06T13:49:40Z",
      "side": 1,
      "message": "I was OK with the OAT layout CL but now other people have made further comments. Please hurry to address that, so that we do not accumulate more changes that conflict with this CL.\n\n(That layout CL also surely conflicts with https://android-review.googlesource.com/476338 .)",
      "parentUuid": "4019ad41_3f853f4d",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f13619e_c5ea8140",
        "filename": "compiler/oat_writer.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-12T14:39:41Z",
      "side": 1,
      "message": "Ok, just go ahead and merge this in whenever it\u0027s ready. I don\u0027t think we should hold it up for oat layout.",
      "parentUuid": "024a19a8_e35b6318",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1239639a_8486520b",
        "filename": "oatdump/oatdump.cc",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2017-09-05T18:13:42Z",
      "side": 1,
      "message": "Nice! Thanks for not copy-and-pasting.",
      "revId": "7eea36a6789969abea60ecda87193f2cf6d8a81b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}