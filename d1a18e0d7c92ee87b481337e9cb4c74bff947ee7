{
  "comments": [
    {
      "key": {
        "uuid": "9310f93f_400a8288",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T11:32:25Z",
      "side": 1,
      "message": "Remove this DCHECK, it doesn\u0027t necessarily hold. There can be both core reg and fp reg loads/stores from/to dalvik reg and the insns used for them have different ranges. See ArmMir2Lir::Load/StoreBaseDispBody() and the difference in handling of fp and core regs for kSingle/k32 when 1024 \u003c\u003d displacement \u003c 4092.\n\n(And why is the thum2Form in ArmMir2Lir::Load/StoreBaseDispBody() checking for displacement \u003c 4092 instead of displacement \u003c 4096?)",
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fb2935_a159586d",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T11:32:25Z",
      "side": 1,
      "message": "We could eliminate this_lir under some circumstances but let\u0027s not complicate the current logic at this point.",
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_60e7c674",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T11:32:25Z",
      "side": 1,
      "message": "Why don\u0027t we eliminate LDR-STR? (Not that I would actually expect to see it in the generated code.)",
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fb2935_84d1ca6b",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T11:32:25Z",
      "side": 1,
      "message": "Use the helper function IsDalvikRegisterClobbered().",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 172,
        "endChar": 3
      },
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_808d3abb",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T11:32:25Z",
      "side": 1,
      "message": "This is broken for load/store generated by ArmMir2Lir::Load/StoreBaseDispBody(). If 1024 \u003c\u003d displacement \u003c 4092, we can erroneously get same_offset \u003d\u003d false for one fp reg and one core reg load/store despite aliasing. We can also get same_offset \u003d\u003d true for the fp reg load/store with displacement \u003e\u003d 1024 and an arbitrary load/store with displacement \u003c 1024.",
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9310f93f_e3b400d3",
        "filename": "compiler/dex/quick/local_optimizations.cc",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2014-08-19T12:45:42Z",
      "side": 1,
      "message": "The problem is that ArmMir2Lir::Load/StoreBaseDispBody() cannot stick to this assumption since no indexed load/store exists for fp regs.",
      "range": {
        "startLine": 227,
        "startChar": 56,
        "endLine": 228,
        "endChar": 62
      },
      "revId": "d1a18e0d7c92ee87b481337e9cb4c74bff947ee7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}