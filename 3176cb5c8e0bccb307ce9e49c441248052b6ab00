{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6586a537_c9cace48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-24T11:07:41Z",
      "side": 1,
      "message": "I\u0027d prefer to mark these methods with a special flag. But given that this is on a per-class bases, a flag in the class would be fine and we have more available flags we can use for classes.\n\n(Note: ",
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98912a0_554cbef4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-24T11:08:49Z",
      "side": 1,
      "message": "Note: This relates to the lack of error checking for loading the preloaded classes. But I\u0027d like to have that flag even if we did check for errors correctly.",
      "parentUuid": "6586a537_c9cace48",
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ed61b6f_bd5c5e69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-03-24T12:06:10Z",
      "side": 1,
      "message": "Where would you check that flag? Would that replace \"ShouldCompileWithClinitCheck\" and the resolution stub check?",
      "parentUuid": "c98912a0_554cbef4",
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b407f9_9d0fe301",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-28T12:43:44Z",
      "side": 1,
      "message": "Yes, exactly.",
      "parentUuid": "2ed61b6f_bd5c5e69",
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5492aac0_28393d47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-04T15:48:35Z",
      "side": 1,
      "message": "Added kAccInBootImageAndNotInPreloadedClasses, checked at compile time and runtime.",
      "parentUuid": "c3b407f9_9d0fe301",
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336fd916_2ec5cdbf",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-28T12:43:44Z",
      "side": 1,
      "message": "You\u0027re treating `preloaded_classes_` as descriptors while the file `art/build/boot/preloaded-classes` contains the classes in dotted format (`android.compat.Compatibility`). There needs to be some translation.",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 91
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37126fc5_2c648df7",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-04T15:48:35Z",
      "side": 1,
      "message": "Yeah, the input is actually a pretty descriptor. I\u0027ve added a comment.",
      "parentUuid": "336fd916_2ec5cdbf",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 91
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc025b77_3c03268c",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 7
      },
      "lineNbr": 168,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-28T12:43:44Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 168,
        "startChar": 91,
        "endLine": 168,
        "endChar": 93
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d21fae6a_b4edbf06",
        "filename": "compiler/driver/compiler_options.cc",
        "patchSetId": 7
      },
      "lineNbr": 168,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-04T15:48:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc025b77_3c03268c",
      "range": {
        "startLine": 168,
        "startChar": 91,
        "endLine": 168,
        "endChar": 93
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c834e6_bc90cb80",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2022-03-28T12:43:44Z",
      "side": 1,
      "message": "If class initialization fails, we shall get the called method in the stack trace. With clinit check in the caller we would not.",
      "range": {
        "startLine": 386,
        "startChar": 8,
        "endLine": 386,
        "endChar": 78
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c415422f_ae145560",
        "filename": "compiler/optimizing/instruction_builder.cc",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-07-04T15:48:35Z",
      "side": 1,
      "message": "Excellent point. Done by moving the check in the prologue and jumping to the resolution stub. Added a test for this.",
      "parentUuid": "31c834e6_bc90cb80",
      "range": {
        "startLine": 386,
        "startChar": 8,
        "endLine": 386,
        "endChar": 78
      },
      "revId": "3176cb5c8e0bccb307ce9e49c441248052b6ab00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}