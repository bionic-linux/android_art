{
  "comments": [
    {
      "key": {
        "uuid": "6394aac1_3b035710",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 517,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "indentation is off. Why is this here and not in the assemblers?",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 54
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_5dd73beb",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 517,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:52:46Z",
      "side": 1,
      "message": "Where in the assemblers should it be?\nDo you effectively want to revert changes of \"Implement CFI for JNI.\" Patch Set 2?",
      "parentUuid": "6394aac1_3b035710",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 54
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_d7d31cda",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 517,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T08:57:29Z",
      "side": 1,
      "message": "Actually, maybe it\u0027s an abstraction you need. This code does not have to know about dwarf. So things like RelOffsetForMany should be internal to the assemblers, and the code here should call a method that will take care of lowering it down to dwarf things.",
      "parentUuid": "a38a229d_5dd73beb",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 54
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_5d8c9bcb",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 517,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T09:22:51Z",
      "side": 1,
      "message": "So some of the methods would start with __ cfi(). and some would be part of assembler?  I would not like the inconsistency.  I could wrap all dwarf methods in all assemblers, but that seems like an overkill.  I also can not do it just once in the base class since the register type is platform specific, and I would like to keep it that way.\n\nThe old CFI code just used ints for everything helper methods to covert (ART) ints to (DWARF) ints.  The main motivation for existence of those small helper methods is to make sure the correct remapping from ART reg number to DWARF reg number is always done, and it is difficult to omit or use the wrong one.\n\nTo be clear, I do not particularly like those small conversion methods, but it is the best solution I could think of.",
      "parentUuid": "e3617abc_d7d31cda",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 517,
        "endChar": 54
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_5b102353",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 521,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 521,
        "endChar": 52
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_3758d85a",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 545,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "R0? And why?",
      "range": {
        "startLine": 545,
        "startChar": 37,
        "endLine": 545,
        "endChar": 48
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_bbf7675b",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 545,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:52:46Z",
      "side": 1,
      "message": "The first argument is the \"base register\" - it is the register that corresponds to bit 0 in the mask.\nSo mask 00000101 would apply to R0 and R2.",
      "parentUuid": "e3617abc_3758d85a",
      "range": {
        "startLine": 545,
        "startChar": 37,
        "endLine": 545,
        "endChar": 48
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_f7d820f7",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 545,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T08:57:29Z",
      "side": 1,
      "message": "OK, but you could still write R0, right?",
      "parentUuid": "6394aac1_bbf7675b",
      "range": {
        "startLine": 545,
        "startChar": 37,
        "endLine": 545,
        "endChar": 48
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_b71ce823",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 545,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T09:22:51Z",
      "side": 1,
      "message": "Oh, I see what you mean.  Yes, that would be better.",
      "parentUuid": "e3617abc_f7d820f7",
      "range": {
        "startLine": 545,
        "startChar": 37,
        "endLine": 545,
        "endChar": 48
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_5d83bb05",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "S0",
      "range": {
        "startLine": 550,
        "startChar": 39,
        "endLine": 550,
        "endChar": 51
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_d714fc44",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:52:46Z",
      "side": 1,
      "message": "whereas here mask 00000101 would apply to S0 and S2",
      "parentUuid": "a38a229d_5d83bb05",
      "range": {
        "startLine": 550,
        "startChar": 39,
        "endLine": 550,
        "endChar": 51
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_fba3af22",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T08:57:29Z",
      "side": 1,
      "message": "Same here, write S0.",
      "parentUuid": "e3617abc_d714fc44",
      "range": {
        "startLine": 550,
        "startChar": 39,
        "endLine": 550,
        "endChar": 51
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_bb0687a0",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T09:22:51Z",
      "side": 1,
      "message": "True.",
      "parentUuid": "6394aac1_fba3af22",
      "range": {
        "startLine": 550,
        "startChar": 39,
        "endLine": 550,
        "endChar": 51
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_57554c21",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1215,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "Can\u0027t you move the cfi here in GenerateFrameExit?",
      "range": {
        "startLine": 1212,
        "startChar": 0,
        "endLine": 1215,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_f719007a",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1215,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:52:46Z",
      "side": 1,
      "message": "In this case, I could, but not in general.  Usually the generation of \"ret\" instruction is not part of GenerateFrameExit().",
      "parentUuid": "e3617abc_57554c21",
      "range": {
        "startLine": 1212,
        "startChar": 0,
        "endLine": 1215,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_1b993bf8",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1215,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-10T08:57:29Z",
      "side": 1,
      "message": "Well then, could we move __ret to GenerateFrameExit?",
      "parentUuid": "e3617abc_f719007a",
      "range": {
        "startLine": 1212,
        "startChar": 0,
        "endLine": 1215,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_370458cd",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1215,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2015-04-10T09:14:00Z",
      "side": 1,
      "message": "Please do. (That was my intention here: https://android-review.googlesource.com/#/c/145700/2/compiler/optimizing/optimizing_cfi_test_expected.inc@58 )",
      "parentUuid": "6394aac1_1b993bf8",
      "range": {
        "startLine": 1212,
        "startChar": 0,
        "endLine": 1215,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_3709b8dd",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1215,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T09:22:51Z",
      "side": 1,
      "message": "I agree.  If fact, I initially put the cfi code in GenerateFrameExit as you suggested.  I found later that I need to move it up a level.  Which also introduces replication.  It also make the cfi test slightly more awkward.  I just was not brave enough to move it.",
      "parentUuid": "6394aac1_1b993bf8",
      "range": {
        "startLine": 1212,
        "startChar": 0,
        "endLine": 1215,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_7b0ddf35",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1229,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1226,
        "startChar": 0,
        "endLine": 1229,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_7dd4f7e5",
        "filename": "compiler/optimizing/code_generator_arm.cc",
        "patchSetId": 10
      },
      "lineNbr": 1229,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:52:46Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "6394aac1_7b0ddf35",
      "range": {
        "startLine": 1226,
        "startChar": 0,
        "endLine": 1229,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_bb1f675e",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 10
      },
      "lineNbr": 2457,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "In GenerateFrameExit?",
      "range": {
        "startLine": 2453,
        "startChar": 0,
        "endLine": 2457,
        "endChar": 63
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_97c9a42c",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 10
      },
      "lineNbr": 2457,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:55:16Z",
      "side": 1,
      "message": "Note that __ Ret() must be before RestoreState(), and therego RestoreState can not be in GenerateFrameExit",
      "parentUuid": "6394aac1_bb1f675e",
      "range": {
        "startLine": 2453,
        "startChar": 0,
        "endLine": 2457,
        "endChar": 63
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_97ab6486",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 10
      },
      "lineNbr": 463,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "indentation",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 463,
        "endChar": 54
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_9df1c3b3",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 10
      },
      "lineNbr": 1122,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "In GenerateFrameExit?",
      "range": {
        "startLine": 1118,
        "startChar": 0,
        "endLine": 1122,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_9ba46b30",
        "filename": "compiler/optimizing/code_generator_x86.cc",
        "patchSetId": 10
      },
      "lineNbr": 1122,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:55:16Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "a38a229d_9df1c3b3",
      "range": {
        "startLine": 1118,
        "startChar": 0,
        "endLine": 1122,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_db143345",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 10
      },
      "lineNbr": 485,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "indentation.",
      "range": {
        "startLine": 485,
        "startChar": 0,
        "endLine": 485,
        "endChar": 57
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a38a229d_bdf67fa6",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 10
      },
      "lineNbr": 488,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "indentation.",
      "range": {
        "startLine": 488,
        "startChar": 0,
        "endLine": 488,
        "endChar": 55
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6394aac1_fb19ef79",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 10
      },
      "lineNbr": 1148,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-04-09T21:31:38Z",
      "side": 1,
      "message": "In GenerateFrameExit?",
      "range": {
        "startLine": 1144,
        "startChar": 0,
        "endLine": 1148,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617abc_b7cea82f",
        "filename": "compiler/optimizing/code_generator_x86_64.cc",
        "patchSetId": 10
      },
      "lineNbr": 1148,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-04-10T08:55:16Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "6394aac1_fb19ef79",
      "range": {
        "startLine": 1144,
        "startChar": 0,
        "endLine": 1148,
        "endChar": 50
      },
      "revId": "c6b4dd8980350aaf250f0185f73e9c42ec17cd57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}