{
  "comments": [
    {
      "key": {
        "uuid": "a57141c9_19b74bd2",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-02-24T00:37:47Z",
      "side": 1,
      "message": "No statics please",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a57141c9_5994e329",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-02-24T00:38:34Z",
      "side": 1,
      "message": "I mean globals*",
      "parentUuid": "a57141c9_19b74bd2",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4597a502_5ef29523",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-24T00:48:15Z",
      "side": 1,
      "message": "Then rewrite it. It\u0027s your stuff that breaks with globals...",
      "parentUuid": "a57141c9_5994e329",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e59df926_1b797bdc",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-02-24T00:49:29Z",
      "side": 1,
      "message": "You mean runtime shutdown, but since this will only break for valgrind I suppose its OK",
      "parentUuid": "4597a502_5ef29523",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85f19d52_20c0aa03",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-24T08:26:28Z",
      "side": 1,
      "message": "How about changing these vectors into Java arrays?",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2540f174_80e29820",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-24T16:32:53Z",
      "side": 1,
      "message": "That would be quite some overhead, and it would be ugly (must be array of longs), and only relevant for dalvikvm Valgrind run-tests. So I feel it\u0027s overkill. But if the team thinks that\u0027s the right way...",
      "parentUuid": "85f19d52_20c0aa03",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8520bddf_6834a304",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-24T16:34:02Z",
      "side": 1,
      "message": "Overhead on what? Don\u0027t we have a DexFile java abstraction?",
      "parentUuid": "2540f174_80e29820",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5cb9564_42c6f2a4",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-24T16:37:22Z",
      "side": 1,
      "message": "Overhead on size, overhead on JNI code.\n\nYes, we have the Java abstraction, but we need to store native references. So it\u0027s an array of native pointers. Copying into/out of etc. isn\u0027t pretty code in JNI.",
      "parentUuid": "8520bddf_6834a304",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5f7b997_ab068946",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-24T16:41:23Z",
      "side": 1,
      "message": "Then better not live in Java then... Or.... wait :)\n\nLooks like another option would be to put these dex files on our class loader.",
      "parentUuid": "c5cb9564_42c6f2a4",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c52635f8_6ad2d7d5",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2015-02-24T16:49:54Z",
      "side": 1,
      "message": "you can use DexFile as a public API without one of our class loaders...",
      "parentUuid": "e5f7b997_ab068946",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5f7b997_4b7445b3",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-02-24T16:57:49Z",
      "side": 1,
      "message": "Sure, but that\u0027s at the Java level, which has (or can have) proper deallocation.",
      "parentUuid": "c52635f8_6ad2d7d5",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05e92dcf_dcd82d2b",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-02-24T17:27:02Z",
      "side": 1,
      "message": "The native DexFile objects will *normally* be registered in the class linker. They are not the leak issue. The problem is that you need to keep a list together for multidex situations (so you can remove all DexFile* when a Java DexFile is closed). It did not seem right to also put that into the class-linker, so I attached it to the \"root cause,\" the Java DexFile (which already held a native DexFile* before).\n\nI am fine using a Java array to store the pointers. I think it\u0027s overkill, but it is a solution...",
      "parentUuid": "e5f7b997_4b7445b3",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5b941da_f9f257ea",
        "filename": "runtime/native/dalvik_system_DexFile.cc",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-02-24T17:29:11Z",
      "side": 1,
      "message": "Lets stop wasting time on this problem, just copy the MemMap::maps_ solution which is a global pointer which is created / setup if valgrind is enabled. This avoids the exit races where threads can access deleted global data.",
      "parentUuid": "05e92dcf_dcd82d2b",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 83
      },
      "revId": "1ef9aecf7761024ec55a61595584c68c9c087877",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}