{
  "comments": [
    {
      "key": {
        "uuid": "3b1e9ba6_4e0ba7f7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 1292,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: makes it non-obvious this code is debug-only, I recommend wrapping in if (kIsDebugBuild)",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_2efc73d7",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 1293,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: CHECK, not DCHECK if its inside of kIsDebugBuild guard",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_eea41bfb",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 1293,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: use CHECK if it\u0027s already guraded by kIsDebugBuild",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_6e066bf3",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 1295,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "???\n\nWhy is this store not happening for release builds?",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_4ece0789",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 1295,
      "author": {
        "id": 1109993
      },
      "writtenOn": "2016-08-18T17:01:39Z",
      "side": 1,
      "message": "This and the above two comments are not changes that I made. I am not sure why it\u0027s not happening for release builds, I just added this to replace std::copy_n. Same w/ above nits, happy to make the changes, but I didn\u0027t change those parts.",
      "parentUuid": "3b1e9ba6_6e066bf3",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd93b0e_b7c5e73a",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 2100,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2016-08-16T17:33:17Z",
      "side": 1,
      "message": "That\u0027s not necessary and can be a static_assert, really.",
      "range": {
        "startLine": 2100,
        "startChar": 2,
        "endLine": 2100,
        "endChar": 12
      },
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_88d59746",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 2100,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T18:32:23Z",
      "side": 1,
      "message": "I think it\u0027s reasonable to be a static_assert because it does make the assumption it\u0027s 8 byte aligned in the asm code",
      "parentUuid": "3bd93b0e_b7c5e73a",
      "range": {
        "startLine": 2100,
        "startChar": 2,
        "endLine": 2100,
        "endChar": 12
      },
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_eef9bbe2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 2118,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "Why would it be null?",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ce0037a2",
        "filename": "runtime/class_linker.cc",
        "patchSetId": 14
      },
      "lineNbr": 2118,
      "author": {
        "id": 1109993
      },
      "writtenOn": "2016-08-18T17:01:39Z",
      "side": 1,
      "message": "See above where strings is declared. It is null if NumStringIds() \u003d 0.",
      "parentUuid": "3b1e9ba6_eef9bbe2",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_4ee44734",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: line length",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_eed25b5a",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 67,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: line length",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ae5503cf",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: Why is it necessary to have this extra function again?",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ee8a5b17",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1109993
      },
      "writtenOn": "2016-08-18T17:01:39Z",
      "side": 1,
      "message": "kDexCacheStringCacheSize isn\u0027t accessible unless wrapped in a function from a few of the files that reference it.",
      "parentUuid": "3b1e9ba6_ae5503cf",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_8e52bfe2",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 186,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "return GetFieldPtr64\u003cStringDexCacheType*\u003e(StringsOffset())",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ee5ffbe8",
        "filename": "runtime/mirror/dex_cache.h",
        "patchSetId": 14
      },
      "lineNbr": 274,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: line length",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_2e6bd387",
        "filename": "runtime/mirror/dex_cache_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "nit: 4 space extra indent",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ae7ea342",
        "filename": "runtime/utils/dex_cache_arrays_layout-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 52,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "alignof(StringDexCacheType)",
      "range": {
        "startLine": 52,
        "startChar": 24,
        "endLine": 52,
        "endChar": 32
      },
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_6e65cbb0",
        "filename": "runtime/utils/dex_cache_arrays_layout-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "return alignof(StringDexCacheType)",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1e9ba6_ce75d75f",
        "filename": "runtime/utils/dex_cache_arrays_layout-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 98,
      "author": {
        "id": 1021471
      },
      "writtenOn": "2016-08-16T19:57:47Z",
      "side": 1,
      "message": "cache_size \u003d std::min(kDexCacheStringCacheSize, num_elements)",
      "revId": "29b386aabba1b8a1fc356cffd95f9c14614b7586",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}