{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b72abc80_88ec7e82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-04-27T15:18:01Z",
      "side": 1,
      "message": "+1 for now in case Martin has any other comments here, but seems good to have on LUCI.",
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415f0a3d_1bdedec1",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-27T14:03:22Z",
      "side": 1,
      "message": "Right, this may explain the repeated invalidation I\u0027ve seen.\n\nStill, I wonder if this should be default behaviour - it\u0027s a bit inconsistent with other build actions. What kind of build inconsistencies are you addressing here? Does it happen frequently that the install directory gets out of whack, or only after things like repo sync? Is it for LUCI builds?",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84a62b27_920a4745",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T14:14:20Z",
      "side": 1,
      "message": "I don\u0027t expect much of build inconsistencies... \nWe have seen only couple of instances of such broken builds on go/ab.\nIt is mostly for LUCI builds, but the same applies locally after repo sync.\n\nIn general, I feel strongly that tools and scripts should just do the right thing by default, and you can pass performance improving options if you know what you are doing..\n\nIn general, I always have installclean at the start of my \"local scripts\" because although it does take couple extra seconds here and there, it saves me a day of pain here and there if things go out of sync.",
      "parentUuid": "415f0a3d_1bdedec1",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "435229af_1f3159a4",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T14:17:44Z",
      "side": 1,
      "message": "I am curious what your workflow is...\nI have been using this script locally (with explicit installclean before it), but in all the cases it is followed by flash-the-device, or run-all-tests, etc... \nTL:DR; I have also had the build regen issue, but I never noticed since the whole set always took O(minutes) anyway.\n\nPS: My ultimate goal is that one day, just \"test.py\" with no arguments will \"just work\".",
      "parentUuid": "84a62b27_920a4745",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6250bef_f2d83a4b",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-04-27T15:18:01Z",
      "side": 1,
      "message": "I didn\u0027t quite grok Martin\u0027s repeated invalidation comment.\n\nThe other approach is adding --installclean and re-running the LUCI script gen bits to use that. Fine either way here, the end result is desirable either way.",
      "parentUuid": "435229af_1f3159a4",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4631661_006d47a4",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T15:46:17Z",
      "side": 1,
      "message": "The invalidation was about running the script twice in row locally. The issue was the environment variables changed between the installclean command and build command, soong would err on the side of caution, and recreate the ninja files (which takes a minute or so).  So this a a minor speed up.\n\nYeah, explicit --installclean would also work, although I am not a fan :-)  Disclosure: this is in part motivated by trade-fed/atest, where things often randomly break, and then you have to read through the docs to figure what is the magic set of various clean/rebuild arguments that will actually make your test run...\n\nOf course, I am perfectly happy with \"make it faster, I know what am doing and I take responsibility\" command line arguments.",
      "parentUuid": "d6250bef_f2d83a4b",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ad3c2f6_b23b4015",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-27T18:11:13Z",
      "side": 1,
      "message": "\u003e scripts should just do the right thing by default, and you can pass performance improving options\n\nThere\u0027s merit in that, but in our current build system it\u0027d mean that Soong should do `m installclean` before every build invocation by default - that\u0027s the right level to apply that principle. However the reality is that it doesn\u0027t work well enough for that, and hence it\u0027s intentionally left to user, broken though that undeniably is.\n\nSo given that there in fact is a \"user journey\" for `m installclean`, my impression of it is that it may be necessary after `repo sync`, not otherwise. Adding it here means running it much more often in local use. Iow, it\u0027s the wrong level, and it introduces an inconsistency - users still have plenty of ways of getting bad builds and hence need to be aware of installclean, but now they also have to deal with some cases where it\u0027s often run unnecessarily and how to deal with that too.\n\nIn short, `m installclean` is a build system problem - this is not the place to try to fix it.\n\nTurning it off with a flag isn\u0027t ideal - it\u0027s easy to forget when running manually. If we\u0027re going with this then it should at least be turned off with an environment variable.\n\n\u003e I am curious what your workflow is...\n\nI usually do\n\n  art/tools/buildbot-build.sh --target \u0026\u0026 \\\n  art/tools/buildbot-teardown-device.sh \u0026\u0026 \\\n  art/tools/buildbot-cleanup-device.sh \u0026\u0026 \\\n  art/tools/buildbot-setup-device.sh \u0026\u0026 \\\n  art/tools/buildbot-sync.sh\n\non a Cuttlefish device. With only a source (i.e. C++ or Java) change, that takes 40-50 s, so the build regen step more than doubles the time (in a full platform tree).",
      "parentUuid": "435229af_1f3159a4",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c7cdbd5_41f69887",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T18:22:10Z",
      "side": 1,
      "message": "Hasn\u0027t the build regen issue been fixed, so it should be similar time as before for you?  Is there still an issue?\n\nWell, yes, I agree the the existence of installclean is admission of deficiency in the build system.  Hopefully one day it will be improved to the point where we don\u0027t need to think about it at all.\n\nI agree that it is easy to forget when running manually.  Which is why prefer \"just-works\" by default (if you forget).  As opposed to \"breaks\" by default (if you forget to run installclean after sync, and have really unlucky dependency day).\n\nAnyway, is that so painful to add \"--no-installclean\" to the first line of your uber-command?  I prefer to have the installclean for extra sanity, but you are welcome to add --no-installclean, and as bonus point, it is a textual reminder that if things break oddly, maybe you should do the intsallclean after all...",
      "parentUuid": "2ad3c2f6_b23b4015",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed7cf2ac_dfc3dd38",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-28T13:14:59Z",
      "side": 1,
      "message": "Yes, $extra_args helps with the regen issue. However installclean still removes system images etc that take time to rebuild if the same out tree also is used for that.\n\n\u003e I agree that it is easy to forget when running manually.  Which is why prefer \"just-works\" by default (if you forget).\n\nThe thing is this location is quite blunt, and most of the time it\u0027ll cause slower builds without any benefit. Granted, broken builds are more annoying than slow ones, but the relative frequency also matters - it\u0027s not necessarily the case that avoiding a rare broken build always is worth more than common slowness.\n\nImo a script like this should only do the build it\u0027s supposed to do, not try to work around unrelated bugs that just occasionally may happen in its code path. It\u0027s too low level for that - if anyone needs to do it they\u0027re better off wrapping this instead.\n\nBut I don\u0027t think we\u0027ll convince each other on this. In any case, I run this script in other ways than just through the mantra I pasted above, and having to add a command line argument every time is not good. Either make it off by default, or make it controllable through an environment variable, please.",
      "parentUuid": "6c7cdbd5_41f69887",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba5a5894_d6e717c6",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-28T13:50:58Z",
      "side": 1,
      "message": "Is the 22sec vs 25sec speed difference really so important to you to justify this debate?",
      "parentUuid": "ed7cf2ac_dfc3dd38",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "115f337a_da979944",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-28T14:13:57Z",
      "side": 1,
      "message": "As I mentioned it also deletes system images that take time to rebuild. When I have cuttlefish images in the build tree and run this script, the cuttlefish device fails to restart afterwards. That will most certainly bother me every time I forget this argument.\n\nSo yes, indeed it is.",
      "parentUuid": "ba5a5894_d6e717c6",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac6a1fad_87e1aba2",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-28T15:07:54Z",
      "side": 1,
      "message": "System images take time to rebuild, but they are usually followed by some other action that takes even longer (e.g. flash and reboot).\n\nIn any case, feel free to create a follow up CL appends implied from env var, or something like that.",
      "parentUuid": "115f337a_da979944",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}