{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b72abc80_88ec7e82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-04-27T15:18:01Z",
      "side": 1,
      "message": "+1 for now in case Martin has any other comments here, but seems good to have on LUCI.",
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415f0a3d_1bdedec1",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-27T14:03:22Z",
      "side": 1,
      "message": "Right, this may explain the repeated invalidation I\u0027ve seen.\n\nStill, I wonder if this should be default behaviour - it\u0027s a bit inconsistent with other build actions. What kind of build inconsistencies are you addressing here? Does it happen frequently that the install directory gets out of whack, or only after things like repo sync? Is it for LUCI builds?",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84a62b27_920a4745",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T14:14:20Z",
      "side": 1,
      "message": "I don\u0027t expect much of build inconsistencies... \nWe have seen only couple of instances of such broken builds on go/ab.\nIt is mostly for LUCI builds, but the same applies locally after repo sync.\n\nIn general, I feel strongly that tools and scripts should just do the right thing by default, and you can pass performance improving options if you know what you are doing..\n\nIn general, I always have installclean at the start of my \"local scripts\" because although it does take couple extra seconds here and there, it saves me a day of pain here and there if things go out of sync.",
      "parentUuid": "415f0a3d_1bdedec1",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "435229af_1f3159a4",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T14:17:44Z",
      "side": 1,
      "message": "I am curious what your workflow is...\nI have been using this script locally (with explicit installclean before it), but in all the cases it is followed by flash-the-device, or run-all-tests, etc... \nTL:DR; I have also had the build regen issue, but I never noticed since the whole set always took O(minutes) anyway.\n\nPS: My ultimate goal is that one day, just \"test.py\" with no arguments will \"just work\".",
      "parentUuid": "84a62b27_920a4745",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6250bef_f2d83a4b",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1071150
      },
      "writtenOn": "2021-04-27T15:18:01Z",
      "side": 1,
      "message": "I didn\u0027t quite grok Martin\u0027s repeated invalidation comment.\n\nThe other approach is adding --installclean and re-running the LUCI script gen bits to use that. Fine either way here, the end result is desirable either way.",
      "parentUuid": "435229af_1f3159a4",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4631661_006d47a4",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2021-04-27T15:46:17Z",
      "side": 1,
      "message": "The invalidation was about running the script twice in row locally. The issue was the environment variables changed between the installclean command and build command, soong would err on the side of caution, and recreate the ninja files (which takes a minute or so).  So this a a minor speed up.\n\nYeah, explicit --installclean would also work, although I am not a fan :-)  Disclosure: this is in part motivated by trade-fed/atest, where things often randomly break, and then you have to read through the docs to figure what is the magic set of various clean/rebuild arguments that will actually make your test run...\n\nOf course, I am perfectly happy with \"make it faster, I know what am doing and I take responsibility\" command line arguments.",
      "parentUuid": "d6250bef_f2d83a4b",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ad3c2f6_b23b4015",
        "filename": "tools/buildbot-build.sh",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2021-04-27T18:11:13Z",
      "side": 1,
      "message": "\u003e scripts should just do the right thing by default, and you can pass performance improving options\n\nThere\u0027s merit in that, but in our current build system it\u0027d mean that Soong should do `m installclean` before every build invocation by default - that\u0027s the right level to apply that principle. However the reality is that it doesn\u0027t work well enough for that, and hence it\u0027s intentionally left to user, broken though that undeniably is.\n\nSo given that there in fact is a \"user journey\" for `m installclean`, my impression of it is that it may be necessary after `repo sync`, not otherwise. Adding it here means running it much more often in local use. Iow, it\u0027s the wrong level, and it introduces an inconsistency - users still have plenty of ways of getting bad builds and hence need to be aware of installclean, but now they also have to deal with some cases where it\u0027s often run unnecessarily and how to deal with that too.\n\nIn short, `m installclean` is a build system problem - this is not the place to try to fix it.\n\nTurning it off with a flag isn\u0027t ideal - it\u0027s easy to forget when running manually. If we\u0027re going with this then it should at least be turned off with an environment variable.\n\n\u003e I am curious what your workflow is...\n\nI usually do\n\n  art/tools/buildbot-build.sh --target \u0026\u0026 \\\n  art/tools/buildbot-teardown-device.sh \u0026\u0026 \\\n  art/tools/buildbot-cleanup-device.sh \u0026\u0026 \\\n  art/tools/buildbot-setup-device.sh \u0026\u0026 \\\n  art/tools/buildbot-sync.sh\n\non a Cuttlefish device. With only a source (i.e. C++ or Java) change, that takes 40-50 s, so the build regen step more than doubles the time (in a full platform tree).",
      "parentUuid": "435229af_1f3159a4",
      "range": {
        "startLine": 131,
        "startChar": 65,
        "endLine": 131,
        "endChar": 76
      },
      "revId": "3211b001e1f0857b8a0a589879d2e9854c96d33f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}