{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "58bc26c5_20fe2f16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-11-25T14:40:04Z",
      "side": 1,
      "message": "We optimize the NullCheck away in InstructionSimplifier (https://cs.android.com/android/platform/superproject/+/master:art/compiler/optimizing/instruction_simplifier.cc;l\u003d576;drc\u003d434d968b4af0bc8af9889170250bee3e08839bea). When are we seeing this pattern created? Is this because of the newly added DCE passes in aosp/2278397?",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "323baf72_2f448216",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-11-25T14:52:41Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "58bc26c5_20fe2f16",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58fbdfb9_52b35505",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-11-25T14:57:32Z",
      "side": 1,
      "message": "Ack. Can we add a regression test for seeing the `NewInstance-\u003eNullCheck` in CFRE?\n\nIt would be nice to be able to eliminate the NullCheck since it is not needed, but we can do that on a different CL.",
      "parentUuid": "323baf72_2f448216",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d979397_d4013b51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-11-25T15:03:17Z",
      "side": 1,
      "message": "I thought about it, but this would be a test towards how we order our passes which doesn\u0027t sound right. I think the check was bogus in the first place. If we really wanted to have that assumption, we should have made sure instruction simplifier was always the pass just before.",
      "parentUuid": "58fbdfb9_52b35505",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e4de4ec_96a46029",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1889741
      },
      "writtenOn": "2022-11-25T15:17:15Z",
      "side": 1,
      "message": "Simplifier was always the pass just before until we added the new DCE pass (https://cs.android.com/android/platform/superproject/+/master:art/compiler/optimizing/optimizing_compiler.cc;l\u003d694;drc\u003d5fa73a95fcfc638c155511305382ecbe4b75fe43). I think it is fine to remove the check, but it would be better if in the future we also remove the NullChecks.\n\nIt may be worth it to do:\n```\n  while (optimization_happened) {\n    run constant folding\n    run instruction simplifier\n    run DCE\n  }\n```\ni.e. iterating to a fixed point. Those optimizations are fast to run so it shouldn\u0027t impact compilation time that much. Not sure how much we would gain though. It would be interesting to run the numbers.",
      "parentUuid": "6d979397_d4013b51",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f077f0e0_84810e94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2022-11-25T16:15:56Z",
      "side": 1,
      "message": "Such fixed point loops are dangerous: there is no guarantee a pass will be a no-op if it\u0027s run twice directly, nor that passes won\u0027t just create work for one another.",
      "parentUuid": "3e4de4ec_96a46029",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "a67a47b402728e15a7e8e83207ad1b25271693ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}