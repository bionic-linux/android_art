{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "70c83981_98cc7a12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "I find it very odd to have two CLs in the same repository in the same topic. I think they should be \"squashed\" together because they are really part of the same change.",
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f182dc67_be1924c3",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "I prefer functions in .cpp files in the same order as their declarations in the .h file. `IsNamespaceNativeBridged()` is declared after `OpenNativeLibraryInNamespace()`.",
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5d88b4b_6580ddee",
        "filename": "runtime/jni/jni_internal.cc",
        "patchSetId": 1
      },
      "lineNbr": 2582,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "Wrap this in a `ScopedLocalRef` to avoid leaking local references. The native code could call `RegisterNatives` for many classes without destroying the local reference table segment. (In a not-very-useful example, one could even call `RegisterNatives` repeatedly in a loop for the same class.)",
      "range": {
        "startLine": 2582,
        "startChar": 32,
        "endLine": 2582,
        "endChar": 49
      },
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64b24706_78f77412",
        "filename": "runtime/jni/jni_internal.cc",
        "patchSetId": 1
      },
      "lineNbr": 2692,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "Can you remind me how did NativeBridge previously handle the `RegisterNatives` without this code?",
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b9e26ca_da818538",
        "filename": "runtime/jni/jni_internal.cc",
        "patchSetId": 1
      },
      "lineNbr": 2922,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "This check is repeated for each method but it is a loop invariant in the caller. We should reduce it to a bool in the caller right after creating the `jclass_loader`.\n\nWe should guard that code with `#if defined(__ANDROID__)` and maybe move the check to a helper function to ensure the timely destruction of the local referene `jclass_loader`.",
      "range": {
        "startLine": 2918,
        "startChar": 4,
        "endLine": 2922,
        "endChar": 5
      },
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e3c8567_2ce78853",
        "filename": "runtime/jni/jni_internal.cc",
        "patchSetId": 1
      },
      "lineNbr": 2925,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2024-04-04T14:09:59Z",
      "side": 1,
      "message": "Remove. The caller has a `ScopedObjectAccess`, so it already holds the mutator lock. Instead, annotate this function with `REQUIRES_SHARED(Locks::mutator_lock_)`.\n\nThe `self` argument shall not be needed anymore, so it should be removed.",
      "range": {
        "startLine": 2925,
        "startChar": 4,
        "endLine": 2925,
        "endChar": 52
      },
      "revId": "b6275b945d1ca775e51d2eaa2a5a6fb4825e2742",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}