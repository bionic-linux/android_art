{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ea0de7a_369548a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-10-12T23:18:03Z",
      "side": 1,
      "message": "I\u0027ll let others review this more deeply as I\u0027m not very familiar with image loading.",
      "revId": "3551f766a6fa2663ea7016594f914c256b84c9a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ed0909a_94fa0fe8",
        "filename": "runtime/gc/accounting/space_bitmap.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-10-12T23:18:03Z",
      "side": 1,
      "message": "space_bitmap are used a lot (there are 10s of spaces and each have at least one bitmap). This extra alignment could increase virtual memory use in a meaningful manner. It seems like this is mainly done for writing images to disk with right alignment. If so, then please introduce a special ctor which uses alignment and use that in those cases.",
      "range": {
        "startLine": 93,
        "startChar": 40,
        "endLine": 93,
        "endChar": 82
      },
      "revId": "3551f766a6fa2663ea7016594f914c256b84c9a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b9743f_b29b2554",
        "filename": "runtime/gc/accounting/space_bitmap.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1258954
      },
      "writtenOn": "2023-10-13T00:15:44Z",
      "side": 1,
      "message": "On another thought, this is not really that big a deal, specially on 64-bit process. Also, it\u0027s far smaller issue as compared to stack overflow gap.\nHowever, in case of stack it\u0027s unavoidable, whereas here it can be avoided in a lot of cases, like moving/non-moving/large-object/zygote spaces and probably more.",
      "parentUuid": "6ed0909a_94fa0fe8",
      "range": {
        "startLine": 93,
        "startChar": 40,
        "endLine": 93,
        "endChar": 82
      },
      "revId": "3551f766a6fa2663ea7016594f914c256b84c9a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36975de0_0af890b0",
        "filename": "runtime/gc/accounting/space_bitmap.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-10-27T14:26:39Z",
      "side": 1,
      "message": "Updated: the rounding is now done conditionally depends on the optional `is_image_part` parameter which is specified in image_writer.cc and runtime_image.cc",
      "parentUuid": "70b9743f_b29b2554",
      "range": {
        "startLine": 93,
        "startChar": 40,
        "endLine": 93,
        "endChar": 82
      },
      "revId": "3551f766a6fa2663ea7016594f914c256b84c9a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dbe09b9_6e1eb5af",
        "filename": "runtime/gc/accounting/space_bitmap.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1280281
      },
      "writtenOn": "2023-11-09T16:47:05Z",
      "side": 1,
      "message": "Updated further: the rounding of the bitmap size has been removed.",
      "parentUuid": "36975de0_0af890b0",
      "range": {
        "startLine": 93,
        "startChar": 40,
        "endLine": 93,
        "endChar": 82
      },
      "revId": "3551f766a6fa2663ea7016594f914c256b84c9a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}