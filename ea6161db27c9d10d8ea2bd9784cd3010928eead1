{
  "comments": [
    {
      "key": {
        "uuid": "db11db43_4ef87335",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 372,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-20T16:31:34Z",
      "side": 1,
      "message": "WriteName",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_e85b535f",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 372,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-23T12:42:41Z",
      "side": 1,
      "message": "Done.  (sorry, I missed it in rebase)",
      "parentUuid": "db11db43_4ef87335",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67fde4b_d6db220f",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 467,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-20T16:31:34Z",
      "side": 1,
      "message": "Handle the case when a 64bit value is spread into 2 register",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbb8a7d5_99c07b00",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 467,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-23T12:42:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b67fde4b_d6db220f",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b8e83ee_346b28fa",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 469,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-20T16:31:34Z",
      "side": 1,
      "message": "(nit): You can use DW_OP_reg\u003cn\u003e for n \u003c 32 to reduce the size of debug_loc",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb921f65_2b1ab9bb",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 469,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-23T12:42:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b8e83ee_346b28fa",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db11db43_0e027be7",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-20T16:31:34Z",
      "side": 1,
      "message": "Handle the case when a 64bit value is spread into 2 register",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_48461f37",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-23T12:42:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db11db43_0e027be7",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db11db43_eefe271f",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-20T16:31:34Z",
      "side": 1,
      "message": "You can use DW_OP_implicit_value instead of a full dwarf expression",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbbdbfca_7314a08e",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-23T12:42:41Z",
      "side": 1,
      "message": "Is there any difference?\nI used implict_value in the first PS, but then I realized this is more compact and it does not have endian issues. (not that it matters, but just for my peace of mind)",
      "parentUuid": "db11db43_eefe271f",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b77ab0e_665a2e33",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1059813
      },
      "writtenOn": "2015-11-23T14:54:24Z",
      "side": 1,
      "message": "I don\u0027t know about any difference. I thought using DW_OP_implicit_value will be more compact but after checking the spec I think the size difference is so small we shouldn\u0027t care (DW_OP_implicit_value will be always smaller or the same size as DW_OP_consts+DW_OP_stack_value).",
      "parentUuid": "fbbdbfca_7314a08e",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b7da3ef_2ba3a5c3",
        "filename": "compiler/elf_writer_debug.cc",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2015-11-24T02:31:08Z",
      "side": 1,
      "message": "Wouldn\u0027t it be expected for implicit_value to store the full 4 bytes of the constant?\n\nEven if not, they both require 3 bytes minimum.  Nonetheless, the size is not really of concern.\n\nThe main reason I prefer stack_value is because it does not assume any endian.  (can we also assume little endian on host, for example?)\n\nBy the way, is this going to work for floats?  For example double constant is encoded as:\nOP_consts 0x11223344 OP_stack_value OP_piece 4 OP_consts 0x55667788 OP_stack_value OP_piece 4",
      "parentUuid": "5b77ab0e_665a2e33",
      "revId": "ea6161db27c9d10d8ea2bd9784cd3010928eead1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}