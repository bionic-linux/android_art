{
  "comments": [
    {
      "key": {
        "uuid": "7cd6320e_66630aac",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 15
      },
      "lineNbr": 239,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T13:32:15Z",
      "side": 1,
      "message": "mention why.",
      "range": {
        "startLine": 239,
        "startChar": 38,
        "endLine": 239,
        "endChar": 60
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fce942d0_62b5b244",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 15
      },
      "lineNbr": 239,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:02:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cd6320e_66630aac",
      "range": {
        "startLine": 239,
        "startChar": 38,
        "endLine": 239,
        "endChar": 60
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cc1b619_0d2dd18d",
        "filename": "compiler/optimizing/stack_map_stream.cc",
        "patchSetId": 15
      },
      "lineNbr": 367,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-17T11:49:34Z",
      "side": 1,
      "message": "Calin: The DCHECK is triggered here. I have separated the code out, submitted it separately, and rebased on top of it.\n\nThe most important part is that the checks happen only in DebugBuild.",
      "range": {
        "startLine": 365,
        "startChar": 2,
        "endLine": 367,
        "endChar": 3
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb50adc_830e4484",
        "filename": "compiler/optimizing/stack_map_test.cc",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T13:32:15Z",
      "side": 1,
      "message": "document. \"Check\" is more vague then SameBits.",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 26
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cdb763a_60212c3a",
        "filename": "compiler/optimizing/stack_map_test.cc",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:02:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcb50adc_830e4484",
      "range": {
        "startLine": 26,
        "startChar": 12,
        "endLine": 26,
        "endChar": 26
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce47ef9_1e5fe9eb",
        "filename": "runtime/base/bit_utils.h",
        "patchSetId": 15
      },
      "lineNbr": 272,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T13:32:15Z",
      "side": 1,
      "message": "why this change?",
      "range": {
        "startLine": 272,
        "startChar": 23,
        "endLine": 272,
        "endChar": 50
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ccf6672_8a680f86",
        "filename": "runtime/base/bit_utils.h",
        "patchSetId": 15
      },
      "lineNbr": 272,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:02:34Z",
      "side": 1,
      "message": "See the change in memory_region.h\nI consider MaxInt\u003cuint32_t\u003e(0) a valid call which should return 0.",
      "parentUuid": "dce47ef9_1e5fe9eb",
      "range": {
        "startLine": 272,
        "startChar": 23,
        "endLine": 272,
        "endChar": 50
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb50adc_e3fc6086",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 715,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T13:32:15Z",
      "side": 1,
      "message": "Create or Set? :)",
      "range": {
        "startLine": 715,
        "startChar": 5,
        "endLine": 715,
        "endChar": 11
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ccf6672_ca793756",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 715,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:02:34Z",
      "side": 1,
      "message": "Done, thanks :-)",
      "parentUuid": "bcb50adc_e3fc6086",
      "range": {
        "startLine": 715,
        "startChar": 5,
        "endLine": 715,
        "endChar": 11
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb50adc_43350c2d",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T13:32:15Z",
      "side": 1,
      "message": "Do you need this here?\n\nWe designed the StackMaps to be a direct reflection of the memory region. Adding a state introduces some complexity on top of it.",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cdb763a_e0145cd3",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:02:34Z",
      "side": 1,
      "message": "The first few bytes of the header are encoded in memory as ULEB128. This field holds the decoded values.\n\nIt is not required, but it is very desirable optimization (as opposed to decoding it again whenever we need any of the header fields).\n\nOne of the first patch sets of this CL uses different approach where the fields are single byte where postivie values represent themself, but negative values are memory offsets to full uint32_t. This approached avoided need for this field. However, on second though, I changed it to just standard ULEB128 which most people know, and caching of the result here.",
      "parentUuid": "bcb50adc_43350c2d",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ce03ae0_81d71c38",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T14:06:13Z",
      "side": 1,
      "message": "Then rename it to cache_ something and make clear in comments that is just for caching during repeated queries.",
      "parentUuid": "1cdb763a_e0145cd3",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bccc2a7e_685bd72c",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:27:31Z",
      "side": 1,
      "message": "Sorry, \"cache\" was poor choice of words. It is always decoded in constructor.\n\nI have marked it const to make it more obvious it does not hold mutable state, and added comment.",
      "parentUuid": "3ce03ae0_81d71c38",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ce03ae0_c173e424",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-03-22T14:41:36Z",
      "side": 1,
      "message": "Nicolas, are you happy with this optimization? I\u0027m ok in order to avoid decoding every time we query.",
      "parentUuid": "bccc2a7e_685bd72c",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bccc2a7e_4838d3cc",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-03-22T14:53:54Z",
      "side": 1,
      "message": "No, I\u0027d really want those classes to be state-less. We already used to fetch the encoding once and then use it in places we query the CodeInfo. Please do the same.",
      "parentUuid": "3ce03ae0_c173e424",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ce03ae0_649e9e7e",
        "filename": "runtime/stack_map.h",
        "patchSetId": 15
      },
      "lineNbr": 1261,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2016-03-22T14:59:08Z",
      "side": 1,
      "message": "I would say it is state-less. The field does not get modified (const). It just stores the decoded ULEB128s so we do not have to decode them whenever we need them. I should not have used the word \"cache\" before.",
      "parentUuid": "bccc2a7e_4838d3cc",
      "range": {
        "startLine": 1261,
        "startChar": 2,
        "endLine": 1261,
        "endChar": 25
      },
      "revId": "91ba29573265e4cd046fbd4a6dac342a0a2fc5b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}