{
  "comments": [
    {
      "key": {
        "uuid": "8780ea14_6a8597c3",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 419,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-01-15T17:45:59Z",
      "side": 1,
      "message": "Who calls this? And I thought Stirng.\u003cinit\u003e calls were special through a thread entry point?",
      "range": {
        "startLine": 413,
        "startChar": 0,
        "endLine": 419,
        "endChar": 71
      },
      "revId": "42ad9ec2014594487d6143c341263260de784863",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e783661b_cdabfdee",
        "filename": "runtime/entrypoints/entrypoint_utils-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 419,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-18T10:25:57Z",
      "side": 1,
      "message": "INVOKE_DIRECT* invokes DoInvoke (interpreter_common.h:613) which calls this from line 619. The special casing for String.\u003cinit\u003e is in DoCallCommon (interpreter_common.cc:557) called later. So there is an explicit null check on `this`.\n\nIt does not, however, call the entry points directly. DoCallCommon translates the method IDs of String constructors to corresponding methods in libcore\u0027s StringFactory class. Its methods are still written in Java with a native method for converting char[] and byte[] to String using the entry points.",
      "parentUuid": "8780ea14_6a8597c3",
      "range": {
        "startLine": 413,
        "startChar": 0,
        "endLine": 419,
        "endChar": 71
      },
      "revId": "42ad9ec2014594487d6143c341263260de784863",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}