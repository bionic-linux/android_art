{
  "comments": [
    {
      "key": {
        "uuid": "f1160b55_79663be7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-11-12T12:10:33Z",
      "side": 1,
      "message": "What\u0027s the context? Do we need a regression test?",
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a98ed4dd_cc23e245",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-12T12:36:30Z",
      "side": 1,
      "message": "I am trying to enforce that \"if debugger event happens, we bail out of mterp as soon as possible\" (that is, at the next suspend point, at the latest).\n\nThe new DCHECKs in the other CL caught this as a case where that does not happen.",
      "parentUuid": "f1160b55_79663be7",
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d31b05a9_719aad44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-11-12T12:56:28Z",
      "side": 1,
      "message": "OK. Can you please add that to the commit message?",
      "parentUuid": "a98ed4dd_cc23e245",
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0241c1c_1270e5a8",
        "filename": "runtime/interpreter/mterp/x86_64/other.S",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-12T10:29:15Z",
      "side": 1,
      "message": "cmpb THREAD_USE_MTERP_OFFSET(%rax), LITERAL(0)",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "347a6366_c5226c36",
        "filename": "runtime/interpreter/mterp/x86_64/other.S",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-13T11:46:00Z",
      "side": 1,
      "message": "error: unexpected token in memory operand",
      "parentUuid": "f0241c1c_1270e5a8",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e99bbdf_3f9c0e8e",
        "filename": "runtime/interpreter/mterp/x86_64/other.S",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-13T11:52:23Z",
      "side": 1,
      "message": "I guess we\u0027re not including asm_support_x86_64.S where we define the LITERAL macro.",
      "parentUuid": "347a6366_c5226c36",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0986e73b_29863a4a",
        "filename": "runtime/interpreter/mterp/x86_64/other.S",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2018-11-13T13:44:52Z",
      "side": 1,
      "message": "mterp_x86_64.S:7287:22: error: invalid operand for instruction\n    cmpb 0x4c(%rax), $0",
      "parentUuid": "0e99bbdf_3f9c0e8e",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac410fc9_faf88399",
        "filename": "runtime/interpreter/mterp/x86_64/other.S",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-11-13T14:33:20Z",
      "side": 1,
      "message": "I guess we have to exchange the operands. I frequently get confused by the two different notations:\n\n  cmpb [rax+0x4c], 0\n  cmpb $0, 0x4c(%rax)",
      "parentUuid": "0986e73b_29863a4a",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "0894aa8642623477d56835bc57bd02c8a729ed69",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}