{
  "comments": [
    {
      "key": {
        "uuid": "852fc7b4_258e381f",
        "filename": "runtime/atomic.h",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1037216
      },
      "writtenOn": "2014-04-22T17:02:13Z",
      "side": 1,
      "message": "Why \"Q\" and not \"m\"?",
      "revId": "cfb818cc8a055a1efe1e5c4c6217129e3d740675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5aa4352_f45606e3",
        "filename": "runtime/atomic.h",
        "patchSetId": 4
      },
      "lineNbr": 130,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-04-22T17:29:35Z",
      "side": 1,
      "message": "m allows [reg + #disp] addressing and GCC was complaining about using that in conjunction with ldrexd (my belief is that\u0027s ok for thumb2 but not ARM32). Q forces the memory operand to be in a register, which was achieved before by using an r constraint and then placing in \"[%0]\"",
      "parentUuid": "852fc7b4_258e381f",
      "revId": "cfb818cc8a055a1efe1e5c4c6217129e3d740675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65349307_84a2a8ca",
        "filename": "runtime/atomic.h",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1037216
      },
      "writtenOn": "2014-04-22T17:02:13Z",
      "side": 1,
      "message": "\"\u003dm\" ? It isn\u0027t read under these circumstances. \u003dm should do.",
      "revId": "cfb818cc8a055a1efe1e5c4c6217129e3d740675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45b4efaf_82242ea2",
        "filename": "runtime/atomic.h",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1010118
      },
      "writtenOn": "2014-04-22T17:29:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65349307_84a2a8ca",
      "revId": "cfb818cc8a055a1efe1e5c4c6217129e3d740675",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}