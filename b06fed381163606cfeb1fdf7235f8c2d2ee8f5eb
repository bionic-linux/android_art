{
  "comments": [
    {
      "key": {
        "uuid": "8be74356_603712f9",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2016-11-11T12:01:13Z",
      "side": 1,
      "message": "This looks very special cased. Should we consider loop folding instead? For this example folding the first iteration would do the trick.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 29,
        "endChar": 3
      },
      "revId": "b06fed381163606cfeb1fdf7235f8c2d2ee8f5eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bf54bfd_7e10516d",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-11-10T21:41:05Z",
      "side": 1,
      "message": "How many non-zero values do you want to tolerate?\n\n  do {\n    i +\u003d 2;\n    j -\u003d 3;\n    k +\u003d 5;\n  } while (a[i][j ^\u003d 3][k ^\u003d 7] \u003d\u003d 0);  // j and k are not induction variables.",
      "range": {
        "startLine": 81,
        "startChar": 60,
        "endLine": 81,
        "endChar": 66
      },
      "revId": "b06fed381163606cfeb1fdf7235f8c2d2ee8f5eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b5ca306_5ea3a587",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-11-10T21:46:25Z",
      "side": 1,
      "message": "42 :-)\n\nBut you raise a good point on capping the number somehow. Or are you saying you don\u0027t like this optimization at all? Then also no hard feelings....",
      "parentUuid": "4bf54bfd_7e10516d",
      "range": {
        "startLine": 81,
        "startChar": 60,
        "endLine": 81,
        "endChar": 66
      },
      "revId": "b06fed381163606cfeb1fdf7235f8c2d2ee8f5eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abe6c757_419f7246",
        "filename": "compiler/optimizing/licm.cc",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2016-11-11T10:40:21Z",
      "side": 1,
      "message": "The optimization is fine but we should cap this.\n(Alternatively, extend stack maps to allow \"value_from_some_location+adjustment\".)",
      "parentUuid": "8b5ca306_5ea3a587",
      "range": {
        "startLine": 81,
        "startChar": 60,
        "endLine": 81,
        "endChar": 66
      },
      "revId": "b06fed381163606cfeb1fdf7235f8c2d2ee8f5eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}