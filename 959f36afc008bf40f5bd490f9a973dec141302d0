{
  "comments": [
    {
      "key": {
        "uuid": "5625c29e_3f9b2b99",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:55:00Z",
      "side": 1,
      "message": "Is it safe to maybe read the read barrier pointer before to avoid the CAS if it is non white? Not sure if this would be a speedup though.",
      "range": {
        "startLine": 73,
        "startChar": 18,
        "endLine": 73,
        "endChar": 45
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5625c29e_ea9bafe2",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-30T22:01:38Z",
      "side": 1,
      "message": "AtomicSetReadBarrierPointer() internally first reads it and does CAS only if it\u0027s the expected value (white).",
      "parentUuid": "5625c29e_3f9b2b99",
      "range": {
        "startLine": 73,
        "startChar": 18,
        "endLine": 73,
        "endChar": 45
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "760e462a_ddbafbfb",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:44:28Z",
      "side": 1,
      "message": "Move this outside the if?",
      "range": {
        "startLine": 78,
        "startChar": 25,
        "endLine": 79,
        "endChar": 9
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765c8636_8d37a5b9",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-30T22:01:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "760e462a_ddbafbfb",
      "range": {
        "startLine": 78,
        "startChar": 25,
        "endLine": 79,
        "endChar": 9
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36204e91_294d3518",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:44:28Z",
      "side": 1,
      "message": "DCHECK_EQ?",
      "range": {
        "startLine": 83,
        "startChar": 10,
        "endLine": 83,
        "endChar": 16
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562a227b_22ae76a9",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-30T22:01:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36204e91_294d3518",
      "range": {
        "startLine": 83,
        "startChar": 10,
        "endLine": 83,
        "endChar": 16
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "161fca56_c35d8058",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:44:28Z",
      "side": 1,
      "message": "Maybe OK to change this to DCHECK?",
      "range": {
        "startLine": 101,
        "startChar": 4,
        "endLine": 101,
        "endChar": 9
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96401a44_595f3725",
        "filename": "runtime/gc/collector/concurrent_copying-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-30T22:01:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "161fca56_c35d8058",
      "range": {
        "startLine": 101,
        "startChar": 4,
        "endLine": 101,
        "endChar": 9
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "161fca56_23fd545e",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 1984,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:55:00Z",
      "side": 1,
      "message": "For MarkNonMoving, to_ref is always from_ref right? Can\u0027t you just return from_ref and remove the to_ref variable.",
      "range": {
        "startLine": 1984,
        "startChar": 18,
        "endLine": 1984,
        "endChar": 24
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562a227b_62cb5e77",
        "filename": "runtime/gc/collector/concurrent_copying.cc",
        "patchSetId": 1
      },
      "lineNbr": 1984,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-10-30T22:01:38Z",
      "side": 1,
      "message": "Right. Done.",
      "parentUuid": "161fca56_23fd545e",
      "range": {
        "startLine": 1984,
        "startChar": 18,
        "endLine": 1984,
        "endChar": 24
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7643a650_9e2c61d5",
        "filename": "runtime/mirror/object_array-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1015378
      },
      "writtenOn": "2015-10-30T18:44:28Z",
      "side": 1,
      "message": "Nice catch.",
      "range": {
        "startLine": 273,
        "startChar": 0,
        "endLine": 273,
        "endChar": 6
      },
      "revId": "959f36afc008bf40f5bd490f9a973dec141302d0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}