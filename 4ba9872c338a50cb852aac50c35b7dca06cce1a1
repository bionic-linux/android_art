{
  "comments": [
    {
      "key": {
        "uuid": "d9d9cc70_0b9d47eb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "This is what we aim in this CL?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 72
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_494a93fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Did we reimplement the ddms recent allocation logic with the new code? If so, mention it here?",
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_69682f6e",
        "filename": "runtime/debugger.cc",
        "patchSetId": 10
      },
      "lineNbr": 4704,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Is it possible to allocate this on the stack and avoid the delete code below?",
      "range": {
        "startLine": 4704,
        "startChar": 16,
        "endLine": 4704,
        "endChar": 47
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_1d346808",
        "filename": "runtime/debugger.cc",
        "patchSetId": 10
      },
      "lineNbr": 4806,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Does this exist only to delete the empty AllocRecordObjectMap we allocate in line 4704?\n\nIf so, maybe we could simplify this by having a bool that indicates we allocated an empty AllocRecordObjectMap and delete it here if it\u0027s true?",
      "range": {
        "startLine": 4802,
        "startChar": 0,
        "endLine": 4806,
        "endChar": 5
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_fdf2bc94",
        "filename": "runtime/gc/allocation_record.h",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Should we call operator()(const AllocRecordStackTraceElement\u0026 r) to compute the hash of the stack element instead?",
      "range": {
        "startLine": 128,
        "startChar": 24,
        "endLine": 128,
        "endChar": 95
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_fd487c01",
        "filename": "runtime/gc/heap.cc",
        "patchSetId": 10
      },
      "lineNbr": 3668,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Does this really work?\n\nIs this double checked locking necessary in the first place?",
      "range": {
        "startLine": 3666,
        "startChar": 0,
        "endLine": 3668,
        "endChar": 35
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9d9cc70_f65c2250",
        "filename": "runtime/gc/heap.h",
        "patchSetId": 10
      },
      "lineNbr": 1217,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Should this be Atomic\u003cbool\u003e for the double checked locking to work properly?",
      "range": {
        "startLine": 1217,
        "startChar": 7,
        "endLine": 1217,
        "endChar": 30
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_e9697f1e",
        "filename": "runtime/hprof/hprof.cc",
        "patchSetId": 10
      },
      "lineNbr": 866,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Class* may move. Is this safe? Is this map only used during a pause?",
      "range": {
        "startLine": 866,
        "startChar": 10,
        "endLine": 866,
        "endChar": 24
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_9d44d8c8",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 405,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Does it make sense to remove the \"Try\"?",
      "range": {
        "startLine": 405,
        "startChar": 13,
        "endLine": 405,
        "endChar": 38
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_1dfea8e3",
        "filename": "runtime/runtime.cc",
        "patchSetId": 10
      },
      "lineNbr": 1476,
      "author": {
        "id": 1022530
      },
      "writtenOn": "2015-06-09T20:21:43Z",
      "side": 1,
      "message": "Is this going to be left?\n\nIf it\u0027s safe to leave this unimplemented for this CL, comment why?",
      "range": {
        "startLine": 1475,
        "startChar": 0,
        "endLine": 1476,
        "endChar": 96
      },
      "revId": "4ba9872c338a50cb852aac50c35b7dca06cce1a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}