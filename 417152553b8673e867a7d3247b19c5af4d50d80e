{
  "comments": [
    {
      "key": {
        "uuid": "97662f11_5815bd6a",
        "filename": "compiler/optimizing/codegen_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T08:30:03Z",
      "side": 1,
      "message": "Yikes! I appreciate the assembly expertise, but please follow what has already been done for ARM: subclass CodeGenerator and block registers the codegen shouldn\u0027t use.",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 328,
        "endChar": 6
      },
      "revId": "417152553b8673e867a7d3247b19c5af4d50d80e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7d6d3d9_919f9c3f",
        "filename": "compiler/optimizing/codegen_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1036869
      },
      "writtenOn": "2015-01-28T12:47:33Z",
      "side": 1,
      "message": "Does the x86 have enough registers to do long operations if you block EBX, ESI, EDI, EBP?",
      "parentUuid": "97662f11_5815bd6a",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 328,
        "endChar": 6
      },
      "revId": "417152553b8673e867a7d3247b19c5af4d50d80e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578037c4_168cfc1b",
        "filename": "compiler/optimizing/codegen_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T13:12:28Z",
      "side": 1,
      "message": "Trial and error :-) You can teach the codegen which registers to use and not use.",
      "parentUuid": "b7d6d3d9_919f9c3f",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 328,
        "endChar": 6
      },
      "revId": "417152553b8673e867a7d3247b19c5af4d50d80e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97db8f05_d012fccf",
        "filename": "compiler/optimizing/codegen_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2015-01-28T16:17:39Z",
      "side": 1,
      "message": "I\u0027ll do that, but personally I think that\u0027s the wrong approach. That way you restrict the coverage of the test.",
      "parentUuid": "578037c4_168cfc1b",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 328,
        "endChar": 6
      },
      "revId": "417152553b8673e867a7d3247b19c5af4d50d80e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "578037c4_563a746a",
        "filename": "compiler/optimizing/codegen_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-01-28T16:19:52Z",
      "side": 1,
      "message": "Which way?\n\nIn any case, at the moment you need this level of assembly, comes the very relevance of this test.... that we could write in Java.",
      "parentUuid": "97db8f05_d012fccf",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 328,
        "endChar": 6
      },
      "revId": "417152553b8673e867a7d3247b19c5af4d50d80e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}