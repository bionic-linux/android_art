{
  "comments": [
    {
      "key": {
        "uuid": "ec041986_390a6c1f",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2018-01-17T18:07:57Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 2132,
        "startChar": 15,
        "endLine": 2132,
        "endChar": 22
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64e63c6e_b91f5b85",
        "filename": "compiler/optimizing/code_generator_arm64.cc",
        "patchSetId": 6
      },
      "lineNbr": 2132,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec041986_390a6c1f",
      "range": {
        "startLine": 2132,
        "startChar": 15,
        "endLine": 2132,
        "endChar": 22
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4979893_0e4e2912",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7192,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2018-01-17T18:07:57Z",
      "side": 1,
      "message": "Nit: Or just vixl32. Same for the other places.",
      "range": {
        "startLine": 7192,
        "startChar": 4,
        "endLine": 7192,
        "endChar": 17
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d16ef449_cbe4be51",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7192,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4979893_0e4e2912",
      "range": {
        "startLine": 7192,
        "startChar": 4,
        "endLine": 7192,
        "endChar": 17
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c42e956_8f7f1b5b",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7215,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Replace with\n\n  Operand(path_to_root)\n\nfor consistency?",
      "range": {
        "startLine": 7215,
        "startChar": 25,
        "endLine": 7215,
        "endChar": 37
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60d3a4f7_5f2f869e",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7215,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2018-01-17T18:07:57Z",
      "side": 1,
      "message": "I was actually going to suggest the opposite - there is no need for the explicit Operand() anywhere in this file.",
      "parentUuid": "0c42e956_8f7f1b5b",
      "range": {
        "startLine": 7215,
        "startChar": 25,
        "endLine": 7215,
        "endChar": 37
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79307506_0176c6f0",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7215,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done (removed from other places but only in this function).",
      "parentUuid": "60d3a4f7_5f2f869e",
      "range": {
        "startLine": 7215,
        "startChar": 25,
        "endLine": 7215,
        "endChar": 37
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f462186_4c9b361a",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7227,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Why are we always setting the flags in that case?",
      "range": {
        "startLine": 7227,
        "startChar": 11,
        "endLine": 7227,
        "endChar": 15
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a9c5d3_d11f6cf9",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7227,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done.\n\nLSLS is known to be 16-bit here while LSL(KeepFlags) would be 32-bit, so the assembler shall emit LSLS even if we pass flags_update. After removing \"Operand\", I didn\u0027t need to break the line, so I\u0027ve done it.",
      "parentUuid": "4f462186_4c9b361a",
      "range": {
        "startLine": 7227,
        "startChar": 11,
        "endLine": 7227,
        "endChar": 15
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16b63989_a71ded90",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7733,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "WhichPowerOf2(kRegisterSize * kBitsPerByte)?",
      "range": {
        "startLine": 7733,
        "startChar": 23,
        "endLine": 7733,
        "endChar": 24
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5fd722_2c1f0880",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7733,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2018-01-17T18:07:57Z",
      "side": 1,
      "message": "Why not just replace this with a call to GenerateConditionWithZero()? You can trim a bit some of the comments above as well.",
      "range": {
        "startLine": 7732,
        "startChar": 0,
        "endLine": 7733,
        "endChar": 26
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af3440e5_e597621f",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7733,
      "author": {
        "id": 1084448
      },
      "writtenOn": "2018-01-17T18:07:57Z",
      "side": 1,
      "message": "FYI there is a constant vixl32::kRegSizeInBits.",
      "parentUuid": "16b63989_a71ded90",
      "range": {
        "startLine": 7733,
        "startChar": 23,
        "endLine": 7733,
        "endChar": 24
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb89e93_f760a27a",
        "filename": "compiler/optimizing/code_generator_arm_vixl.cc",
        "patchSetId": 6
      },
      "lineNbr": 7733,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done with codegen_-\u003eGenerateConditionWithZero() but kept the comments about CLZ+LSR.",
      "parentUuid": "af3440e5_e597621f",
      "range": {
        "startLine": 7733,
        "startChar": 23,
        "endLine": 7733,
        "endChar": 24
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd472250_f846a9b0",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 6
      },
      "lineNbr": 603,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Most of this code is similar to lines 578â€“590; maybe refactor?",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 603,
        "endChar": 5
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be4b8a0_fea44559",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 6
      },
      "lineNbr": 603,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Any suggestion what would be less messy than this? I\u0027m not too eager to create tuples like\n\n   {2, \"third\", expected_path_to_root, \"path_to_root\"},\n   {3, \"fourth\", expected_mask, \"mask\"}\n\nand then extracting the fields from these tuples.",
      "parentUuid": "dd472250_f846a9b0",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 603,
        "endChar": 5
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33db6e8b_a05e28fb",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 6
      },
      "lineNbr": 603,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T19:19:39Z",
      "side": 1,
      "message": "I was thinking about something like this:\n\n  void CheckTypeCheckInstructionInput(HTypeCheckInstruction* check,\n                                      bool check_values,\n                                      size_t input_pos,\n                                      uint32_t actual_value,\n                                      uint32_t expected_value) {\n    if (!check-\u003eInputAt(input_pos)-\u003eIsIntConstant()) {\n      AddError(StringPrintf(\"%s:%d (bitstring) expects a HIntConstant as input %d, not %s:%d.\",\n                            check-\u003eDebugName(),\n                            check-\u003eGetId(),\n                            input_pos,\n                            check-\u003eInputAt(input_pos)-\u003eDebugName(),\n                            check-\u003eInputAt(input_pos)-\u003eGetId()));\n    } else if (check_values \u0026\u0026 actual_value !\u003d expected_value) {\n      AddError(StringPrintf(\"%s:%d (bitstring) has %s 0x%x, not 0x%x as expected.\",\n                            check-\u003eDebugName(),\n                            check-\u003eGetId(),\n                            input_name,\n                            actual_value,\n                            expected_value));\n    }\n  }\n\n[â€¦]\n\n  CheckTypeCheckInstructionInput(\n      check, check_values, 2, \"path_to_root\", check-\u003eGetBitstringPathToRoot(), expected_path_to_root);\n  CheckTypeCheckInstructionInput(\n      check, check_values, 3, \"mask\", check-\u003eGetBitstringMask(), expected_mask);",
      "parentUuid": "8be4b8a0_fea44559",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 603,
        "endChar": 5
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53445eaa_0c56a0ce",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Nit: Surround with parentheses.",
      "range": {
        "startLine": 665,
        "startChar": 31,
        "endLine": 665,
        "endChar": 83
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "437ab84b_64f2b983",
        "filename": "compiler/optimizing/graph_visualizer.cc",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53445eaa_0c56a0ce",
      "range": {
        "startLine": 665,
        "startChar": 31,
        "endLine": 665,
        "endChar": 83
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33680243_ae6aac42",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 6622,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Nit:\n\n  /* number_of_inputs */ (check_kind \u003d\u003d TypeCheckKind::kBitstringCheck) ? 4u : 2u\n\n?",
      "range": {
        "startLine": 6622,
        "startChar": 38,
        "endLine": 6622,
        "endChar": 92
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d9fd73_bea631df",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 6622,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33680243_ae6aac42",
      "range": {
        "startLine": 6622,
        "startChar": 38,
        "endLine": 6622,
        "endChar": 92
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd14bbf_d6512074",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 6666,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "\u003c\u003c other-\u003eDebugName();",
      "range": {
        "startLine": 6666,
        "startChar": 57,
        "endLine": 6666,
        "endChar": 58
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffcfe424_1ba24c9d",
        "filename": "compiler/optimizing/nodes.h",
        "patchSetId": 6
      },
      "lineNbr": 6666,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3dd14bbf_d6512074",
      "range": {
        "startLine": 6666,
        "startChar": 57,
        "endLine": 6666,
        "endChar": 58
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d373ff68_ab605dcd",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 6
      },
      "lineNbr": 815,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "This change does not seem to be needed for this CL; perhaps move it to a separate CL?",
      "range": {
        "startLine": 800,
        "startChar": 0,
        "endLine": 815,
        "endChar": 19
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca14ce88_4f98cf23",
        "filename": "runtime/arch/arm/quick_entrypoints_arm.S",
        "patchSetId": 6
      },
      "lineNbr": 815,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d373ff68_ab605dcd",
      "range": {
        "startLine": 800,
        "startChar": 0,
        "endLine": 815,
        "endChar": 19
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3866ed7_ffca0e99",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 6
      },
      "lineNbr": 1348,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1348,
        "endChar": 23
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61103a26_bcbc30a3",
        "filename": "runtime/arch/arm64/quick_entrypoints_arm64.S",
        "patchSetId": 6
      },
      "lineNbr": 1348,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3866ed7_ffca0e99",
      "range": {
        "startLine": 1347,
        "startChar": 0,
        "endLine": 1348,
        "endChar": 23
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0a299aa_d21ea1d9",
        "filename": "runtime/arch/mips64/quick_entrypoints_mips64.S",
        "patchSetId": 6
      },
      "lineNbr": 1369,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Don\u0027t you need to insert a `nop` here too?",
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bccdc51d_fa7a649b",
        "filename": "runtime/arch/mips64/quick_entrypoints_mips64.S",
        "patchSetId": 6
      },
      "lineNbr": 1369,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "No, that\u0027s what the \"c\" in \"bnezc\" is for.",
      "parentUuid": "b0a299aa_d21ea1d9",
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e133b8e1_3d2754f7",
        "filename": "runtime/arch/mips64/quick_entrypoints_mips64.S",
        "patchSetId": 6
      },
      "lineNbr": 1369,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T19:19:39Z",
      "side": 1,
      "message": "Right, I forgot about those \"compact\" compare-and-branch instructions.",
      "parentUuid": "bccdc51d_fa7a649b",
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f2f6593_1c6a9cd3",
        "filename": "test/670-bitstring-type-check/build",
        "patchSetId": 6
      },
      "lineNbr": 3,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "2018",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e127d79c_215e4fff",
        "filename": "test/670-bitstring-type-check/build",
        "patchSetId": 6
      },
      "lineNbr": 3,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f2f6593_1c6a9cd3",
      "range": {
        "startLine": 3,
        "startChar": 16,
        "endLine": 3,
        "endChar": 20
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "209a0cb9_526848fd",
        "filename": "test/670-bitstring-type-check/build",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2018-01-17T17:47:34Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 25,
        "startChar": 17,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d7221a7_95181695",
        "filename": "test/670-bitstring-type-check/build",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1018108
      },
      "writtenOn": "2018-01-17T18:53:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "209a0cb9_526848fd",
      "range": {
        "startLine": 25,
        "startChar": 17,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "9c727c6b7558021d91beb9af01994ad8cb68685c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}