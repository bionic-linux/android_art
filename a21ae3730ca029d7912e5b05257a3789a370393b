{
  "comments": [
    {
      "key": {
        "uuid": "d8df0a22_de5665a1",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "Do you think there\u0027s anything worth checking for the first successor? Can it be a catch block?\n\nIn any case, please add a comment on why you\u0027re starting at 1.",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 140,
        "endChar": 19
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18a282bf_80101658",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Replaced with ExceptionHandlerIterator and comment added.\n\nYes, it can be a catch block before catch blocks are simplified at the beginning of BuildDominatorTree.",
      "parentUuid": "d8df0a22_de5665a1",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 140,
        "endChar": 19
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d88d4a46_2ead67f7",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-14T12:45:45Z",
      "side": 1,
      "message": "Then you could still check that in SSAChecker.",
      "parentUuid": "18a282bf_80101658",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 140,
        "endChar": 19
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98e912d2_3f2ae387",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 328,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "Please explain why it is fine to not count exceptional successors (eg they are synthesized/artificial edges).",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 46
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a4cecc_9f89932f",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 328,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98e912d2_3f2ae387",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 46
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98e912d2_5f1faf60",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 351,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "drop the \u0027saved_\u0027 ?",
      "range": {
        "startLine": 351,
        "startChar": 16,
        "endLine": 351,
        "endChar": 22
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d88d4a46_0e350b67",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 351,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98e912d2_5f1faf60",
      "range": {
        "startLine": 351,
        "startChar": 16,
        "endLine": 351,
        "endChar": 22
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38cf4674_410c32af",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 399,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "else if ?",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 399,
        "endChar": 44
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389bc68e_21e26ec3",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 399,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38cf4674_410c32af",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 399,
        "endChar": 44
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98e912d2_bf3513e4",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 568,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "Don\u0027t negate the condition, and add a comment in the if block why catch phis are handled specially?",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 568,
        "endChar": 27
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d88d4a46_2eb72778",
        "filename": "compiler/optimizing/graph_checker.cc",
        "patchSetId": 9
      },
      "lineNbr": 568,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98e912d2_bf3513e4",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 568,
        "endChar": 27
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18d6020d_200c8ac7",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 290,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-13T17:11:39Z",
      "side": 1,
      "message": "Maybe document this DCHECK?",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 69
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18a282bf_20c94a49",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 290,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18d6020d_200c8ac7",
      "range": {
        "startLine": 290,
        "startChar": 6,
        "endLine": 290,
        "endChar": 69
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8d84e3c_3f3ae755",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 1157,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "Isn\u0027t that an \u0027\u0026\u0026\u0027 ?",
      "range": {
        "startLine": 1157,
        "startChar": 10,
        "endLine": 1157,
        "endChar": 12
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18a282bf_e0fb6270",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 1157,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Nope. I\u0027ve expanded the logic into several If branches and added comments.",
      "parentUuid": "f8d84e3c_3f3ae755",
      "range": {
        "startLine": 1157,
        "startChar": 10,
        "endLine": 1157,
        "endChar": 12
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18d6020d_e029c216",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 1211,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-13T17:11:39Z",
      "side": 1,
      "message": "Could you provide more details on this?  I\u0027m not sure to understand where this set is.",
      "range": {
        "startLine": 1211,
        "startChar": 5,
        "endLine": 1211,
        "endChar": 43
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389bc68e_c14ce247",
        "filename": "compiler/optimizing/nodes.cc",
        "patchSetId": 9
      },
      "lineNbr": 1211,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Sry, my bad. What I meant is that the lists cannot contain duplicates. I\u0027ve rephrased the comment.",
      "parentUuid": "18d6020d_e029c216",
      "range": {
        "startLine": 1211,
        "startChar": 5,
        "endLine": 1211,
        "endChar": 43
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98e912d2_1ff7e788",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 9
      },
      "lineNbr": 570,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "Most instructions can throw, but not all blocks are in try, so it seems more natural to me to test the other way around. But your call.",
      "range": {
        "startLine": 570,
        "startChar": 7,
        "endLine": 570,
        "endChar": 68
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8a6d6d3_ddfbab70",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 9
      },
      "lineNbr": 570,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98e912d2_1ff7e788",
      "range": {
        "startLine": 570,
        "startChar": 7,
        "endLine": 570,
        "endChar": 68
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8df0a22_feac0127",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 9
      },
      "lineNbr": 581,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "This looks odd. You\u0027re removing the phi because one of these edges may not have a value for it, right? And therefore, if the catch was to use that phi, the verified would have rejected it?\n\nPlease add a comment. We\u0027re probably saving a few bytes, not having to add inputs of phis that are unused, but we could also just delegate the removal of the phi to the dead phi analysis....",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 581,
        "endChar": 44
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a4cecc_9ff5137e",
        "filename": "compiler/optimizing/ssa_builder.cc",
        "patchSetId": 9
      },
      "lineNbr": 581,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Yeah, you\u0027re right, it\u0027s more of a precaution but not necessary. I\u0027ve simplified this but had to add an extra test into redundant phi elimination, because now catch phis can have zero inputs.",
      "parentUuid": "d8df0a22_feac0127",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 581,
        "endChar": 44
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18d6020d_60bcd258",
        "filename": "compiler/optimizing/ssa_phi_elimination.cc",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-13T15:12:47Z",
      "side": 1,
      "message": "I\u0027d do the IsCatchPhi check in the if. StriclyDominates is not cheap.",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389bc68e_a178be6b",
        "filename": "compiler/optimizing/ssa_phi_elimination.cc",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Are you sure? That would mean giving up on elimination of redundant catch phis altogether, unless we do it as part of some later try-catch simplification pass where we extract the candidate out of the try.",
      "parentUuid": "18d6020d_60bcd258",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d88d4a46_0ea8abe6",
        "filename": "compiler/optimizing/ssa_phi_elimination.cc",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2015-07-14T12:45:45Z",
      "side": 1,
      "message": "I meant:\n\nif (phi-\u003eIsCatchPhi() \u0026\u0026 !StricltyDominates()) { ... }",
      "parentUuid": "389bc68e_a178be6b",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38cf4674_8415687a",
        "filename": "test/510-checker-try-catch/smali/SsaBuilder.smali",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-13T17:11:39Z",
      "side": 1,
      "message": "in?",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 12
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d88d4a46_4e1633d7",
        "filename": "test/510-checker-try-catch/smali/SsaBuilder.smali",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38cf4674_8415687a",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 12
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8df0a22_3e0ca9ae",
        "filename": "test/510-checker-try-catch/smali/SsaBuilder.smali",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1052644
      },
      "writtenOn": "2015-07-13T17:11:39Z",
      "side": 1,
      "message": "Do we have a way to test that?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 57
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a4cecc_dfd27bfa",
        "filename": "test/510-checker-try-catch/smali/SsaBuilder.smali",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2015-07-14T12:26:57Z",
      "side": 1,
      "message": "Unfortunately not. Right now this at least makes sure that dex2oat does not crash in the presence of catch loops.\n\nWe could implement something though. One way would be to add an assertion to Checker that there\u0027s no graph dumps after \"ssa_builder\", e.g. that that there\u0027s no \"instruction_simplifier\" dump. Another way would be to label the graph dump as invalid. PassObserver already knows that the graph was rejected, so it could pass that info to GraphVisualizer, which would rename the dump to something like \"ssa_builder (after, in_bad_state)\". Doing a CHECK-START on that name would then fail unless the pass existed. How does that sound?",
      "parentUuid": "d8df0a22_3e0ca9ae",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 57
      },
      "revId": "a21ae3730ca029d7912e5b05257a3789a370393b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}