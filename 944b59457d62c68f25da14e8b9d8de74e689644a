{
  "comments": [
    {
      "key": {
        "uuid": "8780ea14_8d54a5da",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 14
      },
      "lineNbr": 645,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-19T17:47:52Z",
      "side": 1,
      "message": "Isn\u0027t this the other Phi?",
      "range": {
        "startLine": 645,
        "startChar": 43,
        "endLine": 645,
        "endChar": 51
      },
      "revId": "944b59457d62c68f25da14e8b9d8de74e689644a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27673e34_1a054bf0",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 14
      },
      "lineNbr": 645,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-19T19:06:42Z",
      "side": 1,
      "message": "No, the integer get is still in the inner loop.\nThe bounds check has been removed though by dynamic bce.",
      "parentUuid": "8780ea14_8d54a5da",
      "range": {
        "startLine": 645,
        "startChar": 43,
        "endLine": 645,
        "endChar": 51
      },
      "revId": "944b59457d62c68f25da14e8b9d8de74e689644a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8780ea14_adcc09e6",
        "filename": "test/449-checker-bce/src/Main.java",
        "patchSetId": 14
      },
      "lineNbr": 645,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-19T19:18:17Z",
      "side": 1,
      "message": "Right, so why not follow the flow?\n\n  CHECK-DAG: \u003c\u003cArray1:l\\d+\u003e\u003e ArrayGet loop:\u003c\u003cOuter\u003e\u003e\n  CHECK-DAG: \u003c\u003cArray2:l\\d+\u003e\u003e Phi [\u003c\u003cArray1\u003e\u003e,\u003c\u003cNull\u003e\u003e] loop:\u003c\u003cOuter\u003e\u003e\n\n  CHECK-DAG: \u003c\u003cIndex:i\\d+\u003e\u003e  Phi loop:\u003c\u003cInner:B\\d+\u003e\u003e\n  CHECK-DAG: \u003c\u003cGet:i\\d+\u003e\u003e    ArrayGet [\u003c\u003cArray2\u003e\u003e,\u003c\u003cIndex\u003e\u003e]\n  CHECK-DAG:                 Invoke [\u003c\u003cGet\u003e\u003e]\n\nI\u0027m nit-picking at this point, but it\u0027s so close to perfect that it would be shame not to cross the finish line. O:)",
      "parentUuid": "27673e34_1a054bf0",
      "range": {
        "startLine": 645,
        "startChar": 43,
        "endLine": 645,
        "endChar": 51
      },
      "revId": "944b59457d62c68f25da14e8b9d8de74e689644a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a77deeee_7112ea37",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 14
      },
      "lineNbr": 1139,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2016-01-19T17:47:52Z",
      "side": 1,
      "message": "Okay, so you want to treat these as just establishing that the instructions are there and later aren\u0027t.",
      "revId": "944b59457d62c68f25da14e8b9d8de74e689644a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e759a674_e8f40641",
        "filename": "test/530-checker-loops/src/Main.java",
        "patchSetId": 14
      },
      "lineNbr": 1139,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2016-01-19T19:06:42Z",
      "side": 1,
      "message": "Yes, that seems the most flexible way of testing bce (not pinning down the exact structure, but just making sure the bc goes)",
      "parentUuid": "a77deeee_7112ea37",
      "revId": "944b59457d62c68f25da14e8b9d8de74e689644a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}